
CH10 FreeRTOS - Tutorial 10-20 Queue Example 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006e40  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000184  08006ff0  08006ff0  00016ff0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007174  08007174  00020094  2**0
                  CONTENTS
  4 .ARM          00000008  08007174  08007174  00017174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800717c  0800717c  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800717c  0800717c  0001717c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007180  08007180  00017180  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  08007184  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020094  2**0
                  CONTENTS
 10 .bss          00004c4c  20000094  20000094  00020094  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20004ce0  20004ce0  00020094  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000200c4  2**0
                  CONTENTS, READONLY
 14 .debug_info   000167f5  00000000  00000000  00020107  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00003616  00000000  00000000  000368fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001390  00000000  00000000  00039f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000eff  00000000  00000000  0003b2a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000047d2  00000000  00000000  0003c1a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000154a1  00000000  00000000  00040979  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000e44f1  00000000  00000000  00055e1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000058f8  00000000  00000000  0013a30c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 000000a0  00000000  00000000  0013fc04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000094 	.word	0x20000094
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08006fd8 	.word	0x08006fd8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000098 	.word	0x20000098
 80001ec:	08006fd8 	.word	0x08006fd8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000594:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000598:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 800059c:	f003 0301 	and.w	r3, r3, #1
 80005a0:	2b00      	cmp	r3, #0
 80005a2:	d013      	beq.n	80005cc <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80005a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005a8:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80005ac:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d00b      	beq.n	80005cc <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80005b4:	e000      	b.n	80005b8 <ITM_SendChar+0x2c>
    {
      __NOP();
 80005b6:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80005b8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	2b00      	cmp	r3, #0
 80005c0:	d0f9      	beq.n	80005b6 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80005c2:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005c6:	687a      	ldr	r2, [r7, #4]
 80005c8:	b2d2      	uxtb	r2, r2
 80005ca:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80005cc:	687b      	ldr	r3, [r7, #4]
}
 80005ce:	4618      	mov	r0, r3
 80005d0:	370c      	adds	r7, #12
 80005d2:	46bd      	mov	sp, r7
 80005d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d8:	4770      	bx	lr

080005da <_write>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
/*Function needed to use printf on CONSOLE*/
int _write(int file, char *ptr, int len){
 80005da:	b580      	push	{r7, lr}
 80005dc:	b086      	sub	sp, #24
 80005de:	af00      	add	r7, sp, #0
 80005e0:	60f8      	str	r0, [r7, #12]
 80005e2:	60b9      	str	r1, [r7, #8]
 80005e4:	607a      	str	r2, [r7, #4]
	  int i = 0;
 80005e6:	2300      	movs	r3, #0
 80005e8:	617b      	str	r3, [r7, #20]
	  for (i=0; i<len; i++)
 80005ea:	2300      	movs	r3, #0
 80005ec:	617b      	str	r3, [r7, #20]
 80005ee:	e009      	b.n	8000604 <_write+0x2a>
		  ITM_SendChar((*ptr++));
 80005f0:	68bb      	ldr	r3, [r7, #8]
 80005f2:	1c5a      	adds	r2, r3, #1
 80005f4:	60ba      	str	r2, [r7, #8]
 80005f6:	781b      	ldrb	r3, [r3, #0]
 80005f8:	4618      	mov	r0, r3
 80005fa:	f7ff ffc7 	bl	800058c <ITM_SendChar>
	  for (i=0; i<len; i++)
 80005fe:	697b      	ldr	r3, [r7, #20]
 8000600:	3301      	adds	r3, #1
 8000602:	617b      	str	r3, [r7, #20]
 8000604:	697a      	ldr	r2, [r7, #20]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	429a      	cmp	r2, r3
 800060a:	dbf1      	blt.n	80005f0 <_write+0x16>
	  return len;
 800060c:	687b      	ldr	r3, [r7, #4]
}
 800060e:	4618      	mov	r0, r3
 8000610:	3718      	adds	r7, #24
 8000612:	46bd      	mov	sp, r7
 8000614:	bd80      	pop	{r7, pc}
	...

08000618 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800061c:	f000 fc90 	bl	8000f40 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000620:	f000 f856 	bl	80006d0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000624:	f000 f960 	bl	80008e8 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000628:	f000 f8c2 	bl	80007b0 <MX_TIM2_Init>
  MX_TIM3_Init();
 800062c:	f000 f90e 	bl	800084c <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start_IT(&htim2);
 8000630:	4818      	ldr	r0, [pc, #96]	; (8000694 <main+0x7c>)
 8000632:	f001 fcdf 	bl	8001ff4 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 8000636:	4818      	ldr	r0, [pc, #96]	; (8000698 <main+0x80>)
 8000638:	f001 fcdc 	bl	8001ff4 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 800063c:	f002 f944 	bl	80028c8 <osKernelInitialize>
  /* USER CODE BEGIN RTOS_TIMERS */
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
  Queue1Handle =  osMessageQueueNew(2, sizeof(int), &Queue1_attributes);
 8000640:	4a16      	ldr	r2, [pc, #88]	; (800069c <main+0x84>)
 8000642:	2104      	movs	r1, #4
 8000644:	2002      	movs	r0, #2
 8000646:	f002 fb57 	bl	8002cf8 <osMessageQueueNew>
 800064a:	4603      	mov	r3, r0
 800064c:	4a14      	ldr	r2, [pc, #80]	; (80006a0 <main+0x88>)
 800064e:	6013      	str	r3, [r2, #0]
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of defaultTask */
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000650:	4a14      	ldr	r2, [pc, #80]	; (80006a4 <main+0x8c>)
 8000652:	2100      	movs	r1, #0
 8000654:	4814      	ldr	r0, [pc, #80]	; (80006a8 <main+0x90>)
 8000656:	f002 f981 	bl	800295c <osThreadNew>
 800065a:	4603      	mov	r3, r0
 800065c:	4a13      	ldr	r2, [pc, #76]	; (80006ac <main+0x94>)
 800065e:	6013      	str	r3, [r2, #0]
  myTask02Handle = osThreadNew(StartTask02, NULL, &myTask02_attributes);
 8000660:	4a13      	ldr	r2, [pc, #76]	; (80006b0 <main+0x98>)
 8000662:	2100      	movs	r1, #0
 8000664:	4813      	ldr	r0, [pc, #76]	; (80006b4 <main+0x9c>)
 8000666:	f002 f979 	bl	800295c <osThreadNew>
 800066a:	4603      	mov	r3, r0
 800066c:	4a12      	ldr	r2, [pc, #72]	; (80006b8 <main+0xa0>)
 800066e:	6013      	str	r3, [r2, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 8000670:	4a12      	ldr	r2, [pc, #72]	; (80006bc <main+0xa4>)
 8000672:	2100      	movs	r1, #0
 8000674:	4812      	ldr	r0, [pc, #72]	; (80006c0 <main+0xa8>)
 8000676:	f002 f971 	bl	800295c <osThreadNew>
 800067a:	4603      	mov	r3, r0
 800067c:	4a11      	ldr	r2, [pc, #68]	; (80006c4 <main+0xac>)
 800067e:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* USER CODE BEGIN RTOS_EVENTS */
  Event1Handle = osEventFlagsNew(&Event1_attributes);
 8000680:	4811      	ldr	r0, [pc, #68]	; (80006c8 <main+0xb0>)
 8000682:	f002 fa1d 	bl	8002ac0 <osEventFlagsNew>
 8000686:	4603      	mov	r3, r0
 8000688:	4a10      	ldr	r2, [pc, #64]	; (80006cc <main+0xb4>)
 800068a:	6013      	str	r3, [r2, #0]
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 800068c:	f002 f940 	bl	8002910 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000690:	e7fe      	b.n	8000690 <main+0x78>
 8000692:	bf00      	nop
 8000694:	200000b0 	.word	0x200000b0
 8000698:	200000f8 	.word	0x200000f8
 800069c:	20000000 	.word	0x20000000
 80006a0:	2000014c 	.word	0x2000014c
 80006a4:	080070bc 	.word	0x080070bc
 80006a8:	08000971 	.word	0x08000971
 80006ac:	20000140 	.word	0x20000140
 80006b0:	080070e0 	.word	0x080070e0
 80006b4:	08000a01 	.word	0x08000a01
 80006b8:	20000144 	.word	0x20000144
 80006bc:	08007104 	.word	0x08007104
 80006c0:	08000a89 	.word	0x08000a89
 80006c4:	20000148 	.word	0x20000148
 80006c8:	20000018 	.word	0x20000018
 80006cc:	20000150 	.word	0x20000150

080006d0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006d0:	b580      	push	{r7, lr}
 80006d2:	b094      	sub	sp, #80	; 0x50
 80006d4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006d6:	f107 0320 	add.w	r3, r7, #32
 80006da:	2230      	movs	r2, #48	; 0x30
 80006dc:	2100      	movs	r1, #0
 80006de:	4618      	mov	r0, r3
 80006e0:	f005 fe8c 	bl	80063fc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006e4:	f107 030c 	add.w	r3, r7, #12
 80006e8:	2200      	movs	r2, #0
 80006ea:	601a      	str	r2, [r3, #0]
 80006ec:	605a      	str	r2, [r3, #4]
 80006ee:	609a      	str	r2, [r3, #8]
 80006f0:	60da      	str	r2, [r3, #12]
 80006f2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80006f4:	2300      	movs	r3, #0
 80006f6:	60bb      	str	r3, [r7, #8]
 80006f8:	4b2b      	ldr	r3, [pc, #172]	; (80007a8 <SystemClock_Config+0xd8>)
 80006fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006fc:	4a2a      	ldr	r2, [pc, #168]	; (80007a8 <SystemClock_Config+0xd8>)
 80006fe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000702:	6413      	str	r3, [r2, #64]	; 0x40
 8000704:	4b28      	ldr	r3, [pc, #160]	; (80007a8 <SystemClock_Config+0xd8>)
 8000706:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000708:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800070c:	60bb      	str	r3, [r7, #8]
 800070e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000710:	2300      	movs	r3, #0
 8000712:	607b      	str	r3, [r7, #4]
 8000714:	4b25      	ldr	r3, [pc, #148]	; (80007ac <SystemClock_Config+0xdc>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	4a24      	ldr	r2, [pc, #144]	; (80007ac <SystemClock_Config+0xdc>)
 800071a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800071e:	6013      	str	r3, [r2, #0]
 8000720:	4b22      	ldr	r3, [pc, #136]	; (80007ac <SystemClock_Config+0xdc>)
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000728:	607b      	str	r3, [r7, #4]
 800072a:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800072c:	2301      	movs	r3, #1
 800072e:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000730:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000734:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000736:	2302      	movs	r3, #2
 8000738:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800073a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800073e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000740:	2304      	movs	r3, #4
 8000742:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 180;
 8000744:	23b4      	movs	r3, #180	; 0xb4
 8000746:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000748:	2302      	movs	r3, #2
 800074a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 800074c:	2307      	movs	r3, #7
 800074e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000750:	f107 0320 	add.w	r3, r7, #32
 8000754:	4618      	mov	r0, r3
 8000756:	f000 ff47 	bl	80015e8 <HAL_RCC_OscConfig>
 800075a:	4603      	mov	r3, r0
 800075c:	2b00      	cmp	r3, #0
 800075e:	d001      	beq.n	8000764 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000760:	f000 fa04 	bl	8000b6c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000764:	f000 fef0 	bl	8001548 <HAL_PWREx_EnableOverDrive>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d001      	beq.n	8000772 <SystemClock_Config+0xa2>
  {
    Error_Handler();
 800076e:	f000 f9fd 	bl	8000b6c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000772:	230f      	movs	r3, #15
 8000774:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000776:	2302      	movs	r3, #2
 8000778:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800077a:	2300      	movs	r3, #0
 800077c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800077e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000782:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000784:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000788:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800078a:	f107 030c 	add.w	r3, r7, #12
 800078e:	2105      	movs	r1, #5
 8000790:	4618      	mov	r0, r3
 8000792:	f001 f9a1 	bl	8001ad8 <HAL_RCC_ClockConfig>
 8000796:	4603      	mov	r3, r0
 8000798:	2b00      	cmp	r3, #0
 800079a:	d001      	beq.n	80007a0 <SystemClock_Config+0xd0>
  {
    Error_Handler();
 800079c:	f000 f9e6 	bl	8000b6c <Error_Handler>
  }
}
 80007a0:	bf00      	nop
 80007a2:	3750      	adds	r7, #80	; 0x50
 80007a4:	46bd      	mov	sp, r7
 80007a6:	bd80      	pop	{r7, pc}
 80007a8:	40023800 	.word	0x40023800
 80007ac:	40007000 	.word	0x40007000

080007b0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80007b0:	b580      	push	{r7, lr}
 80007b2:	b086      	sub	sp, #24
 80007b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80007b6:	f107 0308 	add.w	r3, r7, #8
 80007ba:	2200      	movs	r2, #0
 80007bc:	601a      	str	r2, [r3, #0]
 80007be:	605a      	str	r2, [r3, #4]
 80007c0:	609a      	str	r2, [r3, #8]
 80007c2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80007c4:	463b      	mov	r3, r7
 80007c6:	2200      	movs	r2, #0
 80007c8:	601a      	str	r2, [r3, #0]
 80007ca:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80007cc:	4b1e      	ldr	r3, [pc, #120]	; (8000848 <MX_TIM2_Init+0x98>)
 80007ce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80007d2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 9000-1;
 80007d4:	4b1c      	ldr	r3, [pc, #112]	; (8000848 <MX_TIM2_Init+0x98>)
 80007d6:	f242 3227 	movw	r2, #8999	; 0x2327
 80007da:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80007dc:	4b1a      	ldr	r3, [pc, #104]	; (8000848 <MX_TIM2_Init+0x98>)
 80007de:	2200      	movs	r2, #0
 80007e0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 80007e2:	4b19      	ldr	r3, [pc, #100]	; (8000848 <MX_TIM2_Init+0x98>)
 80007e4:	f242 720f 	movw	r2, #9999	; 0x270f
 80007e8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80007ea:	4b17      	ldr	r3, [pc, #92]	; (8000848 <MX_TIM2_Init+0x98>)
 80007ec:	2200      	movs	r2, #0
 80007ee:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80007f0:	4b15      	ldr	r3, [pc, #84]	; (8000848 <MX_TIM2_Init+0x98>)
 80007f2:	2200      	movs	r2, #0
 80007f4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80007f6:	4814      	ldr	r0, [pc, #80]	; (8000848 <MX_TIM2_Init+0x98>)
 80007f8:	f001 fbac 	bl	8001f54 <HAL_TIM_Base_Init>
 80007fc:	4603      	mov	r3, r0
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d001      	beq.n	8000806 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8000802:	f000 f9b3 	bl	8000b6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000806:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800080a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800080c:	f107 0308 	add.w	r3, r7, #8
 8000810:	4619      	mov	r1, r3
 8000812:	480d      	ldr	r0, [pc, #52]	; (8000848 <MX_TIM2_Init+0x98>)
 8000814:	f001 fd4e 	bl	80022b4 <HAL_TIM_ConfigClockSource>
 8000818:	4603      	mov	r3, r0
 800081a:	2b00      	cmp	r3, #0
 800081c:	d001      	beq.n	8000822 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 800081e:	f000 f9a5 	bl	8000b6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000822:	2300      	movs	r3, #0
 8000824:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000826:	2300      	movs	r3, #0
 8000828:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800082a:	463b      	mov	r3, r7
 800082c:	4619      	mov	r1, r3
 800082e:	4806      	ldr	r0, [pc, #24]	; (8000848 <MX_TIM2_Init+0x98>)
 8000830:	f001 ff76 	bl	8002720 <HAL_TIMEx_MasterConfigSynchronization>
 8000834:	4603      	mov	r3, r0
 8000836:	2b00      	cmp	r3, #0
 8000838:	d001      	beq.n	800083e <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 800083a:	f000 f997 	bl	8000b6c <Error_Handler>
  }

}
 800083e:	bf00      	nop
 8000840:	3718      	adds	r7, #24
 8000842:	46bd      	mov	sp, r7
 8000844:	bd80      	pop	{r7, pc}
 8000846:	bf00      	nop
 8000848:	200000b0 	.word	0x200000b0

0800084c <MX_TIM3_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800084c:	b580      	push	{r7, lr}
 800084e:	b086      	sub	sp, #24
 8000850:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000852:	f107 0308 	add.w	r3, r7, #8
 8000856:	2200      	movs	r2, #0
 8000858:	601a      	str	r2, [r3, #0]
 800085a:	605a      	str	r2, [r3, #4]
 800085c:	609a      	str	r2, [r3, #8]
 800085e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000860:	463b      	mov	r3, r7
 8000862:	2200      	movs	r2, #0
 8000864:	601a      	str	r2, [r3, #0]
 8000866:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000868:	4b1d      	ldr	r3, [pc, #116]	; (80008e0 <MX_TIM3_Init+0x94>)
 800086a:	4a1e      	ldr	r2, [pc, #120]	; (80008e4 <MX_TIM3_Init+0x98>)
 800086c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9000-1;
 800086e:	4b1c      	ldr	r3, [pc, #112]	; (80008e0 <MX_TIM3_Init+0x94>)
 8000870:	f242 3227 	movw	r2, #8999	; 0x2327
 8000874:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000876:	4b1a      	ldr	r3, [pc, #104]	; (80008e0 <MX_TIM3_Init+0x94>)
 8000878:	2200      	movs	r2, #0
 800087a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 20000-1;
 800087c:	4b18      	ldr	r3, [pc, #96]	; (80008e0 <MX_TIM3_Init+0x94>)
 800087e:	f644 621f 	movw	r2, #19999	; 0x4e1f
 8000882:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000884:	4b16      	ldr	r3, [pc, #88]	; (80008e0 <MX_TIM3_Init+0x94>)
 8000886:	2200      	movs	r2, #0
 8000888:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800088a:	4b15      	ldr	r3, [pc, #84]	; (80008e0 <MX_TIM3_Init+0x94>)
 800088c:	2200      	movs	r2, #0
 800088e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000890:	4813      	ldr	r0, [pc, #76]	; (80008e0 <MX_TIM3_Init+0x94>)
 8000892:	f001 fb5f 	bl	8001f54 <HAL_TIM_Base_Init>
 8000896:	4603      	mov	r3, r0
 8000898:	2b00      	cmp	r3, #0
 800089a:	d001      	beq.n	80008a0 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 800089c:	f000 f966 	bl	8000b6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80008a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008a4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80008a6:	f107 0308 	add.w	r3, r7, #8
 80008aa:	4619      	mov	r1, r3
 80008ac:	480c      	ldr	r0, [pc, #48]	; (80008e0 <MX_TIM3_Init+0x94>)
 80008ae:	f001 fd01 	bl	80022b4 <HAL_TIM_ConfigClockSource>
 80008b2:	4603      	mov	r3, r0
 80008b4:	2b00      	cmp	r3, #0
 80008b6:	d001      	beq.n	80008bc <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80008b8:	f000 f958 	bl	8000b6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80008bc:	2300      	movs	r3, #0
 80008be:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80008c0:	2300      	movs	r3, #0
 80008c2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80008c4:	463b      	mov	r3, r7
 80008c6:	4619      	mov	r1, r3
 80008c8:	4805      	ldr	r0, [pc, #20]	; (80008e0 <MX_TIM3_Init+0x94>)
 80008ca:	f001 ff29 	bl	8002720 <HAL_TIMEx_MasterConfigSynchronization>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d001      	beq.n	80008d8 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80008d4:	f000 f94a 	bl	8000b6c <Error_Handler>

  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80008d8:	bf00      	nop
 80008da:	3718      	adds	r7, #24
 80008dc:	46bd      	mov	sp, r7
 80008de:	bd80      	pop	{r7, pc}
 80008e0:	200000f8 	.word	0x200000f8
 80008e4:	40000400 	.word	0x40000400

080008e8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80008e8:	b580      	push	{r7, lr}
 80008ea:	b088      	sub	sp, #32
 80008ec:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008ee:	f107 030c 	add.w	r3, r7, #12
 80008f2:	2200      	movs	r2, #0
 80008f4:	601a      	str	r2, [r3, #0]
 80008f6:	605a      	str	r2, [r3, #4]
 80008f8:	609a      	str	r2, [r3, #8]
 80008fa:	60da      	str	r2, [r3, #12]
 80008fc:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80008fe:	2300      	movs	r3, #0
 8000900:	60bb      	str	r3, [r7, #8]
 8000902:	4b19      	ldr	r3, [pc, #100]	; (8000968 <MX_GPIO_Init+0x80>)
 8000904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000906:	4a18      	ldr	r2, [pc, #96]	; (8000968 <MX_GPIO_Init+0x80>)
 8000908:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800090c:	6313      	str	r3, [r2, #48]	; 0x30
 800090e:	4b16      	ldr	r3, [pc, #88]	; (8000968 <MX_GPIO_Init+0x80>)
 8000910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000912:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000916:	60bb      	str	r3, [r7, #8]
 8000918:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800091a:	2300      	movs	r3, #0
 800091c:	607b      	str	r3, [r7, #4]
 800091e:	4b12      	ldr	r3, [pc, #72]	; (8000968 <MX_GPIO_Init+0x80>)
 8000920:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000922:	4a11      	ldr	r2, [pc, #68]	; (8000968 <MX_GPIO_Init+0x80>)
 8000924:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000928:	6313      	str	r3, [r2, #48]	; 0x30
 800092a:	4b0f      	ldr	r3, [pc, #60]	; (8000968 <MX_GPIO_Init+0x80>)
 800092c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800092e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000932:	607b      	str	r3, [r7, #4]
 8000934:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 8000936:	2200      	movs	r2, #0
 8000938:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 800093c:	480b      	ldr	r0, [pc, #44]	; (800096c <MX_GPIO_Init+0x84>)
 800093e:	f000 fdcf 	bl	80014e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PG13 PG14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8000942:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8000946:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000948:	2301      	movs	r3, #1
 800094a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800094c:	2300      	movs	r3, #0
 800094e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000950:	2300      	movs	r3, #0
 8000952:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000954:	f107 030c 	add.w	r3, r7, #12
 8000958:	4619      	mov	r1, r3
 800095a:	4804      	ldr	r0, [pc, #16]	; (800096c <MX_GPIO_Init+0x84>)
 800095c:	f000 fc14 	bl	8001188 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000960:	bf00      	nop
 8000962:	3720      	adds	r7, #32
 8000964:	46bd      	mov	sp, r7
 8000966:	bd80      	pop	{r7, pc}
 8000968:	40023800 	.word	0x40023800
 800096c:	40021800 	.word	0x40021800

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b580      	push	{r7, lr}
 8000972:	b086      	sub	sp, #24
 8000974:	af00      	add	r7, sp, #0
 8000976:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  int r[2], ret;
  /* Infinite loop */
  for(;;)
  {
		ret = osMessageQueueGet(Queue1Handle, r, (uint8_t*) osPriorityNormal, osWaitForever);
 8000978:	4b1d      	ldr	r3, [pc, #116]	; (80009f0 <StartDefaultTask+0x80>)
 800097a:	6818      	ldr	r0, [r3, #0]
 800097c:	f107 010c 	add.w	r1, r7, #12
 8000980:	f04f 33ff 	mov.w	r3, #4294967295
 8000984:	2218      	movs	r2, #24
 8000986:	f002 fa8b 	bl	8002ea0 <osMessageQueueGet>
 800098a:	6178      	str	r0, [r7, #20]
		if (ret!=0){
 800098c:	697b      	ldr	r3, [r7, #20]
 800098e:	2b00      	cmp	r3, #0
 8000990:	d003      	beq.n	800099a <StartDefaultTask+0x2a>
			printf("Error getting var from queue\n");
 8000992:	4818      	ldr	r0, [pc, #96]	; (80009f4 <StartDefaultTask+0x84>)
 8000994:	f005 fc52 	bl	800623c <puts>
 8000998:	e7ee      	b.n	8000978 <StartDefaultTask+0x8>
		}
		else {
			ret = osMessageQueueGet(Queue1Handle, r+1, (uint8_t*) osPriorityNormal, osWaitForever);
 800099a:	4b15      	ldr	r3, [pc, #84]	; (80009f0 <StartDefaultTask+0x80>)
 800099c:	6818      	ldr	r0, [r3, #0]
 800099e:	f107 010c 	add.w	r1, r7, #12
 80009a2:	3104      	adds	r1, #4
 80009a4:	f04f 33ff 	mov.w	r3, #4294967295
 80009a8:	2218      	movs	r2, #24
 80009aa:	f002 fa79 	bl	8002ea0 <osMessageQueueGet>
 80009ae:	6178      	str	r0, [r7, #20]
			if (ret!=0){
 80009b0:	697b      	ldr	r3, [r7, #20]
 80009b2:	2b00      	cmp	r3, #0
 80009b4:	d003      	beq.n	80009be <StartDefaultTask+0x4e>
						printf("Error getting var from queue\n");
 80009b6:	480f      	ldr	r0, [pc, #60]	; (80009f4 <StartDefaultTask+0x84>)
 80009b8:	f005 fc40 	bl	800623c <puts>
 80009bc:	e7dc      	b.n	8000978 <StartDefaultTask+0x8>
			}
			else {
				printf("Variables received successfully: Timer_cnt = %d, Timer_id = %d \n\r", r[0], r[1]);
 80009be:	68fb      	ldr	r3, [r7, #12]
 80009c0:	693a      	ldr	r2, [r7, #16]
 80009c2:	4619      	mov	r1, r3
 80009c4:	480c      	ldr	r0, [pc, #48]	; (80009f8 <StartDefaultTask+0x88>)
 80009c6:	f005 fbd3 	bl	8006170 <iprintf>
				if (r[1] == 2){
 80009ca:	693b      	ldr	r3, [r7, #16]
 80009cc:	2b02      	cmp	r3, #2
 80009ce:	d105      	bne.n	80009dc <StartDefaultTask+0x6c>
					HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009d4:	4809      	ldr	r0, [pc, #36]	; (80009fc <StartDefaultTask+0x8c>)
 80009d6:	f000 fd9c 	bl	8001512 <HAL_GPIO_TogglePin>
 80009da:	e7cd      	b.n	8000978 <StartDefaultTask+0x8>
				}
				else if (r[1] == 3){
 80009dc:	693b      	ldr	r3, [r7, #16]
 80009de:	2b03      	cmp	r3, #3
 80009e0:	d1ca      	bne.n	8000978 <StartDefaultTask+0x8>
					HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_14);
 80009e2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80009e6:	4805      	ldr	r0, [pc, #20]	; (80009fc <StartDefaultTask+0x8c>)
 80009e8:	f000 fd93 	bl	8001512 <HAL_GPIO_TogglePin>
		ret = osMessageQueueGet(Queue1Handle, r, (uint8_t*) osPriorityNormal, osWaitForever);
 80009ec:	e7c4      	b.n	8000978 <StartDefaultTask+0x8>
 80009ee:	bf00      	nop
 80009f0:	2000014c 	.word	0x2000014c
 80009f4:	08007024 	.word	0x08007024
 80009f8:	08007044 	.word	0x08007044
 80009fc:	40021800 	.word	0x40021800

08000a00 <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void *argument)
{
 8000a00:	b580      	push	{r7, lr}
 8000a02:	b084      	sub	sp, #16
 8000a04:	af00      	add	r7, sp, #0
 8000a06:	6078      	str	r0, [r7, #4]
	/* Infinite loop */
	for(;;)
	{
		int timer2_id = 2, ret;
 8000a08:	2302      	movs	r3, #2
 8000a0a:	60bb      	str	r3, [r7, #8]
		osEventFlagsWait(Event1Handle, FLAG_Timer2, osFlagsWaitAny, osWaitForever);
 8000a0c:	4b1a      	ldr	r3, [pc, #104]	; (8000a78 <StartTask02+0x78>)
 8000a0e:	6818      	ldr	r0, [r3, #0]
 8000a10:	f04f 33ff 	mov.w	r3, #4294967295
 8000a14:	2200      	movs	r2, #0
 8000a16:	2101      	movs	r1, #1
 8000a18:	f002 f908 	bl	8002c2c <osEventFlagsWait>
		static int cnt_timer2;
		cnt_timer2++;
 8000a1c:	4b17      	ldr	r3, [pc, #92]	; (8000a7c <StartTask02+0x7c>)
 8000a1e:	681b      	ldr	r3, [r3, #0]
 8000a20:	3301      	adds	r3, #1
 8000a22:	4a16      	ldr	r2, [pc, #88]	; (8000a7c <StartTask02+0x7c>)
 8000a24:	6013      	str	r3, [r2, #0]

		ret = osMessageQueuePut(Queue1Handle, &cnt_timer2, osPriorityNormal, osWaitForever);
 8000a26:	4b16      	ldr	r3, [pc, #88]	; (8000a80 <StartTask02+0x80>)
 8000a28:	6818      	ldr	r0, [r3, #0]
 8000a2a:	f04f 33ff 	mov.w	r3, #4294967295
 8000a2e:	2218      	movs	r2, #24
 8000a30:	4912      	ldr	r1, [pc, #72]	; (8000a7c <StartTask02+0x7c>)
 8000a32:	f002 f9d5 	bl	8002de0 <osMessageQueuePut>
 8000a36:	60f8      	str	r0, [r7, #12]
		if (ret!=0){
 8000a38:	68fb      	ldr	r3, [r7, #12]
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	d002      	beq.n	8000a44 <StartTask02+0x44>
			printf("Error putting var in queue\n");
 8000a3e:	4811      	ldr	r0, [pc, #68]	; (8000a84 <StartTask02+0x84>)
 8000a40:	f005 fbfc 	bl	800623c <puts>
		}

		ret = osMessageQueuePut(Queue1Handle, &timer2_id, osPriorityNormal, osWaitForever);
 8000a44:	4b0e      	ldr	r3, [pc, #56]	; (8000a80 <StartTask02+0x80>)
 8000a46:	6818      	ldr	r0, [r3, #0]
 8000a48:	f107 0108 	add.w	r1, r7, #8
 8000a4c:	f04f 33ff 	mov.w	r3, #4294967295
 8000a50:	2218      	movs	r2, #24
 8000a52:	f002 f9c5 	bl	8002de0 <osMessageQueuePut>
 8000a56:	60f8      	str	r0, [r7, #12]
		if (ret!=0){
 8000a58:	68fb      	ldr	r3, [r7, #12]
 8000a5a:	2b00      	cmp	r3, #0
 8000a5c:	d002      	beq.n	8000a64 <StartTask02+0x64>
			printf("Error putting var in queue\n");
 8000a5e:	4809      	ldr	r0, [pc, #36]	; (8000a84 <StartTask02+0x84>)
 8000a60:	f005 fbec 	bl	800623c <puts>
		}

		osEventFlagsClear(Event1Handle, FLAG_Timer2);
 8000a64:	4b04      	ldr	r3, [pc, #16]	; (8000a78 <StartTask02+0x78>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	2101      	movs	r1, #1
 8000a6a:	4618      	mov	r0, r3
 8000a6c:	f002 f8ac 	bl	8002bc8 <osEventFlagsClear>
		osThreadYield();
 8000a70:	f002 f806 	bl	8002a80 <osThreadYield>
	{
 8000a74:	e7c8      	b.n	8000a08 <StartTask02+0x8>
 8000a76:	bf00      	nop
 8000a78:	20000150 	.word	0x20000150
 8000a7c:	20000154 	.word	0x20000154
 8000a80:	2000014c 	.word	0x2000014c
 8000a84:	08007088 	.word	0x08007088

08000a88 <StartTask03>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask03 */
void StartTask03(void *argument)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b084      	sub	sp, #16
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN StartTask03 */
	/* Infinite loop */
	for(;;)
	{
		int timer3_id = 3, ret;
 8000a90:	2303      	movs	r3, #3
 8000a92:	60bb      	str	r3, [r7, #8]
		osEventFlagsWait(Event1Handle, FLAG_Timer3, osFlagsWaitAny, osWaitForever);
 8000a94:	4b1a      	ldr	r3, [pc, #104]	; (8000b00 <StartTask03+0x78>)
 8000a96:	6818      	ldr	r0, [r3, #0]
 8000a98:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9c:	2200      	movs	r2, #0
 8000a9e:	2110      	movs	r1, #16
 8000aa0:	f002 f8c4 	bl	8002c2c <osEventFlagsWait>
		static int cnt_timer3;
		cnt_timer3++;
 8000aa4:	4b17      	ldr	r3, [pc, #92]	; (8000b04 <StartTask03+0x7c>)
 8000aa6:	681b      	ldr	r3, [r3, #0]
 8000aa8:	3301      	adds	r3, #1
 8000aaa:	4a16      	ldr	r2, [pc, #88]	; (8000b04 <StartTask03+0x7c>)
 8000aac:	6013      	str	r3, [r2, #0]

		ret = osMessageQueuePut(Queue1Handle, &cnt_timer3, osPriorityNormal, osWaitForever);
 8000aae:	4b16      	ldr	r3, [pc, #88]	; (8000b08 <StartTask03+0x80>)
 8000ab0:	6818      	ldr	r0, [r3, #0]
 8000ab2:	f04f 33ff 	mov.w	r3, #4294967295
 8000ab6:	2218      	movs	r2, #24
 8000ab8:	4912      	ldr	r1, [pc, #72]	; (8000b04 <StartTask03+0x7c>)
 8000aba:	f002 f991 	bl	8002de0 <osMessageQueuePut>
 8000abe:	60f8      	str	r0, [r7, #12]
		if (ret!=0){
 8000ac0:	68fb      	ldr	r3, [r7, #12]
 8000ac2:	2b00      	cmp	r3, #0
 8000ac4:	d002      	beq.n	8000acc <StartTask03+0x44>
			printf("Error putting var in queue\n");
 8000ac6:	4811      	ldr	r0, [pc, #68]	; (8000b0c <StartTask03+0x84>)
 8000ac8:	f005 fbb8 	bl	800623c <puts>
		}

		ret = osMessageQueuePut(Queue1Handle, &timer3_id, osPriorityNormal, osWaitForever);
 8000acc:	4b0e      	ldr	r3, [pc, #56]	; (8000b08 <StartTask03+0x80>)
 8000ace:	6818      	ldr	r0, [r3, #0]
 8000ad0:	f107 0108 	add.w	r1, r7, #8
 8000ad4:	f04f 33ff 	mov.w	r3, #4294967295
 8000ad8:	2218      	movs	r2, #24
 8000ada:	f002 f981 	bl	8002de0 <osMessageQueuePut>
 8000ade:	60f8      	str	r0, [r7, #12]
		if (ret!=0){
 8000ae0:	68fb      	ldr	r3, [r7, #12]
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d002      	beq.n	8000aec <StartTask03+0x64>
			printf("Error putting var in queue\n");
 8000ae6:	4809      	ldr	r0, [pc, #36]	; (8000b0c <StartTask03+0x84>)
 8000ae8:	f005 fba8 	bl	800623c <puts>
		}

		osEventFlagsClear(Event1Handle, FLAG_Timer3);
 8000aec:	4b04      	ldr	r3, [pc, #16]	; (8000b00 <StartTask03+0x78>)
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	2110      	movs	r1, #16
 8000af2:	4618      	mov	r0, r3
 8000af4:	f002 f868 	bl	8002bc8 <osEventFlagsClear>
		osThreadYield();
 8000af8:	f001 ffc2 	bl	8002a80 <osThreadYield>
	{
 8000afc:	e7c8      	b.n	8000a90 <StartTask03+0x8>
 8000afe:	bf00      	nop
 8000b00:	20000150 	.word	0x20000150
 8000b04:	20000158 	.word	0x20000158
 8000b08:	2000014c 	.word	0x2000014c
 8000b0c:	08007088 	.word	0x08007088

08000b10 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b082      	sub	sp, #8
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */


  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000b18:	687b      	ldr	r3, [r7, #4]
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	4a10      	ldr	r2, [pc, #64]	; (8000b60 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8000b1e:	4293      	cmp	r3, r2
 8000b20:	d102      	bne.n	8000b28 <HAL_TIM_PeriodElapsedCallback+0x18>
    HAL_IncTick();
 8000b22:	f000 fa2f 	bl	8000f84 <HAL_IncTick>

  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000b26:	e016      	b.n	8000b56 <HAL_TIM_PeriodElapsedCallback+0x46>
  else if(htim->Instance == TIM2) {
 8000b28:	687b      	ldr	r3, [r7, #4]
 8000b2a:	681b      	ldr	r3, [r3, #0]
 8000b2c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000b30:	d106      	bne.n	8000b40 <HAL_TIM_PeriodElapsedCallback+0x30>
	  osEventFlagsSet(Event1Handle, FLAG_Timer2);
 8000b32:	4b0c      	ldr	r3, [pc, #48]	; (8000b64 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000b34:	681b      	ldr	r3, [r3, #0]
 8000b36:	2101      	movs	r1, #1
 8000b38:	4618      	mov	r0, r3
 8000b3a:	f002 f801 	bl	8002b40 <osEventFlagsSet>
}
 8000b3e:	e00a      	b.n	8000b56 <HAL_TIM_PeriodElapsedCallback+0x46>
  else if(htim->Instance == TIM3) {
 8000b40:	687b      	ldr	r3, [r7, #4]
 8000b42:	681b      	ldr	r3, [r3, #0]
 8000b44:	4a08      	ldr	r2, [pc, #32]	; (8000b68 <HAL_TIM_PeriodElapsedCallback+0x58>)
 8000b46:	4293      	cmp	r3, r2
 8000b48:	d105      	bne.n	8000b56 <HAL_TIM_PeriodElapsedCallback+0x46>
	  osEventFlagsSet(Event1Handle, FLAG_Timer3);
 8000b4a:	4b06      	ldr	r3, [pc, #24]	; (8000b64 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000b4c:	681b      	ldr	r3, [r3, #0]
 8000b4e:	2110      	movs	r1, #16
 8000b50:	4618      	mov	r0, r3
 8000b52:	f001 fff5 	bl	8002b40 <osEventFlagsSet>
}
 8000b56:	bf00      	nop
 8000b58:	3708      	adds	r7, #8
 8000b5a:	46bd      	mov	sp, r7
 8000b5c:	bd80      	pop	{r7, pc}
 8000b5e:	bf00      	nop
 8000b60:	40001000 	.word	0x40001000
 8000b64:	20000150 	.word	0x20000150
 8000b68:	40000400 	.word	0x40000400

08000b6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000b6c:	b480      	push	{r7}
 8000b6e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000b70:	b672      	cpsid	i
}
 8000b72:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000b74:	e7fe      	b.n	8000b74 <Error_Handler+0x8>
	...

08000b78 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	b082      	sub	sp, #8
 8000b7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000b7e:	2300      	movs	r3, #0
 8000b80:	607b      	str	r3, [r7, #4]
 8000b82:	4b12      	ldr	r3, [pc, #72]	; (8000bcc <HAL_MspInit+0x54>)
 8000b84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b86:	4a11      	ldr	r2, [pc, #68]	; (8000bcc <HAL_MspInit+0x54>)
 8000b88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000b8c:	6453      	str	r3, [r2, #68]	; 0x44
 8000b8e:	4b0f      	ldr	r3, [pc, #60]	; (8000bcc <HAL_MspInit+0x54>)
 8000b90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b92:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000b96:	607b      	str	r3, [r7, #4]
 8000b98:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	603b      	str	r3, [r7, #0]
 8000b9e:	4b0b      	ldr	r3, [pc, #44]	; (8000bcc <HAL_MspInit+0x54>)
 8000ba0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ba2:	4a0a      	ldr	r2, [pc, #40]	; (8000bcc <HAL_MspInit+0x54>)
 8000ba4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ba8:	6413      	str	r3, [r2, #64]	; 0x40
 8000baa:	4b08      	ldr	r3, [pc, #32]	; (8000bcc <HAL_MspInit+0x54>)
 8000bac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000bb2:	603b      	str	r3, [r7, #0]
 8000bb4:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	210f      	movs	r1, #15
 8000bba:	f06f 0001 	mvn.w	r0, #1
 8000bbe:	f000 fab9 	bl	8001134 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000bc2:	bf00      	nop
 8000bc4:	3708      	adds	r7, #8
 8000bc6:	46bd      	mov	sp, r7
 8000bc8:	bd80      	pop	{r7, pc}
 8000bca:	bf00      	nop
 8000bcc:	40023800 	.word	0x40023800

08000bd0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	b084      	sub	sp, #16
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000be0:	d116      	bne.n	8000c10 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000be2:	2300      	movs	r3, #0
 8000be4:	60fb      	str	r3, [r7, #12]
 8000be6:	4b1a      	ldr	r3, [pc, #104]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000be8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bea:	4a19      	ldr	r2, [pc, #100]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000bec:	f043 0301 	orr.w	r3, r3, #1
 8000bf0:	6413      	str	r3, [r2, #64]	; 0x40
 8000bf2:	4b17      	ldr	r3, [pc, #92]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000bf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000bf6:	f003 0301 	and.w	r3, r3, #1
 8000bfa:	60fb      	str	r3, [r7, #12]
 8000bfc:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8000bfe:	2200      	movs	r2, #0
 8000c00:	2105      	movs	r1, #5
 8000c02:	201c      	movs	r0, #28
 8000c04:	f000 fa96 	bl	8001134 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000c08:	201c      	movs	r0, #28
 8000c0a:	f000 faaf 	bl	800116c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8000c0e:	e01a      	b.n	8000c46 <HAL_TIM_Base_MspInit+0x76>
  else if(htim_base->Instance==TIM3)
 8000c10:	687b      	ldr	r3, [r7, #4]
 8000c12:	681b      	ldr	r3, [r3, #0]
 8000c14:	4a0f      	ldr	r2, [pc, #60]	; (8000c54 <HAL_TIM_Base_MspInit+0x84>)
 8000c16:	4293      	cmp	r3, r2
 8000c18:	d115      	bne.n	8000c46 <HAL_TIM_Base_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	60bb      	str	r3, [r7, #8]
 8000c1e:	4b0c      	ldr	r3, [pc, #48]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c22:	4a0b      	ldr	r2, [pc, #44]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000c24:	f043 0302 	orr.w	r3, r3, #2
 8000c28:	6413      	str	r3, [r2, #64]	; 0x40
 8000c2a:	4b09      	ldr	r3, [pc, #36]	; (8000c50 <HAL_TIM_Base_MspInit+0x80>)
 8000c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c2e:	f003 0302 	and.w	r3, r3, #2
 8000c32:	60bb      	str	r3, [r7, #8]
 8000c34:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 5, 0);
 8000c36:	2200      	movs	r2, #0
 8000c38:	2105      	movs	r1, #5
 8000c3a:	201d      	movs	r0, #29
 8000c3c:	f000 fa7a 	bl	8001134 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8000c40:	201d      	movs	r0, #29
 8000c42:	f000 fa93 	bl	800116c <HAL_NVIC_EnableIRQ>
}
 8000c46:	bf00      	nop
 8000c48:	3710      	adds	r7, #16
 8000c4a:	46bd      	mov	sp, r7
 8000c4c:	bd80      	pop	{r7, pc}
 8000c4e:	bf00      	nop
 8000c50:	40023800 	.word	0x40023800
 8000c54:	40000400 	.word	0x40000400

08000c58 <HAL_InitTick>:
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b08e      	sub	sp, #56	; 0x38
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	6078      	str	r0, [r7, #4]
 8000c60:	2300      	movs	r3, #0
 8000c62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000c64:	2300      	movs	r3, #0
 8000c66:	62bb      	str	r3, [r7, #40]	; 0x28
 8000c68:	2300      	movs	r3, #0
 8000c6a:	60fb      	str	r3, [r7, #12]
 8000c6c:	4b33      	ldr	r3, [pc, #204]	; (8000d3c <HAL_InitTick+0xe4>)
 8000c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c70:	4a32      	ldr	r2, [pc, #200]	; (8000d3c <HAL_InitTick+0xe4>)
 8000c72:	f043 0310 	orr.w	r3, r3, #16
 8000c76:	6413      	str	r3, [r2, #64]	; 0x40
 8000c78:	4b30      	ldr	r3, [pc, #192]	; (8000d3c <HAL_InitTick+0xe4>)
 8000c7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c7c:	f003 0310 	and.w	r3, r3, #16
 8000c80:	60fb      	str	r3, [r7, #12]
 8000c82:	68fb      	ldr	r3, [r7, #12]
 8000c84:	f107 0210 	add.w	r2, r7, #16
 8000c88:	f107 0314 	add.w	r3, r7, #20
 8000c8c:	4611      	mov	r1, r2
 8000c8e:	4618      	mov	r0, r3
 8000c90:	f001 f92e 	bl	8001ef0 <HAL_RCC_GetClockConfig>
 8000c94:	6a3b      	ldr	r3, [r7, #32]
 8000c96:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000c98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000c9a:	2b00      	cmp	r3, #0
 8000c9c:	d103      	bne.n	8000ca6 <HAL_InitTick+0x4e>
 8000c9e:	f001 f913 	bl	8001ec8 <HAL_RCC_GetPCLK1Freq>
 8000ca2:	6378      	str	r0, [r7, #52]	; 0x34
 8000ca4:	e004      	b.n	8000cb0 <HAL_InitTick+0x58>
 8000ca6:	f001 f90f 	bl	8001ec8 <HAL_RCC_GetPCLK1Freq>
 8000caa:	4603      	mov	r3, r0
 8000cac:	005b      	lsls	r3, r3, #1
 8000cae:	637b      	str	r3, [r7, #52]	; 0x34
 8000cb0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000cb2:	4a23      	ldr	r2, [pc, #140]	; (8000d40 <HAL_InitTick+0xe8>)
 8000cb4:	fba2 2303 	umull	r2, r3, r2, r3
 8000cb8:	0c9b      	lsrs	r3, r3, #18
 8000cba:	3b01      	subs	r3, #1
 8000cbc:	62bb      	str	r3, [r7, #40]	; 0x28
 8000cbe:	4b21      	ldr	r3, [pc, #132]	; (8000d44 <HAL_InitTick+0xec>)
 8000cc0:	4a21      	ldr	r2, [pc, #132]	; (8000d48 <HAL_InitTick+0xf0>)
 8000cc2:	601a      	str	r2, [r3, #0]
 8000cc4:	4b1f      	ldr	r3, [pc, #124]	; (8000d44 <HAL_InitTick+0xec>)
 8000cc6:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000cca:	60da      	str	r2, [r3, #12]
 8000ccc:	4a1d      	ldr	r2, [pc, #116]	; (8000d44 <HAL_InitTick+0xec>)
 8000cce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000cd0:	6053      	str	r3, [r2, #4]
 8000cd2:	4b1c      	ldr	r3, [pc, #112]	; (8000d44 <HAL_InitTick+0xec>)
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	611a      	str	r2, [r3, #16]
 8000cd8:	4b1a      	ldr	r3, [pc, #104]	; (8000d44 <HAL_InitTick+0xec>)
 8000cda:	2200      	movs	r2, #0
 8000cdc:	609a      	str	r2, [r3, #8]
 8000cde:	4b19      	ldr	r3, [pc, #100]	; (8000d44 <HAL_InitTick+0xec>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	619a      	str	r2, [r3, #24]
 8000ce4:	4817      	ldr	r0, [pc, #92]	; (8000d44 <HAL_InitTick+0xec>)
 8000ce6:	f001 f935 	bl	8001f54 <HAL_TIM_Base_Init>
 8000cea:	4603      	mov	r3, r0
 8000cec:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000cf0:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d11b      	bne.n	8000d30 <HAL_InitTick+0xd8>
 8000cf8:	4812      	ldr	r0, [pc, #72]	; (8000d44 <HAL_InitTick+0xec>)
 8000cfa:	f001 f97b 	bl	8001ff4 <HAL_TIM_Base_Start_IT>
 8000cfe:	4603      	mov	r3, r0
 8000d00:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000d04:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d111      	bne.n	8000d30 <HAL_InitTick+0xd8>
 8000d0c:	2036      	movs	r0, #54	; 0x36
 8000d0e:	f000 fa2d 	bl	800116c <HAL_NVIC_EnableIRQ>
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	2b0f      	cmp	r3, #15
 8000d16:	d808      	bhi.n	8000d2a <HAL_InitTick+0xd2>
 8000d18:	2200      	movs	r2, #0
 8000d1a:	6879      	ldr	r1, [r7, #4]
 8000d1c:	2036      	movs	r0, #54	; 0x36
 8000d1e:	f000 fa09 	bl	8001134 <HAL_NVIC_SetPriority>
 8000d22:	4a0a      	ldr	r2, [pc, #40]	; (8000d4c <HAL_InitTick+0xf4>)
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	6013      	str	r3, [r2, #0]
 8000d28:	e002      	b.n	8000d30 <HAL_InitTick+0xd8>
 8000d2a:	2301      	movs	r3, #1
 8000d2c:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000d30:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000d34:	4618      	mov	r0, r3
 8000d36:	3738      	adds	r7, #56	; 0x38
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bd80      	pop	{r7, pc}
 8000d3c:	40023800 	.word	0x40023800
 8000d40:	431bde83 	.word	0x431bde83
 8000d44:	2000015c 	.word	0x2000015c
 8000d48:	40001000 	.word	0x40001000
 8000d4c:	2000002c 	.word	0x2000002c

08000d50 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d50:	b480      	push	{r7}
 8000d52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000d54:	e7fe      	b.n	8000d54 <NMI_Handler+0x4>

08000d56 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d56:	b480      	push	{r7}
 8000d58:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d5a:	e7fe      	b.n	8000d5a <HardFault_Handler+0x4>

08000d5c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d5c:	b480      	push	{r7}
 8000d5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d60:	e7fe      	b.n	8000d60 <MemManage_Handler+0x4>

08000d62 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d62:	b480      	push	{r7}
 8000d64:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000d66:	e7fe      	b.n	8000d66 <BusFault_Handler+0x4>

08000d68 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000d68:	b480      	push	{r7}
 8000d6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000d6c:	e7fe      	b.n	8000d6c <UsageFault_Handler+0x4>

08000d6e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d6e:	b480      	push	{r7}
 8000d70:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d72:	bf00      	nop
 8000d74:	46bd      	mov	sp, r7
 8000d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7a:	4770      	bx	lr

08000d7c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000d7c:	b580      	push	{r7, lr}
 8000d7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000d80:	4802      	ldr	r0, [pc, #8]	; (8000d8c <TIM2_IRQHandler+0x10>)
 8000d82:	f001 f9a7 	bl	80020d4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000d86:	bf00      	nop
 8000d88:	bd80      	pop	{r7, pc}
 8000d8a:	bf00      	nop
 8000d8c:	200000b0 	.word	0x200000b0

08000d90 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8000d90:	b580      	push	{r7, lr}
 8000d92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8000d94:	4802      	ldr	r0, [pc, #8]	; (8000da0 <TIM3_IRQHandler+0x10>)
 8000d96:	f001 f99d 	bl	80020d4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8000d9a:	bf00      	nop
 8000d9c:	bd80      	pop	{r7, pc}
 8000d9e:	bf00      	nop
 8000da0:	200000f8 	.word	0x200000f8

08000da4 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8000da4:	b580      	push	{r7, lr}
 8000da6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000da8:	4802      	ldr	r0, [pc, #8]	; (8000db4 <TIM6_DAC_IRQHandler+0x10>)
 8000daa:	f001 f993 	bl	80020d4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8000dae:	bf00      	nop
 8000db0:	bd80      	pop	{r7, pc}
 8000db2:	bf00      	nop
 8000db4:	2000015c 	.word	0x2000015c

08000db8 <_read>:
 8000db8:	b580      	push	{r7, lr}
 8000dba:	b086      	sub	sp, #24
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	60f8      	str	r0, [r7, #12]
 8000dc0:	60b9      	str	r1, [r7, #8]
 8000dc2:	607a      	str	r2, [r7, #4]
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	617b      	str	r3, [r7, #20]
 8000dc8:	e00a      	b.n	8000de0 <_read+0x28>
 8000dca:	f3af 8000 	nop.w
 8000dce:	4601      	mov	r1, r0
 8000dd0:	68bb      	ldr	r3, [r7, #8]
 8000dd2:	1c5a      	adds	r2, r3, #1
 8000dd4:	60ba      	str	r2, [r7, #8]
 8000dd6:	b2ca      	uxtb	r2, r1
 8000dd8:	701a      	strb	r2, [r3, #0]
 8000dda:	697b      	ldr	r3, [r7, #20]
 8000ddc:	3301      	adds	r3, #1
 8000dde:	617b      	str	r3, [r7, #20]
 8000de0:	697a      	ldr	r2, [r7, #20]
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	429a      	cmp	r2, r3
 8000de6:	dbf0      	blt.n	8000dca <_read+0x12>
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	4618      	mov	r0, r3
 8000dec:	3718      	adds	r7, #24
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bd80      	pop	{r7, pc}

08000df2 <_close>:
 8000df2:	b480      	push	{r7}
 8000df4:	b083      	sub	sp, #12
 8000df6:	af00      	add	r7, sp, #0
 8000df8:	6078      	str	r0, [r7, #4]
 8000dfa:	f04f 33ff 	mov.w	r3, #4294967295
 8000dfe:	4618      	mov	r0, r3
 8000e00:	370c      	adds	r7, #12
 8000e02:	46bd      	mov	sp, r7
 8000e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e08:	4770      	bx	lr

08000e0a <_fstat>:
 8000e0a:	b480      	push	{r7}
 8000e0c:	b083      	sub	sp, #12
 8000e0e:	af00      	add	r7, sp, #0
 8000e10:	6078      	str	r0, [r7, #4]
 8000e12:	6039      	str	r1, [r7, #0]
 8000e14:	683b      	ldr	r3, [r7, #0]
 8000e16:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000e1a:	605a      	str	r2, [r3, #4]
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	4618      	mov	r0, r3
 8000e20:	370c      	adds	r7, #12
 8000e22:	46bd      	mov	sp, r7
 8000e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e28:	4770      	bx	lr

08000e2a <_isatty>:
 8000e2a:	b480      	push	{r7}
 8000e2c:	b083      	sub	sp, #12
 8000e2e:	af00      	add	r7, sp, #0
 8000e30:	6078      	str	r0, [r7, #4]
 8000e32:	2301      	movs	r3, #1
 8000e34:	4618      	mov	r0, r3
 8000e36:	370c      	adds	r7, #12
 8000e38:	46bd      	mov	sp, r7
 8000e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e3e:	4770      	bx	lr

08000e40 <_lseek>:
 8000e40:	b480      	push	{r7}
 8000e42:	b085      	sub	sp, #20
 8000e44:	af00      	add	r7, sp, #0
 8000e46:	60f8      	str	r0, [r7, #12]
 8000e48:	60b9      	str	r1, [r7, #8]
 8000e4a:	607a      	str	r2, [r7, #4]
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	4618      	mov	r0, r3
 8000e50:	3714      	adds	r7, #20
 8000e52:	46bd      	mov	sp, r7
 8000e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e58:	4770      	bx	lr
	...

08000e5c <_sbrk>:
 8000e5c:	b580      	push	{r7, lr}
 8000e5e:	b086      	sub	sp, #24
 8000e60:	af00      	add	r7, sp, #0
 8000e62:	6078      	str	r0, [r7, #4]
 8000e64:	4a14      	ldr	r2, [pc, #80]	; (8000eb8 <_sbrk+0x5c>)
 8000e66:	4b15      	ldr	r3, [pc, #84]	; (8000ebc <_sbrk+0x60>)
 8000e68:	1ad3      	subs	r3, r2, r3
 8000e6a:	617b      	str	r3, [r7, #20]
 8000e6c:	697b      	ldr	r3, [r7, #20]
 8000e6e:	613b      	str	r3, [r7, #16]
 8000e70:	4b13      	ldr	r3, [pc, #76]	; (8000ec0 <_sbrk+0x64>)
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d102      	bne.n	8000e7e <_sbrk+0x22>
 8000e78:	4b11      	ldr	r3, [pc, #68]	; (8000ec0 <_sbrk+0x64>)
 8000e7a:	4a12      	ldr	r2, [pc, #72]	; (8000ec4 <_sbrk+0x68>)
 8000e7c:	601a      	str	r2, [r3, #0]
 8000e7e:	4b10      	ldr	r3, [pc, #64]	; (8000ec0 <_sbrk+0x64>)
 8000e80:	681a      	ldr	r2, [r3, #0]
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	4413      	add	r3, r2
 8000e86:	693a      	ldr	r2, [r7, #16]
 8000e88:	429a      	cmp	r2, r3
 8000e8a:	d207      	bcs.n	8000e9c <_sbrk+0x40>
 8000e8c:	f005 fb5a 	bl	8006544 <__errno>
 8000e90:	4603      	mov	r3, r0
 8000e92:	220c      	movs	r2, #12
 8000e94:	601a      	str	r2, [r3, #0]
 8000e96:	f04f 33ff 	mov.w	r3, #4294967295
 8000e9a:	e009      	b.n	8000eb0 <_sbrk+0x54>
 8000e9c:	4b08      	ldr	r3, [pc, #32]	; (8000ec0 <_sbrk+0x64>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	60fb      	str	r3, [r7, #12]
 8000ea2:	4b07      	ldr	r3, [pc, #28]	; (8000ec0 <_sbrk+0x64>)
 8000ea4:	681a      	ldr	r2, [r3, #0]
 8000ea6:	687b      	ldr	r3, [r7, #4]
 8000ea8:	4413      	add	r3, r2
 8000eaa:	4a05      	ldr	r2, [pc, #20]	; (8000ec0 <_sbrk+0x64>)
 8000eac:	6013      	str	r3, [r2, #0]
 8000eae:	68fb      	ldr	r3, [r7, #12]
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	3718      	adds	r7, #24
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	bd80      	pop	{r7, pc}
 8000eb8:	20030000 	.word	0x20030000
 8000ebc:	00000400 	.word	0x00000400
 8000ec0:	200001a4 	.word	0x200001a4
 8000ec4:	20004ce0 	.word	0x20004ce0

08000ec8 <SystemInit>:
 8000ec8:	b480      	push	{r7}
 8000eca:	af00      	add	r7, sp, #0
 8000ecc:	4b06      	ldr	r3, [pc, #24]	; (8000ee8 <SystemInit+0x20>)
 8000ece:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000ed2:	4a05      	ldr	r2, [pc, #20]	; (8000ee8 <SystemInit+0x20>)
 8000ed4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000ed8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000edc:	bf00      	nop
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	e000ed00 	.word	0xe000ed00

08000eec <Reset_Handler>:
 8000eec:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000f24 <LoopFillZerobss+0xe>
 8000ef0:	f7ff ffea 	bl	8000ec8 <SystemInit>
 8000ef4:	480c      	ldr	r0, [pc, #48]	; (8000f28 <LoopFillZerobss+0x12>)
 8000ef6:	490d      	ldr	r1, [pc, #52]	; (8000f2c <LoopFillZerobss+0x16>)
 8000ef8:	4a0d      	ldr	r2, [pc, #52]	; (8000f30 <LoopFillZerobss+0x1a>)
 8000efa:	2300      	movs	r3, #0
 8000efc:	e002      	b.n	8000f04 <LoopCopyDataInit>

08000efe <CopyDataInit>:
 8000efe:	58d4      	ldr	r4, [r2, r3]
 8000f00:	50c4      	str	r4, [r0, r3]
 8000f02:	3304      	adds	r3, #4

08000f04 <LoopCopyDataInit>:
 8000f04:	18c4      	adds	r4, r0, r3
 8000f06:	428c      	cmp	r4, r1
 8000f08:	d3f9      	bcc.n	8000efe <CopyDataInit>
 8000f0a:	4a0a      	ldr	r2, [pc, #40]	; (8000f34 <LoopFillZerobss+0x1e>)
 8000f0c:	4c0a      	ldr	r4, [pc, #40]	; (8000f38 <LoopFillZerobss+0x22>)
 8000f0e:	2300      	movs	r3, #0
 8000f10:	e001      	b.n	8000f16 <LoopFillZerobss>

08000f12 <FillZerobss>:
 8000f12:	6013      	str	r3, [r2, #0]
 8000f14:	3204      	adds	r2, #4

08000f16 <LoopFillZerobss>:
 8000f16:	42a2      	cmp	r2, r4
 8000f18:	d3fb      	bcc.n	8000f12 <FillZerobss>
 8000f1a:	f005 fb19 	bl	8006550 <__libc_init_array>
 8000f1e:	f7ff fb7b 	bl	8000618 <main>
 8000f22:	4770      	bx	lr
 8000f24:	20030000 	.word	0x20030000
 8000f28:	20000000 	.word	0x20000000
 8000f2c:	20000094 	.word	0x20000094
 8000f30:	08007184 	.word	0x08007184
 8000f34:	20000094 	.word	0x20000094
 8000f38:	20004ce0 	.word	0x20004ce0

08000f3c <ADC_IRQHandler>:
 8000f3c:	e7fe      	b.n	8000f3c <ADC_IRQHandler>
	...

08000f40 <HAL_Init>:
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
 8000f44:	4b0e      	ldr	r3, [pc, #56]	; (8000f80 <HAL_Init+0x40>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	4a0d      	ldr	r2, [pc, #52]	; (8000f80 <HAL_Init+0x40>)
 8000f4a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000f4e:	6013      	str	r3, [r2, #0]
 8000f50:	4b0b      	ldr	r3, [pc, #44]	; (8000f80 <HAL_Init+0x40>)
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	4a0a      	ldr	r2, [pc, #40]	; (8000f80 <HAL_Init+0x40>)
 8000f56:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000f5a:	6013      	str	r3, [r2, #0]
 8000f5c:	4b08      	ldr	r3, [pc, #32]	; (8000f80 <HAL_Init+0x40>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	4a07      	ldr	r2, [pc, #28]	; (8000f80 <HAL_Init+0x40>)
 8000f62:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000f66:	6013      	str	r3, [r2, #0]
 8000f68:	2003      	movs	r0, #3
 8000f6a:	f000 f8d8 	bl	800111e <HAL_NVIC_SetPriorityGrouping>
 8000f6e:	200f      	movs	r0, #15
 8000f70:	f7ff fe72 	bl	8000c58 <HAL_InitTick>
 8000f74:	f7ff fe00 	bl	8000b78 <HAL_MspInit>
 8000f78:	2300      	movs	r3, #0
 8000f7a:	4618      	mov	r0, r3
 8000f7c:	bd80      	pop	{r7, pc}
 8000f7e:	bf00      	nop
 8000f80:	40023c00 	.word	0x40023c00

08000f84 <HAL_IncTick>:
 8000f84:	b480      	push	{r7}
 8000f86:	af00      	add	r7, sp, #0
 8000f88:	4b06      	ldr	r3, [pc, #24]	; (8000fa4 <HAL_IncTick+0x20>)
 8000f8a:	781b      	ldrb	r3, [r3, #0]
 8000f8c:	461a      	mov	r2, r3
 8000f8e:	4b06      	ldr	r3, [pc, #24]	; (8000fa8 <HAL_IncTick+0x24>)
 8000f90:	681b      	ldr	r3, [r3, #0]
 8000f92:	4413      	add	r3, r2
 8000f94:	4a04      	ldr	r2, [pc, #16]	; (8000fa8 <HAL_IncTick+0x24>)
 8000f96:	6013      	str	r3, [r2, #0]
 8000f98:	bf00      	nop
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa0:	4770      	bx	lr
 8000fa2:	bf00      	nop
 8000fa4:	20000030 	.word	0x20000030
 8000fa8:	200001a8 	.word	0x200001a8

08000fac <HAL_GetTick>:
 8000fac:	b480      	push	{r7}
 8000fae:	af00      	add	r7, sp, #0
 8000fb0:	4b03      	ldr	r3, [pc, #12]	; (8000fc0 <HAL_GetTick+0x14>)
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	46bd      	mov	sp, r7
 8000fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fbc:	4770      	bx	lr
 8000fbe:	bf00      	nop
 8000fc0:	200001a8 	.word	0x200001a8

08000fc4 <__NVIC_SetPriorityGrouping>:
 8000fc4:	b480      	push	{r7}
 8000fc6:	b085      	sub	sp, #20
 8000fc8:	af00      	add	r7, sp, #0
 8000fca:	6078      	str	r0, [r7, #4]
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	f003 0307 	and.w	r3, r3, #7
 8000fd2:	60fb      	str	r3, [r7, #12]
 8000fd4:	4b0c      	ldr	r3, [pc, #48]	; (8001008 <__NVIC_SetPriorityGrouping+0x44>)
 8000fd6:	68db      	ldr	r3, [r3, #12]
 8000fd8:	60bb      	str	r3, [r7, #8]
 8000fda:	68ba      	ldr	r2, [r7, #8]
 8000fdc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000fe0:	4013      	ands	r3, r2
 8000fe2:	60bb      	str	r3, [r7, #8]
 8000fe4:	68fb      	ldr	r3, [r7, #12]
 8000fe6:	021a      	lsls	r2, r3, #8
 8000fe8:	68bb      	ldr	r3, [r7, #8]
 8000fea:	4313      	orrs	r3, r2
 8000fec:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000ff0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ff4:	60bb      	str	r3, [r7, #8]
 8000ff6:	4a04      	ldr	r2, [pc, #16]	; (8001008 <__NVIC_SetPriorityGrouping+0x44>)
 8000ff8:	68bb      	ldr	r3, [r7, #8]
 8000ffa:	60d3      	str	r3, [r2, #12]
 8000ffc:	bf00      	nop
 8000ffe:	3714      	adds	r7, #20
 8001000:	46bd      	mov	sp, r7
 8001002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001006:	4770      	bx	lr
 8001008:	e000ed00 	.word	0xe000ed00

0800100c <__NVIC_GetPriorityGrouping>:
 800100c:	b480      	push	{r7}
 800100e:	af00      	add	r7, sp, #0
 8001010:	4b04      	ldr	r3, [pc, #16]	; (8001024 <__NVIC_GetPriorityGrouping+0x18>)
 8001012:	68db      	ldr	r3, [r3, #12]
 8001014:	0a1b      	lsrs	r3, r3, #8
 8001016:	f003 0307 	and.w	r3, r3, #7
 800101a:	4618      	mov	r0, r3
 800101c:	46bd      	mov	sp, r7
 800101e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001022:	4770      	bx	lr
 8001024:	e000ed00 	.word	0xe000ed00

08001028 <__NVIC_EnableIRQ>:
 8001028:	b480      	push	{r7}
 800102a:	b083      	sub	sp, #12
 800102c:	af00      	add	r7, sp, #0
 800102e:	4603      	mov	r3, r0
 8001030:	71fb      	strb	r3, [r7, #7]
 8001032:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001036:	2b00      	cmp	r3, #0
 8001038:	db0b      	blt.n	8001052 <__NVIC_EnableIRQ+0x2a>
 800103a:	79fb      	ldrb	r3, [r7, #7]
 800103c:	f003 021f 	and.w	r2, r3, #31
 8001040:	4907      	ldr	r1, [pc, #28]	; (8001060 <__NVIC_EnableIRQ+0x38>)
 8001042:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001046:	095b      	lsrs	r3, r3, #5
 8001048:	2001      	movs	r0, #1
 800104a:	fa00 f202 	lsl.w	r2, r0, r2
 800104e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001052:	bf00      	nop
 8001054:	370c      	adds	r7, #12
 8001056:	46bd      	mov	sp, r7
 8001058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105c:	4770      	bx	lr
 800105e:	bf00      	nop
 8001060:	e000e100 	.word	0xe000e100

08001064 <__NVIC_SetPriority>:
 8001064:	b480      	push	{r7}
 8001066:	b083      	sub	sp, #12
 8001068:	af00      	add	r7, sp, #0
 800106a:	4603      	mov	r3, r0
 800106c:	6039      	str	r1, [r7, #0]
 800106e:	71fb      	strb	r3, [r7, #7]
 8001070:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001074:	2b00      	cmp	r3, #0
 8001076:	db0a      	blt.n	800108e <__NVIC_SetPriority+0x2a>
 8001078:	683b      	ldr	r3, [r7, #0]
 800107a:	b2da      	uxtb	r2, r3
 800107c:	490c      	ldr	r1, [pc, #48]	; (80010b0 <__NVIC_SetPriority+0x4c>)
 800107e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001082:	0112      	lsls	r2, r2, #4
 8001084:	b2d2      	uxtb	r2, r2
 8001086:	440b      	add	r3, r1
 8001088:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800108c:	e00a      	b.n	80010a4 <__NVIC_SetPriority+0x40>
 800108e:	683b      	ldr	r3, [r7, #0]
 8001090:	b2da      	uxtb	r2, r3
 8001092:	4908      	ldr	r1, [pc, #32]	; (80010b4 <__NVIC_SetPriority+0x50>)
 8001094:	79fb      	ldrb	r3, [r7, #7]
 8001096:	f003 030f 	and.w	r3, r3, #15
 800109a:	3b04      	subs	r3, #4
 800109c:	0112      	lsls	r2, r2, #4
 800109e:	b2d2      	uxtb	r2, r2
 80010a0:	440b      	add	r3, r1
 80010a2:	761a      	strb	r2, [r3, #24]
 80010a4:	bf00      	nop
 80010a6:	370c      	adds	r7, #12
 80010a8:	46bd      	mov	sp, r7
 80010aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ae:	4770      	bx	lr
 80010b0:	e000e100 	.word	0xe000e100
 80010b4:	e000ed00 	.word	0xe000ed00

080010b8 <NVIC_EncodePriority>:
 80010b8:	b480      	push	{r7}
 80010ba:	b089      	sub	sp, #36	; 0x24
 80010bc:	af00      	add	r7, sp, #0
 80010be:	60f8      	str	r0, [r7, #12]
 80010c0:	60b9      	str	r1, [r7, #8]
 80010c2:	607a      	str	r2, [r7, #4]
 80010c4:	68fb      	ldr	r3, [r7, #12]
 80010c6:	f003 0307 	and.w	r3, r3, #7
 80010ca:	61fb      	str	r3, [r7, #28]
 80010cc:	69fb      	ldr	r3, [r7, #28]
 80010ce:	f1c3 0307 	rsb	r3, r3, #7
 80010d2:	2b04      	cmp	r3, #4
 80010d4:	bf28      	it	cs
 80010d6:	2304      	movcs	r3, #4
 80010d8:	61bb      	str	r3, [r7, #24]
 80010da:	69fb      	ldr	r3, [r7, #28]
 80010dc:	3304      	adds	r3, #4
 80010de:	2b06      	cmp	r3, #6
 80010e0:	d902      	bls.n	80010e8 <NVIC_EncodePriority+0x30>
 80010e2:	69fb      	ldr	r3, [r7, #28]
 80010e4:	3b03      	subs	r3, #3
 80010e6:	e000      	b.n	80010ea <NVIC_EncodePriority+0x32>
 80010e8:	2300      	movs	r3, #0
 80010ea:	617b      	str	r3, [r7, #20]
 80010ec:	f04f 32ff 	mov.w	r2, #4294967295
 80010f0:	69bb      	ldr	r3, [r7, #24]
 80010f2:	fa02 f303 	lsl.w	r3, r2, r3
 80010f6:	43da      	mvns	r2, r3
 80010f8:	68bb      	ldr	r3, [r7, #8]
 80010fa:	401a      	ands	r2, r3
 80010fc:	697b      	ldr	r3, [r7, #20]
 80010fe:	409a      	lsls	r2, r3
 8001100:	f04f 31ff 	mov.w	r1, #4294967295
 8001104:	697b      	ldr	r3, [r7, #20]
 8001106:	fa01 f303 	lsl.w	r3, r1, r3
 800110a:	43d9      	mvns	r1, r3
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	400b      	ands	r3, r1
 8001110:	4313      	orrs	r3, r2
 8001112:	4618      	mov	r0, r3
 8001114:	3724      	adds	r7, #36	; 0x24
 8001116:	46bd      	mov	sp, r7
 8001118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111c:	4770      	bx	lr

0800111e <HAL_NVIC_SetPriorityGrouping>:
 800111e:	b580      	push	{r7, lr}
 8001120:	b082      	sub	sp, #8
 8001122:	af00      	add	r7, sp, #0
 8001124:	6078      	str	r0, [r7, #4]
 8001126:	6878      	ldr	r0, [r7, #4]
 8001128:	f7ff ff4c 	bl	8000fc4 <__NVIC_SetPriorityGrouping>
 800112c:	bf00      	nop
 800112e:	3708      	adds	r7, #8
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}

08001134 <HAL_NVIC_SetPriority>:
 8001134:	b580      	push	{r7, lr}
 8001136:	b086      	sub	sp, #24
 8001138:	af00      	add	r7, sp, #0
 800113a:	4603      	mov	r3, r0
 800113c:	60b9      	str	r1, [r7, #8]
 800113e:	607a      	str	r2, [r7, #4]
 8001140:	73fb      	strb	r3, [r7, #15]
 8001142:	2300      	movs	r3, #0
 8001144:	617b      	str	r3, [r7, #20]
 8001146:	f7ff ff61 	bl	800100c <__NVIC_GetPriorityGrouping>
 800114a:	6178      	str	r0, [r7, #20]
 800114c:	687a      	ldr	r2, [r7, #4]
 800114e:	68b9      	ldr	r1, [r7, #8]
 8001150:	6978      	ldr	r0, [r7, #20]
 8001152:	f7ff ffb1 	bl	80010b8 <NVIC_EncodePriority>
 8001156:	4602      	mov	r2, r0
 8001158:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800115c:	4611      	mov	r1, r2
 800115e:	4618      	mov	r0, r3
 8001160:	f7ff ff80 	bl	8001064 <__NVIC_SetPriority>
 8001164:	bf00      	nop
 8001166:	3718      	adds	r7, #24
 8001168:	46bd      	mov	sp, r7
 800116a:	bd80      	pop	{r7, pc}

0800116c <HAL_NVIC_EnableIRQ>:
 800116c:	b580      	push	{r7, lr}
 800116e:	b082      	sub	sp, #8
 8001170:	af00      	add	r7, sp, #0
 8001172:	4603      	mov	r3, r0
 8001174:	71fb      	strb	r3, [r7, #7]
 8001176:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800117a:	4618      	mov	r0, r3
 800117c:	f7ff ff54 	bl	8001028 <__NVIC_EnableIRQ>
 8001180:	bf00      	nop
 8001182:	3708      	adds	r7, #8
 8001184:	46bd      	mov	sp, r7
 8001186:	bd80      	pop	{r7, pc}

08001188 <HAL_GPIO_Init>:
 8001188:	b480      	push	{r7}
 800118a:	b089      	sub	sp, #36	; 0x24
 800118c:	af00      	add	r7, sp, #0
 800118e:	6078      	str	r0, [r7, #4]
 8001190:	6039      	str	r1, [r7, #0]
 8001192:	2300      	movs	r3, #0
 8001194:	617b      	str	r3, [r7, #20]
 8001196:	2300      	movs	r3, #0
 8001198:	613b      	str	r3, [r7, #16]
 800119a:	2300      	movs	r3, #0
 800119c:	61bb      	str	r3, [r7, #24]
 800119e:	2300      	movs	r3, #0
 80011a0:	61fb      	str	r3, [r7, #28]
 80011a2:	e177      	b.n	8001494 <HAL_GPIO_Init+0x30c>
 80011a4:	2201      	movs	r2, #1
 80011a6:	69fb      	ldr	r3, [r7, #28]
 80011a8:	fa02 f303 	lsl.w	r3, r2, r3
 80011ac:	617b      	str	r3, [r7, #20]
 80011ae:	683b      	ldr	r3, [r7, #0]
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	697a      	ldr	r2, [r7, #20]
 80011b4:	4013      	ands	r3, r2
 80011b6:	613b      	str	r3, [r7, #16]
 80011b8:	693a      	ldr	r2, [r7, #16]
 80011ba:	697b      	ldr	r3, [r7, #20]
 80011bc:	429a      	cmp	r2, r3
 80011be:	f040 8166 	bne.w	800148e <HAL_GPIO_Init+0x306>
 80011c2:	683b      	ldr	r3, [r7, #0]
 80011c4:	685b      	ldr	r3, [r3, #4]
 80011c6:	f003 0303 	and.w	r3, r3, #3
 80011ca:	2b01      	cmp	r3, #1
 80011cc:	d005      	beq.n	80011da <HAL_GPIO_Init+0x52>
 80011ce:	683b      	ldr	r3, [r7, #0]
 80011d0:	685b      	ldr	r3, [r3, #4]
 80011d2:	f003 0303 	and.w	r3, r3, #3
 80011d6:	2b02      	cmp	r3, #2
 80011d8:	d130      	bne.n	800123c <HAL_GPIO_Init+0xb4>
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	689b      	ldr	r3, [r3, #8]
 80011de:	61bb      	str	r3, [r7, #24]
 80011e0:	69fb      	ldr	r3, [r7, #28]
 80011e2:	005b      	lsls	r3, r3, #1
 80011e4:	2203      	movs	r2, #3
 80011e6:	fa02 f303 	lsl.w	r3, r2, r3
 80011ea:	43db      	mvns	r3, r3
 80011ec:	69ba      	ldr	r2, [r7, #24]
 80011ee:	4013      	ands	r3, r2
 80011f0:	61bb      	str	r3, [r7, #24]
 80011f2:	683b      	ldr	r3, [r7, #0]
 80011f4:	68da      	ldr	r2, [r3, #12]
 80011f6:	69fb      	ldr	r3, [r7, #28]
 80011f8:	005b      	lsls	r3, r3, #1
 80011fa:	fa02 f303 	lsl.w	r3, r2, r3
 80011fe:	69ba      	ldr	r2, [r7, #24]
 8001200:	4313      	orrs	r3, r2
 8001202:	61bb      	str	r3, [r7, #24]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	69ba      	ldr	r2, [r7, #24]
 8001208:	609a      	str	r2, [r3, #8]
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	685b      	ldr	r3, [r3, #4]
 800120e:	61bb      	str	r3, [r7, #24]
 8001210:	2201      	movs	r2, #1
 8001212:	69fb      	ldr	r3, [r7, #28]
 8001214:	fa02 f303 	lsl.w	r3, r2, r3
 8001218:	43db      	mvns	r3, r3
 800121a:	69ba      	ldr	r2, [r7, #24]
 800121c:	4013      	ands	r3, r2
 800121e:	61bb      	str	r3, [r7, #24]
 8001220:	683b      	ldr	r3, [r7, #0]
 8001222:	685b      	ldr	r3, [r3, #4]
 8001224:	091b      	lsrs	r3, r3, #4
 8001226:	f003 0201 	and.w	r2, r3, #1
 800122a:	69fb      	ldr	r3, [r7, #28]
 800122c:	fa02 f303 	lsl.w	r3, r2, r3
 8001230:	69ba      	ldr	r2, [r7, #24]
 8001232:	4313      	orrs	r3, r2
 8001234:	61bb      	str	r3, [r7, #24]
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	69ba      	ldr	r2, [r7, #24]
 800123a:	605a      	str	r2, [r3, #4]
 800123c:	683b      	ldr	r3, [r7, #0]
 800123e:	685b      	ldr	r3, [r3, #4]
 8001240:	f003 0303 	and.w	r3, r3, #3
 8001244:	2b03      	cmp	r3, #3
 8001246:	d017      	beq.n	8001278 <HAL_GPIO_Init+0xf0>
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	68db      	ldr	r3, [r3, #12]
 800124c:	61bb      	str	r3, [r7, #24]
 800124e:	69fb      	ldr	r3, [r7, #28]
 8001250:	005b      	lsls	r3, r3, #1
 8001252:	2203      	movs	r2, #3
 8001254:	fa02 f303 	lsl.w	r3, r2, r3
 8001258:	43db      	mvns	r3, r3
 800125a:	69ba      	ldr	r2, [r7, #24]
 800125c:	4013      	ands	r3, r2
 800125e:	61bb      	str	r3, [r7, #24]
 8001260:	683b      	ldr	r3, [r7, #0]
 8001262:	689a      	ldr	r2, [r3, #8]
 8001264:	69fb      	ldr	r3, [r7, #28]
 8001266:	005b      	lsls	r3, r3, #1
 8001268:	fa02 f303 	lsl.w	r3, r2, r3
 800126c:	69ba      	ldr	r2, [r7, #24]
 800126e:	4313      	orrs	r3, r2
 8001270:	61bb      	str	r3, [r7, #24]
 8001272:	687b      	ldr	r3, [r7, #4]
 8001274:	69ba      	ldr	r2, [r7, #24]
 8001276:	60da      	str	r2, [r3, #12]
 8001278:	683b      	ldr	r3, [r7, #0]
 800127a:	685b      	ldr	r3, [r3, #4]
 800127c:	f003 0303 	and.w	r3, r3, #3
 8001280:	2b02      	cmp	r3, #2
 8001282:	d123      	bne.n	80012cc <HAL_GPIO_Init+0x144>
 8001284:	69fb      	ldr	r3, [r7, #28]
 8001286:	08da      	lsrs	r2, r3, #3
 8001288:	687b      	ldr	r3, [r7, #4]
 800128a:	3208      	adds	r2, #8
 800128c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001290:	61bb      	str	r3, [r7, #24]
 8001292:	69fb      	ldr	r3, [r7, #28]
 8001294:	f003 0307 	and.w	r3, r3, #7
 8001298:	009b      	lsls	r3, r3, #2
 800129a:	220f      	movs	r2, #15
 800129c:	fa02 f303 	lsl.w	r3, r2, r3
 80012a0:	43db      	mvns	r3, r3
 80012a2:	69ba      	ldr	r2, [r7, #24]
 80012a4:	4013      	ands	r3, r2
 80012a6:	61bb      	str	r3, [r7, #24]
 80012a8:	683b      	ldr	r3, [r7, #0]
 80012aa:	691a      	ldr	r2, [r3, #16]
 80012ac:	69fb      	ldr	r3, [r7, #28]
 80012ae:	f003 0307 	and.w	r3, r3, #7
 80012b2:	009b      	lsls	r3, r3, #2
 80012b4:	fa02 f303 	lsl.w	r3, r2, r3
 80012b8:	69ba      	ldr	r2, [r7, #24]
 80012ba:	4313      	orrs	r3, r2
 80012bc:	61bb      	str	r3, [r7, #24]
 80012be:	69fb      	ldr	r3, [r7, #28]
 80012c0:	08da      	lsrs	r2, r3, #3
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	3208      	adds	r2, #8
 80012c6:	69b9      	ldr	r1, [r7, #24]
 80012c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	61bb      	str	r3, [r7, #24]
 80012d2:	69fb      	ldr	r3, [r7, #28]
 80012d4:	005b      	lsls	r3, r3, #1
 80012d6:	2203      	movs	r2, #3
 80012d8:	fa02 f303 	lsl.w	r3, r2, r3
 80012dc:	43db      	mvns	r3, r3
 80012de:	69ba      	ldr	r2, [r7, #24]
 80012e0:	4013      	ands	r3, r2
 80012e2:	61bb      	str	r3, [r7, #24]
 80012e4:	683b      	ldr	r3, [r7, #0]
 80012e6:	685b      	ldr	r3, [r3, #4]
 80012e8:	f003 0203 	and.w	r2, r3, #3
 80012ec:	69fb      	ldr	r3, [r7, #28]
 80012ee:	005b      	lsls	r3, r3, #1
 80012f0:	fa02 f303 	lsl.w	r3, r2, r3
 80012f4:	69ba      	ldr	r2, [r7, #24]
 80012f6:	4313      	orrs	r3, r2
 80012f8:	61bb      	str	r3, [r7, #24]
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	69ba      	ldr	r2, [r7, #24]
 80012fe:	601a      	str	r2, [r3, #0]
 8001300:	683b      	ldr	r3, [r7, #0]
 8001302:	685b      	ldr	r3, [r3, #4]
 8001304:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001308:	2b00      	cmp	r3, #0
 800130a:	f000 80c0 	beq.w	800148e <HAL_GPIO_Init+0x306>
 800130e:	2300      	movs	r3, #0
 8001310:	60fb      	str	r3, [r7, #12]
 8001312:	4b66      	ldr	r3, [pc, #408]	; (80014ac <HAL_GPIO_Init+0x324>)
 8001314:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001316:	4a65      	ldr	r2, [pc, #404]	; (80014ac <HAL_GPIO_Init+0x324>)
 8001318:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800131c:	6453      	str	r3, [r2, #68]	; 0x44
 800131e:	4b63      	ldr	r3, [pc, #396]	; (80014ac <HAL_GPIO_Init+0x324>)
 8001320:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001322:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001326:	60fb      	str	r3, [r7, #12]
 8001328:	68fb      	ldr	r3, [r7, #12]
 800132a:	4a61      	ldr	r2, [pc, #388]	; (80014b0 <HAL_GPIO_Init+0x328>)
 800132c:	69fb      	ldr	r3, [r7, #28]
 800132e:	089b      	lsrs	r3, r3, #2
 8001330:	3302      	adds	r3, #2
 8001332:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001336:	61bb      	str	r3, [r7, #24]
 8001338:	69fb      	ldr	r3, [r7, #28]
 800133a:	f003 0303 	and.w	r3, r3, #3
 800133e:	009b      	lsls	r3, r3, #2
 8001340:	220f      	movs	r2, #15
 8001342:	fa02 f303 	lsl.w	r3, r2, r3
 8001346:	43db      	mvns	r3, r3
 8001348:	69ba      	ldr	r2, [r7, #24]
 800134a:	4013      	ands	r3, r2
 800134c:	61bb      	str	r3, [r7, #24]
 800134e:	687b      	ldr	r3, [r7, #4]
 8001350:	4a58      	ldr	r2, [pc, #352]	; (80014b4 <HAL_GPIO_Init+0x32c>)
 8001352:	4293      	cmp	r3, r2
 8001354:	d037      	beq.n	80013c6 <HAL_GPIO_Init+0x23e>
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	4a57      	ldr	r2, [pc, #348]	; (80014b8 <HAL_GPIO_Init+0x330>)
 800135a:	4293      	cmp	r3, r2
 800135c:	d031      	beq.n	80013c2 <HAL_GPIO_Init+0x23a>
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	4a56      	ldr	r2, [pc, #344]	; (80014bc <HAL_GPIO_Init+0x334>)
 8001362:	4293      	cmp	r3, r2
 8001364:	d02b      	beq.n	80013be <HAL_GPIO_Init+0x236>
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	4a55      	ldr	r2, [pc, #340]	; (80014c0 <HAL_GPIO_Init+0x338>)
 800136a:	4293      	cmp	r3, r2
 800136c:	d025      	beq.n	80013ba <HAL_GPIO_Init+0x232>
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	4a54      	ldr	r2, [pc, #336]	; (80014c4 <HAL_GPIO_Init+0x33c>)
 8001372:	4293      	cmp	r3, r2
 8001374:	d01f      	beq.n	80013b6 <HAL_GPIO_Init+0x22e>
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	4a53      	ldr	r2, [pc, #332]	; (80014c8 <HAL_GPIO_Init+0x340>)
 800137a:	4293      	cmp	r3, r2
 800137c:	d019      	beq.n	80013b2 <HAL_GPIO_Init+0x22a>
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	4a52      	ldr	r2, [pc, #328]	; (80014cc <HAL_GPIO_Init+0x344>)
 8001382:	4293      	cmp	r3, r2
 8001384:	d013      	beq.n	80013ae <HAL_GPIO_Init+0x226>
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	4a51      	ldr	r2, [pc, #324]	; (80014d0 <HAL_GPIO_Init+0x348>)
 800138a:	4293      	cmp	r3, r2
 800138c:	d00d      	beq.n	80013aa <HAL_GPIO_Init+0x222>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	4a50      	ldr	r2, [pc, #320]	; (80014d4 <HAL_GPIO_Init+0x34c>)
 8001392:	4293      	cmp	r3, r2
 8001394:	d007      	beq.n	80013a6 <HAL_GPIO_Init+0x21e>
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	4a4f      	ldr	r2, [pc, #316]	; (80014d8 <HAL_GPIO_Init+0x350>)
 800139a:	4293      	cmp	r3, r2
 800139c:	d101      	bne.n	80013a2 <HAL_GPIO_Init+0x21a>
 800139e:	2309      	movs	r3, #9
 80013a0:	e012      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013a2:	230a      	movs	r3, #10
 80013a4:	e010      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013a6:	2308      	movs	r3, #8
 80013a8:	e00e      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013aa:	2307      	movs	r3, #7
 80013ac:	e00c      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013ae:	2306      	movs	r3, #6
 80013b0:	e00a      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013b2:	2305      	movs	r3, #5
 80013b4:	e008      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013b6:	2304      	movs	r3, #4
 80013b8:	e006      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013ba:	2303      	movs	r3, #3
 80013bc:	e004      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013be:	2302      	movs	r3, #2
 80013c0:	e002      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013c2:	2301      	movs	r3, #1
 80013c4:	e000      	b.n	80013c8 <HAL_GPIO_Init+0x240>
 80013c6:	2300      	movs	r3, #0
 80013c8:	69fa      	ldr	r2, [r7, #28]
 80013ca:	f002 0203 	and.w	r2, r2, #3
 80013ce:	0092      	lsls	r2, r2, #2
 80013d0:	4093      	lsls	r3, r2
 80013d2:	69ba      	ldr	r2, [r7, #24]
 80013d4:	4313      	orrs	r3, r2
 80013d6:	61bb      	str	r3, [r7, #24]
 80013d8:	4935      	ldr	r1, [pc, #212]	; (80014b0 <HAL_GPIO_Init+0x328>)
 80013da:	69fb      	ldr	r3, [r7, #28]
 80013dc:	089b      	lsrs	r3, r3, #2
 80013de:	3302      	adds	r3, #2
 80013e0:	69ba      	ldr	r2, [r7, #24]
 80013e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80013e6:	4b3d      	ldr	r3, [pc, #244]	; (80014dc <HAL_GPIO_Init+0x354>)
 80013e8:	689b      	ldr	r3, [r3, #8]
 80013ea:	61bb      	str	r3, [r7, #24]
 80013ec:	693b      	ldr	r3, [r7, #16]
 80013ee:	43db      	mvns	r3, r3
 80013f0:	69ba      	ldr	r2, [r7, #24]
 80013f2:	4013      	ands	r3, r2
 80013f4:	61bb      	str	r3, [r7, #24]
 80013f6:	683b      	ldr	r3, [r7, #0]
 80013f8:	685b      	ldr	r3, [r3, #4]
 80013fa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d003      	beq.n	800140a <HAL_GPIO_Init+0x282>
 8001402:	69ba      	ldr	r2, [r7, #24]
 8001404:	693b      	ldr	r3, [r7, #16]
 8001406:	4313      	orrs	r3, r2
 8001408:	61bb      	str	r3, [r7, #24]
 800140a:	4a34      	ldr	r2, [pc, #208]	; (80014dc <HAL_GPIO_Init+0x354>)
 800140c:	69bb      	ldr	r3, [r7, #24]
 800140e:	6093      	str	r3, [r2, #8]
 8001410:	4b32      	ldr	r3, [pc, #200]	; (80014dc <HAL_GPIO_Init+0x354>)
 8001412:	68db      	ldr	r3, [r3, #12]
 8001414:	61bb      	str	r3, [r7, #24]
 8001416:	693b      	ldr	r3, [r7, #16]
 8001418:	43db      	mvns	r3, r3
 800141a:	69ba      	ldr	r2, [r7, #24]
 800141c:	4013      	ands	r3, r2
 800141e:	61bb      	str	r3, [r7, #24]
 8001420:	683b      	ldr	r3, [r7, #0]
 8001422:	685b      	ldr	r3, [r3, #4]
 8001424:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001428:	2b00      	cmp	r3, #0
 800142a:	d003      	beq.n	8001434 <HAL_GPIO_Init+0x2ac>
 800142c:	69ba      	ldr	r2, [r7, #24]
 800142e:	693b      	ldr	r3, [r7, #16]
 8001430:	4313      	orrs	r3, r2
 8001432:	61bb      	str	r3, [r7, #24]
 8001434:	4a29      	ldr	r2, [pc, #164]	; (80014dc <HAL_GPIO_Init+0x354>)
 8001436:	69bb      	ldr	r3, [r7, #24]
 8001438:	60d3      	str	r3, [r2, #12]
 800143a:	4b28      	ldr	r3, [pc, #160]	; (80014dc <HAL_GPIO_Init+0x354>)
 800143c:	685b      	ldr	r3, [r3, #4]
 800143e:	61bb      	str	r3, [r7, #24]
 8001440:	693b      	ldr	r3, [r7, #16]
 8001442:	43db      	mvns	r3, r3
 8001444:	69ba      	ldr	r2, [r7, #24]
 8001446:	4013      	ands	r3, r2
 8001448:	61bb      	str	r3, [r7, #24]
 800144a:	683b      	ldr	r3, [r7, #0]
 800144c:	685b      	ldr	r3, [r3, #4]
 800144e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001452:	2b00      	cmp	r3, #0
 8001454:	d003      	beq.n	800145e <HAL_GPIO_Init+0x2d6>
 8001456:	69ba      	ldr	r2, [r7, #24]
 8001458:	693b      	ldr	r3, [r7, #16]
 800145a:	4313      	orrs	r3, r2
 800145c:	61bb      	str	r3, [r7, #24]
 800145e:	4a1f      	ldr	r2, [pc, #124]	; (80014dc <HAL_GPIO_Init+0x354>)
 8001460:	69bb      	ldr	r3, [r7, #24]
 8001462:	6053      	str	r3, [r2, #4]
 8001464:	4b1d      	ldr	r3, [pc, #116]	; (80014dc <HAL_GPIO_Init+0x354>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	61bb      	str	r3, [r7, #24]
 800146a:	693b      	ldr	r3, [r7, #16]
 800146c:	43db      	mvns	r3, r3
 800146e:	69ba      	ldr	r2, [r7, #24]
 8001470:	4013      	ands	r3, r2
 8001472:	61bb      	str	r3, [r7, #24]
 8001474:	683b      	ldr	r3, [r7, #0]
 8001476:	685b      	ldr	r3, [r3, #4]
 8001478:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800147c:	2b00      	cmp	r3, #0
 800147e:	d003      	beq.n	8001488 <HAL_GPIO_Init+0x300>
 8001480:	69ba      	ldr	r2, [r7, #24]
 8001482:	693b      	ldr	r3, [r7, #16]
 8001484:	4313      	orrs	r3, r2
 8001486:	61bb      	str	r3, [r7, #24]
 8001488:	4a14      	ldr	r2, [pc, #80]	; (80014dc <HAL_GPIO_Init+0x354>)
 800148a:	69bb      	ldr	r3, [r7, #24]
 800148c:	6013      	str	r3, [r2, #0]
 800148e:	69fb      	ldr	r3, [r7, #28]
 8001490:	3301      	adds	r3, #1
 8001492:	61fb      	str	r3, [r7, #28]
 8001494:	69fb      	ldr	r3, [r7, #28]
 8001496:	2b0f      	cmp	r3, #15
 8001498:	f67f ae84 	bls.w	80011a4 <HAL_GPIO_Init+0x1c>
 800149c:	bf00      	nop
 800149e:	bf00      	nop
 80014a0:	3724      	adds	r7, #36	; 0x24
 80014a2:	46bd      	mov	sp, r7
 80014a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014a8:	4770      	bx	lr
 80014aa:	bf00      	nop
 80014ac:	40023800 	.word	0x40023800
 80014b0:	40013800 	.word	0x40013800
 80014b4:	40020000 	.word	0x40020000
 80014b8:	40020400 	.word	0x40020400
 80014bc:	40020800 	.word	0x40020800
 80014c0:	40020c00 	.word	0x40020c00
 80014c4:	40021000 	.word	0x40021000
 80014c8:	40021400 	.word	0x40021400
 80014cc:	40021800 	.word	0x40021800
 80014d0:	40021c00 	.word	0x40021c00
 80014d4:	40022000 	.word	0x40022000
 80014d8:	40022400 	.word	0x40022400
 80014dc:	40013c00 	.word	0x40013c00

080014e0 <HAL_GPIO_WritePin>:
 80014e0:	b480      	push	{r7}
 80014e2:	b083      	sub	sp, #12
 80014e4:	af00      	add	r7, sp, #0
 80014e6:	6078      	str	r0, [r7, #4]
 80014e8:	460b      	mov	r3, r1
 80014ea:	807b      	strh	r3, [r7, #2]
 80014ec:	4613      	mov	r3, r2
 80014ee:	707b      	strb	r3, [r7, #1]
 80014f0:	787b      	ldrb	r3, [r7, #1]
 80014f2:	2b00      	cmp	r3, #0
 80014f4:	d003      	beq.n	80014fe <HAL_GPIO_WritePin+0x1e>
 80014f6:	887a      	ldrh	r2, [r7, #2]
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	619a      	str	r2, [r3, #24]
 80014fc:	e003      	b.n	8001506 <HAL_GPIO_WritePin+0x26>
 80014fe:	887b      	ldrh	r3, [r7, #2]
 8001500:	041a      	lsls	r2, r3, #16
 8001502:	687b      	ldr	r3, [r7, #4]
 8001504:	619a      	str	r2, [r3, #24]
 8001506:	bf00      	nop
 8001508:	370c      	adds	r7, #12
 800150a:	46bd      	mov	sp, r7
 800150c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001510:	4770      	bx	lr

08001512 <HAL_GPIO_TogglePin>:
 8001512:	b480      	push	{r7}
 8001514:	b085      	sub	sp, #20
 8001516:	af00      	add	r7, sp, #0
 8001518:	6078      	str	r0, [r7, #4]
 800151a:	460b      	mov	r3, r1
 800151c:	807b      	strh	r3, [r7, #2]
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	695b      	ldr	r3, [r3, #20]
 8001522:	60fb      	str	r3, [r7, #12]
 8001524:	887a      	ldrh	r2, [r7, #2]
 8001526:	68fb      	ldr	r3, [r7, #12]
 8001528:	4013      	ands	r3, r2
 800152a:	041a      	lsls	r2, r3, #16
 800152c:	68fb      	ldr	r3, [r7, #12]
 800152e:	43d9      	mvns	r1, r3
 8001530:	887b      	ldrh	r3, [r7, #2]
 8001532:	400b      	ands	r3, r1
 8001534:	431a      	orrs	r2, r3
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	619a      	str	r2, [r3, #24]
 800153a:	bf00      	nop
 800153c:	3714      	adds	r7, #20
 800153e:	46bd      	mov	sp, r7
 8001540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001544:	4770      	bx	lr
	...

08001548 <HAL_PWREx_EnableOverDrive>:
 8001548:	b580      	push	{r7, lr}
 800154a:	b082      	sub	sp, #8
 800154c:	af00      	add	r7, sp, #0
 800154e:	2300      	movs	r3, #0
 8001550:	607b      	str	r3, [r7, #4]
 8001552:	2300      	movs	r3, #0
 8001554:	603b      	str	r3, [r7, #0]
 8001556:	4b20      	ldr	r3, [pc, #128]	; (80015d8 <HAL_PWREx_EnableOverDrive+0x90>)
 8001558:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800155a:	4a1f      	ldr	r2, [pc, #124]	; (80015d8 <HAL_PWREx_EnableOverDrive+0x90>)
 800155c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001560:	6413      	str	r3, [r2, #64]	; 0x40
 8001562:	4b1d      	ldr	r3, [pc, #116]	; (80015d8 <HAL_PWREx_EnableOverDrive+0x90>)
 8001564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001566:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800156a:	603b      	str	r3, [r7, #0]
 800156c:	683b      	ldr	r3, [r7, #0]
 800156e:	4b1b      	ldr	r3, [pc, #108]	; (80015dc <HAL_PWREx_EnableOverDrive+0x94>)
 8001570:	2201      	movs	r2, #1
 8001572:	601a      	str	r2, [r3, #0]
 8001574:	f7ff fd1a 	bl	8000fac <HAL_GetTick>
 8001578:	6078      	str	r0, [r7, #4]
 800157a:	e009      	b.n	8001590 <HAL_PWREx_EnableOverDrive+0x48>
 800157c:	f7ff fd16 	bl	8000fac <HAL_GetTick>
 8001580:	4602      	mov	r2, r0
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	1ad3      	subs	r3, r2, r3
 8001586:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800158a:	d901      	bls.n	8001590 <HAL_PWREx_EnableOverDrive+0x48>
 800158c:	2303      	movs	r3, #3
 800158e:	e01f      	b.n	80015d0 <HAL_PWREx_EnableOverDrive+0x88>
 8001590:	4b13      	ldr	r3, [pc, #76]	; (80015e0 <HAL_PWREx_EnableOverDrive+0x98>)
 8001592:	685b      	ldr	r3, [r3, #4]
 8001594:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001598:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800159c:	d1ee      	bne.n	800157c <HAL_PWREx_EnableOverDrive+0x34>
 800159e:	4b11      	ldr	r3, [pc, #68]	; (80015e4 <HAL_PWREx_EnableOverDrive+0x9c>)
 80015a0:	2201      	movs	r2, #1
 80015a2:	601a      	str	r2, [r3, #0]
 80015a4:	f7ff fd02 	bl	8000fac <HAL_GetTick>
 80015a8:	6078      	str	r0, [r7, #4]
 80015aa:	e009      	b.n	80015c0 <HAL_PWREx_EnableOverDrive+0x78>
 80015ac:	f7ff fcfe 	bl	8000fac <HAL_GetTick>
 80015b0:	4602      	mov	r2, r0
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	1ad3      	subs	r3, r2, r3
 80015b6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80015ba:	d901      	bls.n	80015c0 <HAL_PWREx_EnableOverDrive+0x78>
 80015bc:	2303      	movs	r3, #3
 80015be:	e007      	b.n	80015d0 <HAL_PWREx_EnableOverDrive+0x88>
 80015c0:	4b07      	ldr	r3, [pc, #28]	; (80015e0 <HAL_PWREx_EnableOverDrive+0x98>)
 80015c2:	685b      	ldr	r3, [r3, #4]
 80015c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80015c8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80015cc:	d1ee      	bne.n	80015ac <HAL_PWREx_EnableOverDrive+0x64>
 80015ce:	2300      	movs	r3, #0
 80015d0:	4618      	mov	r0, r3
 80015d2:	3708      	adds	r7, #8
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	40023800 	.word	0x40023800
 80015dc:	420e0040 	.word	0x420e0040
 80015e0:	40007000 	.word	0x40007000
 80015e4:	420e0044 	.word	0x420e0044

080015e8 <HAL_RCC_OscConfig>:
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b086      	sub	sp, #24
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d101      	bne.n	80015fa <HAL_RCC_OscConfig+0x12>
 80015f6:	2301      	movs	r3, #1
 80015f8:	e267      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	f003 0301 	and.w	r3, r3, #1
 8001602:	2b00      	cmp	r3, #0
 8001604:	d075      	beq.n	80016f2 <HAL_RCC_OscConfig+0x10a>
 8001606:	4b88      	ldr	r3, [pc, #544]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001608:	689b      	ldr	r3, [r3, #8]
 800160a:	f003 030c 	and.w	r3, r3, #12
 800160e:	2b04      	cmp	r3, #4
 8001610:	d00c      	beq.n	800162c <HAL_RCC_OscConfig+0x44>
 8001612:	4b85      	ldr	r3, [pc, #532]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001614:	689b      	ldr	r3, [r3, #8]
 8001616:	f003 030c 	and.w	r3, r3, #12
 800161a:	2b08      	cmp	r3, #8
 800161c:	d112      	bne.n	8001644 <HAL_RCC_OscConfig+0x5c>
 800161e:	4b82      	ldr	r3, [pc, #520]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001620:	685b      	ldr	r3, [r3, #4]
 8001622:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001626:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800162a:	d10b      	bne.n	8001644 <HAL_RCC_OscConfig+0x5c>
 800162c:	4b7e      	ldr	r3, [pc, #504]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001634:	2b00      	cmp	r3, #0
 8001636:	d05b      	beq.n	80016f0 <HAL_RCC_OscConfig+0x108>
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	685b      	ldr	r3, [r3, #4]
 800163c:	2b00      	cmp	r3, #0
 800163e:	d157      	bne.n	80016f0 <HAL_RCC_OscConfig+0x108>
 8001640:	2301      	movs	r3, #1
 8001642:	e242      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	685b      	ldr	r3, [r3, #4]
 8001648:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800164c:	d106      	bne.n	800165c <HAL_RCC_OscConfig+0x74>
 800164e:	4b76      	ldr	r3, [pc, #472]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	4a75      	ldr	r2, [pc, #468]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001654:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001658:	6013      	str	r3, [r2, #0]
 800165a:	e01d      	b.n	8001698 <HAL_RCC_OscConfig+0xb0>
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	685b      	ldr	r3, [r3, #4]
 8001660:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001664:	d10c      	bne.n	8001680 <HAL_RCC_OscConfig+0x98>
 8001666:	4b70      	ldr	r3, [pc, #448]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	4a6f      	ldr	r2, [pc, #444]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800166c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001670:	6013      	str	r3, [r2, #0]
 8001672:	4b6d      	ldr	r3, [pc, #436]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	4a6c      	ldr	r2, [pc, #432]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001678:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800167c:	6013      	str	r3, [r2, #0]
 800167e:	e00b      	b.n	8001698 <HAL_RCC_OscConfig+0xb0>
 8001680:	4b69      	ldr	r3, [pc, #420]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001682:	681b      	ldr	r3, [r3, #0]
 8001684:	4a68      	ldr	r2, [pc, #416]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001686:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800168a:	6013      	str	r3, [r2, #0]
 800168c:	4b66      	ldr	r3, [pc, #408]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	4a65      	ldr	r2, [pc, #404]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001692:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001696:	6013      	str	r3, [r2, #0]
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	685b      	ldr	r3, [r3, #4]
 800169c:	2b00      	cmp	r3, #0
 800169e:	d013      	beq.n	80016c8 <HAL_RCC_OscConfig+0xe0>
 80016a0:	f7ff fc84 	bl	8000fac <HAL_GetTick>
 80016a4:	6138      	str	r0, [r7, #16]
 80016a6:	e008      	b.n	80016ba <HAL_RCC_OscConfig+0xd2>
 80016a8:	f7ff fc80 	bl	8000fac <HAL_GetTick>
 80016ac:	4602      	mov	r2, r0
 80016ae:	693b      	ldr	r3, [r7, #16]
 80016b0:	1ad3      	subs	r3, r2, r3
 80016b2:	2b64      	cmp	r3, #100	; 0x64
 80016b4:	d901      	bls.n	80016ba <HAL_RCC_OscConfig+0xd2>
 80016b6:	2303      	movs	r3, #3
 80016b8:	e207      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80016ba:	4b5b      	ldr	r3, [pc, #364]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d0f0      	beq.n	80016a8 <HAL_RCC_OscConfig+0xc0>
 80016c6:	e014      	b.n	80016f2 <HAL_RCC_OscConfig+0x10a>
 80016c8:	f7ff fc70 	bl	8000fac <HAL_GetTick>
 80016cc:	6138      	str	r0, [r7, #16]
 80016ce:	e008      	b.n	80016e2 <HAL_RCC_OscConfig+0xfa>
 80016d0:	f7ff fc6c 	bl	8000fac <HAL_GetTick>
 80016d4:	4602      	mov	r2, r0
 80016d6:	693b      	ldr	r3, [r7, #16]
 80016d8:	1ad3      	subs	r3, r2, r3
 80016da:	2b64      	cmp	r3, #100	; 0x64
 80016dc:	d901      	bls.n	80016e2 <HAL_RCC_OscConfig+0xfa>
 80016de:	2303      	movs	r3, #3
 80016e0:	e1f3      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80016e2:	4b51      	ldr	r3, [pc, #324]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d1f0      	bne.n	80016d0 <HAL_RCC_OscConfig+0xe8>
 80016ee:	e000      	b.n	80016f2 <HAL_RCC_OscConfig+0x10a>
 80016f0:	bf00      	nop
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	f003 0302 	and.w	r3, r3, #2
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d063      	beq.n	80017c6 <HAL_RCC_OscConfig+0x1de>
 80016fe:	4b4a      	ldr	r3, [pc, #296]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001700:	689b      	ldr	r3, [r3, #8]
 8001702:	f003 030c 	and.w	r3, r3, #12
 8001706:	2b00      	cmp	r3, #0
 8001708:	d00b      	beq.n	8001722 <HAL_RCC_OscConfig+0x13a>
 800170a:	4b47      	ldr	r3, [pc, #284]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800170c:	689b      	ldr	r3, [r3, #8]
 800170e:	f003 030c 	and.w	r3, r3, #12
 8001712:	2b08      	cmp	r3, #8
 8001714:	d11c      	bne.n	8001750 <HAL_RCC_OscConfig+0x168>
 8001716:	4b44      	ldr	r3, [pc, #272]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001718:	685b      	ldr	r3, [r3, #4]
 800171a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800171e:	2b00      	cmp	r3, #0
 8001720:	d116      	bne.n	8001750 <HAL_RCC_OscConfig+0x168>
 8001722:	4b41      	ldr	r3, [pc, #260]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	f003 0302 	and.w	r3, r3, #2
 800172a:	2b00      	cmp	r3, #0
 800172c:	d005      	beq.n	800173a <HAL_RCC_OscConfig+0x152>
 800172e:	687b      	ldr	r3, [r7, #4]
 8001730:	68db      	ldr	r3, [r3, #12]
 8001732:	2b01      	cmp	r3, #1
 8001734:	d001      	beq.n	800173a <HAL_RCC_OscConfig+0x152>
 8001736:	2301      	movs	r3, #1
 8001738:	e1c7      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 800173a:	4b3b      	ldr	r3, [pc, #236]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	691b      	ldr	r3, [r3, #16]
 8001746:	00db      	lsls	r3, r3, #3
 8001748:	4937      	ldr	r1, [pc, #220]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800174a:	4313      	orrs	r3, r2
 800174c:	600b      	str	r3, [r1, #0]
 800174e:	e03a      	b.n	80017c6 <HAL_RCC_OscConfig+0x1de>
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	68db      	ldr	r3, [r3, #12]
 8001754:	2b00      	cmp	r3, #0
 8001756:	d020      	beq.n	800179a <HAL_RCC_OscConfig+0x1b2>
 8001758:	4b34      	ldr	r3, [pc, #208]	; (800182c <HAL_RCC_OscConfig+0x244>)
 800175a:	2201      	movs	r2, #1
 800175c:	601a      	str	r2, [r3, #0]
 800175e:	f7ff fc25 	bl	8000fac <HAL_GetTick>
 8001762:	6138      	str	r0, [r7, #16]
 8001764:	e008      	b.n	8001778 <HAL_RCC_OscConfig+0x190>
 8001766:	f7ff fc21 	bl	8000fac <HAL_GetTick>
 800176a:	4602      	mov	r2, r0
 800176c:	693b      	ldr	r3, [r7, #16]
 800176e:	1ad3      	subs	r3, r2, r3
 8001770:	2b02      	cmp	r3, #2
 8001772:	d901      	bls.n	8001778 <HAL_RCC_OscConfig+0x190>
 8001774:	2303      	movs	r3, #3
 8001776:	e1a8      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001778:	4b2b      	ldr	r3, [pc, #172]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 800177a:	681b      	ldr	r3, [r3, #0]
 800177c:	f003 0302 	and.w	r3, r3, #2
 8001780:	2b00      	cmp	r3, #0
 8001782:	d0f0      	beq.n	8001766 <HAL_RCC_OscConfig+0x17e>
 8001784:	4b28      	ldr	r3, [pc, #160]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	691b      	ldr	r3, [r3, #16]
 8001790:	00db      	lsls	r3, r3, #3
 8001792:	4925      	ldr	r1, [pc, #148]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 8001794:	4313      	orrs	r3, r2
 8001796:	600b      	str	r3, [r1, #0]
 8001798:	e015      	b.n	80017c6 <HAL_RCC_OscConfig+0x1de>
 800179a:	4b24      	ldr	r3, [pc, #144]	; (800182c <HAL_RCC_OscConfig+0x244>)
 800179c:	2200      	movs	r2, #0
 800179e:	601a      	str	r2, [r3, #0]
 80017a0:	f7ff fc04 	bl	8000fac <HAL_GetTick>
 80017a4:	6138      	str	r0, [r7, #16]
 80017a6:	e008      	b.n	80017ba <HAL_RCC_OscConfig+0x1d2>
 80017a8:	f7ff fc00 	bl	8000fac <HAL_GetTick>
 80017ac:	4602      	mov	r2, r0
 80017ae:	693b      	ldr	r3, [r7, #16]
 80017b0:	1ad3      	subs	r3, r2, r3
 80017b2:	2b02      	cmp	r3, #2
 80017b4:	d901      	bls.n	80017ba <HAL_RCC_OscConfig+0x1d2>
 80017b6:	2303      	movs	r3, #3
 80017b8:	e187      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80017ba:	4b1b      	ldr	r3, [pc, #108]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f003 0302 	and.w	r3, r3, #2
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d1f0      	bne.n	80017a8 <HAL_RCC_OscConfig+0x1c0>
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	681b      	ldr	r3, [r3, #0]
 80017ca:	f003 0308 	and.w	r3, r3, #8
 80017ce:	2b00      	cmp	r3, #0
 80017d0:	d036      	beq.n	8001840 <HAL_RCC_OscConfig+0x258>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	695b      	ldr	r3, [r3, #20]
 80017d6:	2b00      	cmp	r3, #0
 80017d8:	d016      	beq.n	8001808 <HAL_RCC_OscConfig+0x220>
 80017da:	4b15      	ldr	r3, [pc, #84]	; (8001830 <HAL_RCC_OscConfig+0x248>)
 80017dc:	2201      	movs	r2, #1
 80017de:	601a      	str	r2, [r3, #0]
 80017e0:	f7ff fbe4 	bl	8000fac <HAL_GetTick>
 80017e4:	6138      	str	r0, [r7, #16]
 80017e6:	e008      	b.n	80017fa <HAL_RCC_OscConfig+0x212>
 80017e8:	f7ff fbe0 	bl	8000fac <HAL_GetTick>
 80017ec:	4602      	mov	r2, r0
 80017ee:	693b      	ldr	r3, [r7, #16]
 80017f0:	1ad3      	subs	r3, r2, r3
 80017f2:	2b02      	cmp	r3, #2
 80017f4:	d901      	bls.n	80017fa <HAL_RCC_OscConfig+0x212>
 80017f6:	2303      	movs	r3, #3
 80017f8:	e167      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80017fa:	4b0b      	ldr	r3, [pc, #44]	; (8001828 <HAL_RCC_OscConfig+0x240>)
 80017fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80017fe:	f003 0302 	and.w	r3, r3, #2
 8001802:	2b00      	cmp	r3, #0
 8001804:	d0f0      	beq.n	80017e8 <HAL_RCC_OscConfig+0x200>
 8001806:	e01b      	b.n	8001840 <HAL_RCC_OscConfig+0x258>
 8001808:	4b09      	ldr	r3, [pc, #36]	; (8001830 <HAL_RCC_OscConfig+0x248>)
 800180a:	2200      	movs	r2, #0
 800180c:	601a      	str	r2, [r3, #0]
 800180e:	f7ff fbcd 	bl	8000fac <HAL_GetTick>
 8001812:	6138      	str	r0, [r7, #16]
 8001814:	e00e      	b.n	8001834 <HAL_RCC_OscConfig+0x24c>
 8001816:	f7ff fbc9 	bl	8000fac <HAL_GetTick>
 800181a:	4602      	mov	r2, r0
 800181c:	693b      	ldr	r3, [r7, #16]
 800181e:	1ad3      	subs	r3, r2, r3
 8001820:	2b02      	cmp	r3, #2
 8001822:	d907      	bls.n	8001834 <HAL_RCC_OscConfig+0x24c>
 8001824:	2303      	movs	r3, #3
 8001826:	e150      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001828:	40023800 	.word	0x40023800
 800182c:	42470000 	.word	0x42470000
 8001830:	42470e80 	.word	0x42470e80
 8001834:	4b88      	ldr	r3, [pc, #544]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001836:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8001838:	f003 0302 	and.w	r3, r3, #2
 800183c:	2b00      	cmp	r3, #0
 800183e:	d1ea      	bne.n	8001816 <HAL_RCC_OscConfig+0x22e>
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	f003 0304 	and.w	r3, r3, #4
 8001848:	2b00      	cmp	r3, #0
 800184a:	f000 8097 	beq.w	800197c <HAL_RCC_OscConfig+0x394>
 800184e:	2300      	movs	r3, #0
 8001850:	75fb      	strb	r3, [r7, #23]
 8001852:	4b81      	ldr	r3, [pc, #516]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001856:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800185a:	2b00      	cmp	r3, #0
 800185c:	d10f      	bne.n	800187e <HAL_RCC_OscConfig+0x296>
 800185e:	2300      	movs	r3, #0
 8001860:	60bb      	str	r3, [r7, #8]
 8001862:	4b7d      	ldr	r3, [pc, #500]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001864:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001866:	4a7c      	ldr	r2, [pc, #496]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001868:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800186c:	6413      	str	r3, [r2, #64]	; 0x40
 800186e:	4b7a      	ldr	r3, [pc, #488]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001870:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001872:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001876:	60bb      	str	r3, [r7, #8]
 8001878:	68bb      	ldr	r3, [r7, #8]
 800187a:	2301      	movs	r3, #1
 800187c:	75fb      	strb	r3, [r7, #23]
 800187e:	4b77      	ldr	r3, [pc, #476]	; (8001a5c <HAL_RCC_OscConfig+0x474>)
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001886:	2b00      	cmp	r3, #0
 8001888:	d118      	bne.n	80018bc <HAL_RCC_OscConfig+0x2d4>
 800188a:	4b74      	ldr	r3, [pc, #464]	; (8001a5c <HAL_RCC_OscConfig+0x474>)
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	4a73      	ldr	r2, [pc, #460]	; (8001a5c <HAL_RCC_OscConfig+0x474>)
 8001890:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001894:	6013      	str	r3, [r2, #0]
 8001896:	f7ff fb89 	bl	8000fac <HAL_GetTick>
 800189a:	6138      	str	r0, [r7, #16]
 800189c:	e008      	b.n	80018b0 <HAL_RCC_OscConfig+0x2c8>
 800189e:	f7ff fb85 	bl	8000fac <HAL_GetTick>
 80018a2:	4602      	mov	r2, r0
 80018a4:	693b      	ldr	r3, [r7, #16]
 80018a6:	1ad3      	subs	r3, r2, r3
 80018a8:	2b02      	cmp	r3, #2
 80018aa:	d901      	bls.n	80018b0 <HAL_RCC_OscConfig+0x2c8>
 80018ac:	2303      	movs	r3, #3
 80018ae:	e10c      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80018b0:	4b6a      	ldr	r3, [pc, #424]	; (8001a5c <HAL_RCC_OscConfig+0x474>)
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d0f0      	beq.n	800189e <HAL_RCC_OscConfig+0x2b6>
 80018bc:	687b      	ldr	r3, [r7, #4]
 80018be:	689b      	ldr	r3, [r3, #8]
 80018c0:	2b01      	cmp	r3, #1
 80018c2:	d106      	bne.n	80018d2 <HAL_RCC_OscConfig+0x2ea>
 80018c4:	4b64      	ldr	r3, [pc, #400]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018c8:	4a63      	ldr	r2, [pc, #396]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018ca:	f043 0301 	orr.w	r3, r3, #1
 80018ce:	6713      	str	r3, [r2, #112]	; 0x70
 80018d0:	e01c      	b.n	800190c <HAL_RCC_OscConfig+0x324>
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	689b      	ldr	r3, [r3, #8]
 80018d6:	2b05      	cmp	r3, #5
 80018d8:	d10c      	bne.n	80018f4 <HAL_RCC_OscConfig+0x30c>
 80018da:	4b5f      	ldr	r3, [pc, #380]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018de:	4a5e      	ldr	r2, [pc, #376]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018e0:	f043 0304 	orr.w	r3, r3, #4
 80018e4:	6713      	str	r3, [r2, #112]	; 0x70
 80018e6:	4b5c      	ldr	r3, [pc, #368]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018ea:	4a5b      	ldr	r2, [pc, #364]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018ec:	f043 0301 	orr.w	r3, r3, #1
 80018f0:	6713      	str	r3, [r2, #112]	; 0x70
 80018f2:	e00b      	b.n	800190c <HAL_RCC_OscConfig+0x324>
 80018f4:	4b58      	ldr	r3, [pc, #352]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018f8:	4a57      	ldr	r2, [pc, #348]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80018fa:	f023 0301 	bic.w	r3, r3, #1
 80018fe:	6713      	str	r3, [r2, #112]	; 0x70
 8001900:	4b55      	ldr	r3, [pc, #340]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001902:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001904:	4a54      	ldr	r2, [pc, #336]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001906:	f023 0304 	bic.w	r3, r3, #4
 800190a:	6713      	str	r3, [r2, #112]	; 0x70
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	689b      	ldr	r3, [r3, #8]
 8001910:	2b00      	cmp	r3, #0
 8001912:	d015      	beq.n	8001940 <HAL_RCC_OscConfig+0x358>
 8001914:	f7ff fb4a 	bl	8000fac <HAL_GetTick>
 8001918:	6138      	str	r0, [r7, #16]
 800191a:	e00a      	b.n	8001932 <HAL_RCC_OscConfig+0x34a>
 800191c:	f7ff fb46 	bl	8000fac <HAL_GetTick>
 8001920:	4602      	mov	r2, r0
 8001922:	693b      	ldr	r3, [r7, #16]
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	f241 3288 	movw	r2, #5000	; 0x1388
 800192a:	4293      	cmp	r3, r2
 800192c:	d901      	bls.n	8001932 <HAL_RCC_OscConfig+0x34a>
 800192e:	2303      	movs	r3, #3
 8001930:	e0cb      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001932:	4b49      	ldr	r3, [pc, #292]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001934:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001936:	f003 0302 	and.w	r3, r3, #2
 800193a:	2b00      	cmp	r3, #0
 800193c:	d0ee      	beq.n	800191c <HAL_RCC_OscConfig+0x334>
 800193e:	e014      	b.n	800196a <HAL_RCC_OscConfig+0x382>
 8001940:	f7ff fb34 	bl	8000fac <HAL_GetTick>
 8001944:	6138      	str	r0, [r7, #16]
 8001946:	e00a      	b.n	800195e <HAL_RCC_OscConfig+0x376>
 8001948:	f7ff fb30 	bl	8000fac <HAL_GetTick>
 800194c:	4602      	mov	r2, r0
 800194e:	693b      	ldr	r3, [r7, #16]
 8001950:	1ad3      	subs	r3, r2, r3
 8001952:	f241 3288 	movw	r2, #5000	; 0x1388
 8001956:	4293      	cmp	r3, r2
 8001958:	d901      	bls.n	800195e <HAL_RCC_OscConfig+0x376>
 800195a:	2303      	movs	r3, #3
 800195c:	e0b5      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 800195e:	4b3e      	ldr	r3, [pc, #248]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001960:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001962:	f003 0302 	and.w	r3, r3, #2
 8001966:	2b00      	cmp	r3, #0
 8001968:	d1ee      	bne.n	8001948 <HAL_RCC_OscConfig+0x360>
 800196a:	7dfb      	ldrb	r3, [r7, #23]
 800196c:	2b01      	cmp	r3, #1
 800196e:	d105      	bne.n	800197c <HAL_RCC_OscConfig+0x394>
 8001970:	4b39      	ldr	r3, [pc, #228]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001974:	4a38      	ldr	r2, [pc, #224]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001976:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800197a:	6413      	str	r3, [r2, #64]	; 0x40
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	699b      	ldr	r3, [r3, #24]
 8001980:	2b00      	cmp	r3, #0
 8001982:	f000 80a1 	beq.w	8001ac8 <HAL_RCC_OscConfig+0x4e0>
 8001986:	4b34      	ldr	r3, [pc, #208]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001988:	689b      	ldr	r3, [r3, #8]
 800198a:	f003 030c 	and.w	r3, r3, #12
 800198e:	2b08      	cmp	r3, #8
 8001990:	d05c      	beq.n	8001a4c <HAL_RCC_OscConfig+0x464>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	699b      	ldr	r3, [r3, #24]
 8001996:	2b02      	cmp	r3, #2
 8001998:	d141      	bne.n	8001a1e <HAL_RCC_OscConfig+0x436>
 800199a:	4b31      	ldr	r3, [pc, #196]	; (8001a60 <HAL_RCC_OscConfig+0x478>)
 800199c:	2200      	movs	r2, #0
 800199e:	601a      	str	r2, [r3, #0]
 80019a0:	f7ff fb04 	bl	8000fac <HAL_GetTick>
 80019a4:	6138      	str	r0, [r7, #16]
 80019a6:	e008      	b.n	80019ba <HAL_RCC_OscConfig+0x3d2>
 80019a8:	f7ff fb00 	bl	8000fac <HAL_GetTick>
 80019ac:	4602      	mov	r2, r0
 80019ae:	693b      	ldr	r3, [r7, #16]
 80019b0:	1ad3      	subs	r3, r2, r3
 80019b2:	2b02      	cmp	r3, #2
 80019b4:	d901      	bls.n	80019ba <HAL_RCC_OscConfig+0x3d2>
 80019b6:	2303      	movs	r3, #3
 80019b8:	e087      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 80019ba:	4b27      	ldr	r3, [pc, #156]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d1f0      	bne.n	80019a8 <HAL_RCC_OscConfig+0x3c0>
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	69da      	ldr	r2, [r3, #28]
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	6a1b      	ldr	r3, [r3, #32]
 80019ce:	431a      	orrs	r2, r3
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019d4:	019b      	lsls	r3, r3, #6
 80019d6:	431a      	orrs	r2, r3
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80019dc:	085b      	lsrs	r3, r3, #1
 80019de:	3b01      	subs	r3, #1
 80019e0:	041b      	lsls	r3, r3, #16
 80019e2:	431a      	orrs	r2, r3
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80019e8:	061b      	lsls	r3, r3, #24
 80019ea:	491b      	ldr	r1, [pc, #108]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 80019ec:	4313      	orrs	r3, r2
 80019ee:	604b      	str	r3, [r1, #4]
 80019f0:	4b1b      	ldr	r3, [pc, #108]	; (8001a60 <HAL_RCC_OscConfig+0x478>)
 80019f2:	2201      	movs	r2, #1
 80019f4:	601a      	str	r2, [r3, #0]
 80019f6:	f7ff fad9 	bl	8000fac <HAL_GetTick>
 80019fa:	6138      	str	r0, [r7, #16]
 80019fc:	e008      	b.n	8001a10 <HAL_RCC_OscConfig+0x428>
 80019fe:	f7ff fad5 	bl	8000fac <HAL_GetTick>
 8001a02:	4602      	mov	r2, r0
 8001a04:	693b      	ldr	r3, [r7, #16]
 8001a06:	1ad3      	subs	r3, r2, r3
 8001a08:	2b02      	cmp	r3, #2
 8001a0a:	d901      	bls.n	8001a10 <HAL_RCC_OscConfig+0x428>
 8001a0c:	2303      	movs	r3, #3
 8001a0e:	e05c      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001a10:	4b11      	ldr	r3, [pc, #68]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	d0f0      	beq.n	80019fe <HAL_RCC_OscConfig+0x416>
 8001a1c:	e054      	b.n	8001ac8 <HAL_RCC_OscConfig+0x4e0>
 8001a1e:	4b10      	ldr	r3, [pc, #64]	; (8001a60 <HAL_RCC_OscConfig+0x478>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	601a      	str	r2, [r3, #0]
 8001a24:	f7ff fac2 	bl	8000fac <HAL_GetTick>
 8001a28:	6138      	str	r0, [r7, #16]
 8001a2a:	e008      	b.n	8001a3e <HAL_RCC_OscConfig+0x456>
 8001a2c:	f7ff fabe 	bl	8000fac <HAL_GetTick>
 8001a30:	4602      	mov	r2, r0
 8001a32:	693b      	ldr	r3, [r7, #16]
 8001a34:	1ad3      	subs	r3, r2, r3
 8001a36:	2b02      	cmp	r3, #2
 8001a38:	d901      	bls.n	8001a3e <HAL_RCC_OscConfig+0x456>
 8001a3a:	2303      	movs	r3, #3
 8001a3c:	e045      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001a3e:	4b06      	ldr	r3, [pc, #24]	; (8001a58 <HAL_RCC_OscConfig+0x470>)
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d1f0      	bne.n	8001a2c <HAL_RCC_OscConfig+0x444>
 8001a4a:	e03d      	b.n	8001ac8 <HAL_RCC_OscConfig+0x4e0>
 8001a4c:	687b      	ldr	r3, [r7, #4]
 8001a4e:	699b      	ldr	r3, [r3, #24]
 8001a50:	2b01      	cmp	r3, #1
 8001a52:	d107      	bne.n	8001a64 <HAL_RCC_OscConfig+0x47c>
 8001a54:	2301      	movs	r3, #1
 8001a56:	e038      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001a58:	40023800 	.word	0x40023800
 8001a5c:	40007000 	.word	0x40007000
 8001a60:	42470060 	.word	0x42470060
 8001a64:	4b1b      	ldr	r3, [pc, #108]	; (8001ad4 <HAL_RCC_OscConfig+0x4ec>)
 8001a66:	685b      	ldr	r3, [r3, #4]
 8001a68:	60fb      	str	r3, [r7, #12]
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	699b      	ldr	r3, [r3, #24]
 8001a6e:	2b01      	cmp	r3, #1
 8001a70:	d028      	beq.n	8001ac4 <HAL_RCC_OscConfig+0x4dc>
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	69db      	ldr	r3, [r3, #28]
 8001a7c:	429a      	cmp	r2, r3
 8001a7e:	d121      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x4dc>
 8001a80:	68fb      	ldr	r3, [r7, #12]
 8001a82:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	6a1b      	ldr	r3, [r3, #32]
 8001a8a:	429a      	cmp	r2, r3
 8001a8c:	d11a      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x4dc>
 8001a8e:	68fa      	ldr	r2, [r7, #12]
 8001a90:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8001a94:	4013      	ands	r3, r2
 8001a96:	687a      	ldr	r2, [r7, #4]
 8001a98:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001a9a:	0192      	lsls	r2, r2, #6
 8001a9c:	4293      	cmp	r3, r2
 8001a9e:	d111      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x4dc>
 8001aa0:	68fb      	ldr	r3, [r7, #12]
 8001aa2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001aaa:	085b      	lsrs	r3, r3, #1
 8001aac:	3b01      	subs	r3, #1
 8001aae:	041b      	lsls	r3, r3, #16
 8001ab0:	429a      	cmp	r2, r3
 8001ab2:	d107      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x4dc>
 8001ab4:	68fb      	ldr	r3, [r7, #12]
 8001ab6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8001aba:	687b      	ldr	r3, [r7, #4]
 8001abc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001abe:	061b      	lsls	r3, r3, #24
 8001ac0:	429a      	cmp	r2, r3
 8001ac2:	d001      	beq.n	8001ac8 <HAL_RCC_OscConfig+0x4e0>
 8001ac4:	2301      	movs	r3, #1
 8001ac6:	e000      	b.n	8001aca <HAL_RCC_OscConfig+0x4e2>
 8001ac8:	2300      	movs	r3, #0
 8001aca:	4618      	mov	r0, r3
 8001acc:	3718      	adds	r7, #24
 8001ace:	46bd      	mov	sp, r7
 8001ad0:	bd80      	pop	{r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40023800 	.word	0x40023800

08001ad8 <HAL_RCC_ClockConfig>:
 8001ad8:	b580      	push	{r7, lr}
 8001ada:	b084      	sub	sp, #16
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	6078      	str	r0, [r7, #4]
 8001ae0:	6039      	str	r1, [r7, #0]
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d101      	bne.n	8001aec <HAL_RCC_ClockConfig+0x14>
 8001ae8:	2301      	movs	r3, #1
 8001aea:	e0cc      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001aec:	4b68      	ldr	r3, [pc, #416]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	f003 030f 	and.w	r3, r3, #15
 8001af4:	683a      	ldr	r2, [r7, #0]
 8001af6:	429a      	cmp	r2, r3
 8001af8:	d90c      	bls.n	8001b14 <HAL_RCC_ClockConfig+0x3c>
 8001afa:	4b65      	ldr	r3, [pc, #404]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001afc:	683a      	ldr	r2, [r7, #0]
 8001afe:	b2d2      	uxtb	r2, r2
 8001b00:	701a      	strb	r2, [r3, #0]
 8001b02:	4b63      	ldr	r3, [pc, #396]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	f003 030f 	and.w	r3, r3, #15
 8001b0a:	683a      	ldr	r2, [r7, #0]
 8001b0c:	429a      	cmp	r2, r3
 8001b0e:	d001      	beq.n	8001b14 <HAL_RCC_ClockConfig+0x3c>
 8001b10:	2301      	movs	r3, #1
 8001b12:	e0b8      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	f003 0302 	and.w	r3, r3, #2
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	d020      	beq.n	8001b62 <HAL_RCC_ClockConfig+0x8a>
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	681b      	ldr	r3, [r3, #0]
 8001b24:	f003 0304 	and.w	r3, r3, #4
 8001b28:	2b00      	cmp	r3, #0
 8001b2a:	d005      	beq.n	8001b38 <HAL_RCC_ClockConfig+0x60>
 8001b2c:	4b59      	ldr	r3, [pc, #356]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b2e:	689b      	ldr	r3, [r3, #8]
 8001b30:	4a58      	ldr	r2, [pc, #352]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b32:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001b36:	6093      	str	r3, [r2, #8]
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	681b      	ldr	r3, [r3, #0]
 8001b3c:	f003 0308 	and.w	r3, r3, #8
 8001b40:	2b00      	cmp	r3, #0
 8001b42:	d005      	beq.n	8001b50 <HAL_RCC_ClockConfig+0x78>
 8001b44:	4b53      	ldr	r3, [pc, #332]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b46:	689b      	ldr	r3, [r3, #8]
 8001b48:	4a52      	ldr	r2, [pc, #328]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b4a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001b4e:	6093      	str	r3, [r2, #8]
 8001b50:	4b50      	ldr	r3, [pc, #320]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b52:	689b      	ldr	r3, [r3, #8]
 8001b54:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	689b      	ldr	r3, [r3, #8]
 8001b5c:	494d      	ldr	r1, [pc, #308]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b5e:	4313      	orrs	r3, r2
 8001b60:	608b      	str	r3, [r1, #8]
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	681b      	ldr	r3, [r3, #0]
 8001b66:	f003 0301 	and.w	r3, r3, #1
 8001b6a:	2b00      	cmp	r3, #0
 8001b6c:	d044      	beq.n	8001bf8 <HAL_RCC_ClockConfig+0x120>
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	685b      	ldr	r3, [r3, #4]
 8001b72:	2b01      	cmp	r3, #1
 8001b74:	d107      	bne.n	8001b86 <HAL_RCC_ClockConfig+0xae>
 8001b76:	4b47      	ldr	r3, [pc, #284]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d119      	bne.n	8001bb6 <HAL_RCC_ClockConfig+0xde>
 8001b82:	2301      	movs	r3, #1
 8001b84:	e07f      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	685b      	ldr	r3, [r3, #4]
 8001b8a:	2b02      	cmp	r3, #2
 8001b8c:	d003      	beq.n	8001b96 <HAL_RCC_ClockConfig+0xbe>
 8001b8e:	687b      	ldr	r3, [r7, #4]
 8001b90:	685b      	ldr	r3, [r3, #4]
 8001b92:	2b03      	cmp	r3, #3
 8001b94:	d107      	bne.n	8001ba6 <HAL_RCC_ClockConfig+0xce>
 8001b96:	4b3f      	ldr	r3, [pc, #252]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d109      	bne.n	8001bb6 <HAL_RCC_ClockConfig+0xde>
 8001ba2:	2301      	movs	r3, #1
 8001ba4:	e06f      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001ba6:	4b3b      	ldr	r3, [pc, #236]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001ba8:	681b      	ldr	r3, [r3, #0]
 8001baa:	f003 0302 	and.w	r3, r3, #2
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d101      	bne.n	8001bb6 <HAL_RCC_ClockConfig+0xde>
 8001bb2:	2301      	movs	r3, #1
 8001bb4:	e067      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001bb6:	4b37      	ldr	r3, [pc, #220]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001bb8:	689b      	ldr	r3, [r3, #8]
 8001bba:	f023 0203 	bic.w	r2, r3, #3
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	685b      	ldr	r3, [r3, #4]
 8001bc2:	4934      	ldr	r1, [pc, #208]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001bc4:	4313      	orrs	r3, r2
 8001bc6:	608b      	str	r3, [r1, #8]
 8001bc8:	f7ff f9f0 	bl	8000fac <HAL_GetTick>
 8001bcc:	60f8      	str	r0, [r7, #12]
 8001bce:	e00a      	b.n	8001be6 <HAL_RCC_ClockConfig+0x10e>
 8001bd0:	f7ff f9ec 	bl	8000fac <HAL_GetTick>
 8001bd4:	4602      	mov	r2, r0
 8001bd6:	68fb      	ldr	r3, [r7, #12]
 8001bd8:	1ad3      	subs	r3, r2, r3
 8001bda:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bde:	4293      	cmp	r3, r2
 8001be0:	d901      	bls.n	8001be6 <HAL_RCC_ClockConfig+0x10e>
 8001be2:	2303      	movs	r3, #3
 8001be4:	e04f      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001be6:	4b2b      	ldr	r3, [pc, #172]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001be8:	689b      	ldr	r3, [r3, #8]
 8001bea:	f003 020c 	and.w	r2, r3, #12
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	685b      	ldr	r3, [r3, #4]
 8001bf2:	009b      	lsls	r3, r3, #2
 8001bf4:	429a      	cmp	r2, r3
 8001bf6:	d1eb      	bne.n	8001bd0 <HAL_RCC_ClockConfig+0xf8>
 8001bf8:	4b25      	ldr	r3, [pc, #148]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	f003 030f 	and.w	r3, r3, #15
 8001c00:	683a      	ldr	r2, [r7, #0]
 8001c02:	429a      	cmp	r2, r3
 8001c04:	d20c      	bcs.n	8001c20 <HAL_RCC_ClockConfig+0x148>
 8001c06:	4b22      	ldr	r3, [pc, #136]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001c08:	683a      	ldr	r2, [r7, #0]
 8001c0a:	b2d2      	uxtb	r2, r2
 8001c0c:	701a      	strb	r2, [r3, #0]
 8001c0e:	4b20      	ldr	r3, [pc, #128]	; (8001c90 <HAL_RCC_ClockConfig+0x1b8>)
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	f003 030f 	and.w	r3, r3, #15
 8001c16:	683a      	ldr	r2, [r7, #0]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	d001      	beq.n	8001c20 <HAL_RCC_ClockConfig+0x148>
 8001c1c:	2301      	movs	r3, #1
 8001c1e:	e032      	b.n	8001c86 <HAL_RCC_ClockConfig+0x1ae>
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	f003 0304 	and.w	r3, r3, #4
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	d008      	beq.n	8001c3e <HAL_RCC_ClockConfig+0x166>
 8001c2c:	4b19      	ldr	r3, [pc, #100]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001c2e:	689b      	ldr	r3, [r3, #8]
 8001c30:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	68db      	ldr	r3, [r3, #12]
 8001c38:	4916      	ldr	r1, [pc, #88]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001c3a:	4313      	orrs	r3, r2
 8001c3c:	608b      	str	r3, [r1, #8]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	f003 0308 	and.w	r3, r3, #8
 8001c46:	2b00      	cmp	r3, #0
 8001c48:	d009      	beq.n	8001c5e <HAL_RCC_ClockConfig+0x186>
 8001c4a:	4b12      	ldr	r3, [pc, #72]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	691b      	ldr	r3, [r3, #16]
 8001c56:	00db      	lsls	r3, r3, #3
 8001c58:	490e      	ldr	r1, [pc, #56]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001c5a:	4313      	orrs	r3, r2
 8001c5c:	608b      	str	r3, [r1, #8]
 8001c5e:	f000 f821 	bl	8001ca4 <HAL_RCC_GetSysClockFreq>
 8001c62:	4602      	mov	r2, r0
 8001c64:	4b0b      	ldr	r3, [pc, #44]	; (8001c94 <HAL_RCC_ClockConfig+0x1bc>)
 8001c66:	689b      	ldr	r3, [r3, #8]
 8001c68:	091b      	lsrs	r3, r3, #4
 8001c6a:	f003 030f 	and.w	r3, r3, #15
 8001c6e:	490a      	ldr	r1, [pc, #40]	; (8001c98 <HAL_RCC_ClockConfig+0x1c0>)
 8001c70:	5ccb      	ldrb	r3, [r1, r3]
 8001c72:	fa22 f303 	lsr.w	r3, r2, r3
 8001c76:	4a09      	ldr	r2, [pc, #36]	; (8001c9c <HAL_RCC_ClockConfig+0x1c4>)
 8001c78:	6013      	str	r3, [r2, #0]
 8001c7a:	4b09      	ldr	r3, [pc, #36]	; (8001ca0 <HAL_RCC_ClockConfig+0x1c8>)
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	4618      	mov	r0, r3
 8001c80:	f7fe ffea 	bl	8000c58 <HAL_InitTick>
 8001c84:	2300      	movs	r3, #0
 8001c86:	4618      	mov	r0, r3
 8001c88:	3710      	adds	r7, #16
 8001c8a:	46bd      	mov	sp, r7
 8001c8c:	bd80      	pop	{r7, pc}
 8001c8e:	bf00      	nop
 8001c90:	40023c00 	.word	0x40023c00
 8001c94:	40023800 	.word	0x40023800
 8001c98:	08007128 	.word	0x08007128
 8001c9c:	20000028 	.word	0x20000028
 8001ca0:	2000002c 	.word	0x2000002c

08001ca4 <HAL_RCC_GetSysClockFreq>:
 8001ca4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001ca8:	b094      	sub	sp, #80	; 0x50
 8001caa:	af00      	add	r7, sp, #0
 8001cac:	2300      	movs	r3, #0
 8001cae:	647b      	str	r3, [r7, #68]	; 0x44
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	643b      	str	r3, [r7, #64]	; 0x40
 8001cb8:	2300      	movs	r3, #0
 8001cba:	64bb      	str	r3, [r7, #72]	; 0x48
 8001cbc:	4b79      	ldr	r3, [pc, #484]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001cbe:	689b      	ldr	r3, [r3, #8]
 8001cc0:	f003 030c 	and.w	r3, r3, #12
 8001cc4:	2b08      	cmp	r3, #8
 8001cc6:	d00d      	beq.n	8001ce4 <HAL_RCC_GetSysClockFreq+0x40>
 8001cc8:	2b08      	cmp	r3, #8
 8001cca:	f200 80e1 	bhi.w	8001e90 <HAL_RCC_GetSysClockFreq+0x1ec>
 8001cce:	2b00      	cmp	r3, #0
 8001cd0:	d002      	beq.n	8001cd8 <HAL_RCC_GetSysClockFreq+0x34>
 8001cd2:	2b04      	cmp	r3, #4
 8001cd4:	d003      	beq.n	8001cde <HAL_RCC_GetSysClockFreq+0x3a>
 8001cd6:	e0db      	b.n	8001e90 <HAL_RCC_GetSysClockFreq+0x1ec>
 8001cd8:	4b73      	ldr	r3, [pc, #460]	; (8001ea8 <HAL_RCC_GetSysClockFreq+0x204>)
 8001cda:	64bb      	str	r3, [r7, #72]	; 0x48
 8001cdc:	e0db      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x1f2>
 8001cde:	4b73      	ldr	r3, [pc, #460]	; (8001eac <HAL_RCC_GetSysClockFreq+0x208>)
 8001ce0:	64bb      	str	r3, [r7, #72]	; 0x48
 8001ce2:	e0d8      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x1f2>
 8001ce4:	4b6f      	ldr	r3, [pc, #444]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001ce6:	685b      	ldr	r3, [r3, #4]
 8001ce8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001cec:	647b      	str	r3, [r7, #68]	; 0x44
 8001cee:	4b6d      	ldr	r3, [pc, #436]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001cf0:	685b      	ldr	r3, [r3, #4]
 8001cf2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001cf6:	2b00      	cmp	r3, #0
 8001cf8:	d063      	beq.n	8001dc2 <HAL_RCC_GetSysClockFreq+0x11e>
 8001cfa:	4b6a      	ldr	r3, [pc, #424]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001cfc:	685b      	ldr	r3, [r3, #4]
 8001cfe:	099b      	lsrs	r3, r3, #6
 8001d00:	2200      	movs	r2, #0
 8001d02:	63bb      	str	r3, [r7, #56]	; 0x38
 8001d04:	63fa      	str	r2, [r7, #60]	; 0x3c
 8001d06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001d08:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001d0c:	633b      	str	r3, [r7, #48]	; 0x30
 8001d0e:	2300      	movs	r3, #0
 8001d10:	637b      	str	r3, [r7, #52]	; 0x34
 8001d12:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8001d16:	4622      	mov	r2, r4
 8001d18:	462b      	mov	r3, r5
 8001d1a:	f04f 0000 	mov.w	r0, #0
 8001d1e:	f04f 0100 	mov.w	r1, #0
 8001d22:	0159      	lsls	r1, r3, #5
 8001d24:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001d28:	0150      	lsls	r0, r2, #5
 8001d2a:	4602      	mov	r2, r0
 8001d2c:	460b      	mov	r3, r1
 8001d2e:	4621      	mov	r1, r4
 8001d30:	1a51      	subs	r1, r2, r1
 8001d32:	6139      	str	r1, [r7, #16]
 8001d34:	4629      	mov	r1, r5
 8001d36:	eb63 0301 	sbc.w	r3, r3, r1
 8001d3a:	617b      	str	r3, [r7, #20]
 8001d3c:	f04f 0200 	mov.w	r2, #0
 8001d40:	f04f 0300 	mov.w	r3, #0
 8001d44:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8001d48:	4659      	mov	r1, fp
 8001d4a:	018b      	lsls	r3, r1, #6
 8001d4c:	4651      	mov	r1, sl
 8001d4e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8001d52:	4651      	mov	r1, sl
 8001d54:	018a      	lsls	r2, r1, #6
 8001d56:	4651      	mov	r1, sl
 8001d58:	ebb2 0801 	subs.w	r8, r2, r1
 8001d5c:	4659      	mov	r1, fp
 8001d5e:	eb63 0901 	sbc.w	r9, r3, r1
 8001d62:	f04f 0200 	mov.w	r2, #0
 8001d66:	f04f 0300 	mov.w	r3, #0
 8001d6a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8001d6e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001d72:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001d76:	4690      	mov	r8, r2
 8001d78:	4699      	mov	r9, r3
 8001d7a:	4623      	mov	r3, r4
 8001d7c:	eb18 0303 	adds.w	r3, r8, r3
 8001d80:	60bb      	str	r3, [r7, #8]
 8001d82:	462b      	mov	r3, r5
 8001d84:	eb49 0303 	adc.w	r3, r9, r3
 8001d88:	60fb      	str	r3, [r7, #12]
 8001d8a:	f04f 0200 	mov.w	r2, #0
 8001d8e:	f04f 0300 	mov.w	r3, #0
 8001d92:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8001d96:	4629      	mov	r1, r5
 8001d98:	024b      	lsls	r3, r1, #9
 8001d9a:	4621      	mov	r1, r4
 8001d9c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8001da0:	4621      	mov	r1, r4
 8001da2:	024a      	lsls	r2, r1, #9
 8001da4:	4610      	mov	r0, r2
 8001da6:	4619      	mov	r1, r3
 8001da8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001daa:	2200      	movs	r2, #0
 8001dac:	62bb      	str	r3, [r7, #40]	; 0x28
 8001dae:	62fa      	str	r2, [r7, #44]	; 0x2c
 8001db0:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001db4:	f7fe fa6c 	bl	8000290 <__aeabi_uldivmod>
 8001db8:	4602      	mov	r2, r0
 8001dba:	460b      	mov	r3, r1
 8001dbc:	4613      	mov	r3, r2
 8001dbe:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001dc0:	e058      	b.n	8001e74 <HAL_RCC_GetSysClockFreq+0x1d0>
 8001dc2:	4b38      	ldr	r3, [pc, #224]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001dc4:	685b      	ldr	r3, [r3, #4]
 8001dc6:	099b      	lsrs	r3, r3, #6
 8001dc8:	2200      	movs	r2, #0
 8001dca:	4618      	mov	r0, r3
 8001dcc:	4611      	mov	r1, r2
 8001dce:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8001dd2:	623b      	str	r3, [r7, #32]
 8001dd4:	2300      	movs	r3, #0
 8001dd6:	627b      	str	r3, [r7, #36]	; 0x24
 8001dd8:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8001ddc:	4642      	mov	r2, r8
 8001dde:	464b      	mov	r3, r9
 8001de0:	f04f 0000 	mov.w	r0, #0
 8001de4:	f04f 0100 	mov.w	r1, #0
 8001de8:	0159      	lsls	r1, r3, #5
 8001dea:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001dee:	0150      	lsls	r0, r2, #5
 8001df0:	4602      	mov	r2, r0
 8001df2:	460b      	mov	r3, r1
 8001df4:	4641      	mov	r1, r8
 8001df6:	ebb2 0a01 	subs.w	sl, r2, r1
 8001dfa:	4649      	mov	r1, r9
 8001dfc:	eb63 0b01 	sbc.w	fp, r3, r1
 8001e00:	f04f 0200 	mov.w	r2, #0
 8001e04:	f04f 0300 	mov.w	r3, #0
 8001e08:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8001e0c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8001e10:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8001e14:	ebb2 040a 	subs.w	r4, r2, sl
 8001e18:	eb63 050b 	sbc.w	r5, r3, fp
 8001e1c:	f04f 0200 	mov.w	r2, #0
 8001e20:	f04f 0300 	mov.w	r3, #0
 8001e24:	00eb      	lsls	r3, r5, #3
 8001e26:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001e2a:	00e2      	lsls	r2, r4, #3
 8001e2c:	4614      	mov	r4, r2
 8001e2e:	461d      	mov	r5, r3
 8001e30:	4643      	mov	r3, r8
 8001e32:	18e3      	adds	r3, r4, r3
 8001e34:	603b      	str	r3, [r7, #0]
 8001e36:	464b      	mov	r3, r9
 8001e38:	eb45 0303 	adc.w	r3, r5, r3
 8001e3c:	607b      	str	r3, [r7, #4]
 8001e3e:	f04f 0200 	mov.w	r2, #0
 8001e42:	f04f 0300 	mov.w	r3, #0
 8001e46:	e9d7 4500 	ldrd	r4, r5, [r7]
 8001e4a:	4629      	mov	r1, r5
 8001e4c:	028b      	lsls	r3, r1, #10
 8001e4e:	4621      	mov	r1, r4
 8001e50:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8001e54:	4621      	mov	r1, r4
 8001e56:	028a      	lsls	r2, r1, #10
 8001e58:	4610      	mov	r0, r2
 8001e5a:	4619      	mov	r1, r3
 8001e5c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001e5e:	2200      	movs	r2, #0
 8001e60:	61bb      	str	r3, [r7, #24]
 8001e62:	61fa      	str	r2, [r7, #28]
 8001e64:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001e68:	f7fe fa12 	bl	8000290 <__aeabi_uldivmod>
 8001e6c:	4602      	mov	r2, r0
 8001e6e:	460b      	mov	r3, r1
 8001e70:	4613      	mov	r3, r2
 8001e72:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001e74:	4b0b      	ldr	r3, [pc, #44]	; (8001ea4 <HAL_RCC_GetSysClockFreq+0x200>)
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	0c1b      	lsrs	r3, r3, #16
 8001e7a:	f003 0303 	and.w	r3, r3, #3
 8001e7e:	3301      	adds	r3, #1
 8001e80:	005b      	lsls	r3, r3, #1
 8001e82:	643b      	str	r3, [r7, #64]	; 0x40
 8001e84:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8001e86:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001e88:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e8c:	64bb      	str	r3, [r7, #72]	; 0x48
 8001e8e:	e002      	b.n	8001e96 <HAL_RCC_GetSysClockFreq+0x1f2>
 8001e90:	4b05      	ldr	r3, [pc, #20]	; (8001ea8 <HAL_RCC_GetSysClockFreq+0x204>)
 8001e92:	64bb      	str	r3, [r7, #72]	; 0x48
 8001e94:	bf00      	nop
 8001e96:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001e98:	4618      	mov	r0, r3
 8001e9a:	3750      	adds	r7, #80	; 0x50
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001ea2:	bf00      	nop
 8001ea4:	40023800 	.word	0x40023800
 8001ea8:	00f42400 	.word	0x00f42400
 8001eac:	007a1200 	.word	0x007a1200

08001eb0 <HAL_RCC_GetHCLKFreq>:
 8001eb0:	b480      	push	{r7}
 8001eb2:	af00      	add	r7, sp, #0
 8001eb4:	4b03      	ldr	r3, [pc, #12]	; (8001ec4 <HAL_RCC_GetHCLKFreq+0x14>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	4618      	mov	r0, r3
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec0:	4770      	bx	lr
 8001ec2:	bf00      	nop
 8001ec4:	20000028 	.word	0x20000028

08001ec8 <HAL_RCC_GetPCLK1Freq>:
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	af00      	add	r7, sp, #0
 8001ecc:	f7ff fff0 	bl	8001eb0 <HAL_RCC_GetHCLKFreq>
 8001ed0:	4602      	mov	r2, r0
 8001ed2:	4b05      	ldr	r3, [pc, #20]	; (8001ee8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001ed4:	689b      	ldr	r3, [r3, #8]
 8001ed6:	0a9b      	lsrs	r3, r3, #10
 8001ed8:	f003 0307 	and.w	r3, r3, #7
 8001edc:	4903      	ldr	r1, [pc, #12]	; (8001eec <HAL_RCC_GetPCLK1Freq+0x24>)
 8001ede:	5ccb      	ldrb	r3, [r1, r3]
 8001ee0:	fa22 f303 	lsr.w	r3, r2, r3
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	bd80      	pop	{r7, pc}
 8001ee8:	40023800 	.word	0x40023800
 8001eec:	08007138 	.word	0x08007138

08001ef0 <HAL_RCC_GetClockConfig>:
 8001ef0:	b480      	push	{r7}
 8001ef2:	b083      	sub	sp, #12
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	6039      	str	r1, [r7, #0]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	220f      	movs	r2, #15
 8001efe:	601a      	str	r2, [r3, #0]
 8001f00:	4b12      	ldr	r3, [pc, #72]	; (8001f4c <HAL_RCC_GetClockConfig+0x5c>)
 8001f02:	689b      	ldr	r3, [r3, #8]
 8001f04:	f003 0203 	and.w	r2, r3, #3
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	605a      	str	r2, [r3, #4]
 8001f0c:	4b0f      	ldr	r3, [pc, #60]	; (8001f4c <HAL_RCC_GetClockConfig+0x5c>)
 8001f0e:	689b      	ldr	r3, [r3, #8]
 8001f10:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	609a      	str	r2, [r3, #8]
 8001f18:	4b0c      	ldr	r3, [pc, #48]	; (8001f4c <HAL_RCC_GetClockConfig+0x5c>)
 8001f1a:	689b      	ldr	r3, [r3, #8]
 8001f1c:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	60da      	str	r2, [r3, #12]
 8001f24:	4b09      	ldr	r3, [pc, #36]	; (8001f4c <HAL_RCC_GetClockConfig+0x5c>)
 8001f26:	689b      	ldr	r3, [r3, #8]
 8001f28:	08db      	lsrs	r3, r3, #3
 8001f2a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	611a      	str	r2, [r3, #16]
 8001f32:	4b07      	ldr	r3, [pc, #28]	; (8001f50 <HAL_RCC_GetClockConfig+0x60>)
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	f003 020f 	and.w	r2, r3, #15
 8001f3a:	683b      	ldr	r3, [r7, #0]
 8001f3c:	601a      	str	r2, [r3, #0]
 8001f3e:	bf00      	nop
 8001f40:	370c      	adds	r7, #12
 8001f42:	46bd      	mov	sp, r7
 8001f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f48:	4770      	bx	lr
 8001f4a:	bf00      	nop
 8001f4c:	40023800 	.word	0x40023800
 8001f50:	40023c00 	.word	0x40023c00

08001f54 <HAL_TIM_Base_Init>:
 8001f54:	b580      	push	{r7, lr}
 8001f56:	b082      	sub	sp, #8
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	2b00      	cmp	r3, #0
 8001f60:	d101      	bne.n	8001f66 <HAL_TIM_Base_Init+0x12>
 8001f62:	2301      	movs	r3, #1
 8001f64:	e041      	b.n	8001fea <HAL_TIM_Base_Init+0x96>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001f6c:	b2db      	uxtb	r3, r3
 8001f6e:	2b00      	cmp	r3, #0
 8001f70:	d106      	bne.n	8001f80 <HAL_TIM_Base_Init+0x2c>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	2200      	movs	r2, #0
 8001f76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f7a:	6878      	ldr	r0, [r7, #4]
 8001f7c:	f7fe fe28 	bl	8000bd0 <HAL_TIM_Base_MspInit>
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	2202      	movs	r2, #2
 8001f84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f88:	687b      	ldr	r3, [r7, #4]
 8001f8a:	681a      	ldr	r2, [r3, #0]
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	3304      	adds	r3, #4
 8001f90:	4619      	mov	r1, r3
 8001f92:	4610      	mov	r0, r2
 8001f94:	f000 fa7e 	bl	8002494 <TIM_Base_SetConfig>
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	2201      	movs	r2, #1
 8001f9c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	2201      	movs	r2, #1
 8001fa4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	2201      	movs	r2, #1
 8001fac:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	2201      	movs	r2, #1
 8001fb4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	2201      	movs	r2, #1
 8001fbc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	2201      	movs	r2, #1
 8001fc4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	2201      	movs	r2, #1
 8001fcc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	2201      	movs	r2, #1
 8001fd4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	2201      	movs	r2, #1
 8001fdc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001fe8:	2300      	movs	r3, #0
 8001fea:	4618      	mov	r0, r3
 8001fec:	3708      	adds	r7, #8
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
	...

08001ff4 <HAL_TIM_Base_Start_IT>:
 8001ff4:	b480      	push	{r7}
 8001ff6:	b085      	sub	sp, #20
 8001ff8:	af00      	add	r7, sp, #0
 8001ffa:	6078      	str	r0, [r7, #4]
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002002:	b2db      	uxtb	r3, r3
 8002004:	2b01      	cmp	r3, #1
 8002006:	d001      	beq.n	800200c <HAL_TIM_Base_Start_IT+0x18>
 8002008:	2301      	movs	r3, #1
 800200a:	e04e      	b.n	80020aa <HAL_TIM_Base_Start_IT+0xb6>
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	2202      	movs	r2, #2
 8002010:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	68da      	ldr	r2, [r3, #12]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f042 0201 	orr.w	r2, r2, #1
 8002022:	60da      	str	r2, [r3, #12]
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	4a23      	ldr	r2, [pc, #140]	; (80020b8 <HAL_TIM_Base_Start_IT+0xc4>)
 800202a:	4293      	cmp	r3, r2
 800202c:	d022      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002036:	d01d      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4a1f      	ldr	r2, [pc, #124]	; (80020bc <HAL_TIM_Base_Start_IT+0xc8>)
 800203e:	4293      	cmp	r3, r2
 8002040:	d018      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	4a1e      	ldr	r2, [pc, #120]	; (80020c0 <HAL_TIM_Base_Start_IT+0xcc>)
 8002048:	4293      	cmp	r3, r2
 800204a:	d013      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	4a1c      	ldr	r2, [pc, #112]	; (80020c4 <HAL_TIM_Base_Start_IT+0xd0>)
 8002052:	4293      	cmp	r3, r2
 8002054:	d00e      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	4a1b      	ldr	r2, [pc, #108]	; (80020c8 <HAL_TIM_Base_Start_IT+0xd4>)
 800205c:	4293      	cmp	r3, r2
 800205e:	d009      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4a19      	ldr	r2, [pc, #100]	; (80020cc <HAL_TIM_Base_Start_IT+0xd8>)
 8002066:	4293      	cmp	r3, r2
 8002068:	d004      	beq.n	8002074 <HAL_TIM_Base_Start_IT+0x80>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	4a18      	ldr	r2, [pc, #96]	; (80020d0 <HAL_TIM_Base_Start_IT+0xdc>)
 8002070:	4293      	cmp	r3, r2
 8002072:	d111      	bne.n	8002098 <HAL_TIM_Base_Start_IT+0xa4>
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	689b      	ldr	r3, [r3, #8]
 800207a:	f003 0307 	and.w	r3, r3, #7
 800207e:	60fb      	str	r3, [r7, #12]
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	2b06      	cmp	r3, #6
 8002084:	d010      	beq.n	80020a8 <HAL_TIM_Base_Start_IT+0xb4>
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	681a      	ldr	r2, [r3, #0]
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	f042 0201 	orr.w	r2, r2, #1
 8002094:	601a      	str	r2, [r3, #0]
 8002096:	e007      	b.n	80020a8 <HAL_TIM_Base_Start_IT+0xb4>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	681a      	ldr	r2, [r3, #0]
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	f042 0201 	orr.w	r2, r2, #1
 80020a6:	601a      	str	r2, [r3, #0]
 80020a8:	2300      	movs	r3, #0
 80020aa:	4618      	mov	r0, r3
 80020ac:	3714      	adds	r7, #20
 80020ae:	46bd      	mov	sp, r7
 80020b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b4:	4770      	bx	lr
 80020b6:	bf00      	nop
 80020b8:	40010000 	.word	0x40010000
 80020bc:	40000400 	.word	0x40000400
 80020c0:	40000800 	.word	0x40000800
 80020c4:	40000c00 	.word	0x40000c00
 80020c8:	40010400 	.word	0x40010400
 80020cc:	40014000 	.word	0x40014000
 80020d0:	40001800 	.word	0x40001800

080020d4 <HAL_TIM_IRQHandler>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b084      	sub	sp, #16
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	687b      	ldr	r3, [r7, #4]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	68db      	ldr	r3, [r3, #12]
 80020e2:	60fb      	str	r3, [r7, #12]
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	691b      	ldr	r3, [r3, #16]
 80020ea:	60bb      	str	r3, [r7, #8]
 80020ec:	68bb      	ldr	r3, [r7, #8]
 80020ee:	f003 0302 	and.w	r3, r3, #2
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d020      	beq.n	8002138 <HAL_TIM_IRQHandler+0x64>
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	f003 0302 	and.w	r3, r3, #2
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d01b      	beq.n	8002138 <HAL_TIM_IRQHandler+0x64>
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	f06f 0202 	mvn.w	r2, #2
 8002108:	611a      	str	r2, [r3, #16]
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	2201      	movs	r2, #1
 800210e:	771a      	strb	r2, [r3, #28]
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	699b      	ldr	r3, [r3, #24]
 8002116:	f003 0303 	and.w	r3, r3, #3
 800211a:	2b00      	cmp	r3, #0
 800211c:	d003      	beq.n	8002126 <HAL_TIM_IRQHandler+0x52>
 800211e:	6878      	ldr	r0, [r7, #4]
 8002120:	f000 f999 	bl	8002456 <HAL_TIM_IC_CaptureCallback>
 8002124:	e005      	b.n	8002132 <HAL_TIM_IRQHandler+0x5e>
 8002126:	6878      	ldr	r0, [r7, #4]
 8002128:	f000 f98b 	bl	8002442 <HAL_TIM_OC_DelayElapsedCallback>
 800212c:	6878      	ldr	r0, [r7, #4]
 800212e:	f000 f99c 	bl	800246a <HAL_TIM_PWM_PulseFinishedCallback>
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	2200      	movs	r2, #0
 8002136:	771a      	strb	r2, [r3, #28]
 8002138:	68bb      	ldr	r3, [r7, #8]
 800213a:	f003 0304 	and.w	r3, r3, #4
 800213e:	2b00      	cmp	r3, #0
 8002140:	d020      	beq.n	8002184 <HAL_TIM_IRQHandler+0xb0>
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	f003 0304 	and.w	r3, r3, #4
 8002148:	2b00      	cmp	r3, #0
 800214a:	d01b      	beq.n	8002184 <HAL_TIM_IRQHandler+0xb0>
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	f06f 0204 	mvn.w	r2, #4
 8002154:	611a      	str	r2, [r3, #16]
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	2202      	movs	r2, #2
 800215a:	771a      	strb	r2, [r3, #28]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	699b      	ldr	r3, [r3, #24]
 8002162:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002166:	2b00      	cmp	r3, #0
 8002168:	d003      	beq.n	8002172 <HAL_TIM_IRQHandler+0x9e>
 800216a:	6878      	ldr	r0, [r7, #4]
 800216c:	f000 f973 	bl	8002456 <HAL_TIM_IC_CaptureCallback>
 8002170:	e005      	b.n	800217e <HAL_TIM_IRQHandler+0xaa>
 8002172:	6878      	ldr	r0, [r7, #4]
 8002174:	f000 f965 	bl	8002442 <HAL_TIM_OC_DelayElapsedCallback>
 8002178:	6878      	ldr	r0, [r7, #4]
 800217a:	f000 f976 	bl	800246a <HAL_TIM_PWM_PulseFinishedCallback>
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	2200      	movs	r2, #0
 8002182:	771a      	strb	r2, [r3, #28]
 8002184:	68bb      	ldr	r3, [r7, #8]
 8002186:	f003 0308 	and.w	r3, r3, #8
 800218a:	2b00      	cmp	r3, #0
 800218c:	d020      	beq.n	80021d0 <HAL_TIM_IRQHandler+0xfc>
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	f003 0308 	and.w	r3, r3, #8
 8002194:	2b00      	cmp	r3, #0
 8002196:	d01b      	beq.n	80021d0 <HAL_TIM_IRQHandler+0xfc>
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f06f 0208 	mvn.w	r2, #8
 80021a0:	611a      	str	r2, [r3, #16]
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	2204      	movs	r2, #4
 80021a6:	771a      	strb	r2, [r3, #28]
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	69db      	ldr	r3, [r3, #28]
 80021ae:	f003 0303 	and.w	r3, r3, #3
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d003      	beq.n	80021be <HAL_TIM_IRQHandler+0xea>
 80021b6:	6878      	ldr	r0, [r7, #4]
 80021b8:	f000 f94d 	bl	8002456 <HAL_TIM_IC_CaptureCallback>
 80021bc:	e005      	b.n	80021ca <HAL_TIM_IRQHandler+0xf6>
 80021be:	6878      	ldr	r0, [r7, #4]
 80021c0:	f000 f93f 	bl	8002442 <HAL_TIM_OC_DelayElapsedCallback>
 80021c4:	6878      	ldr	r0, [r7, #4]
 80021c6:	f000 f950 	bl	800246a <HAL_TIM_PWM_PulseFinishedCallback>
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	2200      	movs	r2, #0
 80021ce:	771a      	strb	r2, [r3, #28]
 80021d0:	68bb      	ldr	r3, [r7, #8]
 80021d2:	f003 0310 	and.w	r3, r3, #16
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	d020      	beq.n	800221c <HAL_TIM_IRQHandler+0x148>
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	f003 0310 	and.w	r3, r3, #16
 80021e0:	2b00      	cmp	r3, #0
 80021e2:	d01b      	beq.n	800221c <HAL_TIM_IRQHandler+0x148>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	f06f 0210 	mvn.w	r2, #16
 80021ec:	611a      	str	r2, [r3, #16]
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	2208      	movs	r2, #8
 80021f2:	771a      	strb	r2, [r3, #28]
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	69db      	ldr	r3, [r3, #28]
 80021fa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d003      	beq.n	800220a <HAL_TIM_IRQHandler+0x136>
 8002202:	6878      	ldr	r0, [r7, #4]
 8002204:	f000 f927 	bl	8002456 <HAL_TIM_IC_CaptureCallback>
 8002208:	e005      	b.n	8002216 <HAL_TIM_IRQHandler+0x142>
 800220a:	6878      	ldr	r0, [r7, #4]
 800220c:	f000 f919 	bl	8002442 <HAL_TIM_OC_DelayElapsedCallback>
 8002210:	6878      	ldr	r0, [r7, #4]
 8002212:	f000 f92a 	bl	800246a <HAL_TIM_PWM_PulseFinishedCallback>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	2200      	movs	r2, #0
 800221a:	771a      	strb	r2, [r3, #28]
 800221c:	68bb      	ldr	r3, [r7, #8]
 800221e:	f003 0301 	and.w	r3, r3, #1
 8002222:	2b00      	cmp	r3, #0
 8002224:	d00c      	beq.n	8002240 <HAL_TIM_IRQHandler+0x16c>
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	f003 0301 	and.w	r3, r3, #1
 800222c:	2b00      	cmp	r3, #0
 800222e:	d007      	beq.n	8002240 <HAL_TIM_IRQHandler+0x16c>
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	f06f 0201 	mvn.w	r2, #1
 8002238:	611a      	str	r2, [r3, #16]
 800223a:	6878      	ldr	r0, [r7, #4]
 800223c:	f7fe fc68 	bl	8000b10 <HAL_TIM_PeriodElapsedCallback>
 8002240:	68bb      	ldr	r3, [r7, #8]
 8002242:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002246:	2b00      	cmp	r3, #0
 8002248:	d00c      	beq.n	8002264 <HAL_TIM_IRQHandler+0x190>
 800224a:	68fb      	ldr	r3, [r7, #12]
 800224c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002250:	2b00      	cmp	r3, #0
 8002252:	d007      	beq.n	8002264 <HAL_TIM_IRQHandler+0x190>
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800225c:	611a      	str	r2, [r3, #16]
 800225e:	6878      	ldr	r0, [r7, #4]
 8002260:	f000 fae4 	bl	800282c <HAL_TIMEx_BreakCallback>
 8002264:	68bb      	ldr	r3, [r7, #8]
 8002266:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800226a:	2b00      	cmp	r3, #0
 800226c:	d00c      	beq.n	8002288 <HAL_TIM_IRQHandler+0x1b4>
 800226e:	68fb      	ldr	r3, [r7, #12]
 8002270:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002274:	2b00      	cmp	r3, #0
 8002276:	d007      	beq.n	8002288 <HAL_TIM_IRQHandler+0x1b4>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002280:	611a      	str	r2, [r3, #16]
 8002282:	6878      	ldr	r0, [r7, #4]
 8002284:	f000 f8fb 	bl	800247e <HAL_TIM_TriggerCallback>
 8002288:	68bb      	ldr	r3, [r7, #8]
 800228a:	f003 0320 	and.w	r3, r3, #32
 800228e:	2b00      	cmp	r3, #0
 8002290:	d00c      	beq.n	80022ac <HAL_TIM_IRQHandler+0x1d8>
 8002292:	68fb      	ldr	r3, [r7, #12]
 8002294:	f003 0320 	and.w	r3, r3, #32
 8002298:	2b00      	cmp	r3, #0
 800229a:	d007      	beq.n	80022ac <HAL_TIM_IRQHandler+0x1d8>
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	f06f 0220 	mvn.w	r2, #32
 80022a4:	611a      	str	r2, [r3, #16]
 80022a6:	6878      	ldr	r0, [r7, #4]
 80022a8:	f000 fab6 	bl	8002818 <HAL_TIMEx_CommutCallback>
 80022ac:	bf00      	nop
 80022ae:	3710      	adds	r7, #16
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd80      	pop	{r7, pc}

080022b4 <HAL_TIM_ConfigClockSource>:
 80022b4:	b580      	push	{r7, lr}
 80022b6:	b084      	sub	sp, #16
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	6078      	str	r0, [r7, #4]
 80022bc:	6039      	str	r1, [r7, #0]
 80022be:	2300      	movs	r3, #0
 80022c0:	73fb      	strb	r3, [r7, #15]
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80022c8:	2b01      	cmp	r3, #1
 80022ca:	d101      	bne.n	80022d0 <HAL_TIM_ConfigClockSource+0x1c>
 80022cc:	2302      	movs	r3, #2
 80022ce:	e0b4      	b.n	800243a <HAL_TIM_ConfigClockSource+0x186>
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	2201      	movs	r2, #1
 80022d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	2202      	movs	r2, #2
 80022dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022e0:	687b      	ldr	r3, [r7, #4]
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	689b      	ldr	r3, [r3, #8]
 80022e6:	60bb      	str	r3, [r7, #8]
 80022e8:	68bb      	ldr	r3, [r7, #8]
 80022ea:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 80022ee:	60bb      	str	r3, [r7, #8]
 80022f0:	68bb      	ldr	r3, [r7, #8]
 80022f2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80022f6:	60bb      	str	r3, [r7, #8]
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	681b      	ldr	r3, [r3, #0]
 80022fc:	68ba      	ldr	r2, [r7, #8]
 80022fe:	609a      	str	r2, [r3, #8]
 8002300:	683b      	ldr	r3, [r7, #0]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002308:	d03e      	beq.n	8002388 <HAL_TIM_ConfigClockSource+0xd4>
 800230a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800230e:	f200 8087 	bhi.w	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002312:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002316:	f000 8086 	beq.w	8002426 <HAL_TIM_ConfigClockSource+0x172>
 800231a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800231e:	d87f      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002320:	2b70      	cmp	r3, #112	; 0x70
 8002322:	d01a      	beq.n	800235a <HAL_TIM_ConfigClockSource+0xa6>
 8002324:	2b70      	cmp	r3, #112	; 0x70
 8002326:	d87b      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002328:	2b60      	cmp	r3, #96	; 0x60
 800232a:	d050      	beq.n	80023ce <HAL_TIM_ConfigClockSource+0x11a>
 800232c:	2b60      	cmp	r3, #96	; 0x60
 800232e:	d877      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002330:	2b50      	cmp	r3, #80	; 0x50
 8002332:	d03c      	beq.n	80023ae <HAL_TIM_ConfigClockSource+0xfa>
 8002334:	2b50      	cmp	r3, #80	; 0x50
 8002336:	d873      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002338:	2b40      	cmp	r3, #64	; 0x40
 800233a:	d058      	beq.n	80023ee <HAL_TIM_ConfigClockSource+0x13a>
 800233c:	2b40      	cmp	r3, #64	; 0x40
 800233e:	d86f      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002340:	2b30      	cmp	r3, #48	; 0x30
 8002342:	d064      	beq.n	800240e <HAL_TIM_ConfigClockSource+0x15a>
 8002344:	2b30      	cmp	r3, #48	; 0x30
 8002346:	d86b      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002348:	2b20      	cmp	r3, #32
 800234a:	d060      	beq.n	800240e <HAL_TIM_ConfigClockSource+0x15a>
 800234c:	2b20      	cmp	r3, #32
 800234e:	d867      	bhi.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 8002350:	2b00      	cmp	r3, #0
 8002352:	d05c      	beq.n	800240e <HAL_TIM_ConfigClockSource+0x15a>
 8002354:	2b10      	cmp	r3, #16
 8002356:	d05a      	beq.n	800240e <HAL_TIM_ConfigClockSource+0x15a>
 8002358:	e062      	b.n	8002420 <HAL_TIM_ConfigClockSource+0x16c>
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	6818      	ldr	r0, [r3, #0]
 800235e:	683b      	ldr	r3, [r7, #0]
 8002360:	6899      	ldr	r1, [r3, #8]
 8002362:	683b      	ldr	r3, [r7, #0]
 8002364:	685a      	ldr	r2, [r3, #4]
 8002366:	683b      	ldr	r3, [r7, #0]
 8002368:	68db      	ldr	r3, [r3, #12]
 800236a:	f000 f9b9 	bl	80026e0 <TIM_ETR_SetConfig>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	689b      	ldr	r3, [r3, #8]
 8002374:	60bb      	str	r3, [r7, #8]
 8002376:	68bb      	ldr	r3, [r7, #8]
 8002378:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800237c:	60bb      	str	r3, [r7, #8]
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	68ba      	ldr	r2, [r7, #8]
 8002384:	609a      	str	r2, [r3, #8]
 8002386:	e04f      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	6818      	ldr	r0, [r3, #0]
 800238c:	683b      	ldr	r3, [r7, #0]
 800238e:	6899      	ldr	r1, [r3, #8]
 8002390:	683b      	ldr	r3, [r7, #0]
 8002392:	685a      	ldr	r2, [r3, #4]
 8002394:	683b      	ldr	r3, [r7, #0]
 8002396:	68db      	ldr	r3, [r3, #12]
 8002398:	f000 f9a2 	bl	80026e0 <TIM_ETR_SetConfig>
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	689a      	ldr	r2, [r3, #8]
 80023a2:	687b      	ldr	r3, [r7, #4]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80023aa:	609a      	str	r2, [r3, #8]
 80023ac:	e03c      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	6818      	ldr	r0, [r3, #0]
 80023b2:	683b      	ldr	r3, [r7, #0]
 80023b4:	6859      	ldr	r1, [r3, #4]
 80023b6:	683b      	ldr	r3, [r7, #0]
 80023b8:	68db      	ldr	r3, [r3, #12]
 80023ba:	461a      	mov	r2, r3
 80023bc:	f000 f916 	bl	80025ec <TIM_TI1_ConfigInputStage>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	2150      	movs	r1, #80	; 0x50
 80023c6:	4618      	mov	r0, r3
 80023c8:	f000 f96f 	bl	80026aa <TIM_ITRx_SetConfig>
 80023cc:	e02c      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6818      	ldr	r0, [r3, #0]
 80023d2:	683b      	ldr	r3, [r7, #0]
 80023d4:	6859      	ldr	r1, [r3, #4]
 80023d6:	683b      	ldr	r3, [r7, #0]
 80023d8:	68db      	ldr	r3, [r3, #12]
 80023da:	461a      	mov	r2, r3
 80023dc:	f000 f935 	bl	800264a <TIM_TI2_ConfigInputStage>
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	2160      	movs	r1, #96	; 0x60
 80023e6:	4618      	mov	r0, r3
 80023e8:	f000 f95f 	bl	80026aa <TIM_ITRx_SetConfig>
 80023ec:	e01c      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	6818      	ldr	r0, [r3, #0]
 80023f2:	683b      	ldr	r3, [r7, #0]
 80023f4:	6859      	ldr	r1, [r3, #4]
 80023f6:	683b      	ldr	r3, [r7, #0]
 80023f8:	68db      	ldr	r3, [r3, #12]
 80023fa:	461a      	mov	r2, r3
 80023fc:	f000 f8f6 	bl	80025ec <TIM_TI1_ConfigInputStage>
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	2140      	movs	r1, #64	; 0x40
 8002406:	4618      	mov	r0, r3
 8002408:	f000 f94f 	bl	80026aa <TIM_ITRx_SetConfig>
 800240c:	e00c      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	681a      	ldr	r2, [r3, #0]
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	4619      	mov	r1, r3
 8002418:	4610      	mov	r0, r2
 800241a:	f000 f946 	bl	80026aa <TIM_ITRx_SetConfig>
 800241e:	e003      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 8002420:	2301      	movs	r3, #1
 8002422:	73fb      	strb	r3, [r7, #15]
 8002424:	e000      	b.n	8002428 <HAL_TIM_ConfigClockSource+0x174>
 8002426:	bf00      	nop
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	2201      	movs	r2, #1
 800242c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	2200      	movs	r2, #0
 8002434:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002438:	7bfb      	ldrb	r3, [r7, #15]
 800243a:	4618      	mov	r0, r3
 800243c:	3710      	adds	r7, #16
 800243e:	46bd      	mov	sp, r7
 8002440:	bd80      	pop	{r7, pc}

08002442 <HAL_TIM_OC_DelayElapsedCallback>:
 8002442:	b480      	push	{r7}
 8002444:	b083      	sub	sp, #12
 8002446:	af00      	add	r7, sp, #0
 8002448:	6078      	str	r0, [r7, #4]
 800244a:	bf00      	nop
 800244c:	370c      	adds	r7, #12
 800244e:	46bd      	mov	sp, r7
 8002450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002454:	4770      	bx	lr

08002456 <HAL_TIM_IC_CaptureCallback>:
 8002456:	b480      	push	{r7}
 8002458:	b083      	sub	sp, #12
 800245a:	af00      	add	r7, sp, #0
 800245c:	6078      	str	r0, [r7, #4]
 800245e:	bf00      	nop
 8002460:	370c      	adds	r7, #12
 8002462:	46bd      	mov	sp, r7
 8002464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002468:	4770      	bx	lr

0800246a <HAL_TIM_PWM_PulseFinishedCallback>:
 800246a:	b480      	push	{r7}
 800246c:	b083      	sub	sp, #12
 800246e:	af00      	add	r7, sp, #0
 8002470:	6078      	str	r0, [r7, #4]
 8002472:	bf00      	nop
 8002474:	370c      	adds	r7, #12
 8002476:	46bd      	mov	sp, r7
 8002478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247c:	4770      	bx	lr

0800247e <HAL_TIM_TriggerCallback>:
 800247e:	b480      	push	{r7}
 8002480:	b083      	sub	sp, #12
 8002482:	af00      	add	r7, sp, #0
 8002484:	6078      	str	r0, [r7, #4]
 8002486:	bf00      	nop
 8002488:	370c      	adds	r7, #12
 800248a:	46bd      	mov	sp, r7
 800248c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002490:	4770      	bx	lr
	...

08002494 <TIM_Base_SetConfig>:
 8002494:	b480      	push	{r7}
 8002496:	b085      	sub	sp, #20
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
 800249c:	6039      	str	r1, [r7, #0]
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	60fb      	str	r3, [r7, #12]
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	4a46      	ldr	r2, [pc, #280]	; (80025c0 <TIM_Base_SetConfig+0x12c>)
 80024a8:	4293      	cmp	r3, r2
 80024aa:	d013      	beq.n	80024d4 <TIM_Base_SetConfig+0x40>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024b2:	d00f      	beq.n	80024d4 <TIM_Base_SetConfig+0x40>
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	4a43      	ldr	r2, [pc, #268]	; (80025c4 <TIM_Base_SetConfig+0x130>)
 80024b8:	4293      	cmp	r3, r2
 80024ba:	d00b      	beq.n	80024d4 <TIM_Base_SetConfig+0x40>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	4a42      	ldr	r2, [pc, #264]	; (80025c8 <TIM_Base_SetConfig+0x134>)
 80024c0:	4293      	cmp	r3, r2
 80024c2:	d007      	beq.n	80024d4 <TIM_Base_SetConfig+0x40>
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	4a41      	ldr	r2, [pc, #260]	; (80025cc <TIM_Base_SetConfig+0x138>)
 80024c8:	4293      	cmp	r3, r2
 80024ca:	d003      	beq.n	80024d4 <TIM_Base_SetConfig+0x40>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	4a40      	ldr	r2, [pc, #256]	; (80025d0 <TIM_Base_SetConfig+0x13c>)
 80024d0:	4293      	cmp	r3, r2
 80024d2:	d108      	bne.n	80024e6 <TIM_Base_SetConfig+0x52>
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80024da:	60fb      	str	r3, [r7, #12]
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	685b      	ldr	r3, [r3, #4]
 80024e0:	68fa      	ldr	r2, [r7, #12]
 80024e2:	4313      	orrs	r3, r2
 80024e4:	60fb      	str	r3, [r7, #12]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	4a35      	ldr	r2, [pc, #212]	; (80025c0 <TIM_Base_SetConfig+0x12c>)
 80024ea:	4293      	cmp	r3, r2
 80024ec:	d02b      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80024f4:	d027      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	4a32      	ldr	r2, [pc, #200]	; (80025c4 <TIM_Base_SetConfig+0x130>)
 80024fa:	4293      	cmp	r3, r2
 80024fc:	d023      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	4a31      	ldr	r2, [pc, #196]	; (80025c8 <TIM_Base_SetConfig+0x134>)
 8002502:	4293      	cmp	r3, r2
 8002504:	d01f      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	4a30      	ldr	r2, [pc, #192]	; (80025cc <TIM_Base_SetConfig+0x138>)
 800250a:	4293      	cmp	r3, r2
 800250c:	d01b      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	4a2f      	ldr	r2, [pc, #188]	; (80025d0 <TIM_Base_SetConfig+0x13c>)
 8002512:	4293      	cmp	r3, r2
 8002514:	d017      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	4a2e      	ldr	r2, [pc, #184]	; (80025d4 <TIM_Base_SetConfig+0x140>)
 800251a:	4293      	cmp	r3, r2
 800251c:	d013      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	4a2d      	ldr	r2, [pc, #180]	; (80025d8 <TIM_Base_SetConfig+0x144>)
 8002522:	4293      	cmp	r3, r2
 8002524:	d00f      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	4a2c      	ldr	r2, [pc, #176]	; (80025dc <TIM_Base_SetConfig+0x148>)
 800252a:	4293      	cmp	r3, r2
 800252c:	d00b      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	4a2b      	ldr	r2, [pc, #172]	; (80025e0 <TIM_Base_SetConfig+0x14c>)
 8002532:	4293      	cmp	r3, r2
 8002534:	d007      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	4a2a      	ldr	r2, [pc, #168]	; (80025e4 <TIM_Base_SetConfig+0x150>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d003      	beq.n	8002546 <TIM_Base_SetConfig+0xb2>
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	4a29      	ldr	r2, [pc, #164]	; (80025e8 <TIM_Base_SetConfig+0x154>)
 8002542:	4293      	cmp	r3, r2
 8002544:	d108      	bne.n	8002558 <TIM_Base_SetConfig+0xc4>
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800254c:	60fb      	str	r3, [r7, #12]
 800254e:	683b      	ldr	r3, [r7, #0]
 8002550:	68db      	ldr	r3, [r3, #12]
 8002552:	68fa      	ldr	r2, [r7, #12]
 8002554:	4313      	orrs	r3, r2
 8002556:	60fb      	str	r3, [r7, #12]
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	695b      	ldr	r3, [r3, #20]
 8002562:	4313      	orrs	r3, r2
 8002564:	60fb      	str	r3, [r7, #12]
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	68fa      	ldr	r2, [r7, #12]
 800256a:	601a      	str	r2, [r3, #0]
 800256c:	683b      	ldr	r3, [r7, #0]
 800256e:	689a      	ldr	r2, [r3, #8]
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	62da      	str	r2, [r3, #44]	; 0x2c
 8002574:	683b      	ldr	r3, [r7, #0]
 8002576:	681a      	ldr	r2, [r3, #0]
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	629a      	str	r2, [r3, #40]	; 0x28
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	4a10      	ldr	r2, [pc, #64]	; (80025c0 <TIM_Base_SetConfig+0x12c>)
 8002580:	4293      	cmp	r3, r2
 8002582:	d003      	beq.n	800258c <TIM_Base_SetConfig+0xf8>
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	4a12      	ldr	r2, [pc, #72]	; (80025d0 <TIM_Base_SetConfig+0x13c>)
 8002588:	4293      	cmp	r3, r2
 800258a:	d103      	bne.n	8002594 <TIM_Base_SetConfig+0x100>
 800258c:	683b      	ldr	r3, [r7, #0]
 800258e:	691a      	ldr	r2, [r3, #16]
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	631a      	str	r2, [r3, #48]	; 0x30
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	2201      	movs	r2, #1
 8002598:	615a      	str	r2, [r3, #20]
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	691b      	ldr	r3, [r3, #16]
 800259e:	f003 0301 	and.w	r3, r3, #1
 80025a2:	2b01      	cmp	r3, #1
 80025a4:	d105      	bne.n	80025b2 <TIM_Base_SetConfig+0x11e>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	691b      	ldr	r3, [r3, #16]
 80025aa:	f023 0201 	bic.w	r2, r3, #1
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	611a      	str	r2, [r3, #16]
 80025b2:	bf00      	nop
 80025b4:	3714      	adds	r7, #20
 80025b6:	46bd      	mov	sp, r7
 80025b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025bc:	4770      	bx	lr
 80025be:	bf00      	nop
 80025c0:	40010000 	.word	0x40010000
 80025c4:	40000400 	.word	0x40000400
 80025c8:	40000800 	.word	0x40000800
 80025cc:	40000c00 	.word	0x40000c00
 80025d0:	40010400 	.word	0x40010400
 80025d4:	40014000 	.word	0x40014000
 80025d8:	40014400 	.word	0x40014400
 80025dc:	40014800 	.word	0x40014800
 80025e0:	40001800 	.word	0x40001800
 80025e4:	40001c00 	.word	0x40001c00
 80025e8:	40002000 	.word	0x40002000

080025ec <TIM_TI1_ConfigInputStage>:
 80025ec:	b480      	push	{r7}
 80025ee:	b087      	sub	sp, #28
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	60f8      	str	r0, [r7, #12]
 80025f4:	60b9      	str	r1, [r7, #8]
 80025f6:	607a      	str	r2, [r7, #4]
 80025f8:	68fb      	ldr	r3, [r7, #12]
 80025fa:	6a1b      	ldr	r3, [r3, #32]
 80025fc:	617b      	str	r3, [r7, #20]
 80025fe:	68fb      	ldr	r3, [r7, #12]
 8002600:	6a1b      	ldr	r3, [r3, #32]
 8002602:	f023 0201 	bic.w	r2, r3, #1
 8002606:	68fb      	ldr	r3, [r7, #12]
 8002608:	621a      	str	r2, [r3, #32]
 800260a:	68fb      	ldr	r3, [r7, #12]
 800260c:	699b      	ldr	r3, [r3, #24]
 800260e:	613b      	str	r3, [r7, #16]
 8002610:	693b      	ldr	r3, [r7, #16]
 8002612:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002616:	613b      	str	r3, [r7, #16]
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	011b      	lsls	r3, r3, #4
 800261c:	693a      	ldr	r2, [r7, #16]
 800261e:	4313      	orrs	r3, r2
 8002620:	613b      	str	r3, [r7, #16]
 8002622:	697b      	ldr	r3, [r7, #20]
 8002624:	f023 030a 	bic.w	r3, r3, #10
 8002628:	617b      	str	r3, [r7, #20]
 800262a:	697a      	ldr	r2, [r7, #20]
 800262c:	68bb      	ldr	r3, [r7, #8]
 800262e:	4313      	orrs	r3, r2
 8002630:	617b      	str	r3, [r7, #20]
 8002632:	68fb      	ldr	r3, [r7, #12]
 8002634:	693a      	ldr	r2, [r7, #16]
 8002636:	619a      	str	r2, [r3, #24]
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	697a      	ldr	r2, [r7, #20]
 800263c:	621a      	str	r2, [r3, #32]
 800263e:	bf00      	nop
 8002640:	371c      	adds	r7, #28
 8002642:	46bd      	mov	sp, r7
 8002644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002648:	4770      	bx	lr

0800264a <TIM_TI2_ConfigInputStage>:
 800264a:	b480      	push	{r7}
 800264c:	b087      	sub	sp, #28
 800264e:	af00      	add	r7, sp, #0
 8002650:	60f8      	str	r0, [r7, #12]
 8002652:	60b9      	str	r1, [r7, #8]
 8002654:	607a      	str	r2, [r7, #4]
 8002656:	68fb      	ldr	r3, [r7, #12]
 8002658:	6a1b      	ldr	r3, [r3, #32]
 800265a:	617b      	str	r3, [r7, #20]
 800265c:	68fb      	ldr	r3, [r7, #12]
 800265e:	6a1b      	ldr	r3, [r3, #32]
 8002660:	f023 0210 	bic.w	r2, r3, #16
 8002664:	68fb      	ldr	r3, [r7, #12]
 8002666:	621a      	str	r2, [r3, #32]
 8002668:	68fb      	ldr	r3, [r7, #12]
 800266a:	699b      	ldr	r3, [r3, #24]
 800266c:	613b      	str	r3, [r7, #16]
 800266e:	693b      	ldr	r3, [r7, #16]
 8002670:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002674:	613b      	str	r3, [r7, #16]
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	031b      	lsls	r3, r3, #12
 800267a:	693a      	ldr	r2, [r7, #16]
 800267c:	4313      	orrs	r3, r2
 800267e:	613b      	str	r3, [r7, #16]
 8002680:	697b      	ldr	r3, [r7, #20]
 8002682:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002686:	617b      	str	r3, [r7, #20]
 8002688:	68bb      	ldr	r3, [r7, #8]
 800268a:	011b      	lsls	r3, r3, #4
 800268c:	697a      	ldr	r2, [r7, #20]
 800268e:	4313      	orrs	r3, r2
 8002690:	617b      	str	r3, [r7, #20]
 8002692:	68fb      	ldr	r3, [r7, #12]
 8002694:	693a      	ldr	r2, [r7, #16]
 8002696:	619a      	str	r2, [r3, #24]
 8002698:	68fb      	ldr	r3, [r7, #12]
 800269a:	697a      	ldr	r2, [r7, #20]
 800269c:	621a      	str	r2, [r3, #32]
 800269e:	bf00      	nop
 80026a0:	371c      	adds	r7, #28
 80026a2:	46bd      	mov	sp, r7
 80026a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026a8:	4770      	bx	lr

080026aa <TIM_ITRx_SetConfig>:
 80026aa:	b480      	push	{r7}
 80026ac:	b085      	sub	sp, #20
 80026ae:	af00      	add	r7, sp, #0
 80026b0:	6078      	str	r0, [r7, #4]
 80026b2:	6039      	str	r1, [r7, #0]
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	689b      	ldr	r3, [r3, #8]
 80026b8:	60fb      	str	r3, [r7, #12]
 80026ba:	68fb      	ldr	r3, [r7, #12]
 80026bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80026c0:	60fb      	str	r3, [r7, #12]
 80026c2:	683a      	ldr	r2, [r7, #0]
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	4313      	orrs	r3, r2
 80026c8:	f043 0307 	orr.w	r3, r3, #7
 80026cc:	60fb      	str	r3, [r7, #12]
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	68fa      	ldr	r2, [r7, #12]
 80026d2:	609a      	str	r2, [r3, #8]
 80026d4:	bf00      	nop
 80026d6:	3714      	adds	r7, #20
 80026d8:	46bd      	mov	sp, r7
 80026da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026de:	4770      	bx	lr

080026e0 <TIM_ETR_SetConfig>:
 80026e0:	b480      	push	{r7}
 80026e2:	b087      	sub	sp, #28
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	60f8      	str	r0, [r7, #12]
 80026e8:	60b9      	str	r1, [r7, #8]
 80026ea:	607a      	str	r2, [r7, #4]
 80026ec:	603b      	str	r3, [r7, #0]
 80026ee:	68fb      	ldr	r3, [r7, #12]
 80026f0:	689b      	ldr	r3, [r3, #8]
 80026f2:	617b      	str	r3, [r7, #20]
 80026f4:	697b      	ldr	r3, [r7, #20]
 80026f6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80026fa:	617b      	str	r3, [r7, #20]
 80026fc:	683b      	ldr	r3, [r7, #0]
 80026fe:	021a      	lsls	r2, r3, #8
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	431a      	orrs	r2, r3
 8002704:	68bb      	ldr	r3, [r7, #8]
 8002706:	4313      	orrs	r3, r2
 8002708:	697a      	ldr	r2, [r7, #20]
 800270a:	4313      	orrs	r3, r2
 800270c:	617b      	str	r3, [r7, #20]
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	697a      	ldr	r2, [r7, #20]
 8002712:	609a      	str	r2, [r3, #8]
 8002714:	bf00      	nop
 8002716:	371c      	adds	r7, #28
 8002718:	46bd      	mov	sp, r7
 800271a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800271e:	4770      	bx	lr

08002720 <HAL_TIMEx_MasterConfigSynchronization>:
 8002720:	b480      	push	{r7}
 8002722:	b085      	sub	sp, #20
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
 8002728:	6039      	str	r1, [r7, #0]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002730:	2b01      	cmp	r3, #1
 8002732:	d101      	bne.n	8002738 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002734:	2302      	movs	r3, #2
 8002736:	e05a      	b.n	80027ee <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	2201      	movs	r2, #1
 800273c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2202      	movs	r2, #2
 8002744:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	685b      	ldr	r3, [r3, #4]
 800274e:	60fb      	str	r3, [r7, #12]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	689b      	ldr	r3, [r3, #8]
 8002756:	60bb      	str	r3, [r7, #8]
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800275e:	60fb      	str	r3, [r7, #12]
 8002760:	683b      	ldr	r3, [r7, #0]
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	68fa      	ldr	r2, [r7, #12]
 8002766:	4313      	orrs	r3, r2
 8002768:	60fb      	str	r3, [r7, #12]
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	68fa      	ldr	r2, [r7, #12]
 8002770:	605a      	str	r2, [r3, #4]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	4a21      	ldr	r2, [pc, #132]	; (80027fc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8002778:	4293      	cmp	r3, r2
 800277a:	d022      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002784:	d01d      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	4a1d      	ldr	r2, [pc, #116]	; (8002800 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800278c:	4293      	cmp	r3, r2
 800278e:	d018      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	4a1b      	ldr	r2, [pc, #108]	; (8002804 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8002796:	4293      	cmp	r3, r2
 8002798:	d013      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	4a1a      	ldr	r2, [pc, #104]	; (8002808 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80027a0:	4293      	cmp	r3, r2
 80027a2:	d00e      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	4a18      	ldr	r2, [pc, #96]	; (800280c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80027aa:	4293      	cmp	r3, r2
 80027ac:	d009      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80027ae:	687b      	ldr	r3, [r7, #4]
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	4a17      	ldr	r2, [pc, #92]	; (8002810 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80027b4:	4293      	cmp	r3, r2
 80027b6:	d004      	beq.n	80027c2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	4a15      	ldr	r2, [pc, #84]	; (8002814 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80027be:	4293      	cmp	r3, r2
 80027c0:	d10c      	bne.n	80027dc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80027c2:	68bb      	ldr	r3, [r7, #8]
 80027c4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80027c8:	60bb      	str	r3, [r7, #8]
 80027ca:	683b      	ldr	r3, [r7, #0]
 80027cc:	685b      	ldr	r3, [r3, #4]
 80027ce:	68ba      	ldr	r2, [r7, #8]
 80027d0:	4313      	orrs	r3, r2
 80027d2:	60bb      	str	r3, [r7, #8]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	68ba      	ldr	r2, [r7, #8]
 80027da:	609a      	str	r2, [r3, #8]
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	2201      	movs	r2, #1
 80027e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	2200      	movs	r2, #0
 80027e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80027ec:	2300      	movs	r3, #0
 80027ee:	4618      	mov	r0, r3
 80027f0:	3714      	adds	r7, #20
 80027f2:	46bd      	mov	sp, r7
 80027f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f8:	4770      	bx	lr
 80027fa:	bf00      	nop
 80027fc:	40010000 	.word	0x40010000
 8002800:	40000400 	.word	0x40000400
 8002804:	40000800 	.word	0x40000800
 8002808:	40000c00 	.word	0x40000c00
 800280c:	40010400 	.word	0x40010400
 8002810:	40014000 	.word	0x40014000
 8002814:	40001800 	.word	0x40001800

08002818 <HAL_TIMEx_CommutCallback>:
 8002818:	b480      	push	{r7}
 800281a:	b083      	sub	sp, #12
 800281c:	af00      	add	r7, sp, #0
 800281e:	6078      	str	r0, [r7, #4]
 8002820:	bf00      	nop
 8002822:	370c      	adds	r7, #12
 8002824:	46bd      	mov	sp, r7
 8002826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282a:	4770      	bx	lr

0800282c <HAL_TIMEx_BreakCallback>:
 800282c:	b480      	push	{r7}
 800282e:	b083      	sub	sp, #12
 8002830:	af00      	add	r7, sp, #0
 8002832:	6078      	str	r0, [r7, #4]
 8002834:	bf00      	nop
 8002836:	370c      	adds	r7, #12
 8002838:	46bd      	mov	sp, r7
 800283a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800283e:	4770      	bx	lr

08002840 <__NVIC_SetPriority>:
 8002840:	b480      	push	{r7}
 8002842:	b083      	sub	sp, #12
 8002844:	af00      	add	r7, sp, #0
 8002846:	4603      	mov	r3, r0
 8002848:	6039      	str	r1, [r7, #0]
 800284a:	71fb      	strb	r3, [r7, #7]
 800284c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002850:	2b00      	cmp	r3, #0
 8002852:	db0a      	blt.n	800286a <__NVIC_SetPriority+0x2a>
 8002854:	683b      	ldr	r3, [r7, #0]
 8002856:	b2da      	uxtb	r2, r3
 8002858:	490c      	ldr	r1, [pc, #48]	; (800288c <__NVIC_SetPriority+0x4c>)
 800285a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800285e:	0112      	lsls	r2, r2, #4
 8002860:	b2d2      	uxtb	r2, r2
 8002862:	440b      	add	r3, r1
 8002864:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002868:	e00a      	b.n	8002880 <__NVIC_SetPriority+0x40>
 800286a:	683b      	ldr	r3, [r7, #0]
 800286c:	b2da      	uxtb	r2, r3
 800286e:	4908      	ldr	r1, [pc, #32]	; (8002890 <__NVIC_SetPriority+0x50>)
 8002870:	79fb      	ldrb	r3, [r7, #7]
 8002872:	f003 030f 	and.w	r3, r3, #15
 8002876:	3b04      	subs	r3, #4
 8002878:	0112      	lsls	r2, r2, #4
 800287a:	b2d2      	uxtb	r2, r2
 800287c:	440b      	add	r3, r1
 800287e:	761a      	strb	r2, [r3, #24]
 8002880:	bf00      	nop
 8002882:	370c      	adds	r7, #12
 8002884:	46bd      	mov	sp, r7
 8002886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288a:	4770      	bx	lr
 800288c:	e000e100 	.word	0xe000e100
 8002890:	e000ed00 	.word	0xe000ed00

08002894 <SysTick_Handler>:
 8002894:	b580      	push	{r7, lr}
 8002896:	af00      	add	r7, sp, #0
 8002898:	4b05      	ldr	r3, [pc, #20]	; (80028b0 <SysTick_Handler+0x1c>)
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	f002 fb0a 	bl	8004eb4 <xTaskGetSchedulerState>
 80028a0:	4603      	mov	r3, r0
 80028a2:	2b01      	cmp	r3, #1
 80028a4:	d001      	beq.n	80028aa <SysTick_Handler+0x16>
 80028a6:	f003 f927 	bl	8005af8 <xPortSysTickHandler>
 80028aa:	bf00      	nop
 80028ac:	bd80      	pop	{r7, pc}
 80028ae:	bf00      	nop
 80028b0:	e000e010 	.word	0xe000e010

080028b4 <SVC_Setup>:
 80028b4:	b580      	push	{r7, lr}
 80028b6:	af00      	add	r7, sp, #0
 80028b8:	2100      	movs	r1, #0
 80028ba:	f06f 0004 	mvn.w	r0, #4
 80028be:	f7ff ffbf 	bl	8002840 <__NVIC_SetPriority>
 80028c2:	bf00      	nop
 80028c4:	bd80      	pop	{r7, pc}
	...

080028c8 <osKernelInitialize>:
 80028c8:	b480      	push	{r7}
 80028ca:	b083      	sub	sp, #12
 80028cc:	af00      	add	r7, sp, #0
 80028ce:	f3ef 8305 	mrs	r3, IPSR
 80028d2:	603b      	str	r3, [r7, #0]
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	d003      	beq.n	80028e2 <osKernelInitialize+0x1a>
 80028da:	f06f 0305 	mvn.w	r3, #5
 80028de:	607b      	str	r3, [r7, #4]
 80028e0:	e00c      	b.n	80028fc <osKernelInitialize+0x34>
 80028e2:	4b0a      	ldr	r3, [pc, #40]	; (800290c <osKernelInitialize+0x44>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d105      	bne.n	80028f6 <osKernelInitialize+0x2e>
 80028ea:	4b08      	ldr	r3, [pc, #32]	; (800290c <osKernelInitialize+0x44>)
 80028ec:	2201      	movs	r2, #1
 80028ee:	601a      	str	r2, [r3, #0]
 80028f0:	2300      	movs	r3, #0
 80028f2:	607b      	str	r3, [r7, #4]
 80028f4:	e002      	b.n	80028fc <osKernelInitialize+0x34>
 80028f6:	f04f 33ff 	mov.w	r3, #4294967295
 80028fa:	607b      	str	r3, [r7, #4]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	4618      	mov	r0, r3
 8002900:	370c      	adds	r7, #12
 8002902:	46bd      	mov	sp, r7
 8002904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002908:	4770      	bx	lr
 800290a:	bf00      	nop
 800290c:	200001ac 	.word	0x200001ac

08002910 <osKernelStart>:
 8002910:	b580      	push	{r7, lr}
 8002912:	b082      	sub	sp, #8
 8002914:	af00      	add	r7, sp, #0
 8002916:	f3ef 8305 	mrs	r3, IPSR
 800291a:	603b      	str	r3, [r7, #0]
 800291c:	683b      	ldr	r3, [r7, #0]
 800291e:	2b00      	cmp	r3, #0
 8002920:	d003      	beq.n	800292a <osKernelStart+0x1a>
 8002922:	f06f 0305 	mvn.w	r3, #5
 8002926:	607b      	str	r3, [r7, #4]
 8002928:	e010      	b.n	800294c <osKernelStart+0x3c>
 800292a:	4b0b      	ldr	r3, [pc, #44]	; (8002958 <osKernelStart+0x48>)
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	2b01      	cmp	r3, #1
 8002930:	d109      	bne.n	8002946 <osKernelStart+0x36>
 8002932:	f7ff ffbf 	bl	80028b4 <SVC_Setup>
 8002936:	4b08      	ldr	r3, [pc, #32]	; (8002958 <osKernelStart+0x48>)
 8002938:	2202      	movs	r2, #2
 800293a:	601a      	str	r2, [r3, #0]
 800293c:	f001 fdc0 	bl	80044c0 <vTaskStartScheduler>
 8002940:	2300      	movs	r3, #0
 8002942:	607b      	str	r3, [r7, #4]
 8002944:	e002      	b.n	800294c <osKernelStart+0x3c>
 8002946:	f04f 33ff 	mov.w	r3, #4294967295
 800294a:	607b      	str	r3, [r7, #4]
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	4618      	mov	r0, r3
 8002950:	3708      	adds	r7, #8
 8002952:	46bd      	mov	sp, r7
 8002954:	bd80      	pop	{r7, pc}
 8002956:	bf00      	nop
 8002958:	200001ac 	.word	0x200001ac

0800295c <osThreadNew>:
 800295c:	b580      	push	{r7, lr}
 800295e:	b08e      	sub	sp, #56	; 0x38
 8002960:	af04      	add	r7, sp, #16
 8002962:	60f8      	str	r0, [r7, #12]
 8002964:	60b9      	str	r1, [r7, #8]
 8002966:	607a      	str	r2, [r7, #4]
 8002968:	2300      	movs	r3, #0
 800296a:	613b      	str	r3, [r7, #16]
 800296c:	f3ef 8305 	mrs	r3, IPSR
 8002970:	617b      	str	r3, [r7, #20]
 8002972:	697b      	ldr	r3, [r7, #20]
 8002974:	2b00      	cmp	r3, #0
 8002976:	d17e      	bne.n	8002a76 <osThreadNew+0x11a>
 8002978:	68fb      	ldr	r3, [r7, #12]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d07b      	beq.n	8002a76 <osThreadNew+0x11a>
 800297e:	2380      	movs	r3, #128	; 0x80
 8002980:	623b      	str	r3, [r7, #32]
 8002982:	2318      	movs	r3, #24
 8002984:	61fb      	str	r3, [r7, #28]
 8002986:	2300      	movs	r3, #0
 8002988:	627b      	str	r3, [r7, #36]	; 0x24
 800298a:	f04f 33ff 	mov.w	r3, #4294967295
 800298e:	61bb      	str	r3, [r7, #24]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	2b00      	cmp	r3, #0
 8002994:	d045      	beq.n	8002a22 <osThreadNew+0xc6>
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	2b00      	cmp	r3, #0
 800299c:	d002      	beq.n	80029a4 <osThreadNew+0x48>
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	627b      	str	r3, [r7, #36]	; 0x24
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	699b      	ldr	r3, [r3, #24]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d002      	beq.n	80029b2 <osThreadNew+0x56>
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	699b      	ldr	r3, [r3, #24]
 80029b0:	61fb      	str	r3, [r7, #28]
 80029b2:	69fb      	ldr	r3, [r7, #28]
 80029b4:	2b00      	cmp	r3, #0
 80029b6:	d008      	beq.n	80029ca <osThreadNew+0x6e>
 80029b8:	69fb      	ldr	r3, [r7, #28]
 80029ba:	2b38      	cmp	r3, #56	; 0x38
 80029bc:	d805      	bhi.n	80029ca <osThreadNew+0x6e>
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	685b      	ldr	r3, [r3, #4]
 80029c2:	f003 0301 	and.w	r3, r3, #1
 80029c6:	2b00      	cmp	r3, #0
 80029c8:	d001      	beq.n	80029ce <osThreadNew+0x72>
 80029ca:	2300      	movs	r3, #0
 80029cc:	e054      	b.n	8002a78 <osThreadNew+0x11c>
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	695b      	ldr	r3, [r3, #20]
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d003      	beq.n	80029de <osThreadNew+0x82>
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	695b      	ldr	r3, [r3, #20]
 80029da:	089b      	lsrs	r3, r3, #2
 80029dc:	623b      	str	r3, [r7, #32]
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	689b      	ldr	r3, [r3, #8]
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d00e      	beq.n	8002a04 <osThreadNew+0xa8>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	68db      	ldr	r3, [r3, #12]
 80029ea:	2ba7      	cmp	r3, #167	; 0xa7
 80029ec:	d90a      	bls.n	8002a04 <osThreadNew+0xa8>
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	691b      	ldr	r3, [r3, #16]
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d006      	beq.n	8002a04 <osThreadNew+0xa8>
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	695b      	ldr	r3, [r3, #20]
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d002      	beq.n	8002a04 <osThreadNew+0xa8>
 80029fe:	2301      	movs	r3, #1
 8002a00:	61bb      	str	r3, [r7, #24]
 8002a02:	e010      	b.n	8002a26 <osThreadNew+0xca>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	689b      	ldr	r3, [r3, #8]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d10c      	bne.n	8002a26 <osThreadNew+0xca>
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	68db      	ldr	r3, [r3, #12]
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	d108      	bne.n	8002a26 <osThreadNew+0xca>
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	691b      	ldr	r3, [r3, #16]
 8002a18:	2b00      	cmp	r3, #0
 8002a1a:	d104      	bne.n	8002a26 <osThreadNew+0xca>
 8002a1c:	2300      	movs	r3, #0
 8002a1e:	61bb      	str	r3, [r7, #24]
 8002a20:	e001      	b.n	8002a26 <osThreadNew+0xca>
 8002a22:	2300      	movs	r3, #0
 8002a24:	61bb      	str	r3, [r7, #24]
 8002a26:	69bb      	ldr	r3, [r7, #24]
 8002a28:	2b01      	cmp	r3, #1
 8002a2a:	d110      	bne.n	8002a4e <osThreadNew+0xf2>
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	691b      	ldr	r3, [r3, #16]
 8002a30:	687a      	ldr	r2, [r7, #4]
 8002a32:	6892      	ldr	r2, [r2, #8]
 8002a34:	9202      	str	r2, [sp, #8]
 8002a36:	9301      	str	r3, [sp, #4]
 8002a38:	69fb      	ldr	r3, [r7, #28]
 8002a3a:	9300      	str	r3, [sp, #0]
 8002a3c:	68bb      	ldr	r3, [r7, #8]
 8002a3e:	6a3a      	ldr	r2, [r7, #32]
 8002a40:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002a42:	68f8      	ldr	r0, [r7, #12]
 8002a44:	f001 fb84 	bl	8004150 <xTaskCreateStatic>
 8002a48:	4603      	mov	r3, r0
 8002a4a:	613b      	str	r3, [r7, #16]
 8002a4c:	e013      	b.n	8002a76 <osThreadNew+0x11a>
 8002a4e:	69bb      	ldr	r3, [r7, #24]
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	d110      	bne.n	8002a76 <osThreadNew+0x11a>
 8002a54:	6a3b      	ldr	r3, [r7, #32]
 8002a56:	b29a      	uxth	r2, r3
 8002a58:	f107 0310 	add.w	r3, r7, #16
 8002a5c:	9301      	str	r3, [sp, #4]
 8002a5e:	69fb      	ldr	r3, [r7, #28]
 8002a60:	9300      	str	r3, [sp, #0]
 8002a62:	68bb      	ldr	r3, [r7, #8]
 8002a64:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002a66:	68f8      	ldr	r0, [r7, #12]
 8002a68:	f001 fbcf 	bl	800420a <xTaskCreate>
 8002a6c:	4603      	mov	r3, r0
 8002a6e:	2b01      	cmp	r3, #1
 8002a70:	d001      	beq.n	8002a76 <osThreadNew+0x11a>
 8002a72:	2300      	movs	r3, #0
 8002a74:	613b      	str	r3, [r7, #16]
 8002a76:	693b      	ldr	r3, [r7, #16]
 8002a78:	4618      	mov	r0, r3
 8002a7a:	3728      	adds	r7, #40	; 0x28
 8002a7c:	46bd      	mov	sp, r7
 8002a7e:	bd80      	pop	{r7, pc}

08002a80 <osThreadYield>:
 8002a80:	b480      	push	{r7}
 8002a82:	b083      	sub	sp, #12
 8002a84:	af00      	add	r7, sp, #0
 8002a86:	f3ef 8305 	mrs	r3, IPSR
 8002a8a:	603b      	str	r3, [r7, #0]
 8002a8c:	683b      	ldr	r3, [r7, #0]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d003      	beq.n	8002a9a <osThreadYield+0x1a>
 8002a92:	f06f 0305 	mvn.w	r3, #5
 8002a96:	607b      	str	r3, [r7, #4]
 8002a98:	e009      	b.n	8002aae <osThreadYield+0x2e>
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	607b      	str	r3, [r7, #4]
 8002a9e:	4b07      	ldr	r3, [pc, #28]	; (8002abc <osThreadYield+0x3c>)
 8002aa0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002aa4:	601a      	str	r2, [r3, #0]
 8002aa6:	f3bf 8f4f 	dsb	sy
 8002aaa:	f3bf 8f6f 	isb	sy
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	4618      	mov	r0, r3
 8002ab2:	370c      	adds	r7, #12
 8002ab4:	46bd      	mov	sp, r7
 8002ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aba:	4770      	bx	lr
 8002abc:	e000ed04 	.word	0xe000ed04

08002ac0 <osEventFlagsNew>:
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b086      	sub	sp, #24
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	2300      	movs	r3, #0
 8002aca:	617b      	str	r3, [r7, #20]
 8002acc:	f3ef 8305 	mrs	r3, IPSR
 8002ad0:	60fb      	str	r3, [r7, #12]
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d12d      	bne.n	8002b34 <osEventFlagsNew+0x74>
 8002ad8:	f04f 33ff 	mov.w	r3, #4294967295
 8002adc:	613b      	str	r3, [r7, #16]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	d015      	beq.n	8002b10 <osEventFlagsNew+0x50>
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	689b      	ldr	r3, [r3, #8]
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d006      	beq.n	8002afa <osEventFlagsNew+0x3a>
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	2b1f      	cmp	r3, #31
 8002af2:	d902      	bls.n	8002afa <osEventFlagsNew+0x3a>
 8002af4:	2301      	movs	r3, #1
 8002af6:	613b      	str	r3, [r7, #16]
 8002af8:	e00c      	b.n	8002b14 <osEventFlagsNew+0x54>
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	689b      	ldr	r3, [r3, #8]
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d108      	bne.n	8002b14 <osEventFlagsNew+0x54>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	68db      	ldr	r3, [r3, #12]
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	d104      	bne.n	8002b14 <osEventFlagsNew+0x54>
 8002b0a:	2300      	movs	r3, #0
 8002b0c:	613b      	str	r3, [r7, #16]
 8002b0e:	e001      	b.n	8002b14 <osEventFlagsNew+0x54>
 8002b10:	2300      	movs	r3, #0
 8002b12:	613b      	str	r3, [r7, #16]
 8002b14:	693b      	ldr	r3, [r7, #16]
 8002b16:	2b01      	cmp	r3, #1
 8002b18:	d106      	bne.n	8002b28 <osEventFlagsNew+0x68>
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	689b      	ldr	r3, [r3, #8]
 8002b1e:	4618      	mov	r0, r3
 8002b20:	f000 fa50 	bl	8002fc4 <xEventGroupCreateStatic>
 8002b24:	6178      	str	r0, [r7, #20]
 8002b26:	e005      	b.n	8002b34 <osEventFlagsNew+0x74>
 8002b28:	693b      	ldr	r3, [r7, #16]
 8002b2a:	2b00      	cmp	r3, #0
 8002b2c:	d102      	bne.n	8002b34 <osEventFlagsNew+0x74>
 8002b2e:	f000 fa80 	bl	8003032 <xEventGroupCreate>
 8002b32:	6178      	str	r0, [r7, #20]
 8002b34:	697b      	ldr	r3, [r7, #20]
 8002b36:	4618      	mov	r0, r3
 8002b38:	3718      	adds	r7, #24
 8002b3a:	46bd      	mov	sp, r7
 8002b3c:	bd80      	pop	{r7, pc}
	...

08002b40 <osEventFlagsSet>:
 8002b40:	b580      	push	{r7, lr}
 8002b42:	b086      	sub	sp, #24
 8002b44:	af00      	add	r7, sp, #0
 8002b46:	6078      	str	r0, [r7, #4]
 8002b48:	6039      	str	r1, [r7, #0]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	613b      	str	r3, [r7, #16]
 8002b4e:	693b      	ldr	r3, [r7, #16]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d004      	beq.n	8002b5e <osEventFlagsSet+0x1e>
 8002b54:	683b      	ldr	r3, [r7, #0]
 8002b56:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d003      	beq.n	8002b66 <osEventFlagsSet+0x26>
 8002b5e:	f06f 0303 	mvn.w	r3, #3
 8002b62:	617b      	str	r3, [r7, #20]
 8002b64:	e028      	b.n	8002bb8 <osEventFlagsSet+0x78>
 8002b66:	f3ef 8305 	mrs	r3, IPSR
 8002b6a:	60fb      	str	r3, [r7, #12]
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	2b00      	cmp	r3, #0
 8002b70:	d01d      	beq.n	8002bae <osEventFlagsSet+0x6e>
 8002b72:	2300      	movs	r3, #0
 8002b74:	60bb      	str	r3, [r7, #8]
 8002b76:	f107 0308 	add.w	r3, r7, #8
 8002b7a:	461a      	mov	r2, r3
 8002b7c:	6839      	ldr	r1, [r7, #0]
 8002b7e:	6938      	ldr	r0, [r7, #16]
 8002b80:	f000 fc78 	bl	8003474 <xEventGroupSetBitsFromISR>
 8002b84:	4603      	mov	r3, r0
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d103      	bne.n	8002b92 <osEventFlagsSet+0x52>
 8002b8a:	f06f 0302 	mvn.w	r3, #2
 8002b8e:	617b      	str	r3, [r7, #20]
 8002b90:	e012      	b.n	8002bb8 <osEventFlagsSet+0x78>
 8002b92:	683b      	ldr	r3, [r7, #0]
 8002b94:	617b      	str	r3, [r7, #20]
 8002b96:	68bb      	ldr	r3, [r7, #8]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d00d      	beq.n	8002bb8 <osEventFlagsSet+0x78>
 8002b9c:	4b09      	ldr	r3, [pc, #36]	; (8002bc4 <osEventFlagsSet+0x84>)
 8002b9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002ba2:	601a      	str	r2, [r3, #0]
 8002ba4:	f3bf 8f4f 	dsb	sy
 8002ba8:	f3bf 8f6f 	isb	sy
 8002bac:	e004      	b.n	8002bb8 <osEventFlagsSet+0x78>
 8002bae:	6839      	ldr	r1, [r7, #0]
 8002bb0:	6938      	ldr	r0, [r7, #16]
 8002bb2:	f000 fb97 	bl	80032e4 <xEventGroupSetBits>
 8002bb6:	6178      	str	r0, [r7, #20]
 8002bb8:	697b      	ldr	r3, [r7, #20]
 8002bba:	4618      	mov	r0, r3
 8002bbc:	3718      	adds	r7, #24
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bd80      	pop	{r7, pc}
 8002bc2:	bf00      	nop
 8002bc4:	e000ed04 	.word	0xe000ed04

08002bc8 <osEventFlagsClear>:
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b086      	sub	sp, #24
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	6078      	str	r0, [r7, #4]
 8002bd0:	6039      	str	r1, [r7, #0]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	613b      	str	r3, [r7, #16]
 8002bd6:	693b      	ldr	r3, [r7, #16]
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d004      	beq.n	8002be6 <osEventFlagsClear+0x1e>
 8002bdc:	683b      	ldr	r3, [r7, #0]
 8002bde:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	d003      	beq.n	8002bee <osEventFlagsClear+0x26>
 8002be6:	f06f 0303 	mvn.w	r3, #3
 8002bea:	617b      	str	r3, [r7, #20]
 8002bec:	e019      	b.n	8002c22 <osEventFlagsClear+0x5a>
 8002bee:	f3ef 8305 	mrs	r3, IPSR
 8002bf2:	60fb      	str	r3, [r7, #12]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	2b00      	cmp	r3, #0
 8002bf8:	d00e      	beq.n	8002c18 <osEventFlagsClear+0x50>
 8002bfa:	6938      	ldr	r0, [r7, #16]
 8002bfc:	f000 fb4e 	bl	800329c <xEventGroupGetBitsFromISR>
 8002c00:	6178      	str	r0, [r7, #20]
 8002c02:	6839      	ldr	r1, [r7, #0]
 8002c04:	6938      	ldr	r0, [r7, #16]
 8002c06:	f000 fb35 	bl	8003274 <xEventGroupClearBitsFromISR>
 8002c0a:	4603      	mov	r3, r0
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d108      	bne.n	8002c22 <osEventFlagsClear+0x5a>
 8002c10:	f06f 0302 	mvn.w	r3, #2
 8002c14:	617b      	str	r3, [r7, #20]
 8002c16:	e004      	b.n	8002c22 <osEventFlagsClear+0x5a>
 8002c18:	6839      	ldr	r1, [r7, #0]
 8002c1a:	6938      	ldr	r0, [r7, #16]
 8002c1c:	f000 faf2 	bl	8003204 <xEventGroupClearBits>
 8002c20:	6178      	str	r0, [r7, #20]
 8002c22:	697b      	ldr	r3, [r7, #20]
 8002c24:	4618      	mov	r0, r3
 8002c26:	3718      	adds	r7, #24
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd80      	pop	{r7, pc}

08002c2c <osEventFlagsWait>:
 8002c2c:	b580      	push	{r7, lr}
 8002c2e:	b08c      	sub	sp, #48	; 0x30
 8002c30:	af02      	add	r7, sp, #8
 8002c32:	60f8      	str	r0, [r7, #12]
 8002c34:	60b9      	str	r1, [r7, #8]
 8002c36:	607a      	str	r2, [r7, #4]
 8002c38:	603b      	str	r3, [r7, #0]
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	61bb      	str	r3, [r7, #24]
 8002c3e:	69bb      	ldr	r3, [r7, #24]
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d004      	beq.n	8002c4e <osEventFlagsWait+0x22>
 8002c44:	68bb      	ldr	r3, [r7, #8]
 8002c46:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d003      	beq.n	8002c56 <osEventFlagsWait+0x2a>
 8002c4e:	f06f 0303 	mvn.w	r3, #3
 8002c52:	61fb      	str	r3, [r7, #28]
 8002c54:	e04b      	b.n	8002cee <osEventFlagsWait+0xc2>
 8002c56:	f3ef 8305 	mrs	r3, IPSR
 8002c5a:	617b      	str	r3, [r7, #20]
 8002c5c:	697b      	ldr	r3, [r7, #20]
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d003      	beq.n	8002c6a <osEventFlagsWait+0x3e>
 8002c62:	f06f 0305 	mvn.w	r3, #5
 8002c66:	61fb      	str	r3, [r7, #28]
 8002c68:	e041      	b.n	8002cee <osEventFlagsWait+0xc2>
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	f003 0301 	and.w	r3, r3, #1
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d002      	beq.n	8002c7a <osEventFlagsWait+0x4e>
 8002c74:	2301      	movs	r3, #1
 8002c76:	627b      	str	r3, [r7, #36]	; 0x24
 8002c78:	e001      	b.n	8002c7e <osEventFlagsWait+0x52>
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	627b      	str	r3, [r7, #36]	; 0x24
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	f003 0302 	and.w	r3, r3, #2
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	d002      	beq.n	8002c8e <osEventFlagsWait+0x62>
 8002c88:	2300      	movs	r3, #0
 8002c8a:	623b      	str	r3, [r7, #32]
 8002c8c:	e001      	b.n	8002c92 <osEventFlagsWait+0x66>
 8002c8e:	2301      	movs	r3, #1
 8002c90:	623b      	str	r3, [r7, #32]
 8002c92:	683b      	ldr	r3, [r7, #0]
 8002c94:	9300      	str	r3, [sp, #0]
 8002c96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c98:	6a3a      	ldr	r2, [r7, #32]
 8002c9a:	68b9      	ldr	r1, [r7, #8]
 8002c9c:	69b8      	ldr	r0, [r7, #24]
 8002c9e:	f000 f9e3 	bl	8003068 <xEventGroupWaitBits>
 8002ca2:	61f8      	str	r0, [r7, #28]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	f003 0301 	and.w	r3, r3, #1
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d010      	beq.n	8002cd0 <osEventFlagsWait+0xa4>
 8002cae:	68ba      	ldr	r2, [r7, #8]
 8002cb0:	69fb      	ldr	r3, [r7, #28]
 8002cb2:	4013      	ands	r3, r2
 8002cb4:	68ba      	ldr	r2, [r7, #8]
 8002cb6:	429a      	cmp	r2, r3
 8002cb8:	d019      	beq.n	8002cee <osEventFlagsWait+0xc2>
 8002cba:	683b      	ldr	r3, [r7, #0]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d003      	beq.n	8002cc8 <osEventFlagsWait+0x9c>
 8002cc0:	f06f 0301 	mvn.w	r3, #1
 8002cc4:	61fb      	str	r3, [r7, #28]
 8002cc6:	e012      	b.n	8002cee <osEventFlagsWait+0xc2>
 8002cc8:	f06f 0302 	mvn.w	r3, #2
 8002ccc:	61fb      	str	r3, [r7, #28]
 8002cce:	e00e      	b.n	8002cee <osEventFlagsWait+0xc2>
 8002cd0:	68ba      	ldr	r2, [r7, #8]
 8002cd2:	69fb      	ldr	r3, [r7, #28]
 8002cd4:	4013      	ands	r3, r2
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d109      	bne.n	8002cee <osEventFlagsWait+0xc2>
 8002cda:	683b      	ldr	r3, [r7, #0]
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d003      	beq.n	8002ce8 <osEventFlagsWait+0xbc>
 8002ce0:	f06f 0301 	mvn.w	r3, #1
 8002ce4:	61fb      	str	r3, [r7, #28]
 8002ce6:	e002      	b.n	8002cee <osEventFlagsWait+0xc2>
 8002ce8:	f06f 0302 	mvn.w	r3, #2
 8002cec:	61fb      	str	r3, [r7, #28]
 8002cee:	69fb      	ldr	r3, [r7, #28]
 8002cf0:	4618      	mov	r0, r3
 8002cf2:	3728      	adds	r7, #40	; 0x28
 8002cf4:	46bd      	mov	sp, r7
 8002cf6:	bd80      	pop	{r7, pc}

08002cf8 <osMessageQueueNew>:
 8002cf8:	b580      	push	{r7, lr}
 8002cfa:	b08a      	sub	sp, #40	; 0x28
 8002cfc:	af02      	add	r7, sp, #8
 8002cfe:	60f8      	str	r0, [r7, #12]
 8002d00:	60b9      	str	r1, [r7, #8]
 8002d02:	607a      	str	r2, [r7, #4]
 8002d04:	2300      	movs	r3, #0
 8002d06:	61fb      	str	r3, [r7, #28]
 8002d08:	f3ef 8305 	mrs	r3, IPSR
 8002d0c:	613b      	str	r3, [r7, #16]
 8002d0e:	693b      	ldr	r3, [r7, #16]
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d15f      	bne.n	8002dd4 <osMessageQueueNew+0xdc>
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d05c      	beq.n	8002dd4 <osMessageQueueNew+0xdc>
 8002d1a:	68bb      	ldr	r3, [r7, #8]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d059      	beq.n	8002dd4 <osMessageQueueNew+0xdc>
 8002d20:	f04f 33ff 	mov.w	r3, #4294967295
 8002d24:	61bb      	str	r3, [r7, #24]
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	d029      	beq.n	8002d80 <osMessageQueueNew+0x88>
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	689b      	ldr	r3, [r3, #8]
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d012      	beq.n	8002d5a <osMessageQueueNew+0x62>
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	68db      	ldr	r3, [r3, #12]
 8002d38:	2b4f      	cmp	r3, #79	; 0x4f
 8002d3a:	d90e      	bls.n	8002d5a <osMessageQueueNew+0x62>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	691b      	ldr	r3, [r3, #16]
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d00a      	beq.n	8002d5a <osMessageQueueNew+0x62>
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	695a      	ldr	r2, [r3, #20]
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	68b9      	ldr	r1, [r7, #8]
 8002d4c:	fb01 f303 	mul.w	r3, r1, r3
 8002d50:	429a      	cmp	r2, r3
 8002d52:	d302      	bcc.n	8002d5a <osMessageQueueNew+0x62>
 8002d54:	2301      	movs	r3, #1
 8002d56:	61bb      	str	r3, [r7, #24]
 8002d58:	e014      	b.n	8002d84 <osMessageQueueNew+0x8c>
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	689b      	ldr	r3, [r3, #8]
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d110      	bne.n	8002d84 <osMessageQueueNew+0x8c>
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	68db      	ldr	r3, [r3, #12]
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d10c      	bne.n	8002d84 <osMessageQueueNew+0x8c>
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	691b      	ldr	r3, [r3, #16]
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d108      	bne.n	8002d84 <osMessageQueueNew+0x8c>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	695b      	ldr	r3, [r3, #20]
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	d104      	bne.n	8002d84 <osMessageQueueNew+0x8c>
 8002d7a:	2300      	movs	r3, #0
 8002d7c:	61bb      	str	r3, [r7, #24]
 8002d7e:	e001      	b.n	8002d84 <osMessageQueueNew+0x8c>
 8002d80:	2300      	movs	r3, #0
 8002d82:	61bb      	str	r3, [r7, #24]
 8002d84:	69bb      	ldr	r3, [r7, #24]
 8002d86:	2b01      	cmp	r3, #1
 8002d88:	d10b      	bne.n	8002da2 <osMessageQueueNew+0xaa>
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	691a      	ldr	r2, [r3, #16]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	689b      	ldr	r3, [r3, #8]
 8002d92:	2100      	movs	r1, #0
 8002d94:	9100      	str	r1, [sp, #0]
 8002d96:	68b9      	ldr	r1, [r7, #8]
 8002d98:	68f8      	ldr	r0, [r7, #12]
 8002d9a:	f000 fc9b 	bl	80036d4 <xQueueGenericCreateStatic>
 8002d9e:	61f8      	str	r0, [r7, #28]
 8002da0:	e008      	b.n	8002db4 <osMessageQueueNew+0xbc>
 8002da2:	69bb      	ldr	r3, [r7, #24]
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d105      	bne.n	8002db4 <osMessageQueueNew+0xbc>
 8002da8:	2200      	movs	r2, #0
 8002daa:	68b9      	ldr	r1, [r7, #8]
 8002dac:	68f8      	ldr	r0, [r7, #12]
 8002dae:	f000 fd09 	bl	80037c4 <xQueueGenericCreate>
 8002db2:	61f8      	str	r0, [r7, #28]
 8002db4:	69fb      	ldr	r3, [r7, #28]
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d00c      	beq.n	8002dd4 <osMessageQueueNew+0xdc>
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d003      	beq.n	8002dc8 <osMessageQueueNew+0xd0>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	617b      	str	r3, [r7, #20]
 8002dc6:	e001      	b.n	8002dcc <osMessageQueueNew+0xd4>
 8002dc8:	2300      	movs	r3, #0
 8002dca:	617b      	str	r3, [r7, #20]
 8002dcc:	6979      	ldr	r1, [r7, #20]
 8002dce:	69f8      	ldr	r0, [r7, #28]
 8002dd0:	f001 f960 	bl	8004094 <vQueueAddToRegistry>
 8002dd4:	69fb      	ldr	r3, [r7, #28]
 8002dd6:	4618      	mov	r0, r3
 8002dd8:	3720      	adds	r7, #32
 8002dda:	46bd      	mov	sp, r7
 8002ddc:	bd80      	pop	{r7, pc}
	...

08002de0 <osMessageQueuePut>:
 8002de0:	b580      	push	{r7, lr}
 8002de2:	b088      	sub	sp, #32
 8002de4:	af00      	add	r7, sp, #0
 8002de6:	60f8      	str	r0, [r7, #12]
 8002de8:	60b9      	str	r1, [r7, #8]
 8002dea:	603b      	str	r3, [r7, #0]
 8002dec:	4613      	mov	r3, r2
 8002dee:	71fb      	strb	r3, [r7, #7]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	61bb      	str	r3, [r7, #24]
 8002df4:	2300      	movs	r3, #0
 8002df6:	61fb      	str	r3, [r7, #28]
 8002df8:	f3ef 8305 	mrs	r3, IPSR
 8002dfc:	617b      	str	r3, [r7, #20]
 8002dfe:	697b      	ldr	r3, [r7, #20]
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d028      	beq.n	8002e56 <osMessageQueuePut+0x76>
 8002e04:	69bb      	ldr	r3, [r7, #24]
 8002e06:	2b00      	cmp	r3, #0
 8002e08:	d005      	beq.n	8002e16 <osMessageQueuePut+0x36>
 8002e0a:	68bb      	ldr	r3, [r7, #8]
 8002e0c:	2b00      	cmp	r3, #0
 8002e0e:	d002      	beq.n	8002e16 <osMessageQueuePut+0x36>
 8002e10:	683b      	ldr	r3, [r7, #0]
 8002e12:	2b00      	cmp	r3, #0
 8002e14:	d003      	beq.n	8002e1e <osMessageQueuePut+0x3e>
 8002e16:	f06f 0303 	mvn.w	r3, #3
 8002e1a:	61fb      	str	r3, [r7, #28]
 8002e1c:	e038      	b.n	8002e90 <osMessageQueuePut+0xb0>
 8002e1e:	2300      	movs	r3, #0
 8002e20:	613b      	str	r3, [r7, #16]
 8002e22:	f107 0210 	add.w	r2, r7, #16
 8002e26:	2300      	movs	r3, #0
 8002e28:	68b9      	ldr	r1, [r7, #8]
 8002e2a:	69b8      	ldr	r0, [r7, #24]
 8002e2c:	f000 fe26 	bl	8003a7c <xQueueGenericSendFromISR>
 8002e30:	4603      	mov	r3, r0
 8002e32:	2b01      	cmp	r3, #1
 8002e34:	d003      	beq.n	8002e3e <osMessageQueuePut+0x5e>
 8002e36:	f06f 0302 	mvn.w	r3, #2
 8002e3a:	61fb      	str	r3, [r7, #28]
 8002e3c:	e028      	b.n	8002e90 <osMessageQueuePut+0xb0>
 8002e3e:	693b      	ldr	r3, [r7, #16]
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d025      	beq.n	8002e90 <osMessageQueuePut+0xb0>
 8002e44:	4b15      	ldr	r3, [pc, #84]	; (8002e9c <osMessageQueuePut+0xbc>)
 8002e46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002e4a:	601a      	str	r2, [r3, #0]
 8002e4c:	f3bf 8f4f 	dsb	sy
 8002e50:	f3bf 8f6f 	isb	sy
 8002e54:	e01c      	b.n	8002e90 <osMessageQueuePut+0xb0>
 8002e56:	69bb      	ldr	r3, [r7, #24]
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d002      	beq.n	8002e62 <osMessageQueuePut+0x82>
 8002e5c:	68bb      	ldr	r3, [r7, #8]
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d103      	bne.n	8002e6a <osMessageQueuePut+0x8a>
 8002e62:	f06f 0303 	mvn.w	r3, #3
 8002e66:	61fb      	str	r3, [r7, #28]
 8002e68:	e012      	b.n	8002e90 <osMessageQueuePut+0xb0>
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	683a      	ldr	r2, [r7, #0]
 8002e6e:	68b9      	ldr	r1, [r7, #8]
 8002e70:	69b8      	ldr	r0, [r7, #24]
 8002e72:	f000 fd05 	bl	8003880 <xQueueGenericSend>
 8002e76:	4603      	mov	r3, r0
 8002e78:	2b01      	cmp	r3, #1
 8002e7a:	d009      	beq.n	8002e90 <osMessageQueuePut+0xb0>
 8002e7c:	683b      	ldr	r3, [r7, #0]
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d003      	beq.n	8002e8a <osMessageQueuePut+0xaa>
 8002e82:	f06f 0301 	mvn.w	r3, #1
 8002e86:	61fb      	str	r3, [r7, #28]
 8002e88:	e002      	b.n	8002e90 <osMessageQueuePut+0xb0>
 8002e8a:	f06f 0302 	mvn.w	r3, #2
 8002e8e:	61fb      	str	r3, [r7, #28]
 8002e90:	69fb      	ldr	r3, [r7, #28]
 8002e92:	4618      	mov	r0, r3
 8002e94:	3720      	adds	r7, #32
 8002e96:	46bd      	mov	sp, r7
 8002e98:	bd80      	pop	{r7, pc}
 8002e9a:	bf00      	nop
 8002e9c:	e000ed04 	.word	0xe000ed04

08002ea0 <osMessageQueueGet>:
 8002ea0:	b580      	push	{r7, lr}
 8002ea2:	b088      	sub	sp, #32
 8002ea4:	af00      	add	r7, sp, #0
 8002ea6:	60f8      	str	r0, [r7, #12]
 8002ea8:	60b9      	str	r1, [r7, #8]
 8002eaa:	607a      	str	r2, [r7, #4]
 8002eac:	603b      	str	r3, [r7, #0]
 8002eae:	68fb      	ldr	r3, [r7, #12]
 8002eb0:	61bb      	str	r3, [r7, #24]
 8002eb2:	2300      	movs	r3, #0
 8002eb4:	61fb      	str	r3, [r7, #28]
 8002eb6:	f3ef 8305 	mrs	r3, IPSR
 8002eba:	617b      	str	r3, [r7, #20]
 8002ebc:	697b      	ldr	r3, [r7, #20]
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d028      	beq.n	8002f14 <osMessageQueueGet+0x74>
 8002ec2:	69bb      	ldr	r3, [r7, #24]
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d005      	beq.n	8002ed4 <osMessageQueueGet+0x34>
 8002ec8:	68bb      	ldr	r3, [r7, #8]
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d002      	beq.n	8002ed4 <osMessageQueueGet+0x34>
 8002ece:	683b      	ldr	r3, [r7, #0]
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d003      	beq.n	8002edc <osMessageQueueGet+0x3c>
 8002ed4:	f06f 0303 	mvn.w	r3, #3
 8002ed8:	61fb      	str	r3, [r7, #28]
 8002eda:	e037      	b.n	8002f4c <osMessageQueueGet+0xac>
 8002edc:	2300      	movs	r3, #0
 8002ede:	613b      	str	r3, [r7, #16]
 8002ee0:	f107 0310 	add.w	r3, r7, #16
 8002ee4:	461a      	mov	r2, r3
 8002ee6:	68b9      	ldr	r1, [r7, #8]
 8002ee8:	69b8      	ldr	r0, [r7, #24]
 8002eea:	f000 ff43 	bl	8003d74 <xQueueReceiveFromISR>
 8002eee:	4603      	mov	r3, r0
 8002ef0:	2b01      	cmp	r3, #1
 8002ef2:	d003      	beq.n	8002efc <osMessageQueueGet+0x5c>
 8002ef4:	f06f 0302 	mvn.w	r3, #2
 8002ef8:	61fb      	str	r3, [r7, #28]
 8002efa:	e027      	b.n	8002f4c <osMessageQueueGet+0xac>
 8002efc:	693b      	ldr	r3, [r7, #16]
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d024      	beq.n	8002f4c <osMessageQueueGet+0xac>
 8002f02:	4b15      	ldr	r3, [pc, #84]	; (8002f58 <osMessageQueueGet+0xb8>)
 8002f04:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f08:	601a      	str	r2, [r3, #0]
 8002f0a:	f3bf 8f4f 	dsb	sy
 8002f0e:	f3bf 8f6f 	isb	sy
 8002f12:	e01b      	b.n	8002f4c <osMessageQueueGet+0xac>
 8002f14:	69bb      	ldr	r3, [r7, #24]
 8002f16:	2b00      	cmp	r3, #0
 8002f18:	d002      	beq.n	8002f20 <osMessageQueueGet+0x80>
 8002f1a:	68bb      	ldr	r3, [r7, #8]
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d103      	bne.n	8002f28 <osMessageQueueGet+0x88>
 8002f20:	f06f 0303 	mvn.w	r3, #3
 8002f24:	61fb      	str	r3, [r7, #28]
 8002f26:	e011      	b.n	8002f4c <osMessageQueueGet+0xac>
 8002f28:	683a      	ldr	r2, [r7, #0]
 8002f2a:	68b9      	ldr	r1, [r7, #8]
 8002f2c:	69b8      	ldr	r0, [r7, #24]
 8002f2e:	f000 fe41 	bl	8003bb4 <xQueueReceive>
 8002f32:	4603      	mov	r3, r0
 8002f34:	2b01      	cmp	r3, #1
 8002f36:	d009      	beq.n	8002f4c <osMessageQueueGet+0xac>
 8002f38:	683b      	ldr	r3, [r7, #0]
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d003      	beq.n	8002f46 <osMessageQueueGet+0xa6>
 8002f3e:	f06f 0301 	mvn.w	r3, #1
 8002f42:	61fb      	str	r3, [r7, #28]
 8002f44:	e002      	b.n	8002f4c <osMessageQueueGet+0xac>
 8002f46:	f06f 0302 	mvn.w	r3, #2
 8002f4a:	61fb      	str	r3, [r7, #28]
 8002f4c:	69fb      	ldr	r3, [r7, #28]
 8002f4e:	4618      	mov	r0, r3
 8002f50:	3720      	adds	r7, #32
 8002f52:	46bd      	mov	sp, r7
 8002f54:	bd80      	pop	{r7, pc}
 8002f56:	bf00      	nop
 8002f58:	e000ed04 	.word	0xe000ed04

08002f5c <vApplicationGetIdleTaskMemory>:
 8002f5c:	b480      	push	{r7}
 8002f5e:	b085      	sub	sp, #20
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	60f8      	str	r0, [r7, #12]
 8002f64:	60b9      	str	r1, [r7, #8]
 8002f66:	607a      	str	r2, [r7, #4]
 8002f68:	68fb      	ldr	r3, [r7, #12]
 8002f6a:	4a07      	ldr	r2, [pc, #28]	; (8002f88 <vApplicationGetIdleTaskMemory+0x2c>)
 8002f6c:	601a      	str	r2, [r3, #0]
 8002f6e:	68bb      	ldr	r3, [r7, #8]
 8002f70:	4a06      	ldr	r2, [pc, #24]	; (8002f8c <vApplicationGetIdleTaskMemory+0x30>)
 8002f72:	601a      	str	r2, [r3, #0]
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	2280      	movs	r2, #128	; 0x80
 8002f78:	601a      	str	r2, [r3, #0]
 8002f7a:	bf00      	nop
 8002f7c:	3714      	adds	r7, #20
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f84:	4770      	bx	lr
 8002f86:	bf00      	nop
 8002f88:	200001b0 	.word	0x200001b0
 8002f8c:	20000258 	.word	0x20000258

08002f90 <vApplicationGetTimerTaskMemory>:
 8002f90:	b480      	push	{r7}
 8002f92:	b085      	sub	sp, #20
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	60f8      	str	r0, [r7, #12]
 8002f98:	60b9      	str	r1, [r7, #8]
 8002f9a:	607a      	str	r2, [r7, #4]
 8002f9c:	68fb      	ldr	r3, [r7, #12]
 8002f9e:	4a07      	ldr	r2, [pc, #28]	; (8002fbc <vApplicationGetTimerTaskMemory+0x2c>)
 8002fa0:	601a      	str	r2, [r3, #0]
 8002fa2:	68bb      	ldr	r3, [r7, #8]
 8002fa4:	4a06      	ldr	r2, [pc, #24]	; (8002fc0 <vApplicationGetTimerTaskMemory+0x30>)
 8002fa6:	601a      	str	r2, [r3, #0]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002fae:	601a      	str	r2, [r3, #0]
 8002fb0:	bf00      	nop
 8002fb2:	3714      	adds	r7, #20
 8002fb4:	46bd      	mov	sp, r7
 8002fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fba:	4770      	bx	lr
 8002fbc:	20000458 	.word	0x20000458
 8002fc0:	20000500 	.word	0x20000500

08002fc4 <xEventGroupCreateStatic>:
 8002fc4:	b580      	push	{r7, lr}
 8002fc6:	b086      	sub	sp, #24
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	2b00      	cmp	r3, #0
 8002fd0:	d10a      	bne.n	8002fe8 <xEventGroupCreateStatic+0x24>
 8002fd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002fd6:	f383 8811 	msr	BASEPRI, r3
 8002fda:	f3bf 8f6f 	isb	sy
 8002fde:	f3bf 8f4f 	dsb	sy
 8002fe2:	613b      	str	r3, [r7, #16]
 8002fe4:	bf00      	nop
 8002fe6:	e7fe      	b.n	8002fe6 <xEventGroupCreateStatic+0x22>
 8002fe8:	2320      	movs	r3, #32
 8002fea:	60bb      	str	r3, [r7, #8]
 8002fec:	68bb      	ldr	r3, [r7, #8]
 8002fee:	2b20      	cmp	r3, #32
 8002ff0:	d00a      	beq.n	8003008 <xEventGroupCreateStatic+0x44>
 8002ff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002ff6:	f383 8811 	msr	BASEPRI, r3
 8002ffa:	f3bf 8f6f 	isb	sy
 8002ffe:	f3bf 8f4f 	dsb	sy
 8003002:	60fb      	str	r3, [r7, #12]
 8003004:	bf00      	nop
 8003006:	e7fe      	b.n	8003006 <xEventGroupCreateStatic+0x42>
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	617b      	str	r3, [r7, #20]
 800300c:	697b      	ldr	r3, [r7, #20]
 800300e:	2b00      	cmp	r3, #0
 8003010:	d00a      	beq.n	8003028 <xEventGroupCreateStatic+0x64>
 8003012:	697b      	ldr	r3, [r7, #20]
 8003014:	2200      	movs	r2, #0
 8003016:	601a      	str	r2, [r3, #0]
 8003018:	697b      	ldr	r3, [r7, #20]
 800301a:	3304      	adds	r3, #4
 800301c:	4618      	mov	r0, r3
 800301e:	f000 fa3d 	bl	800349c <vListInitialise>
 8003022:	697b      	ldr	r3, [r7, #20]
 8003024:	2201      	movs	r2, #1
 8003026:	771a      	strb	r2, [r3, #28]
 8003028:	697b      	ldr	r3, [r7, #20]
 800302a:	4618      	mov	r0, r3
 800302c:	3718      	adds	r7, #24
 800302e:	46bd      	mov	sp, r7
 8003030:	bd80      	pop	{r7, pc}

08003032 <xEventGroupCreate>:
 8003032:	b580      	push	{r7, lr}
 8003034:	b082      	sub	sp, #8
 8003036:	af00      	add	r7, sp, #0
 8003038:	2020      	movs	r0, #32
 800303a:	f002 fded 	bl	8005c18 <pvPortMalloc>
 800303e:	6078      	str	r0, [r7, #4]
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d00a      	beq.n	800305c <xEventGroupCreate+0x2a>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	2200      	movs	r2, #0
 800304a:	601a      	str	r2, [r3, #0]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	3304      	adds	r3, #4
 8003050:	4618      	mov	r0, r3
 8003052:	f000 fa23 	bl	800349c <vListInitialise>
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	2200      	movs	r2, #0
 800305a:	771a      	strb	r2, [r3, #28]
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	4618      	mov	r0, r3
 8003060:	3708      	adds	r7, #8
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}
	...

08003068 <xEventGroupWaitBits>:
 8003068:	b580      	push	{r7, lr}
 800306a:	b090      	sub	sp, #64	; 0x40
 800306c:	af00      	add	r7, sp, #0
 800306e:	60f8      	str	r0, [r7, #12]
 8003070:	60b9      	str	r1, [r7, #8]
 8003072:	607a      	str	r2, [r7, #4]
 8003074:	603b      	str	r3, [r7, #0]
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	637b      	str	r3, [r7, #52]	; 0x34
 800307a:	2300      	movs	r3, #0
 800307c:	63bb      	str	r3, [r7, #56]	; 0x38
 800307e:	2300      	movs	r3, #0
 8003080:	633b      	str	r3, [r7, #48]	; 0x30
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	2b00      	cmp	r3, #0
 8003086:	d10a      	bne.n	800309e <xEventGroupWaitBits+0x36>
 8003088:	f04f 0350 	mov.w	r3, #80	; 0x50
 800308c:	f383 8811 	msr	BASEPRI, r3
 8003090:	f3bf 8f6f 	isb	sy
 8003094:	f3bf 8f4f 	dsb	sy
 8003098:	623b      	str	r3, [r7, #32]
 800309a:	bf00      	nop
 800309c:	e7fe      	b.n	800309c <xEventGroupWaitBits+0x34>
 800309e:	68bb      	ldr	r3, [r7, #8]
 80030a0:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d00a      	beq.n	80030be <xEventGroupWaitBits+0x56>
 80030a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030ac:	f383 8811 	msr	BASEPRI, r3
 80030b0:	f3bf 8f6f 	isb	sy
 80030b4:	f3bf 8f4f 	dsb	sy
 80030b8:	61fb      	str	r3, [r7, #28]
 80030ba:	bf00      	nop
 80030bc:	e7fe      	b.n	80030bc <xEventGroupWaitBits+0x54>
 80030be:	68bb      	ldr	r3, [r7, #8]
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d10a      	bne.n	80030da <xEventGroupWaitBits+0x72>
 80030c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030c8:	f383 8811 	msr	BASEPRI, r3
 80030cc:	f3bf 8f6f 	isb	sy
 80030d0:	f3bf 8f4f 	dsb	sy
 80030d4:	61bb      	str	r3, [r7, #24]
 80030d6:	bf00      	nop
 80030d8:	e7fe      	b.n	80030d8 <xEventGroupWaitBits+0x70>
 80030da:	f001 feeb 	bl	8004eb4 <xTaskGetSchedulerState>
 80030de:	4603      	mov	r3, r0
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d102      	bne.n	80030ea <xEventGroupWaitBits+0x82>
 80030e4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d101      	bne.n	80030ee <xEventGroupWaitBits+0x86>
 80030ea:	2301      	movs	r3, #1
 80030ec:	e000      	b.n	80030f0 <xEventGroupWaitBits+0x88>
 80030ee:	2300      	movs	r3, #0
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d10a      	bne.n	800310a <xEventGroupWaitBits+0xa2>
 80030f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030f8:	f383 8811 	msr	BASEPRI, r3
 80030fc:	f3bf 8f6f 	isb	sy
 8003100:	f3bf 8f4f 	dsb	sy
 8003104:	617b      	str	r3, [r7, #20]
 8003106:	bf00      	nop
 8003108:	e7fe      	b.n	8003108 <xEventGroupWaitBits+0xa0>
 800310a:	f001 fa49 	bl	80045a0 <vTaskSuspendAll>
 800310e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003114:	683a      	ldr	r2, [r7, #0]
 8003116:	68b9      	ldr	r1, [r7, #8]
 8003118:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800311a:	f000 f988 	bl	800342e <prvTestWaitCondition>
 800311e:	62b8      	str	r0, [r7, #40]	; 0x28
 8003120:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003122:	2b00      	cmp	r3, #0
 8003124:	d00e      	beq.n	8003144 <xEventGroupWaitBits+0xdc>
 8003126:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003128:	63fb      	str	r3, [r7, #60]	; 0x3c
 800312a:	2300      	movs	r3, #0
 800312c:	64bb      	str	r3, [r7, #72]	; 0x48
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	2b00      	cmp	r3, #0
 8003132:	d028      	beq.n	8003186 <xEventGroupWaitBits+0x11e>
 8003134:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003136:	681a      	ldr	r2, [r3, #0]
 8003138:	68bb      	ldr	r3, [r7, #8]
 800313a:	43db      	mvns	r3, r3
 800313c:	401a      	ands	r2, r3
 800313e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003140:	601a      	str	r2, [r3, #0]
 8003142:	e020      	b.n	8003186 <xEventGroupWaitBits+0x11e>
 8003144:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003146:	2b00      	cmp	r3, #0
 8003148:	d104      	bne.n	8003154 <xEventGroupWaitBits+0xec>
 800314a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800314c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800314e:	2301      	movs	r3, #1
 8003150:	633b      	str	r3, [r7, #48]	; 0x30
 8003152:	e018      	b.n	8003186 <xEventGroupWaitBits+0x11e>
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	2b00      	cmp	r3, #0
 8003158:	d003      	beq.n	8003162 <xEventGroupWaitBits+0xfa>
 800315a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800315c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003160:	63bb      	str	r3, [r7, #56]	; 0x38
 8003162:	683b      	ldr	r3, [r7, #0]
 8003164:	2b00      	cmp	r3, #0
 8003166:	d003      	beq.n	8003170 <xEventGroupWaitBits+0x108>
 8003168:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800316a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800316e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003170:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003172:	1d18      	adds	r0, r3, #4
 8003174:	68ba      	ldr	r2, [r7, #8]
 8003176:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003178:	4313      	orrs	r3, r2
 800317a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800317c:	4619      	mov	r1, r3
 800317e:	f001 fc0d 	bl	800499c <vTaskPlaceOnUnorderedEventList>
 8003182:	2300      	movs	r3, #0
 8003184:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003186:	f001 fa19 	bl	80045bc <xTaskResumeAll>
 800318a:	6278      	str	r0, [r7, #36]	; 0x24
 800318c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800318e:	2b00      	cmp	r3, #0
 8003190:	d031      	beq.n	80031f6 <xEventGroupWaitBits+0x18e>
 8003192:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003194:	2b00      	cmp	r3, #0
 8003196:	d107      	bne.n	80031a8 <xEventGroupWaitBits+0x140>
 8003198:	4b19      	ldr	r3, [pc, #100]	; (8003200 <xEventGroupWaitBits+0x198>)
 800319a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800319e:	601a      	str	r2, [r3, #0]
 80031a0:	f3bf 8f4f 	dsb	sy
 80031a4:	f3bf 8f6f 	isb	sy
 80031a8:	f001 ff10 	bl	8004fcc <uxTaskResetEventItemValue>
 80031ac:	63f8      	str	r0, [r7, #60]	; 0x3c
 80031ae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d11a      	bne.n	80031ee <xEventGroupWaitBits+0x186>
 80031b8:	f002 fc0c 	bl	80059d4 <vPortEnterCritical>
 80031bc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80031c2:	683a      	ldr	r2, [r7, #0]
 80031c4:	68b9      	ldr	r1, [r7, #8]
 80031c6:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80031c8:	f000 f931 	bl	800342e <prvTestWaitCondition>
 80031cc:	4603      	mov	r3, r0
 80031ce:	2b00      	cmp	r3, #0
 80031d0:	d009      	beq.n	80031e6 <xEventGroupWaitBits+0x17e>
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	2b00      	cmp	r3, #0
 80031d6:	d006      	beq.n	80031e6 <xEventGroupWaitBits+0x17e>
 80031d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031da:	681a      	ldr	r2, [r3, #0]
 80031dc:	68bb      	ldr	r3, [r7, #8]
 80031de:	43db      	mvns	r3, r3
 80031e0:	401a      	ands	r2, r3
 80031e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031e4:	601a      	str	r2, [r3, #0]
 80031e6:	2301      	movs	r3, #1
 80031e8:	633b      	str	r3, [r7, #48]	; 0x30
 80031ea:	f002 fc23 	bl	8005a34 <vPortExitCritical>
 80031ee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031f0:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80031f4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80031f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031f8:	4618      	mov	r0, r3
 80031fa:	3740      	adds	r7, #64	; 0x40
 80031fc:	46bd      	mov	sp, r7
 80031fe:	bd80      	pop	{r7, pc}
 8003200:	e000ed04 	.word	0xe000ed04

08003204 <xEventGroupClearBits>:
 8003204:	b580      	push	{r7, lr}
 8003206:	b086      	sub	sp, #24
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
 800320c:	6039      	str	r1, [r7, #0]
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	617b      	str	r3, [r7, #20]
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	2b00      	cmp	r3, #0
 8003216:	d10a      	bne.n	800322e <xEventGroupClearBits+0x2a>
 8003218:	f04f 0350 	mov.w	r3, #80	; 0x50
 800321c:	f383 8811 	msr	BASEPRI, r3
 8003220:	f3bf 8f6f 	isb	sy
 8003224:	f3bf 8f4f 	dsb	sy
 8003228:	60fb      	str	r3, [r7, #12]
 800322a:	bf00      	nop
 800322c:	e7fe      	b.n	800322c <xEventGroupClearBits+0x28>
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003234:	2b00      	cmp	r3, #0
 8003236:	d00a      	beq.n	800324e <xEventGroupClearBits+0x4a>
 8003238:	f04f 0350 	mov.w	r3, #80	; 0x50
 800323c:	f383 8811 	msr	BASEPRI, r3
 8003240:	f3bf 8f6f 	isb	sy
 8003244:	f3bf 8f4f 	dsb	sy
 8003248:	60bb      	str	r3, [r7, #8]
 800324a:	bf00      	nop
 800324c:	e7fe      	b.n	800324c <xEventGroupClearBits+0x48>
 800324e:	f002 fbc1 	bl	80059d4 <vPortEnterCritical>
 8003252:	697b      	ldr	r3, [r7, #20]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	613b      	str	r3, [r7, #16]
 8003258:	697b      	ldr	r3, [r7, #20]
 800325a:	681a      	ldr	r2, [r3, #0]
 800325c:	683b      	ldr	r3, [r7, #0]
 800325e:	43db      	mvns	r3, r3
 8003260:	401a      	ands	r2, r3
 8003262:	697b      	ldr	r3, [r7, #20]
 8003264:	601a      	str	r2, [r3, #0]
 8003266:	f002 fbe5 	bl	8005a34 <vPortExitCritical>
 800326a:	693b      	ldr	r3, [r7, #16]
 800326c:	4618      	mov	r0, r3
 800326e:	3718      	adds	r7, #24
 8003270:	46bd      	mov	sp, r7
 8003272:	bd80      	pop	{r7, pc}

08003274 <xEventGroupClearBitsFromISR>:
 8003274:	b580      	push	{r7, lr}
 8003276:	b084      	sub	sp, #16
 8003278:	af00      	add	r7, sp, #0
 800327a:	6078      	str	r0, [r7, #4]
 800327c:	6039      	str	r1, [r7, #0]
 800327e:	2300      	movs	r3, #0
 8003280:	683a      	ldr	r2, [r7, #0]
 8003282:	6879      	ldr	r1, [r7, #4]
 8003284:	4804      	ldr	r0, [pc, #16]	; (8003298 <xEventGroupClearBitsFromISR+0x24>)
 8003286:	f002 fa5b 	bl	8005740 <xTimerPendFunctionCallFromISR>
 800328a:	60f8      	str	r0, [r7, #12]
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	4618      	mov	r0, r3
 8003290:	3710      	adds	r7, #16
 8003292:	46bd      	mov	sp, r7
 8003294:	bd80      	pop	{r7, pc}
 8003296:	bf00      	nop
 8003298:	08003415 	.word	0x08003415

0800329c <xEventGroupGetBitsFromISR>:
 800329c:	b480      	push	{r7}
 800329e:	b089      	sub	sp, #36	; 0x24
 80032a0:	af00      	add	r7, sp, #0
 80032a2:	6078      	str	r0, [r7, #4]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	61fb      	str	r3, [r7, #28]
 80032a8:	f3ef 8211 	mrs	r2, BASEPRI
 80032ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80032b0:	f383 8811 	msr	BASEPRI, r3
 80032b4:	f3bf 8f6f 	isb	sy
 80032b8:	f3bf 8f4f 	dsb	sy
 80032bc:	60fa      	str	r2, [r7, #12]
 80032be:	60bb      	str	r3, [r7, #8]
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	61bb      	str	r3, [r7, #24]
 80032c4:	69fb      	ldr	r3, [r7, #28]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	617b      	str	r3, [r7, #20]
 80032ca:	69bb      	ldr	r3, [r7, #24]
 80032cc:	613b      	str	r3, [r7, #16]
 80032ce:	693b      	ldr	r3, [r7, #16]
 80032d0:	f383 8811 	msr	BASEPRI, r3
 80032d4:	bf00      	nop
 80032d6:	697b      	ldr	r3, [r7, #20]
 80032d8:	4618      	mov	r0, r3
 80032da:	3724      	adds	r7, #36	; 0x24
 80032dc:	46bd      	mov	sp, r7
 80032de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e2:	4770      	bx	lr

080032e4 <xEventGroupSetBits>:
 80032e4:	b580      	push	{r7, lr}
 80032e6:	b08e      	sub	sp, #56	; 0x38
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	6078      	str	r0, [r7, #4]
 80032ec:	6039      	str	r1, [r7, #0]
 80032ee:	2300      	movs	r3, #0
 80032f0:	633b      	str	r3, [r7, #48]	; 0x30
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80032f6:	2300      	movs	r3, #0
 80032f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	2b00      	cmp	r3, #0
 80032fe:	d10a      	bne.n	8003316 <xEventGroupSetBits+0x32>
 8003300:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003304:	f383 8811 	msr	BASEPRI, r3
 8003308:	f3bf 8f6f 	isb	sy
 800330c:	f3bf 8f4f 	dsb	sy
 8003310:	613b      	str	r3, [r7, #16]
 8003312:	bf00      	nop
 8003314:	e7fe      	b.n	8003314 <xEventGroupSetBits+0x30>
 8003316:	683b      	ldr	r3, [r7, #0]
 8003318:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800331c:	2b00      	cmp	r3, #0
 800331e:	d00a      	beq.n	8003336 <xEventGroupSetBits+0x52>
 8003320:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003324:	f383 8811 	msr	BASEPRI, r3
 8003328:	f3bf 8f6f 	isb	sy
 800332c:	f3bf 8f4f 	dsb	sy
 8003330:	60fb      	str	r3, [r7, #12]
 8003332:	bf00      	nop
 8003334:	e7fe      	b.n	8003334 <xEventGroupSetBits+0x50>
 8003336:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003338:	3304      	adds	r3, #4
 800333a:	627b      	str	r3, [r7, #36]	; 0x24
 800333c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800333e:	3308      	adds	r3, #8
 8003340:	623b      	str	r3, [r7, #32]
 8003342:	f001 f92d 	bl	80045a0 <vTaskSuspendAll>
 8003346:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003348:	68db      	ldr	r3, [r3, #12]
 800334a:	637b      	str	r3, [r7, #52]	; 0x34
 800334c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800334e:	681a      	ldr	r2, [r3, #0]
 8003350:	683b      	ldr	r3, [r7, #0]
 8003352:	431a      	orrs	r2, r3
 8003354:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003356:	601a      	str	r2, [r3, #0]
 8003358:	e03c      	b.n	80033d4 <xEventGroupSetBits+0xf0>
 800335a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800335c:	685b      	ldr	r3, [r3, #4]
 800335e:	61fb      	str	r3, [r7, #28]
 8003360:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	61bb      	str	r3, [r7, #24]
 8003366:	2300      	movs	r3, #0
 8003368:	62fb      	str	r3, [r7, #44]	; 0x2c
 800336a:	69bb      	ldr	r3, [r7, #24]
 800336c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003370:	617b      	str	r3, [r7, #20]
 8003372:	69bb      	ldr	r3, [r7, #24]
 8003374:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003378:	61bb      	str	r3, [r7, #24]
 800337a:	697b      	ldr	r3, [r7, #20]
 800337c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003380:	2b00      	cmp	r3, #0
 8003382:	d108      	bne.n	8003396 <xEventGroupSetBits+0xb2>
 8003384:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003386:	681a      	ldr	r2, [r3, #0]
 8003388:	69bb      	ldr	r3, [r7, #24]
 800338a:	4013      	ands	r3, r2
 800338c:	2b00      	cmp	r3, #0
 800338e:	d00b      	beq.n	80033a8 <xEventGroupSetBits+0xc4>
 8003390:	2301      	movs	r3, #1
 8003392:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003394:	e008      	b.n	80033a8 <xEventGroupSetBits+0xc4>
 8003396:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003398:	681a      	ldr	r2, [r3, #0]
 800339a:	69bb      	ldr	r3, [r7, #24]
 800339c:	4013      	ands	r3, r2
 800339e:	69ba      	ldr	r2, [r7, #24]
 80033a0:	429a      	cmp	r2, r3
 80033a2:	d101      	bne.n	80033a8 <xEventGroupSetBits+0xc4>
 80033a4:	2301      	movs	r3, #1
 80033a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80033a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d010      	beq.n	80033d0 <xEventGroupSetBits+0xec>
 80033ae:	697b      	ldr	r3, [r7, #20]
 80033b0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d003      	beq.n	80033c0 <xEventGroupSetBits+0xdc>
 80033b8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80033ba:	69bb      	ldr	r3, [r7, #24]
 80033bc:	4313      	orrs	r3, r2
 80033be:	633b      	str	r3, [r7, #48]	; 0x30
 80033c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80033c8:	4619      	mov	r1, r3
 80033ca:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80033cc:	f001 fbb2 	bl	8004b34 <vTaskRemoveFromUnorderedEventList>
 80033d0:	69fb      	ldr	r3, [r7, #28]
 80033d2:	637b      	str	r3, [r7, #52]	; 0x34
 80033d4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80033d6:	6a3b      	ldr	r3, [r7, #32]
 80033d8:	429a      	cmp	r2, r3
 80033da:	d1be      	bne.n	800335a <xEventGroupSetBits+0x76>
 80033dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033de:	681a      	ldr	r2, [r3, #0]
 80033e0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80033e2:	43db      	mvns	r3, r3
 80033e4:	401a      	ands	r2, r3
 80033e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033e8:	601a      	str	r2, [r3, #0]
 80033ea:	f001 f8e7 	bl	80045bc <xTaskResumeAll>
 80033ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	4618      	mov	r0, r3
 80033f4:	3738      	adds	r7, #56	; 0x38
 80033f6:	46bd      	mov	sp, r7
 80033f8:	bd80      	pop	{r7, pc}

080033fa <vEventGroupSetBitsCallback>:
 80033fa:	b580      	push	{r7, lr}
 80033fc:	b082      	sub	sp, #8
 80033fe:	af00      	add	r7, sp, #0
 8003400:	6078      	str	r0, [r7, #4]
 8003402:	6039      	str	r1, [r7, #0]
 8003404:	6839      	ldr	r1, [r7, #0]
 8003406:	6878      	ldr	r0, [r7, #4]
 8003408:	f7ff ff6c 	bl	80032e4 <xEventGroupSetBits>
 800340c:	bf00      	nop
 800340e:	3708      	adds	r7, #8
 8003410:	46bd      	mov	sp, r7
 8003412:	bd80      	pop	{r7, pc}

08003414 <vEventGroupClearBitsCallback>:
 8003414:	b580      	push	{r7, lr}
 8003416:	b082      	sub	sp, #8
 8003418:	af00      	add	r7, sp, #0
 800341a:	6078      	str	r0, [r7, #4]
 800341c:	6039      	str	r1, [r7, #0]
 800341e:	6839      	ldr	r1, [r7, #0]
 8003420:	6878      	ldr	r0, [r7, #4]
 8003422:	f7ff feef 	bl	8003204 <xEventGroupClearBits>
 8003426:	bf00      	nop
 8003428:	3708      	adds	r7, #8
 800342a:	46bd      	mov	sp, r7
 800342c:	bd80      	pop	{r7, pc}

0800342e <prvTestWaitCondition>:
 800342e:	b480      	push	{r7}
 8003430:	b087      	sub	sp, #28
 8003432:	af00      	add	r7, sp, #0
 8003434:	60f8      	str	r0, [r7, #12]
 8003436:	60b9      	str	r1, [r7, #8]
 8003438:	607a      	str	r2, [r7, #4]
 800343a:	2300      	movs	r3, #0
 800343c:	617b      	str	r3, [r7, #20]
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	2b00      	cmp	r3, #0
 8003442:	d107      	bne.n	8003454 <prvTestWaitCondition+0x26>
 8003444:	68fa      	ldr	r2, [r7, #12]
 8003446:	68bb      	ldr	r3, [r7, #8]
 8003448:	4013      	ands	r3, r2
 800344a:	2b00      	cmp	r3, #0
 800344c:	d00a      	beq.n	8003464 <prvTestWaitCondition+0x36>
 800344e:	2301      	movs	r3, #1
 8003450:	617b      	str	r3, [r7, #20]
 8003452:	e007      	b.n	8003464 <prvTestWaitCondition+0x36>
 8003454:	68fa      	ldr	r2, [r7, #12]
 8003456:	68bb      	ldr	r3, [r7, #8]
 8003458:	4013      	ands	r3, r2
 800345a:	68ba      	ldr	r2, [r7, #8]
 800345c:	429a      	cmp	r2, r3
 800345e:	d101      	bne.n	8003464 <prvTestWaitCondition+0x36>
 8003460:	2301      	movs	r3, #1
 8003462:	617b      	str	r3, [r7, #20]
 8003464:	697b      	ldr	r3, [r7, #20]
 8003466:	4618      	mov	r0, r3
 8003468:	371c      	adds	r7, #28
 800346a:	46bd      	mov	sp, r7
 800346c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003470:	4770      	bx	lr
	...

08003474 <xEventGroupSetBitsFromISR>:
 8003474:	b580      	push	{r7, lr}
 8003476:	b086      	sub	sp, #24
 8003478:	af00      	add	r7, sp, #0
 800347a:	60f8      	str	r0, [r7, #12]
 800347c:	60b9      	str	r1, [r7, #8]
 800347e:	607a      	str	r2, [r7, #4]
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	68ba      	ldr	r2, [r7, #8]
 8003484:	68f9      	ldr	r1, [r7, #12]
 8003486:	4804      	ldr	r0, [pc, #16]	; (8003498 <xEventGroupSetBitsFromISR+0x24>)
 8003488:	f002 f95a 	bl	8005740 <xTimerPendFunctionCallFromISR>
 800348c:	6178      	str	r0, [r7, #20]
 800348e:	697b      	ldr	r3, [r7, #20]
 8003490:	4618      	mov	r0, r3
 8003492:	3718      	adds	r7, #24
 8003494:	46bd      	mov	sp, r7
 8003496:	bd80      	pop	{r7, pc}
 8003498:	080033fb 	.word	0x080033fb

0800349c <vListInitialise>:
 800349c:	b480      	push	{r7}
 800349e:	b083      	sub	sp, #12
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	6078      	str	r0, [r7, #4]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	f103 0208 	add.w	r2, r3, #8
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	605a      	str	r2, [r3, #4]
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	f04f 32ff 	mov.w	r2, #4294967295
 80034b4:	609a      	str	r2, [r3, #8]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	f103 0208 	add.w	r2, r3, #8
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	60da      	str	r2, [r3, #12]
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	f103 0208 	add.w	r2, r3, #8
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	611a      	str	r2, [r3, #16]
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	2200      	movs	r2, #0
 80034ce:	601a      	str	r2, [r3, #0]
 80034d0:	bf00      	nop
 80034d2:	370c      	adds	r7, #12
 80034d4:	46bd      	mov	sp, r7
 80034d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034da:	4770      	bx	lr

080034dc <vListInitialiseItem>:
 80034dc:	b480      	push	{r7}
 80034de:	b083      	sub	sp, #12
 80034e0:	af00      	add	r7, sp, #0
 80034e2:	6078      	str	r0, [r7, #4]
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	2200      	movs	r2, #0
 80034e8:	611a      	str	r2, [r3, #16]
 80034ea:	bf00      	nop
 80034ec:	370c      	adds	r7, #12
 80034ee:	46bd      	mov	sp, r7
 80034f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f4:	4770      	bx	lr

080034f6 <vListInsertEnd>:
 80034f6:	b480      	push	{r7}
 80034f8:	b085      	sub	sp, #20
 80034fa:	af00      	add	r7, sp, #0
 80034fc:	6078      	str	r0, [r7, #4]
 80034fe:	6039      	str	r1, [r7, #0]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	685b      	ldr	r3, [r3, #4]
 8003504:	60fb      	str	r3, [r7, #12]
 8003506:	683b      	ldr	r3, [r7, #0]
 8003508:	68fa      	ldr	r2, [r7, #12]
 800350a:	605a      	str	r2, [r3, #4]
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	689a      	ldr	r2, [r3, #8]
 8003510:	683b      	ldr	r3, [r7, #0]
 8003512:	609a      	str	r2, [r3, #8]
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	689b      	ldr	r3, [r3, #8]
 8003518:	683a      	ldr	r2, [r7, #0]
 800351a:	605a      	str	r2, [r3, #4]
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	683a      	ldr	r2, [r7, #0]
 8003520:	609a      	str	r2, [r3, #8]
 8003522:	683b      	ldr	r3, [r7, #0]
 8003524:	687a      	ldr	r2, [r7, #4]
 8003526:	611a      	str	r2, [r3, #16]
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	1c5a      	adds	r2, r3, #1
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	601a      	str	r2, [r3, #0]
 8003532:	bf00      	nop
 8003534:	3714      	adds	r7, #20
 8003536:	46bd      	mov	sp, r7
 8003538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800353c:	4770      	bx	lr

0800353e <vListInsert>:
 800353e:	b480      	push	{r7}
 8003540:	b085      	sub	sp, #20
 8003542:	af00      	add	r7, sp, #0
 8003544:	6078      	str	r0, [r7, #4]
 8003546:	6039      	str	r1, [r7, #0]
 8003548:	683b      	ldr	r3, [r7, #0]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	60bb      	str	r3, [r7, #8]
 800354e:	68bb      	ldr	r3, [r7, #8]
 8003550:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003554:	d103      	bne.n	800355e <vListInsert+0x20>
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	691b      	ldr	r3, [r3, #16]
 800355a:	60fb      	str	r3, [r7, #12]
 800355c:	e00c      	b.n	8003578 <vListInsert+0x3a>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	3308      	adds	r3, #8
 8003562:	60fb      	str	r3, [r7, #12]
 8003564:	e002      	b.n	800356c <vListInsert+0x2e>
 8003566:	68fb      	ldr	r3, [r7, #12]
 8003568:	685b      	ldr	r3, [r3, #4]
 800356a:	60fb      	str	r3, [r7, #12]
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	685b      	ldr	r3, [r3, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	68ba      	ldr	r2, [r7, #8]
 8003574:	429a      	cmp	r2, r3
 8003576:	d2f6      	bcs.n	8003566 <vListInsert+0x28>
 8003578:	68fb      	ldr	r3, [r7, #12]
 800357a:	685a      	ldr	r2, [r3, #4]
 800357c:	683b      	ldr	r3, [r7, #0]
 800357e:	605a      	str	r2, [r3, #4]
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	685b      	ldr	r3, [r3, #4]
 8003584:	683a      	ldr	r2, [r7, #0]
 8003586:	609a      	str	r2, [r3, #8]
 8003588:	683b      	ldr	r3, [r7, #0]
 800358a:	68fa      	ldr	r2, [r7, #12]
 800358c:	609a      	str	r2, [r3, #8]
 800358e:	68fb      	ldr	r3, [r7, #12]
 8003590:	683a      	ldr	r2, [r7, #0]
 8003592:	605a      	str	r2, [r3, #4]
 8003594:	683b      	ldr	r3, [r7, #0]
 8003596:	687a      	ldr	r2, [r7, #4]
 8003598:	611a      	str	r2, [r3, #16]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	1c5a      	adds	r2, r3, #1
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	601a      	str	r2, [r3, #0]
 80035a4:	bf00      	nop
 80035a6:	3714      	adds	r7, #20
 80035a8:	46bd      	mov	sp, r7
 80035aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035ae:	4770      	bx	lr

080035b0 <uxListRemove>:
 80035b0:	b480      	push	{r7}
 80035b2:	b085      	sub	sp, #20
 80035b4:	af00      	add	r7, sp, #0
 80035b6:	6078      	str	r0, [r7, #4]
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	691b      	ldr	r3, [r3, #16]
 80035bc:	60fb      	str	r3, [r7, #12]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	685b      	ldr	r3, [r3, #4]
 80035c2:	687a      	ldr	r2, [r7, #4]
 80035c4:	6892      	ldr	r2, [r2, #8]
 80035c6:	609a      	str	r2, [r3, #8]
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	689b      	ldr	r3, [r3, #8]
 80035cc:	687a      	ldr	r2, [r7, #4]
 80035ce:	6852      	ldr	r2, [r2, #4]
 80035d0:	605a      	str	r2, [r3, #4]
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	685b      	ldr	r3, [r3, #4]
 80035d6:	687a      	ldr	r2, [r7, #4]
 80035d8:	429a      	cmp	r2, r3
 80035da:	d103      	bne.n	80035e4 <uxListRemove+0x34>
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	689a      	ldr	r2, [r3, #8]
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	605a      	str	r2, [r3, #4]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	2200      	movs	r2, #0
 80035e8:	611a      	str	r2, [r3, #16]
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	1e5a      	subs	r2, r3, #1
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	601a      	str	r2, [r3, #0]
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	4618      	mov	r0, r3
 80035fa:	3714      	adds	r7, #20
 80035fc:	46bd      	mov	sp, r7
 80035fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003602:	4770      	bx	lr

08003604 <xQueueGenericReset>:
 8003604:	b580      	push	{r7, lr}
 8003606:	b084      	sub	sp, #16
 8003608:	af00      	add	r7, sp, #0
 800360a:	6078      	str	r0, [r7, #4]
 800360c:	6039      	str	r1, [r7, #0]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	60fb      	str	r3, [r7, #12]
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	2b00      	cmp	r3, #0
 8003616:	d10a      	bne.n	800362e <xQueueGenericReset+0x2a>
 8003618:	f04f 0350 	mov.w	r3, #80	; 0x50
 800361c:	f383 8811 	msr	BASEPRI, r3
 8003620:	f3bf 8f6f 	isb	sy
 8003624:	f3bf 8f4f 	dsb	sy
 8003628:	60bb      	str	r3, [r7, #8]
 800362a:	bf00      	nop
 800362c:	e7fe      	b.n	800362c <xQueueGenericReset+0x28>
 800362e:	f002 f9d1 	bl	80059d4 <vPortEnterCritical>
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	681a      	ldr	r2, [r3, #0]
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800363a:	68f9      	ldr	r1, [r7, #12]
 800363c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800363e:	fb01 f303 	mul.w	r3, r1, r3
 8003642:	441a      	add	r2, r3
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	609a      	str	r2, [r3, #8]
 8003648:	68fb      	ldr	r3, [r7, #12]
 800364a:	2200      	movs	r2, #0
 800364c:	639a      	str	r2, [r3, #56]	; 0x38
 800364e:	68fb      	ldr	r3, [r7, #12]
 8003650:	681a      	ldr	r2, [r3, #0]
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	605a      	str	r2, [r3, #4]
 8003656:	68fb      	ldr	r3, [r7, #12]
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	68fb      	ldr	r3, [r7, #12]
 800365c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800365e:	3b01      	subs	r3, #1
 8003660:	68f9      	ldr	r1, [r7, #12]
 8003662:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8003664:	fb01 f303 	mul.w	r3, r1, r3
 8003668:	441a      	add	r2, r3
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	60da      	str	r2, [r3, #12]
 800366e:	68fb      	ldr	r3, [r7, #12]
 8003670:	22ff      	movs	r2, #255	; 0xff
 8003672:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	22ff      	movs	r2, #255	; 0xff
 800367a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800367e:	683b      	ldr	r3, [r7, #0]
 8003680:	2b00      	cmp	r3, #0
 8003682:	d114      	bne.n	80036ae <xQueueGenericReset+0xaa>
 8003684:	68fb      	ldr	r3, [r7, #12]
 8003686:	691b      	ldr	r3, [r3, #16]
 8003688:	2b00      	cmp	r3, #0
 800368a:	d01a      	beq.n	80036c2 <xQueueGenericReset+0xbe>
 800368c:	68fb      	ldr	r3, [r7, #12]
 800368e:	3310      	adds	r3, #16
 8003690:	4618      	mov	r0, r3
 8003692:	f001 f9eb 	bl	8004a6c <xTaskRemoveFromEventList>
 8003696:	4603      	mov	r3, r0
 8003698:	2b00      	cmp	r3, #0
 800369a:	d012      	beq.n	80036c2 <xQueueGenericReset+0xbe>
 800369c:	4b0c      	ldr	r3, [pc, #48]	; (80036d0 <xQueueGenericReset+0xcc>)
 800369e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80036a2:	601a      	str	r2, [r3, #0]
 80036a4:	f3bf 8f4f 	dsb	sy
 80036a8:	f3bf 8f6f 	isb	sy
 80036ac:	e009      	b.n	80036c2 <xQueueGenericReset+0xbe>
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	3310      	adds	r3, #16
 80036b2:	4618      	mov	r0, r3
 80036b4:	f7ff fef2 	bl	800349c <vListInitialise>
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	3324      	adds	r3, #36	; 0x24
 80036bc:	4618      	mov	r0, r3
 80036be:	f7ff feed 	bl	800349c <vListInitialise>
 80036c2:	f002 f9b7 	bl	8005a34 <vPortExitCritical>
 80036c6:	2301      	movs	r3, #1
 80036c8:	4618      	mov	r0, r3
 80036ca:	3710      	adds	r7, #16
 80036cc:	46bd      	mov	sp, r7
 80036ce:	bd80      	pop	{r7, pc}
 80036d0:	e000ed04 	.word	0xe000ed04

080036d4 <xQueueGenericCreateStatic>:
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b08e      	sub	sp, #56	; 0x38
 80036d8:	af02      	add	r7, sp, #8
 80036da:	60f8      	str	r0, [r7, #12]
 80036dc:	60b9      	str	r1, [r7, #8]
 80036de:	607a      	str	r2, [r7, #4]
 80036e0:	603b      	str	r3, [r7, #0]
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	2b00      	cmp	r3, #0
 80036e6:	d10a      	bne.n	80036fe <xQueueGenericCreateStatic+0x2a>
 80036e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036ec:	f383 8811 	msr	BASEPRI, r3
 80036f0:	f3bf 8f6f 	isb	sy
 80036f4:	f3bf 8f4f 	dsb	sy
 80036f8:	62bb      	str	r3, [r7, #40]	; 0x28
 80036fa:	bf00      	nop
 80036fc:	e7fe      	b.n	80036fc <xQueueGenericCreateStatic+0x28>
 80036fe:	683b      	ldr	r3, [r7, #0]
 8003700:	2b00      	cmp	r3, #0
 8003702:	d10a      	bne.n	800371a <xQueueGenericCreateStatic+0x46>
 8003704:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003708:	f383 8811 	msr	BASEPRI, r3
 800370c:	f3bf 8f6f 	isb	sy
 8003710:	f3bf 8f4f 	dsb	sy
 8003714:	627b      	str	r3, [r7, #36]	; 0x24
 8003716:	bf00      	nop
 8003718:	e7fe      	b.n	8003718 <xQueueGenericCreateStatic+0x44>
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	2b00      	cmp	r3, #0
 800371e:	d002      	beq.n	8003726 <xQueueGenericCreateStatic+0x52>
 8003720:	68bb      	ldr	r3, [r7, #8]
 8003722:	2b00      	cmp	r3, #0
 8003724:	d001      	beq.n	800372a <xQueueGenericCreateStatic+0x56>
 8003726:	2301      	movs	r3, #1
 8003728:	e000      	b.n	800372c <xQueueGenericCreateStatic+0x58>
 800372a:	2300      	movs	r3, #0
 800372c:	2b00      	cmp	r3, #0
 800372e:	d10a      	bne.n	8003746 <xQueueGenericCreateStatic+0x72>
 8003730:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003734:	f383 8811 	msr	BASEPRI, r3
 8003738:	f3bf 8f6f 	isb	sy
 800373c:	f3bf 8f4f 	dsb	sy
 8003740:	623b      	str	r3, [r7, #32]
 8003742:	bf00      	nop
 8003744:	e7fe      	b.n	8003744 <xQueueGenericCreateStatic+0x70>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	2b00      	cmp	r3, #0
 800374a:	d102      	bne.n	8003752 <xQueueGenericCreateStatic+0x7e>
 800374c:	68bb      	ldr	r3, [r7, #8]
 800374e:	2b00      	cmp	r3, #0
 8003750:	d101      	bne.n	8003756 <xQueueGenericCreateStatic+0x82>
 8003752:	2301      	movs	r3, #1
 8003754:	e000      	b.n	8003758 <xQueueGenericCreateStatic+0x84>
 8003756:	2300      	movs	r3, #0
 8003758:	2b00      	cmp	r3, #0
 800375a:	d10a      	bne.n	8003772 <xQueueGenericCreateStatic+0x9e>
 800375c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003760:	f383 8811 	msr	BASEPRI, r3
 8003764:	f3bf 8f6f 	isb	sy
 8003768:	f3bf 8f4f 	dsb	sy
 800376c:	61fb      	str	r3, [r7, #28]
 800376e:	bf00      	nop
 8003770:	e7fe      	b.n	8003770 <xQueueGenericCreateStatic+0x9c>
 8003772:	2350      	movs	r3, #80	; 0x50
 8003774:	617b      	str	r3, [r7, #20]
 8003776:	697b      	ldr	r3, [r7, #20]
 8003778:	2b50      	cmp	r3, #80	; 0x50
 800377a:	d00a      	beq.n	8003792 <xQueueGenericCreateStatic+0xbe>
 800377c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003780:	f383 8811 	msr	BASEPRI, r3
 8003784:	f3bf 8f6f 	isb	sy
 8003788:	f3bf 8f4f 	dsb	sy
 800378c:	61bb      	str	r3, [r7, #24]
 800378e:	bf00      	nop
 8003790:	e7fe      	b.n	8003790 <xQueueGenericCreateStatic+0xbc>
 8003792:	697b      	ldr	r3, [r7, #20]
 8003794:	683b      	ldr	r3, [r7, #0]
 8003796:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003798:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800379a:	2b00      	cmp	r3, #0
 800379c:	d00d      	beq.n	80037ba <xQueueGenericCreateStatic+0xe6>
 800379e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80037a0:	2201      	movs	r2, #1
 80037a2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80037a6:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 80037aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80037ac:	9300      	str	r3, [sp, #0]
 80037ae:	4613      	mov	r3, r2
 80037b0:	687a      	ldr	r2, [r7, #4]
 80037b2:	68b9      	ldr	r1, [r7, #8]
 80037b4:	68f8      	ldr	r0, [r7, #12]
 80037b6:	f000 f83f 	bl	8003838 <prvInitialiseNewQueue>
 80037ba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80037bc:	4618      	mov	r0, r3
 80037be:	3730      	adds	r7, #48	; 0x30
 80037c0:	46bd      	mov	sp, r7
 80037c2:	bd80      	pop	{r7, pc}

080037c4 <xQueueGenericCreate>:
 80037c4:	b580      	push	{r7, lr}
 80037c6:	b08a      	sub	sp, #40	; 0x28
 80037c8:	af02      	add	r7, sp, #8
 80037ca:	60f8      	str	r0, [r7, #12]
 80037cc:	60b9      	str	r1, [r7, #8]
 80037ce:	4613      	mov	r3, r2
 80037d0:	71fb      	strb	r3, [r7, #7]
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d10a      	bne.n	80037ee <xQueueGenericCreate+0x2a>
 80037d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037dc:	f383 8811 	msr	BASEPRI, r3
 80037e0:	f3bf 8f6f 	isb	sy
 80037e4:	f3bf 8f4f 	dsb	sy
 80037e8:	613b      	str	r3, [r7, #16]
 80037ea:	bf00      	nop
 80037ec:	e7fe      	b.n	80037ec <xQueueGenericCreate+0x28>
 80037ee:	68fb      	ldr	r3, [r7, #12]
 80037f0:	68ba      	ldr	r2, [r7, #8]
 80037f2:	fb02 f303 	mul.w	r3, r2, r3
 80037f6:	61fb      	str	r3, [r7, #28]
 80037f8:	69fb      	ldr	r3, [r7, #28]
 80037fa:	3350      	adds	r3, #80	; 0x50
 80037fc:	4618      	mov	r0, r3
 80037fe:	f002 fa0b 	bl	8005c18 <pvPortMalloc>
 8003802:	61b8      	str	r0, [r7, #24]
 8003804:	69bb      	ldr	r3, [r7, #24]
 8003806:	2b00      	cmp	r3, #0
 8003808:	d011      	beq.n	800382e <xQueueGenericCreate+0x6a>
 800380a:	69bb      	ldr	r3, [r7, #24]
 800380c:	617b      	str	r3, [r7, #20]
 800380e:	697b      	ldr	r3, [r7, #20]
 8003810:	3350      	adds	r3, #80	; 0x50
 8003812:	617b      	str	r3, [r7, #20]
 8003814:	69bb      	ldr	r3, [r7, #24]
 8003816:	2200      	movs	r2, #0
 8003818:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800381c:	79fa      	ldrb	r2, [r7, #7]
 800381e:	69bb      	ldr	r3, [r7, #24]
 8003820:	9300      	str	r3, [sp, #0]
 8003822:	4613      	mov	r3, r2
 8003824:	697a      	ldr	r2, [r7, #20]
 8003826:	68b9      	ldr	r1, [r7, #8]
 8003828:	68f8      	ldr	r0, [r7, #12]
 800382a:	f000 f805 	bl	8003838 <prvInitialiseNewQueue>
 800382e:	69bb      	ldr	r3, [r7, #24]
 8003830:	4618      	mov	r0, r3
 8003832:	3720      	adds	r7, #32
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}

08003838 <prvInitialiseNewQueue>:
 8003838:	b580      	push	{r7, lr}
 800383a:	b084      	sub	sp, #16
 800383c:	af00      	add	r7, sp, #0
 800383e:	60f8      	str	r0, [r7, #12]
 8003840:	60b9      	str	r1, [r7, #8]
 8003842:	607a      	str	r2, [r7, #4]
 8003844:	70fb      	strb	r3, [r7, #3]
 8003846:	68bb      	ldr	r3, [r7, #8]
 8003848:	2b00      	cmp	r3, #0
 800384a:	d103      	bne.n	8003854 <prvInitialiseNewQueue+0x1c>
 800384c:	69bb      	ldr	r3, [r7, #24]
 800384e:	69ba      	ldr	r2, [r7, #24]
 8003850:	601a      	str	r2, [r3, #0]
 8003852:	e002      	b.n	800385a <prvInitialiseNewQueue+0x22>
 8003854:	69bb      	ldr	r3, [r7, #24]
 8003856:	687a      	ldr	r2, [r7, #4]
 8003858:	601a      	str	r2, [r3, #0]
 800385a:	69bb      	ldr	r3, [r7, #24]
 800385c:	68fa      	ldr	r2, [r7, #12]
 800385e:	63da      	str	r2, [r3, #60]	; 0x3c
 8003860:	69bb      	ldr	r3, [r7, #24]
 8003862:	68ba      	ldr	r2, [r7, #8]
 8003864:	641a      	str	r2, [r3, #64]	; 0x40
 8003866:	2101      	movs	r1, #1
 8003868:	69b8      	ldr	r0, [r7, #24]
 800386a:	f7ff fecb 	bl	8003604 <xQueueGenericReset>
 800386e:	69bb      	ldr	r3, [r7, #24]
 8003870:	78fa      	ldrb	r2, [r7, #3]
 8003872:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8003876:	bf00      	nop
 8003878:	3710      	adds	r7, #16
 800387a:	46bd      	mov	sp, r7
 800387c:	bd80      	pop	{r7, pc}
	...

08003880 <xQueueGenericSend>:
 8003880:	b580      	push	{r7, lr}
 8003882:	b08e      	sub	sp, #56	; 0x38
 8003884:	af00      	add	r7, sp, #0
 8003886:	60f8      	str	r0, [r7, #12]
 8003888:	60b9      	str	r1, [r7, #8]
 800388a:	607a      	str	r2, [r7, #4]
 800388c:	603b      	str	r3, [r7, #0]
 800388e:	2300      	movs	r3, #0
 8003890:	637b      	str	r3, [r7, #52]	; 0x34
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	633b      	str	r3, [r7, #48]	; 0x30
 8003896:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003898:	2b00      	cmp	r3, #0
 800389a:	d10a      	bne.n	80038b2 <xQueueGenericSend+0x32>
 800389c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038a0:	f383 8811 	msr	BASEPRI, r3
 80038a4:	f3bf 8f6f 	isb	sy
 80038a8:	f3bf 8f4f 	dsb	sy
 80038ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80038ae:	bf00      	nop
 80038b0:	e7fe      	b.n	80038b0 <xQueueGenericSend+0x30>
 80038b2:	68bb      	ldr	r3, [r7, #8]
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d103      	bne.n	80038c0 <xQueueGenericSend+0x40>
 80038b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80038ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d101      	bne.n	80038c4 <xQueueGenericSend+0x44>
 80038c0:	2301      	movs	r3, #1
 80038c2:	e000      	b.n	80038c6 <xQueueGenericSend+0x46>
 80038c4:	2300      	movs	r3, #0
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d10a      	bne.n	80038e0 <xQueueGenericSend+0x60>
 80038ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038ce:	f383 8811 	msr	BASEPRI, r3
 80038d2:	f3bf 8f6f 	isb	sy
 80038d6:	f3bf 8f4f 	dsb	sy
 80038da:	627b      	str	r3, [r7, #36]	; 0x24
 80038dc:	bf00      	nop
 80038de:	e7fe      	b.n	80038de <xQueueGenericSend+0x5e>
 80038e0:	683b      	ldr	r3, [r7, #0]
 80038e2:	2b02      	cmp	r3, #2
 80038e4:	d103      	bne.n	80038ee <xQueueGenericSend+0x6e>
 80038e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80038e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038ea:	2b01      	cmp	r3, #1
 80038ec:	d101      	bne.n	80038f2 <xQueueGenericSend+0x72>
 80038ee:	2301      	movs	r3, #1
 80038f0:	e000      	b.n	80038f4 <xQueueGenericSend+0x74>
 80038f2:	2300      	movs	r3, #0
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d10a      	bne.n	800390e <xQueueGenericSend+0x8e>
 80038f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80038fc:	f383 8811 	msr	BASEPRI, r3
 8003900:	f3bf 8f6f 	isb	sy
 8003904:	f3bf 8f4f 	dsb	sy
 8003908:	623b      	str	r3, [r7, #32]
 800390a:	bf00      	nop
 800390c:	e7fe      	b.n	800390c <xQueueGenericSend+0x8c>
 800390e:	f001 fad1 	bl	8004eb4 <xTaskGetSchedulerState>
 8003912:	4603      	mov	r3, r0
 8003914:	2b00      	cmp	r3, #0
 8003916:	d102      	bne.n	800391e <xQueueGenericSend+0x9e>
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	2b00      	cmp	r3, #0
 800391c:	d101      	bne.n	8003922 <xQueueGenericSend+0xa2>
 800391e:	2301      	movs	r3, #1
 8003920:	e000      	b.n	8003924 <xQueueGenericSend+0xa4>
 8003922:	2300      	movs	r3, #0
 8003924:	2b00      	cmp	r3, #0
 8003926:	d10a      	bne.n	800393e <xQueueGenericSend+0xbe>
 8003928:	f04f 0350 	mov.w	r3, #80	; 0x50
 800392c:	f383 8811 	msr	BASEPRI, r3
 8003930:	f3bf 8f6f 	isb	sy
 8003934:	f3bf 8f4f 	dsb	sy
 8003938:	61fb      	str	r3, [r7, #28]
 800393a:	bf00      	nop
 800393c:	e7fe      	b.n	800393c <xQueueGenericSend+0xbc>
 800393e:	f002 f849 	bl	80059d4 <vPortEnterCritical>
 8003942:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003944:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003946:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800394a:	429a      	cmp	r2, r3
 800394c:	d302      	bcc.n	8003954 <xQueueGenericSend+0xd4>
 800394e:	683b      	ldr	r3, [r7, #0]
 8003950:	2b02      	cmp	r3, #2
 8003952:	d129      	bne.n	80039a8 <xQueueGenericSend+0x128>
 8003954:	683a      	ldr	r2, [r7, #0]
 8003956:	68b9      	ldr	r1, [r7, #8]
 8003958:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800395a:	f000 fa8b 	bl	8003e74 <prvCopyDataToQueue>
 800395e:	62f8      	str	r0, [r7, #44]	; 0x2c
 8003960:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003964:	2b00      	cmp	r3, #0
 8003966:	d010      	beq.n	800398a <xQueueGenericSend+0x10a>
 8003968:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800396a:	3324      	adds	r3, #36	; 0x24
 800396c:	4618      	mov	r0, r3
 800396e:	f001 f87d 	bl	8004a6c <xTaskRemoveFromEventList>
 8003972:	4603      	mov	r3, r0
 8003974:	2b00      	cmp	r3, #0
 8003976:	d013      	beq.n	80039a0 <xQueueGenericSend+0x120>
 8003978:	4b3f      	ldr	r3, [pc, #252]	; (8003a78 <xQueueGenericSend+0x1f8>)
 800397a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800397e:	601a      	str	r2, [r3, #0]
 8003980:	f3bf 8f4f 	dsb	sy
 8003984:	f3bf 8f6f 	isb	sy
 8003988:	e00a      	b.n	80039a0 <xQueueGenericSend+0x120>
 800398a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800398c:	2b00      	cmp	r3, #0
 800398e:	d007      	beq.n	80039a0 <xQueueGenericSend+0x120>
 8003990:	4b39      	ldr	r3, [pc, #228]	; (8003a78 <xQueueGenericSend+0x1f8>)
 8003992:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003996:	601a      	str	r2, [r3, #0]
 8003998:	f3bf 8f4f 	dsb	sy
 800399c:	f3bf 8f6f 	isb	sy
 80039a0:	f002 f848 	bl	8005a34 <vPortExitCritical>
 80039a4:	2301      	movs	r3, #1
 80039a6:	e063      	b.n	8003a70 <xQueueGenericSend+0x1f0>
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d103      	bne.n	80039b6 <xQueueGenericSend+0x136>
 80039ae:	f002 f841 	bl	8005a34 <vPortExitCritical>
 80039b2:	2300      	movs	r3, #0
 80039b4:	e05c      	b.n	8003a70 <xQueueGenericSend+0x1f0>
 80039b6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80039b8:	2b00      	cmp	r3, #0
 80039ba:	d106      	bne.n	80039ca <xQueueGenericSend+0x14a>
 80039bc:	f107 0314 	add.w	r3, r7, #20
 80039c0:	4618      	mov	r0, r3
 80039c2:	f001 f919 	bl	8004bf8 <vTaskInternalSetTimeOutState>
 80039c6:	2301      	movs	r3, #1
 80039c8:	637b      	str	r3, [r7, #52]	; 0x34
 80039ca:	f002 f833 	bl	8005a34 <vPortExitCritical>
 80039ce:	f000 fde7 	bl	80045a0 <vTaskSuspendAll>
 80039d2:	f001 ffff 	bl	80059d4 <vPortEnterCritical>
 80039d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80039d8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80039dc:	b25b      	sxtb	r3, r3
 80039de:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039e2:	d103      	bne.n	80039ec <xQueueGenericSend+0x16c>
 80039e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80039e6:	2200      	movs	r2, #0
 80039e8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80039ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80039ee:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80039f2:	b25b      	sxtb	r3, r3
 80039f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039f8:	d103      	bne.n	8003a02 <xQueueGenericSend+0x182>
 80039fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80039fc:	2200      	movs	r2, #0
 80039fe:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003a02:	f002 f817 	bl	8005a34 <vPortExitCritical>
 8003a06:	1d3a      	adds	r2, r7, #4
 8003a08:	f107 0314 	add.w	r3, r7, #20
 8003a0c:	4611      	mov	r1, r2
 8003a0e:	4618      	mov	r0, r3
 8003a10:	f001 f908 	bl	8004c24 <xTaskCheckForTimeOut>
 8003a14:	4603      	mov	r3, r0
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	d124      	bne.n	8003a64 <xQueueGenericSend+0x1e4>
 8003a1a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003a1c:	f000 fb22 	bl	8004064 <prvIsQueueFull>
 8003a20:	4603      	mov	r3, r0
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	d018      	beq.n	8003a58 <xQueueGenericSend+0x1d8>
 8003a26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003a28:	3310      	adds	r3, #16
 8003a2a:	687a      	ldr	r2, [r7, #4]
 8003a2c:	4611      	mov	r1, r2
 8003a2e:	4618      	mov	r0, r3
 8003a30:	f000 ff90 	bl	8004954 <vTaskPlaceOnEventList>
 8003a34:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003a36:	f000 faad 	bl	8003f94 <prvUnlockQueue>
 8003a3a:	f000 fdbf 	bl	80045bc <xTaskResumeAll>
 8003a3e:	4603      	mov	r3, r0
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	f47f af7c 	bne.w	800393e <xQueueGenericSend+0xbe>
 8003a46:	4b0c      	ldr	r3, [pc, #48]	; (8003a78 <xQueueGenericSend+0x1f8>)
 8003a48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003a4c:	601a      	str	r2, [r3, #0]
 8003a4e:	f3bf 8f4f 	dsb	sy
 8003a52:	f3bf 8f6f 	isb	sy
 8003a56:	e772      	b.n	800393e <xQueueGenericSend+0xbe>
 8003a58:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003a5a:	f000 fa9b 	bl	8003f94 <prvUnlockQueue>
 8003a5e:	f000 fdad 	bl	80045bc <xTaskResumeAll>
 8003a62:	e76c      	b.n	800393e <xQueueGenericSend+0xbe>
 8003a64:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003a66:	f000 fa95 	bl	8003f94 <prvUnlockQueue>
 8003a6a:	f000 fda7 	bl	80045bc <xTaskResumeAll>
 8003a6e:	2300      	movs	r3, #0
 8003a70:	4618      	mov	r0, r3
 8003a72:	3738      	adds	r7, #56	; 0x38
 8003a74:	46bd      	mov	sp, r7
 8003a76:	bd80      	pop	{r7, pc}
 8003a78:	e000ed04 	.word	0xe000ed04

08003a7c <xQueueGenericSendFromISR>:
 8003a7c:	b580      	push	{r7, lr}
 8003a7e:	b090      	sub	sp, #64	; 0x40
 8003a80:	af00      	add	r7, sp, #0
 8003a82:	60f8      	str	r0, [r7, #12]
 8003a84:	60b9      	str	r1, [r7, #8]
 8003a86:	607a      	str	r2, [r7, #4]
 8003a88:	603b      	str	r3, [r7, #0]
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	63bb      	str	r3, [r7, #56]	; 0x38
 8003a8e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003a90:	2b00      	cmp	r3, #0
 8003a92:	d10a      	bne.n	8003aaa <xQueueGenericSendFromISR+0x2e>
 8003a94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003a98:	f383 8811 	msr	BASEPRI, r3
 8003a9c:	f3bf 8f6f 	isb	sy
 8003aa0:	f3bf 8f4f 	dsb	sy
 8003aa4:	62bb      	str	r3, [r7, #40]	; 0x28
 8003aa6:	bf00      	nop
 8003aa8:	e7fe      	b.n	8003aa8 <xQueueGenericSendFromISR+0x2c>
 8003aaa:	68bb      	ldr	r3, [r7, #8]
 8003aac:	2b00      	cmp	r3, #0
 8003aae:	d103      	bne.n	8003ab8 <xQueueGenericSendFromISR+0x3c>
 8003ab0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ab2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	d101      	bne.n	8003abc <xQueueGenericSendFromISR+0x40>
 8003ab8:	2301      	movs	r3, #1
 8003aba:	e000      	b.n	8003abe <xQueueGenericSendFromISR+0x42>
 8003abc:	2300      	movs	r3, #0
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d10a      	bne.n	8003ad8 <xQueueGenericSendFromISR+0x5c>
 8003ac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ac6:	f383 8811 	msr	BASEPRI, r3
 8003aca:	f3bf 8f6f 	isb	sy
 8003ace:	f3bf 8f4f 	dsb	sy
 8003ad2:	627b      	str	r3, [r7, #36]	; 0x24
 8003ad4:	bf00      	nop
 8003ad6:	e7fe      	b.n	8003ad6 <xQueueGenericSendFromISR+0x5a>
 8003ad8:	683b      	ldr	r3, [r7, #0]
 8003ada:	2b02      	cmp	r3, #2
 8003adc:	d103      	bne.n	8003ae6 <xQueueGenericSendFromISR+0x6a>
 8003ade:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ae0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003ae2:	2b01      	cmp	r3, #1
 8003ae4:	d101      	bne.n	8003aea <xQueueGenericSendFromISR+0x6e>
 8003ae6:	2301      	movs	r3, #1
 8003ae8:	e000      	b.n	8003aec <xQueueGenericSendFromISR+0x70>
 8003aea:	2300      	movs	r3, #0
 8003aec:	2b00      	cmp	r3, #0
 8003aee:	d10a      	bne.n	8003b06 <xQueueGenericSendFromISR+0x8a>
 8003af0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003af4:	f383 8811 	msr	BASEPRI, r3
 8003af8:	f3bf 8f6f 	isb	sy
 8003afc:	f3bf 8f4f 	dsb	sy
 8003b00:	623b      	str	r3, [r7, #32]
 8003b02:	bf00      	nop
 8003b04:	e7fe      	b.n	8003b04 <xQueueGenericSendFromISR+0x88>
 8003b06:	f002 f847 	bl	8005b98 <vPortValidateInterruptPriority>
 8003b0a:	f3ef 8211 	mrs	r2, BASEPRI
 8003b0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b12:	f383 8811 	msr	BASEPRI, r3
 8003b16:	f3bf 8f6f 	isb	sy
 8003b1a:	f3bf 8f4f 	dsb	sy
 8003b1e:	61fa      	str	r2, [r7, #28]
 8003b20:	61bb      	str	r3, [r7, #24]
 8003b22:	69fb      	ldr	r3, [r7, #28]
 8003b24:	637b      	str	r3, [r7, #52]	; 0x34
 8003b26:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003b2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003b2e:	429a      	cmp	r2, r3
 8003b30:	d302      	bcc.n	8003b38 <xQueueGenericSendFromISR+0xbc>
 8003b32:	683b      	ldr	r3, [r7, #0]
 8003b34:	2b02      	cmp	r3, #2
 8003b36:	d12f      	bne.n	8003b98 <xQueueGenericSendFromISR+0x11c>
 8003b38:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b3a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003b3e:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003b42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b46:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b48:	683a      	ldr	r2, [r7, #0]
 8003b4a:	68b9      	ldr	r1, [r7, #8]
 8003b4c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8003b4e:	f000 f991 	bl	8003e74 <prvCopyDataToQueue>
 8003b52:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 8003b56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003b5a:	d112      	bne.n	8003b82 <xQueueGenericSendFromISR+0x106>
 8003b5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	d016      	beq.n	8003b92 <xQueueGenericSendFromISR+0x116>
 8003b64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b66:	3324      	adds	r3, #36	; 0x24
 8003b68:	4618      	mov	r0, r3
 8003b6a:	f000 ff7f 	bl	8004a6c <xTaskRemoveFromEventList>
 8003b6e:	4603      	mov	r3, r0
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d00e      	beq.n	8003b92 <xQueueGenericSendFromISR+0x116>
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d00b      	beq.n	8003b92 <xQueueGenericSendFromISR+0x116>
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	2201      	movs	r2, #1
 8003b7e:	601a      	str	r2, [r3, #0]
 8003b80:	e007      	b.n	8003b92 <xQueueGenericSendFromISR+0x116>
 8003b82:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003b86:	3301      	adds	r3, #1
 8003b88:	b2db      	uxtb	r3, r3
 8003b8a:	b25a      	sxtb	r2, r3
 8003b8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b8e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003b92:	2301      	movs	r3, #1
 8003b94:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003b96:	e001      	b.n	8003b9c <xQueueGenericSendFromISR+0x120>
 8003b98:	2300      	movs	r3, #0
 8003b9a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003b9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003b9e:	617b      	str	r3, [r7, #20]
 8003ba0:	697b      	ldr	r3, [r7, #20]
 8003ba2:	f383 8811 	msr	BASEPRI, r3
 8003ba6:	bf00      	nop
 8003ba8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003baa:	4618      	mov	r0, r3
 8003bac:	3740      	adds	r7, #64	; 0x40
 8003bae:	46bd      	mov	sp, r7
 8003bb0:	bd80      	pop	{r7, pc}
	...

08003bb4 <xQueueReceive>:
 8003bb4:	b580      	push	{r7, lr}
 8003bb6:	b08c      	sub	sp, #48	; 0x30
 8003bb8:	af00      	add	r7, sp, #0
 8003bba:	60f8      	str	r0, [r7, #12]
 8003bbc:	60b9      	str	r1, [r7, #8]
 8003bbe:	607a      	str	r2, [r7, #4]
 8003bc0:	2300      	movs	r3, #0
 8003bc2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	62bb      	str	r3, [r7, #40]	; 0x28
 8003bc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d10a      	bne.n	8003be4 <xQueueReceive+0x30>
 8003bce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bd2:	f383 8811 	msr	BASEPRI, r3
 8003bd6:	f3bf 8f6f 	isb	sy
 8003bda:	f3bf 8f4f 	dsb	sy
 8003bde:	623b      	str	r3, [r7, #32]
 8003be0:	bf00      	nop
 8003be2:	e7fe      	b.n	8003be2 <xQueueReceive+0x2e>
 8003be4:	68bb      	ldr	r3, [r7, #8]
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d103      	bne.n	8003bf2 <xQueueReceive+0x3e>
 8003bea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003bec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bee:	2b00      	cmp	r3, #0
 8003bf0:	d101      	bne.n	8003bf6 <xQueueReceive+0x42>
 8003bf2:	2301      	movs	r3, #1
 8003bf4:	e000      	b.n	8003bf8 <xQueueReceive+0x44>
 8003bf6:	2300      	movs	r3, #0
 8003bf8:	2b00      	cmp	r3, #0
 8003bfa:	d10a      	bne.n	8003c12 <xQueueReceive+0x5e>
 8003bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c00:	f383 8811 	msr	BASEPRI, r3
 8003c04:	f3bf 8f6f 	isb	sy
 8003c08:	f3bf 8f4f 	dsb	sy
 8003c0c:	61fb      	str	r3, [r7, #28]
 8003c0e:	bf00      	nop
 8003c10:	e7fe      	b.n	8003c10 <xQueueReceive+0x5c>
 8003c12:	f001 f94f 	bl	8004eb4 <xTaskGetSchedulerState>
 8003c16:	4603      	mov	r3, r0
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d102      	bne.n	8003c22 <xQueueReceive+0x6e>
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	2b00      	cmp	r3, #0
 8003c20:	d101      	bne.n	8003c26 <xQueueReceive+0x72>
 8003c22:	2301      	movs	r3, #1
 8003c24:	e000      	b.n	8003c28 <xQueueReceive+0x74>
 8003c26:	2300      	movs	r3, #0
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	d10a      	bne.n	8003c42 <xQueueReceive+0x8e>
 8003c2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c30:	f383 8811 	msr	BASEPRI, r3
 8003c34:	f3bf 8f6f 	isb	sy
 8003c38:	f3bf 8f4f 	dsb	sy
 8003c3c:	61bb      	str	r3, [r7, #24]
 8003c3e:	bf00      	nop
 8003c40:	e7fe      	b.n	8003c40 <xQueueReceive+0x8c>
 8003c42:	f001 fec7 	bl	80059d4 <vPortEnterCritical>
 8003c46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c4a:	627b      	str	r3, [r7, #36]	; 0x24
 8003c4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	d01f      	beq.n	8003c92 <xQueueReceive+0xde>
 8003c52:	68b9      	ldr	r1, [r7, #8]
 8003c54:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003c56:	f000 f977 	bl	8003f48 <prvCopyDataFromQueue>
 8003c5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c5c:	1e5a      	subs	r2, r3, #1
 8003c5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c60:	639a      	str	r2, [r3, #56]	; 0x38
 8003c62:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c64:	691b      	ldr	r3, [r3, #16]
 8003c66:	2b00      	cmp	r3, #0
 8003c68:	d00f      	beq.n	8003c8a <xQueueReceive+0xd6>
 8003c6a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c6c:	3310      	adds	r3, #16
 8003c6e:	4618      	mov	r0, r3
 8003c70:	f000 fefc 	bl	8004a6c <xTaskRemoveFromEventList>
 8003c74:	4603      	mov	r3, r0
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d007      	beq.n	8003c8a <xQueueReceive+0xd6>
 8003c7a:	4b3d      	ldr	r3, [pc, #244]	; (8003d70 <xQueueReceive+0x1bc>)
 8003c7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003c80:	601a      	str	r2, [r3, #0]
 8003c82:	f3bf 8f4f 	dsb	sy
 8003c86:	f3bf 8f6f 	isb	sy
 8003c8a:	f001 fed3 	bl	8005a34 <vPortExitCritical>
 8003c8e:	2301      	movs	r3, #1
 8003c90:	e069      	b.n	8003d66 <xQueueReceive+0x1b2>
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	2b00      	cmp	r3, #0
 8003c96:	d103      	bne.n	8003ca0 <xQueueReceive+0xec>
 8003c98:	f001 fecc 	bl	8005a34 <vPortExitCritical>
 8003c9c:	2300      	movs	r3, #0
 8003c9e:	e062      	b.n	8003d66 <xQueueReceive+0x1b2>
 8003ca0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d106      	bne.n	8003cb4 <xQueueReceive+0x100>
 8003ca6:	f107 0310 	add.w	r3, r7, #16
 8003caa:	4618      	mov	r0, r3
 8003cac:	f000 ffa4 	bl	8004bf8 <vTaskInternalSetTimeOutState>
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003cb4:	f001 febe 	bl	8005a34 <vPortExitCritical>
 8003cb8:	f000 fc72 	bl	80045a0 <vTaskSuspendAll>
 8003cbc:	f001 fe8a 	bl	80059d4 <vPortEnterCritical>
 8003cc0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003cc2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8003cc6:	b25b      	sxtb	r3, r3
 8003cc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ccc:	d103      	bne.n	8003cd6 <xQueueReceive+0x122>
 8003cce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003cd0:	2200      	movs	r2, #0
 8003cd2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003cd6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003cd8:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003cdc:	b25b      	sxtb	r3, r3
 8003cde:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ce2:	d103      	bne.n	8003cec <xQueueReceive+0x138>
 8003ce4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003ce6:	2200      	movs	r2, #0
 8003ce8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003cec:	f001 fea2 	bl	8005a34 <vPortExitCritical>
 8003cf0:	1d3a      	adds	r2, r7, #4
 8003cf2:	f107 0310 	add.w	r3, r7, #16
 8003cf6:	4611      	mov	r1, r2
 8003cf8:	4618      	mov	r0, r3
 8003cfa:	f000 ff93 	bl	8004c24 <xTaskCheckForTimeOut>
 8003cfe:	4603      	mov	r3, r0
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d123      	bne.n	8003d4c <xQueueReceive+0x198>
 8003d04:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003d06:	f000 f997 	bl	8004038 <prvIsQueueEmpty>
 8003d0a:	4603      	mov	r3, r0
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d017      	beq.n	8003d40 <xQueueReceive+0x18c>
 8003d10:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d12:	3324      	adds	r3, #36	; 0x24
 8003d14:	687a      	ldr	r2, [r7, #4]
 8003d16:	4611      	mov	r1, r2
 8003d18:	4618      	mov	r0, r3
 8003d1a:	f000 fe1b 	bl	8004954 <vTaskPlaceOnEventList>
 8003d1e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003d20:	f000 f938 	bl	8003f94 <prvUnlockQueue>
 8003d24:	f000 fc4a 	bl	80045bc <xTaskResumeAll>
 8003d28:	4603      	mov	r3, r0
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	d189      	bne.n	8003c42 <xQueueReceive+0x8e>
 8003d2e:	4b10      	ldr	r3, [pc, #64]	; (8003d70 <xQueueReceive+0x1bc>)
 8003d30:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003d34:	601a      	str	r2, [r3, #0]
 8003d36:	f3bf 8f4f 	dsb	sy
 8003d3a:	f3bf 8f6f 	isb	sy
 8003d3e:	e780      	b.n	8003c42 <xQueueReceive+0x8e>
 8003d40:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003d42:	f000 f927 	bl	8003f94 <prvUnlockQueue>
 8003d46:	f000 fc39 	bl	80045bc <xTaskResumeAll>
 8003d4a:	e77a      	b.n	8003c42 <xQueueReceive+0x8e>
 8003d4c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003d4e:	f000 f921 	bl	8003f94 <prvUnlockQueue>
 8003d52:	f000 fc33 	bl	80045bc <xTaskResumeAll>
 8003d56:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8003d58:	f000 f96e 	bl	8004038 <prvIsQueueEmpty>
 8003d5c:	4603      	mov	r3, r0
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	f43f af6f 	beq.w	8003c42 <xQueueReceive+0x8e>
 8003d64:	2300      	movs	r3, #0
 8003d66:	4618      	mov	r0, r3
 8003d68:	3730      	adds	r7, #48	; 0x30
 8003d6a:	46bd      	mov	sp, r7
 8003d6c:	bd80      	pop	{r7, pc}
 8003d6e:	bf00      	nop
 8003d70:	e000ed04 	.word	0xe000ed04

08003d74 <xQueueReceiveFromISR>:
 8003d74:	b580      	push	{r7, lr}
 8003d76:	b08e      	sub	sp, #56	; 0x38
 8003d78:	af00      	add	r7, sp, #0
 8003d7a:	60f8      	str	r0, [r7, #12]
 8003d7c:	60b9      	str	r1, [r7, #8]
 8003d7e:	607a      	str	r2, [r7, #4]
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	633b      	str	r3, [r7, #48]	; 0x30
 8003d84:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d86:	2b00      	cmp	r3, #0
 8003d88:	d10a      	bne.n	8003da0 <xQueueReceiveFromISR+0x2c>
 8003d8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d8e:	f383 8811 	msr	BASEPRI, r3
 8003d92:	f3bf 8f6f 	isb	sy
 8003d96:	f3bf 8f4f 	dsb	sy
 8003d9a:	623b      	str	r3, [r7, #32]
 8003d9c:	bf00      	nop
 8003d9e:	e7fe      	b.n	8003d9e <xQueueReceiveFromISR+0x2a>
 8003da0:	68bb      	ldr	r3, [r7, #8]
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d103      	bne.n	8003dae <xQueueReceiveFromISR+0x3a>
 8003da6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003da8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003daa:	2b00      	cmp	r3, #0
 8003dac:	d101      	bne.n	8003db2 <xQueueReceiveFromISR+0x3e>
 8003dae:	2301      	movs	r3, #1
 8003db0:	e000      	b.n	8003db4 <xQueueReceiveFromISR+0x40>
 8003db2:	2300      	movs	r3, #0
 8003db4:	2b00      	cmp	r3, #0
 8003db6:	d10a      	bne.n	8003dce <xQueueReceiveFromISR+0x5a>
 8003db8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003dbc:	f383 8811 	msr	BASEPRI, r3
 8003dc0:	f3bf 8f6f 	isb	sy
 8003dc4:	f3bf 8f4f 	dsb	sy
 8003dc8:	61fb      	str	r3, [r7, #28]
 8003dca:	bf00      	nop
 8003dcc:	e7fe      	b.n	8003dcc <xQueueReceiveFromISR+0x58>
 8003dce:	f001 fee3 	bl	8005b98 <vPortValidateInterruptPriority>
 8003dd2:	f3ef 8211 	mrs	r2, BASEPRI
 8003dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003dda:	f383 8811 	msr	BASEPRI, r3
 8003dde:	f3bf 8f6f 	isb	sy
 8003de2:	f3bf 8f4f 	dsb	sy
 8003de6:	61ba      	str	r2, [r7, #24]
 8003de8:	617b      	str	r3, [r7, #20]
 8003dea:	69bb      	ldr	r3, [r7, #24]
 8003dec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003dee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003df0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003df2:	62bb      	str	r3, [r7, #40]	; 0x28
 8003df4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d02f      	beq.n	8003e5a <xQueueReceiveFromISR+0xe6>
 8003dfa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dfc:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8003e00:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8003e04:	68b9      	ldr	r1, [r7, #8]
 8003e06:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003e08:	f000 f89e 	bl	8003f48 <prvCopyDataFromQueue>
 8003e0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003e0e:	1e5a      	subs	r2, r3, #1
 8003e10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e12:	639a      	str	r2, [r3, #56]	; 0x38
 8003e14:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8003e18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003e1c:	d112      	bne.n	8003e44 <xQueueReceiveFromISR+0xd0>
 8003e1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e20:	691b      	ldr	r3, [r3, #16]
 8003e22:	2b00      	cmp	r3, #0
 8003e24:	d016      	beq.n	8003e54 <xQueueReceiveFromISR+0xe0>
 8003e26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e28:	3310      	adds	r3, #16
 8003e2a:	4618      	mov	r0, r3
 8003e2c:	f000 fe1e 	bl	8004a6c <xTaskRemoveFromEventList>
 8003e30:	4603      	mov	r3, r0
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d00e      	beq.n	8003e54 <xQueueReceiveFromISR+0xe0>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d00b      	beq.n	8003e54 <xQueueReceiveFromISR+0xe0>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2201      	movs	r2, #1
 8003e40:	601a      	str	r2, [r3, #0]
 8003e42:	e007      	b.n	8003e54 <xQueueReceiveFromISR+0xe0>
 8003e44:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003e48:	3301      	adds	r3, #1
 8003e4a:	b2db      	uxtb	r3, r3
 8003e4c:	b25a      	sxtb	r2, r3
 8003e4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e50:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003e54:	2301      	movs	r3, #1
 8003e56:	637b      	str	r3, [r7, #52]	; 0x34
 8003e58:	e001      	b.n	8003e5e <xQueueReceiveFromISR+0xea>
 8003e5a:	2300      	movs	r3, #0
 8003e5c:	637b      	str	r3, [r7, #52]	; 0x34
 8003e5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003e60:	613b      	str	r3, [r7, #16]
 8003e62:	693b      	ldr	r3, [r7, #16]
 8003e64:	f383 8811 	msr	BASEPRI, r3
 8003e68:	bf00      	nop
 8003e6a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3738      	adds	r7, #56	; 0x38
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <prvCopyDataToQueue>:
 8003e74:	b580      	push	{r7, lr}
 8003e76:	b086      	sub	sp, #24
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	60f8      	str	r0, [r7, #12]
 8003e7c:	60b9      	str	r1, [r7, #8]
 8003e7e:	607a      	str	r2, [r7, #4]
 8003e80:	2300      	movs	r3, #0
 8003e82:	617b      	str	r3, [r7, #20]
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003e88:	613b      	str	r3, [r7, #16]
 8003e8a:	68fb      	ldr	r3, [r7, #12]
 8003e8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d10d      	bne.n	8003eae <prvCopyDataToQueue+0x3a>
 8003e92:	68fb      	ldr	r3, [r7, #12]
 8003e94:	681b      	ldr	r3, [r3, #0]
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	d14d      	bne.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	689b      	ldr	r3, [r3, #8]
 8003e9e:	4618      	mov	r0, r3
 8003ea0:	f001 f826 	bl	8004ef0 <xTaskPriorityDisinherit>
 8003ea4:	6178      	str	r0, [r7, #20]
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	2200      	movs	r2, #0
 8003eaa:	609a      	str	r2, [r3, #8]
 8003eac:	e043      	b.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d119      	bne.n	8003ee8 <prvCopyDataToQueue+0x74>
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	6858      	ldr	r0, [r3, #4]
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ebc:	461a      	mov	r2, r3
 8003ebe:	68b9      	ldr	r1, [r7, #8]
 8003ec0:	f002 fb6d 	bl	800659e <memcpy>
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	685a      	ldr	r2, [r3, #4]
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ecc:	441a      	add	r2, r3
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	605a      	str	r2, [r3, #4]
 8003ed2:	68fb      	ldr	r3, [r7, #12]
 8003ed4:	685a      	ldr	r2, [r3, #4]
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	689b      	ldr	r3, [r3, #8]
 8003eda:	429a      	cmp	r2, r3
 8003edc:	d32b      	bcc.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003ede:	68fb      	ldr	r3, [r7, #12]
 8003ee0:	681a      	ldr	r2, [r3, #0]
 8003ee2:	68fb      	ldr	r3, [r7, #12]
 8003ee4:	605a      	str	r2, [r3, #4]
 8003ee6:	e026      	b.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	68d8      	ldr	r0, [r3, #12]
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ef0:	461a      	mov	r2, r3
 8003ef2:	68b9      	ldr	r1, [r7, #8]
 8003ef4:	f002 fb53 	bl	800659e <memcpy>
 8003ef8:	68fb      	ldr	r3, [r7, #12]
 8003efa:	68da      	ldr	r2, [r3, #12]
 8003efc:	68fb      	ldr	r3, [r7, #12]
 8003efe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f00:	425b      	negs	r3, r3
 8003f02:	441a      	add	r2, r3
 8003f04:	68fb      	ldr	r3, [r7, #12]
 8003f06:	60da      	str	r2, [r3, #12]
 8003f08:	68fb      	ldr	r3, [r7, #12]
 8003f0a:	68da      	ldr	r2, [r3, #12]
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	429a      	cmp	r2, r3
 8003f12:	d207      	bcs.n	8003f24 <prvCopyDataToQueue+0xb0>
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	689a      	ldr	r2, [r3, #8]
 8003f18:	68fb      	ldr	r3, [r7, #12]
 8003f1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f1c:	425b      	negs	r3, r3
 8003f1e:	441a      	add	r2, r3
 8003f20:	68fb      	ldr	r3, [r7, #12]
 8003f22:	60da      	str	r2, [r3, #12]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	2b02      	cmp	r3, #2
 8003f28:	d105      	bne.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003f2a:	693b      	ldr	r3, [r7, #16]
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d002      	beq.n	8003f36 <prvCopyDataToQueue+0xc2>
 8003f30:	693b      	ldr	r3, [r7, #16]
 8003f32:	3b01      	subs	r3, #1
 8003f34:	613b      	str	r3, [r7, #16]
 8003f36:	693b      	ldr	r3, [r7, #16]
 8003f38:	1c5a      	adds	r2, r3, #1
 8003f3a:	68fb      	ldr	r3, [r7, #12]
 8003f3c:	639a      	str	r2, [r3, #56]	; 0x38
 8003f3e:	697b      	ldr	r3, [r7, #20]
 8003f40:	4618      	mov	r0, r3
 8003f42:	3718      	adds	r7, #24
 8003f44:	46bd      	mov	sp, r7
 8003f46:	bd80      	pop	{r7, pc}

08003f48 <prvCopyDataFromQueue>:
 8003f48:	b580      	push	{r7, lr}
 8003f4a:	b082      	sub	sp, #8
 8003f4c:	af00      	add	r7, sp, #0
 8003f4e:	6078      	str	r0, [r7, #4]
 8003f50:	6039      	str	r1, [r7, #0]
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d018      	beq.n	8003f8c <prvCopyDataFromQueue+0x44>
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	68da      	ldr	r2, [r3, #12]
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f62:	441a      	add	r2, r3
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	60da      	str	r2, [r3, #12]
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	68da      	ldr	r2, [r3, #12]
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	689b      	ldr	r3, [r3, #8]
 8003f70:	429a      	cmp	r2, r3
 8003f72:	d303      	bcc.n	8003f7c <prvCopyDataFromQueue+0x34>
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681a      	ldr	r2, [r3, #0]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	60da      	str	r2, [r3, #12]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	68d9      	ldr	r1, [r3, #12]
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f84:	461a      	mov	r2, r3
 8003f86:	6838      	ldr	r0, [r7, #0]
 8003f88:	f002 fb09 	bl	800659e <memcpy>
 8003f8c:	bf00      	nop
 8003f8e:	3708      	adds	r7, #8
 8003f90:	46bd      	mov	sp, r7
 8003f92:	bd80      	pop	{r7, pc}

08003f94 <prvUnlockQueue>:
 8003f94:	b580      	push	{r7, lr}
 8003f96:	b084      	sub	sp, #16
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	f001 fd1a 	bl	80059d4 <vPortEnterCritical>
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003fa6:	73fb      	strb	r3, [r7, #15]
 8003fa8:	e011      	b.n	8003fce <prvUnlockQueue+0x3a>
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d012      	beq.n	8003fd8 <prvUnlockQueue+0x44>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	3324      	adds	r3, #36	; 0x24
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	f000 fd58 	bl	8004a6c <xTaskRemoveFromEventList>
 8003fbc:	4603      	mov	r3, r0
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d001      	beq.n	8003fc6 <prvUnlockQueue+0x32>
 8003fc2:	f000 fe91 	bl	8004ce8 <vTaskMissedYield>
 8003fc6:	7bfb      	ldrb	r3, [r7, #15]
 8003fc8:	3b01      	subs	r3, #1
 8003fca:	b2db      	uxtb	r3, r3
 8003fcc:	73fb      	strb	r3, [r7, #15]
 8003fce:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	dce9      	bgt.n	8003faa <prvUnlockQueue+0x16>
 8003fd6:	e000      	b.n	8003fda <prvUnlockQueue+0x46>
 8003fd8:	bf00      	nop
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	22ff      	movs	r2, #255	; 0xff
 8003fde:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003fe2:	f001 fd27 	bl	8005a34 <vPortExitCritical>
 8003fe6:	f001 fcf5 	bl	80059d4 <vPortEnterCritical>
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8003ff0:	73bb      	strb	r3, [r7, #14]
 8003ff2:	e011      	b.n	8004018 <prvUnlockQueue+0x84>
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	691b      	ldr	r3, [r3, #16]
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d012      	beq.n	8004022 <prvUnlockQueue+0x8e>
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	3310      	adds	r3, #16
 8004000:	4618      	mov	r0, r3
 8004002:	f000 fd33 	bl	8004a6c <xTaskRemoveFromEventList>
 8004006:	4603      	mov	r3, r0
 8004008:	2b00      	cmp	r3, #0
 800400a:	d001      	beq.n	8004010 <prvUnlockQueue+0x7c>
 800400c:	f000 fe6c 	bl	8004ce8 <vTaskMissedYield>
 8004010:	7bbb      	ldrb	r3, [r7, #14]
 8004012:	3b01      	subs	r3, #1
 8004014:	b2db      	uxtb	r3, r3
 8004016:	73bb      	strb	r3, [r7, #14]
 8004018:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800401c:	2b00      	cmp	r3, #0
 800401e:	dce9      	bgt.n	8003ff4 <prvUnlockQueue+0x60>
 8004020:	e000      	b.n	8004024 <prvUnlockQueue+0x90>
 8004022:	bf00      	nop
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	22ff      	movs	r2, #255	; 0xff
 8004028:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800402c:	f001 fd02 	bl	8005a34 <vPortExitCritical>
 8004030:	bf00      	nop
 8004032:	3710      	adds	r7, #16
 8004034:	46bd      	mov	sp, r7
 8004036:	bd80      	pop	{r7, pc}

08004038 <prvIsQueueEmpty>:
 8004038:	b580      	push	{r7, lr}
 800403a:	b084      	sub	sp, #16
 800403c:	af00      	add	r7, sp, #0
 800403e:	6078      	str	r0, [r7, #4]
 8004040:	f001 fcc8 	bl	80059d4 <vPortEnterCritical>
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004048:	2b00      	cmp	r3, #0
 800404a:	d102      	bne.n	8004052 <prvIsQueueEmpty+0x1a>
 800404c:	2301      	movs	r3, #1
 800404e:	60fb      	str	r3, [r7, #12]
 8004050:	e001      	b.n	8004056 <prvIsQueueEmpty+0x1e>
 8004052:	2300      	movs	r3, #0
 8004054:	60fb      	str	r3, [r7, #12]
 8004056:	f001 fced 	bl	8005a34 <vPortExitCritical>
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	4618      	mov	r0, r3
 800405e:	3710      	adds	r7, #16
 8004060:	46bd      	mov	sp, r7
 8004062:	bd80      	pop	{r7, pc}

08004064 <prvIsQueueFull>:
 8004064:	b580      	push	{r7, lr}
 8004066:	b084      	sub	sp, #16
 8004068:	af00      	add	r7, sp, #0
 800406a:	6078      	str	r0, [r7, #4]
 800406c:	f001 fcb2 	bl	80059d4 <vPortEnterCritical>
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004078:	429a      	cmp	r2, r3
 800407a:	d102      	bne.n	8004082 <prvIsQueueFull+0x1e>
 800407c:	2301      	movs	r3, #1
 800407e:	60fb      	str	r3, [r7, #12]
 8004080:	e001      	b.n	8004086 <prvIsQueueFull+0x22>
 8004082:	2300      	movs	r3, #0
 8004084:	60fb      	str	r3, [r7, #12]
 8004086:	f001 fcd5 	bl	8005a34 <vPortExitCritical>
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	4618      	mov	r0, r3
 800408e:	3710      	adds	r7, #16
 8004090:	46bd      	mov	sp, r7
 8004092:	bd80      	pop	{r7, pc}

08004094 <vQueueAddToRegistry>:
 8004094:	b480      	push	{r7}
 8004096:	b085      	sub	sp, #20
 8004098:	af00      	add	r7, sp, #0
 800409a:	6078      	str	r0, [r7, #4]
 800409c:	6039      	str	r1, [r7, #0]
 800409e:	2300      	movs	r3, #0
 80040a0:	60fb      	str	r3, [r7, #12]
 80040a2:	e014      	b.n	80040ce <vQueueAddToRegistry+0x3a>
 80040a4:	4a0f      	ldr	r2, [pc, #60]	; (80040e4 <vQueueAddToRegistry+0x50>)
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80040ac:	2b00      	cmp	r3, #0
 80040ae:	d10b      	bne.n	80040c8 <vQueueAddToRegistry+0x34>
 80040b0:	490c      	ldr	r1, [pc, #48]	; (80040e4 <vQueueAddToRegistry+0x50>)
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	683a      	ldr	r2, [r7, #0]
 80040b6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 80040ba:	4a0a      	ldr	r2, [pc, #40]	; (80040e4 <vQueueAddToRegistry+0x50>)
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	00db      	lsls	r3, r3, #3
 80040c0:	4413      	add	r3, r2
 80040c2:	687a      	ldr	r2, [r7, #4]
 80040c4:	605a      	str	r2, [r3, #4]
 80040c6:	e006      	b.n	80040d6 <vQueueAddToRegistry+0x42>
 80040c8:	68fb      	ldr	r3, [r7, #12]
 80040ca:	3301      	adds	r3, #1
 80040cc:	60fb      	str	r3, [r7, #12]
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	2b07      	cmp	r3, #7
 80040d2:	d9e7      	bls.n	80040a4 <vQueueAddToRegistry+0x10>
 80040d4:	bf00      	nop
 80040d6:	bf00      	nop
 80040d8:	3714      	adds	r7, #20
 80040da:	46bd      	mov	sp, r7
 80040dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040e0:	4770      	bx	lr
 80040e2:	bf00      	nop
 80040e4:	20000900 	.word	0x20000900

080040e8 <vQueueWaitForMessageRestricted>:
 80040e8:	b580      	push	{r7, lr}
 80040ea:	b086      	sub	sp, #24
 80040ec:	af00      	add	r7, sp, #0
 80040ee:	60f8      	str	r0, [r7, #12]
 80040f0:	60b9      	str	r1, [r7, #8]
 80040f2:	607a      	str	r2, [r7, #4]
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	617b      	str	r3, [r7, #20]
 80040f8:	f001 fc6c 	bl	80059d4 <vPortEnterCritical>
 80040fc:	697b      	ldr	r3, [r7, #20]
 80040fe:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004102:	b25b      	sxtb	r3, r3
 8004104:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004108:	d103      	bne.n	8004112 <vQueueWaitForMessageRestricted+0x2a>
 800410a:	697b      	ldr	r3, [r7, #20]
 800410c:	2200      	movs	r2, #0
 800410e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004112:	697b      	ldr	r3, [r7, #20]
 8004114:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004118:	b25b      	sxtb	r3, r3
 800411a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800411e:	d103      	bne.n	8004128 <vQueueWaitForMessageRestricted+0x40>
 8004120:	697b      	ldr	r3, [r7, #20]
 8004122:	2200      	movs	r2, #0
 8004124:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004128:	f001 fc84 	bl	8005a34 <vPortExitCritical>
 800412c:	697b      	ldr	r3, [r7, #20]
 800412e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004130:	2b00      	cmp	r3, #0
 8004132:	d106      	bne.n	8004142 <vQueueWaitForMessageRestricted+0x5a>
 8004134:	697b      	ldr	r3, [r7, #20]
 8004136:	3324      	adds	r3, #36	; 0x24
 8004138:	687a      	ldr	r2, [r7, #4]
 800413a:	68b9      	ldr	r1, [r7, #8]
 800413c:	4618      	mov	r0, r3
 800413e:	f000 fc69 	bl	8004a14 <vTaskPlaceOnEventListRestricted>
 8004142:	6978      	ldr	r0, [r7, #20]
 8004144:	f7ff ff26 	bl	8003f94 <prvUnlockQueue>
 8004148:	bf00      	nop
 800414a:	3718      	adds	r7, #24
 800414c:	46bd      	mov	sp, r7
 800414e:	bd80      	pop	{r7, pc}

08004150 <xTaskCreateStatic>:
 8004150:	b580      	push	{r7, lr}
 8004152:	b08e      	sub	sp, #56	; 0x38
 8004154:	af04      	add	r7, sp, #16
 8004156:	60f8      	str	r0, [r7, #12]
 8004158:	60b9      	str	r1, [r7, #8]
 800415a:	607a      	str	r2, [r7, #4]
 800415c:	603b      	str	r3, [r7, #0]
 800415e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004160:	2b00      	cmp	r3, #0
 8004162:	d10a      	bne.n	800417a <xTaskCreateStatic+0x2a>
 8004164:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004168:	f383 8811 	msr	BASEPRI, r3
 800416c:	f3bf 8f6f 	isb	sy
 8004170:	f3bf 8f4f 	dsb	sy
 8004174:	623b      	str	r3, [r7, #32]
 8004176:	bf00      	nop
 8004178:	e7fe      	b.n	8004178 <xTaskCreateStatic+0x28>
 800417a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800417c:	2b00      	cmp	r3, #0
 800417e:	d10a      	bne.n	8004196 <xTaskCreateStatic+0x46>
 8004180:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004184:	f383 8811 	msr	BASEPRI, r3
 8004188:	f3bf 8f6f 	isb	sy
 800418c:	f3bf 8f4f 	dsb	sy
 8004190:	61fb      	str	r3, [r7, #28]
 8004192:	bf00      	nop
 8004194:	e7fe      	b.n	8004194 <xTaskCreateStatic+0x44>
 8004196:	23a8      	movs	r3, #168	; 0xa8
 8004198:	613b      	str	r3, [r7, #16]
 800419a:	693b      	ldr	r3, [r7, #16]
 800419c:	2ba8      	cmp	r3, #168	; 0xa8
 800419e:	d00a      	beq.n	80041b6 <xTaskCreateStatic+0x66>
 80041a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80041a4:	f383 8811 	msr	BASEPRI, r3
 80041a8:	f3bf 8f6f 	isb	sy
 80041ac:	f3bf 8f4f 	dsb	sy
 80041b0:	61bb      	str	r3, [r7, #24]
 80041b2:	bf00      	nop
 80041b4:	e7fe      	b.n	80041b4 <xTaskCreateStatic+0x64>
 80041b6:	693b      	ldr	r3, [r7, #16]
 80041b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d01e      	beq.n	80041fc <xTaskCreateStatic+0xac>
 80041be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d01b      	beq.n	80041fc <xTaskCreateStatic+0xac>
 80041c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041c6:	627b      	str	r3, [r7, #36]	; 0x24
 80041c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041ca:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80041cc:	631a      	str	r2, [r3, #48]	; 0x30
 80041ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041d0:	2202      	movs	r2, #2
 80041d2:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 80041d6:	2300      	movs	r3, #0
 80041d8:	9303      	str	r3, [sp, #12]
 80041da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041dc:	9302      	str	r3, [sp, #8]
 80041de:	f107 0314 	add.w	r3, r7, #20
 80041e2:	9301      	str	r3, [sp, #4]
 80041e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041e6:	9300      	str	r3, [sp, #0]
 80041e8:	683b      	ldr	r3, [r7, #0]
 80041ea:	687a      	ldr	r2, [r7, #4]
 80041ec:	68b9      	ldr	r1, [r7, #8]
 80041ee:	68f8      	ldr	r0, [r7, #12]
 80041f0:	f000 f850 	bl	8004294 <prvInitialiseNewTask>
 80041f4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80041f6:	f000 f8f3 	bl	80043e0 <prvAddNewTaskToReadyList>
 80041fa:	e001      	b.n	8004200 <xTaskCreateStatic+0xb0>
 80041fc:	2300      	movs	r3, #0
 80041fe:	617b      	str	r3, [r7, #20]
 8004200:	697b      	ldr	r3, [r7, #20]
 8004202:	4618      	mov	r0, r3
 8004204:	3728      	adds	r7, #40	; 0x28
 8004206:	46bd      	mov	sp, r7
 8004208:	bd80      	pop	{r7, pc}

0800420a <xTaskCreate>:
 800420a:	b580      	push	{r7, lr}
 800420c:	b08c      	sub	sp, #48	; 0x30
 800420e:	af04      	add	r7, sp, #16
 8004210:	60f8      	str	r0, [r7, #12]
 8004212:	60b9      	str	r1, [r7, #8]
 8004214:	603b      	str	r3, [r7, #0]
 8004216:	4613      	mov	r3, r2
 8004218:	80fb      	strh	r3, [r7, #6]
 800421a:	88fb      	ldrh	r3, [r7, #6]
 800421c:	009b      	lsls	r3, r3, #2
 800421e:	4618      	mov	r0, r3
 8004220:	f001 fcfa 	bl	8005c18 <pvPortMalloc>
 8004224:	6178      	str	r0, [r7, #20]
 8004226:	697b      	ldr	r3, [r7, #20]
 8004228:	2b00      	cmp	r3, #0
 800422a:	d00e      	beq.n	800424a <xTaskCreate+0x40>
 800422c:	20a8      	movs	r0, #168	; 0xa8
 800422e:	f001 fcf3 	bl	8005c18 <pvPortMalloc>
 8004232:	61f8      	str	r0, [r7, #28]
 8004234:	69fb      	ldr	r3, [r7, #28]
 8004236:	2b00      	cmp	r3, #0
 8004238:	d003      	beq.n	8004242 <xTaskCreate+0x38>
 800423a:	69fb      	ldr	r3, [r7, #28]
 800423c:	697a      	ldr	r2, [r7, #20]
 800423e:	631a      	str	r2, [r3, #48]	; 0x30
 8004240:	e005      	b.n	800424e <xTaskCreate+0x44>
 8004242:	6978      	ldr	r0, [r7, #20]
 8004244:	f001 fdb4 	bl	8005db0 <vPortFree>
 8004248:	e001      	b.n	800424e <xTaskCreate+0x44>
 800424a:	2300      	movs	r3, #0
 800424c:	61fb      	str	r3, [r7, #28]
 800424e:	69fb      	ldr	r3, [r7, #28]
 8004250:	2b00      	cmp	r3, #0
 8004252:	d017      	beq.n	8004284 <xTaskCreate+0x7a>
 8004254:	69fb      	ldr	r3, [r7, #28]
 8004256:	2200      	movs	r2, #0
 8004258:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 800425c:	88fa      	ldrh	r2, [r7, #6]
 800425e:	2300      	movs	r3, #0
 8004260:	9303      	str	r3, [sp, #12]
 8004262:	69fb      	ldr	r3, [r7, #28]
 8004264:	9302      	str	r3, [sp, #8]
 8004266:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004268:	9301      	str	r3, [sp, #4]
 800426a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800426c:	9300      	str	r3, [sp, #0]
 800426e:	683b      	ldr	r3, [r7, #0]
 8004270:	68b9      	ldr	r1, [r7, #8]
 8004272:	68f8      	ldr	r0, [r7, #12]
 8004274:	f000 f80e 	bl	8004294 <prvInitialiseNewTask>
 8004278:	69f8      	ldr	r0, [r7, #28]
 800427a:	f000 f8b1 	bl	80043e0 <prvAddNewTaskToReadyList>
 800427e:	2301      	movs	r3, #1
 8004280:	61bb      	str	r3, [r7, #24]
 8004282:	e002      	b.n	800428a <xTaskCreate+0x80>
 8004284:	f04f 33ff 	mov.w	r3, #4294967295
 8004288:	61bb      	str	r3, [r7, #24]
 800428a:	69bb      	ldr	r3, [r7, #24]
 800428c:	4618      	mov	r0, r3
 800428e:	3720      	adds	r7, #32
 8004290:	46bd      	mov	sp, r7
 8004292:	bd80      	pop	{r7, pc}

08004294 <prvInitialiseNewTask>:
 8004294:	b580      	push	{r7, lr}
 8004296:	b088      	sub	sp, #32
 8004298:	af00      	add	r7, sp, #0
 800429a:	60f8      	str	r0, [r7, #12]
 800429c:	60b9      	str	r1, [r7, #8]
 800429e:	607a      	str	r2, [r7, #4]
 80042a0:	603b      	str	r3, [r7, #0]
 80042a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042a4:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	009b      	lsls	r3, r3, #2
 80042aa:	461a      	mov	r2, r3
 80042ac:	21a5      	movs	r1, #165	; 0xa5
 80042ae:	f002 f8a5 	bl	80063fc <memset>
 80042b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80042b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80042bc:	3b01      	subs	r3, #1
 80042be:	009b      	lsls	r3, r3, #2
 80042c0:	4413      	add	r3, r2
 80042c2:	61bb      	str	r3, [r7, #24]
 80042c4:	69bb      	ldr	r3, [r7, #24]
 80042c6:	f023 0307 	bic.w	r3, r3, #7
 80042ca:	61bb      	str	r3, [r7, #24]
 80042cc:	69bb      	ldr	r3, [r7, #24]
 80042ce:	f003 0307 	and.w	r3, r3, #7
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d00a      	beq.n	80042ec <prvInitialiseNewTask+0x58>
 80042d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80042da:	f383 8811 	msr	BASEPRI, r3
 80042de:	f3bf 8f6f 	isb	sy
 80042e2:	f3bf 8f4f 	dsb	sy
 80042e6:	617b      	str	r3, [r7, #20]
 80042e8:	bf00      	nop
 80042ea:	e7fe      	b.n	80042ea <prvInitialiseNewTask+0x56>
 80042ec:	68bb      	ldr	r3, [r7, #8]
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d01f      	beq.n	8004332 <prvInitialiseNewTask+0x9e>
 80042f2:	2300      	movs	r3, #0
 80042f4:	61fb      	str	r3, [r7, #28]
 80042f6:	e012      	b.n	800431e <prvInitialiseNewTask+0x8a>
 80042f8:	68ba      	ldr	r2, [r7, #8]
 80042fa:	69fb      	ldr	r3, [r7, #28]
 80042fc:	4413      	add	r3, r2
 80042fe:	7819      	ldrb	r1, [r3, #0]
 8004300:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004302:	69fb      	ldr	r3, [r7, #28]
 8004304:	4413      	add	r3, r2
 8004306:	3334      	adds	r3, #52	; 0x34
 8004308:	460a      	mov	r2, r1
 800430a:	701a      	strb	r2, [r3, #0]
 800430c:	68ba      	ldr	r2, [r7, #8]
 800430e:	69fb      	ldr	r3, [r7, #28]
 8004310:	4413      	add	r3, r2
 8004312:	781b      	ldrb	r3, [r3, #0]
 8004314:	2b00      	cmp	r3, #0
 8004316:	d006      	beq.n	8004326 <prvInitialiseNewTask+0x92>
 8004318:	69fb      	ldr	r3, [r7, #28]
 800431a:	3301      	adds	r3, #1
 800431c:	61fb      	str	r3, [r7, #28]
 800431e:	69fb      	ldr	r3, [r7, #28]
 8004320:	2b0f      	cmp	r3, #15
 8004322:	d9e9      	bls.n	80042f8 <prvInitialiseNewTask+0x64>
 8004324:	e000      	b.n	8004328 <prvInitialiseNewTask+0x94>
 8004326:	bf00      	nop
 8004328:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800432a:	2200      	movs	r2, #0
 800432c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004330:	e003      	b.n	800433a <prvInitialiseNewTask+0xa6>
 8004332:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004334:	2200      	movs	r2, #0
 8004336:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800433a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800433c:	2b37      	cmp	r3, #55	; 0x37
 800433e:	d901      	bls.n	8004344 <prvInitialiseNewTask+0xb0>
 8004340:	2337      	movs	r3, #55	; 0x37
 8004342:	62bb      	str	r3, [r7, #40]	; 0x28
 8004344:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004346:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004348:	62da      	str	r2, [r3, #44]	; 0x2c
 800434a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800434c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800434e:	64da      	str	r2, [r3, #76]	; 0x4c
 8004350:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004352:	2200      	movs	r2, #0
 8004354:	651a      	str	r2, [r3, #80]	; 0x50
 8004356:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004358:	3304      	adds	r3, #4
 800435a:	4618      	mov	r0, r3
 800435c:	f7ff f8be 	bl	80034dc <vListInitialiseItem>
 8004360:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004362:	3318      	adds	r3, #24
 8004364:	4618      	mov	r0, r3
 8004366:	f7ff f8b9 	bl	80034dc <vListInitialiseItem>
 800436a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800436c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800436e:	611a      	str	r2, [r3, #16]
 8004370:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004372:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8004376:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004378:	619a      	str	r2, [r3, #24]
 800437a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800437c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800437e:	625a      	str	r2, [r3, #36]	; 0x24
 8004380:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004382:	2200      	movs	r2, #0
 8004384:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 8004388:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800438a:	2200      	movs	r2, #0
 800438c:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
 8004390:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004392:	3354      	adds	r3, #84	; 0x54
 8004394:	224c      	movs	r2, #76	; 0x4c
 8004396:	2100      	movs	r1, #0
 8004398:	4618      	mov	r0, r3
 800439a:	f002 f82f 	bl	80063fc <memset>
 800439e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80043a0:	4a0c      	ldr	r2, [pc, #48]	; (80043d4 <prvInitialiseNewTask+0x140>)
 80043a2:	659a      	str	r2, [r3, #88]	; 0x58
 80043a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80043a6:	4a0c      	ldr	r2, [pc, #48]	; (80043d8 <prvInitialiseNewTask+0x144>)
 80043a8:	65da      	str	r2, [r3, #92]	; 0x5c
 80043aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80043ac:	4a0b      	ldr	r2, [pc, #44]	; (80043dc <prvInitialiseNewTask+0x148>)
 80043ae:	661a      	str	r2, [r3, #96]	; 0x60
 80043b0:	683a      	ldr	r2, [r7, #0]
 80043b2:	68f9      	ldr	r1, [r7, #12]
 80043b4:	69b8      	ldr	r0, [r7, #24]
 80043b6:	f001 f9e3 	bl	8005780 <pxPortInitialiseStack>
 80043ba:	4602      	mov	r2, r0
 80043bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80043be:	601a      	str	r2, [r3, #0]
 80043c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d002      	beq.n	80043cc <prvInitialiseNewTask+0x138>
 80043c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043c8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80043ca:	601a      	str	r2, [r3, #0]
 80043cc:	bf00      	nop
 80043ce:	3720      	adds	r7, #32
 80043d0:	46bd      	mov	sp, r7
 80043d2:	bd80      	pop	{r7, pc}
 80043d4:	20004b94 	.word	0x20004b94
 80043d8:	20004bfc 	.word	0x20004bfc
 80043dc:	20004c64 	.word	0x20004c64

080043e0 <prvAddNewTaskToReadyList>:
 80043e0:	b580      	push	{r7, lr}
 80043e2:	b082      	sub	sp, #8
 80043e4:	af00      	add	r7, sp, #0
 80043e6:	6078      	str	r0, [r7, #4]
 80043e8:	f001 faf4 	bl	80059d4 <vPortEnterCritical>
 80043ec:	4b2d      	ldr	r3, [pc, #180]	; (80044a4 <prvAddNewTaskToReadyList+0xc4>)
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	3301      	adds	r3, #1
 80043f2:	4a2c      	ldr	r2, [pc, #176]	; (80044a4 <prvAddNewTaskToReadyList+0xc4>)
 80043f4:	6013      	str	r3, [r2, #0]
 80043f6:	4b2c      	ldr	r3, [pc, #176]	; (80044a8 <prvAddNewTaskToReadyList+0xc8>)
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d109      	bne.n	8004412 <prvAddNewTaskToReadyList+0x32>
 80043fe:	4a2a      	ldr	r2, [pc, #168]	; (80044a8 <prvAddNewTaskToReadyList+0xc8>)
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	6013      	str	r3, [r2, #0]
 8004404:	4b27      	ldr	r3, [pc, #156]	; (80044a4 <prvAddNewTaskToReadyList+0xc4>)
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	2b01      	cmp	r3, #1
 800440a:	d110      	bne.n	800442e <prvAddNewTaskToReadyList+0x4e>
 800440c:	f000 fc90 	bl	8004d30 <prvInitialiseTaskLists>
 8004410:	e00d      	b.n	800442e <prvAddNewTaskToReadyList+0x4e>
 8004412:	4b26      	ldr	r3, [pc, #152]	; (80044ac <prvAddNewTaskToReadyList+0xcc>)
 8004414:	681b      	ldr	r3, [r3, #0]
 8004416:	2b00      	cmp	r3, #0
 8004418:	d109      	bne.n	800442e <prvAddNewTaskToReadyList+0x4e>
 800441a:	4b23      	ldr	r3, [pc, #140]	; (80044a8 <prvAddNewTaskToReadyList+0xc8>)
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004424:	429a      	cmp	r2, r3
 8004426:	d802      	bhi.n	800442e <prvAddNewTaskToReadyList+0x4e>
 8004428:	4a1f      	ldr	r2, [pc, #124]	; (80044a8 <prvAddNewTaskToReadyList+0xc8>)
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	6013      	str	r3, [r2, #0]
 800442e:	4b20      	ldr	r3, [pc, #128]	; (80044b0 <prvAddNewTaskToReadyList+0xd0>)
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	3301      	adds	r3, #1
 8004434:	4a1e      	ldr	r2, [pc, #120]	; (80044b0 <prvAddNewTaskToReadyList+0xd0>)
 8004436:	6013      	str	r3, [r2, #0]
 8004438:	4b1d      	ldr	r3, [pc, #116]	; (80044b0 <prvAddNewTaskToReadyList+0xd0>)
 800443a:	681a      	ldr	r2, [r3, #0]
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	645a      	str	r2, [r3, #68]	; 0x44
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004444:	4b1b      	ldr	r3, [pc, #108]	; (80044b4 <prvAddNewTaskToReadyList+0xd4>)
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	429a      	cmp	r2, r3
 800444a:	d903      	bls.n	8004454 <prvAddNewTaskToReadyList+0x74>
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004450:	4a18      	ldr	r2, [pc, #96]	; (80044b4 <prvAddNewTaskToReadyList+0xd4>)
 8004452:	6013      	str	r3, [r2, #0]
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004458:	4613      	mov	r3, r2
 800445a:	009b      	lsls	r3, r3, #2
 800445c:	4413      	add	r3, r2
 800445e:	009b      	lsls	r3, r3, #2
 8004460:	4a15      	ldr	r2, [pc, #84]	; (80044b8 <prvAddNewTaskToReadyList+0xd8>)
 8004462:	441a      	add	r2, r3
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	3304      	adds	r3, #4
 8004468:	4619      	mov	r1, r3
 800446a:	4610      	mov	r0, r2
 800446c:	f7ff f843 	bl	80034f6 <vListInsertEnd>
 8004470:	f001 fae0 	bl	8005a34 <vPortExitCritical>
 8004474:	4b0d      	ldr	r3, [pc, #52]	; (80044ac <prvAddNewTaskToReadyList+0xcc>)
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	2b00      	cmp	r3, #0
 800447a:	d00e      	beq.n	800449a <prvAddNewTaskToReadyList+0xba>
 800447c:	4b0a      	ldr	r3, [pc, #40]	; (80044a8 <prvAddNewTaskToReadyList+0xc8>)
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004486:	429a      	cmp	r2, r3
 8004488:	d207      	bcs.n	800449a <prvAddNewTaskToReadyList+0xba>
 800448a:	4b0c      	ldr	r3, [pc, #48]	; (80044bc <prvAddNewTaskToReadyList+0xdc>)
 800448c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004490:	601a      	str	r2, [r3, #0]
 8004492:	f3bf 8f4f 	dsb	sy
 8004496:	f3bf 8f6f 	isb	sy
 800449a:	bf00      	nop
 800449c:	3708      	adds	r7, #8
 800449e:	46bd      	mov	sp, r7
 80044a0:	bd80      	pop	{r7, pc}
 80044a2:	bf00      	nop
 80044a4:	20000e14 	.word	0x20000e14
 80044a8:	20000940 	.word	0x20000940
 80044ac:	20000e20 	.word	0x20000e20
 80044b0:	20000e30 	.word	0x20000e30
 80044b4:	20000e1c 	.word	0x20000e1c
 80044b8:	20000944 	.word	0x20000944
 80044bc:	e000ed04 	.word	0xe000ed04

080044c0 <vTaskStartScheduler>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	b08a      	sub	sp, #40	; 0x28
 80044c4:	af04      	add	r7, sp, #16
 80044c6:	2300      	movs	r3, #0
 80044c8:	60bb      	str	r3, [r7, #8]
 80044ca:	2300      	movs	r3, #0
 80044cc:	607b      	str	r3, [r7, #4]
 80044ce:	463a      	mov	r2, r7
 80044d0:	1d39      	adds	r1, r7, #4
 80044d2:	f107 0308 	add.w	r3, r7, #8
 80044d6:	4618      	mov	r0, r3
 80044d8:	f7fe fd40 	bl	8002f5c <vApplicationGetIdleTaskMemory>
 80044dc:	6839      	ldr	r1, [r7, #0]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	68ba      	ldr	r2, [r7, #8]
 80044e2:	9202      	str	r2, [sp, #8]
 80044e4:	9301      	str	r3, [sp, #4]
 80044e6:	2300      	movs	r3, #0
 80044e8:	9300      	str	r3, [sp, #0]
 80044ea:	2300      	movs	r3, #0
 80044ec:	460a      	mov	r2, r1
 80044ee:	4924      	ldr	r1, [pc, #144]	; (8004580 <vTaskStartScheduler+0xc0>)
 80044f0:	4824      	ldr	r0, [pc, #144]	; (8004584 <vTaskStartScheduler+0xc4>)
 80044f2:	f7ff fe2d 	bl	8004150 <xTaskCreateStatic>
 80044f6:	4603      	mov	r3, r0
 80044f8:	4a23      	ldr	r2, [pc, #140]	; (8004588 <vTaskStartScheduler+0xc8>)
 80044fa:	6013      	str	r3, [r2, #0]
 80044fc:	4b22      	ldr	r3, [pc, #136]	; (8004588 <vTaskStartScheduler+0xc8>)
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	2b00      	cmp	r3, #0
 8004502:	d002      	beq.n	800450a <vTaskStartScheduler+0x4a>
 8004504:	2301      	movs	r3, #1
 8004506:	617b      	str	r3, [r7, #20]
 8004508:	e001      	b.n	800450e <vTaskStartScheduler+0x4e>
 800450a:	2300      	movs	r3, #0
 800450c:	617b      	str	r3, [r7, #20]
 800450e:	697b      	ldr	r3, [r7, #20]
 8004510:	2b01      	cmp	r3, #1
 8004512:	d102      	bne.n	800451a <vTaskStartScheduler+0x5a>
 8004514:	f000 fdc6 	bl	80050a4 <xTimerCreateTimerTask>
 8004518:	6178      	str	r0, [r7, #20]
 800451a:	697b      	ldr	r3, [r7, #20]
 800451c:	2b01      	cmp	r3, #1
 800451e:	d11b      	bne.n	8004558 <vTaskStartScheduler+0x98>
 8004520:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004524:	f383 8811 	msr	BASEPRI, r3
 8004528:	f3bf 8f6f 	isb	sy
 800452c:	f3bf 8f4f 	dsb	sy
 8004530:	613b      	str	r3, [r7, #16]
 8004532:	bf00      	nop
 8004534:	4b15      	ldr	r3, [pc, #84]	; (800458c <vTaskStartScheduler+0xcc>)
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	3354      	adds	r3, #84	; 0x54
 800453a:	4a15      	ldr	r2, [pc, #84]	; (8004590 <vTaskStartScheduler+0xd0>)
 800453c:	6013      	str	r3, [r2, #0]
 800453e:	4b15      	ldr	r3, [pc, #84]	; (8004594 <vTaskStartScheduler+0xd4>)
 8004540:	f04f 32ff 	mov.w	r2, #4294967295
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	4b14      	ldr	r3, [pc, #80]	; (8004598 <vTaskStartScheduler+0xd8>)
 8004548:	2201      	movs	r2, #1
 800454a:	601a      	str	r2, [r3, #0]
 800454c:	4b13      	ldr	r3, [pc, #76]	; (800459c <vTaskStartScheduler+0xdc>)
 800454e:	2200      	movs	r2, #0
 8004550:	601a      	str	r2, [r3, #0]
 8004552:	f001 f99d 	bl	8005890 <xPortStartScheduler>
 8004556:	e00e      	b.n	8004576 <vTaskStartScheduler+0xb6>
 8004558:	697b      	ldr	r3, [r7, #20]
 800455a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800455e:	d10a      	bne.n	8004576 <vTaskStartScheduler+0xb6>
 8004560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004564:	f383 8811 	msr	BASEPRI, r3
 8004568:	f3bf 8f6f 	isb	sy
 800456c:	f3bf 8f4f 	dsb	sy
 8004570:	60fb      	str	r3, [r7, #12]
 8004572:	bf00      	nop
 8004574:	e7fe      	b.n	8004574 <vTaskStartScheduler+0xb4>
 8004576:	bf00      	nop
 8004578:	3718      	adds	r7, #24
 800457a:	46bd      	mov	sp, r7
 800457c:	bd80      	pop	{r7, pc}
 800457e:	bf00      	nop
 8004580:	080070a4 	.word	0x080070a4
 8004584:	08004d01 	.word	0x08004d01
 8004588:	20000e38 	.word	0x20000e38
 800458c:	20000940 	.word	0x20000940
 8004590:	20000090 	.word	0x20000090
 8004594:	20000e34 	.word	0x20000e34
 8004598:	20000e20 	.word	0x20000e20
 800459c:	20000e18 	.word	0x20000e18

080045a0 <vTaskSuspendAll>:
 80045a0:	b480      	push	{r7}
 80045a2:	af00      	add	r7, sp, #0
 80045a4:	4b04      	ldr	r3, [pc, #16]	; (80045b8 <vTaskSuspendAll+0x18>)
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	3301      	adds	r3, #1
 80045aa:	4a03      	ldr	r2, [pc, #12]	; (80045b8 <vTaskSuspendAll+0x18>)
 80045ac:	6013      	str	r3, [r2, #0]
 80045ae:	bf00      	nop
 80045b0:	46bd      	mov	sp, r7
 80045b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045b6:	4770      	bx	lr
 80045b8:	20000e3c 	.word	0x20000e3c

080045bc <xTaskResumeAll>:
 80045bc:	b580      	push	{r7, lr}
 80045be:	b084      	sub	sp, #16
 80045c0:	af00      	add	r7, sp, #0
 80045c2:	2300      	movs	r3, #0
 80045c4:	60fb      	str	r3, [r7, #12]
 80045c6:	2300      	movs	r3, #0
 80045c8:	60bb      	str	r3, [r7, #8]
 80045ca:	4b42      	ldr	r3, [pc, #264]	; (80046d4 <xTaskResumeAll+0x118>)
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d10a      	bne.n	80045e8 <xTaskResumeAll+0x2c>
 80045d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80045d6:	f383 8811 	msr	BASEPRI, r3
 80045da:	f3bf 8f6f 	isb	sy
 80045de:	f3bf 8f4f 	dsb	sy
 80045e2:	603b      	str	r3, [r7, #0]
 80045e4:	bf00      	nop
 80045e6:	e7fe      	b.n	80045e6 <xTaskResumeAll+0x2a>
 80045e8:	f001 f9f4 	bl	80059d4 <vPortEnterCritical>
 80045ec:	4b39      	ldr	r3, [pc, #228]	; (80046d4 <xTaskResumeAll+0x118>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	3b01      	subs	r3, #1
 80045f2:	4a38      	ldr	r2, [pc, #224]	; (80046d4 <xTaskResumeAll+0x118>)
 80045f4:	6013      	str	r3, [r2, #0]
 80045f6:	4b37      	ldr	r3, [pc, #220]	; (80046d4 <xTaskResumeAll+0x118>)
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	d162      	bne.n	80046c4 <xTaskResumeAll+0x108>
 80045fe:	4b36      	ldr	r3, [pc, #216]	; (80046d8 <xTaskResumeAll+0x11c>)
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	2b00      	cmp	r3, #0
 8004604:	d05e      	beq.n	80046c4 <xTaskResumeAll+0x108>
 8004606:	e02f      	b.n	8004668 <xTaskResumeAll+0xac>
 8004608:	4b34      	ldr	r3, [pc, #208]	; (80046dc <xTaskResumeAll+0x120>)
 800460a:	68db      	ldr	r3, [r3, #12]
 800460c:	68db      	ldr	r3, [r3, #12]
 800460e:	60fb      	str	r3, [r7, #12]
 8004610:	68fb      	ldr	r3, [r7, #12]
 8004612:	3318      	adds	r3, #24
 8004614:	4618      	mov	r0, r3
 8004616:	f7fe ffcb 	bl	80035b0 <uxListRemove>
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	3304      	adds	r3, #4
 800461e:	4618      	mov	r0, r3
 8004620:	f7fe ffc6 	bl	80035b0 <uxListRemove>
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004628:	4b2d      	ldr	r3, [pc, #180]	; (80046e0 <xTaskResumeAll+0x124>)
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	429a      	cmp	r2, r3
 800462e:	d903      	bls.n	8004638 <xTaskResumeAll+0x7c>
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004634:	4a2a      	ldr	r2, [pc, #168]	; (80046e0 <xTaskResumeAll+0x124>)
 8004636:	6013      	str	r3, [r2, #0]
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800463c:	4613      	mov	r3, r2
 800463e:	009b      	lsls	r3, r3, #2
 8004640:	4413      	add	r3, r2
 8004642:	009b      	lsls	r3, r3, #2
 8004644:	4a27      	ldr	r2, [pc, #156]	; (80046e4 <xTaskResumeAll+0x128>)
 8004646:	441a      	add	r2, r3
 8004648:	68fb      	ldr	r3, [r7, #12]
 800464a:	3304      	adds	r3, #4
 800464c:	4619      	mov	r1, r3
 800464e:	4610      	mov	r0, r2
 8004650:	f7fe ff51 	bl	80034f6 <vListInsertEnd>
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004658:	4b23      	ldr	r3, [pc, #140]	; (80046e8 <xTaskResumeAll+0x12c>)
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800465e:	429a      	cmp	r2, r3
 8004660:	d302      	bcc.n	8004668 <xTaskResumeAll+0xac>
 8004662:	4b22      	ldr	r3, [pc, #136]	; (80046ec <xTaskResumeAll+0x130>)
 8004664:	2201      	movs	r2, #1
 8004666:	601a      	str	r2, [r3, #0]
 8004668:	4b1c      	ldr	r3, [pc, #112]	; (80046dc <xTaskResumeAll+0x120>)
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	2b00      	cmp	r3, #0
 800466e:	d1cb      	bne.n	8004608 <xTaskResumeAll+0x4c>
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	2b00      	cmp	r3, #0
 8004674:	d001      	beq.n	800467a <xTaskResumeAll+0xbe>
 8004676:	f000 fbfd 	bl	8004e74 <prvResetNextTaskUnblockTime>
 800467a:	4b1d      	ldr	r3, [pc, #116]	; (80046f0 <xTaskResumeAll+0x134>)
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	607b      	str	r3, [r7, #4]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	2b00      	cmp	r3, #0
 8004684:	d010      	beq.n	80046a8 <xTaskResumeAll+0xec>
 8004686:	f000 f847 	bl	8004718 <xTaskIncrementTick>
 800468a:	4603      	mov	r3, r0
 800468c:	2b00      	cmp	r3, #0
 800468e:	d002      	beq.n	8004696 <xTaskResumeAll+0xda>
 8004690:	4b16      	ldr	r3, [pc, #88]	; (80046ec <xTaskResumeAll+0x130>)
 8004692:	2201      	movs	r2, #1
 8004694:	601a      	str	r2, [r3, #0]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	3b01      	subs	r3, #1
 800469a:	607b      	str	r3, [r7, #4]
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	2b00      	cmp	r3, #0
 80046a0:	d1f1      	bne.n	8004686 <xTaskResumeAll+0xca>
 80046a2:	4b13      	ldr	r3, [pc, #76]	; (80046f0 <xTaskResumeAll+0x134>)
 80046a4:	2200      	movs	r2, #0
 80046a6:	601a      	str	r2, [r3, #0]
 80046a8:	4b10      	ldr	r3, [pc, #64]	; (80046ec <xTaskResumeAll+0x130>)
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	d009      	beq.n	80046c4 <xTaskResumeAll+0x108>
 80046b0:	2301      	movs	r3, #1
 80046b2:	60bb      	str	r3, [r7, #8]
 80046b4:	4b0f      	ldr	r3, [pc, #60]	; (80046f4 <xTaskResumeAll+0x138>)
 80046b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80046ba:	601a      	str	r2, [r3, #0]
 80046bc:	f3bf 8f4f 	dsb	sy
 80046c0:	f3bf 8f6f 	isb	sy
 80046c4:	f001 f9b6 	bl	8005a34 <vPortExitCritical>
 80046c8:	68bb      	ldr	r3, [r7, #8]
 80046ca:	4618      	mov	r0, r3
 80046cc:	3710      	adds	r7, #16
 80046ce:	46bd      	mov	sp, r7
 80046d0:	bd80      	pop	{r7, pc}
 80046d2:	bf00      	nop
 80046d4:	20000e3c 	.word	0x20000e3c
 80046d8:	20000e14 	.word	0x20000e14
 80046dc:	20000dd4 	.word	0x20000dd4
 80046e0:	20000e1c 	.word	0x20000e1c
 80046e4:	20000944 	.word	0x20000944
 80046e8:	20000940 	.word	0x20000940
 80046ec:	20000e28 	.word	0x20000e28
 80046f0:	20000e24 	.word	0x20000e24
 80046f4:	e000ed04 	.word	0xe000ed04

080046f8 <xTaskGetTickCount>:
 80046f8:	b480      	push	{r7}
 80046fa:	b083      	sub	sp, #12
 80046fc:	af00      	add	r7, sp, #0
 80046fe:	4b05      	ldr	r3, [pc, #20]	; (8004714 <xTaskGetTickCount+0x1c>)
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	607b      	str	r3, [r7, #4]
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	4618      	mov	r0, r3
 8004708:	370c      	adds	r7, #12
 800470a:	46bd      	mov	sp, r7
 800470c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004710:	4770      	bx	lr
 8004712:	bf00      	nop
 8004714:	20000e18 	.word	0x20000e18

08004718 <xTaskIncrementTick>:
 8004718:	b580      	push	{r7, lr}
 800471a:	b086      	sub	sp, #24
 800471c:	af00      	add	r7, sp, #0
 800471e:	2300      	movs	r3, #0
 8004720:	617b      	str	r3, [r7, #20]
 8004722:	4b4f      	ldr	r3, [pc, #316]	; (8004860 <xTaskIncrementTick+0x148>)
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	2b00      	cmp	r3, #0
 8004728:	f040 808f 	bne.w	800484a <xTaskIncrementTick+0x132>
 800472c:	4b4d      	ldr	r3, [pc, #308]	; (8004864 <xTaskIncrementTick+0x14c>)
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	3301      	adds	r3, #1
 8004732:	613b      	str	r3, [r7, #16]
 8004734:	4a4b      	ldr	r2, [pc, #300]	; (8004864 <xTaskIncrementTick+0x14c>)
 8004736:	693b      	ldr	r3, [r7, #16]
 8004738:	6013      	str	r3, [r2, #0]
 800473a:	693b      	ldr	r3, [r7, #16]
 800473c:	2b00      	cmp	r3, #0
 800473e:	d120      	bne.n	8004782 <xTaskIncrementTick+0x6a>
 8004740:	4b49      	ldr	r3, [pc, #292]	; (8004868 <xTaskIncrementTick+0x150>)
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	2b00      	cmp	r3, #0
 8004748:	d00a      	beq.n	8004760 <xTaskIncrementTick+0x48>
 800474a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800474e:	f383 8811 	msr	BASEPRI, r3
 8004752:	f3bf 8f6f 	isb	sy
 8004756:	f3bf 8f4f 	dsb	sy
 800475a:	603b      	str	r3, [r7, #0]
 800475c:	bf00      	nop
 800475e:	e7fe      	b.n	800475e <xTaskIncrementTick+0x46>
 8004760:	4b41      	ldr	r3, [pc, #260]	; (8004868 <xTaskIncrementTick+0x150>)
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	60fb      	str	r3, [r7, #12]
 8004766:	4b41      	ldr	r3, [pc, #260]	; (800486c <xTaskIncrementTick+0x154>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	4a3f      	ldr	r2, [pc, #252]	; (8004868 <xTaskIncrementTick+0x150>)
 800476c:	6013      	str	r3, [r2, #0]
 800476e:	4a3f      	ldr	r2, [pc, #252]	; (800486c <xTaskIncrementTick+0x154>)
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	6013      	str	r3, [r2, #0]
 8004774:	4b3e      	ldr	r3, [pc, #248]	; (8004870 <xTaskIncrementTick+0x158>)
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	3301      	adds	r3, #1
 800477a:	4a3d      	ldr	r2, [pc, #244]	; (8004870 <xTaskIncrementTick+0x158>)
 800477c:	6013      	str	r3, [r2, #0]
 800477e:	f000 fb79 	bl	8004e74 <prvResetNextTaskUnblockTime>
 8004782:	4b3c      	ldr	r3, [pc, #240]	; (8004874 <xTaskIncrementTick+0x15c>)
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	693a      	ldr	r2, [r7, #16]
 8004788:	429a      	cmp	r2, r3
 800478a:	d349      	bcc.n	8004820 <xTaskIncrementTick+0x108>
 800478c:	4b36      	ldr	r3, [pc, #216]	; (8004868 <xTaskIncrementTick+0x150>)
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	2b00      	cmp	r3, #0
 8004794:	d104      	bne.n	80047a0 <xTaskIncrementTick+0x88>
 8004796:	4b37      	ldr	r3, [pc, #220]	; (8004874 <xTaskIncrementTick+0x15c>)
 8004798:	f04f 32ff 	mov.w	r2, #4294967295
 800479c:	601a      	str	r2, [r3, #0]
 800479e:	e03f      	b.n	8004820 <xTaskIncrementTick+0x108>
 80047a0:	4b31      	ldr	r3, [pc, #196]	; (8004868 <xTaskIncrementTick+0x150>)
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	68db      	ldr	r3, [r3, #12]
 80047a6:	68db      	ldr	r3, [r3, #12]
 80047a8:	60bb      	str	r3, [r7, #8]
 80047aa:	68bb      	ldr	r3, [r7, #8]
 80047ac:	685b      	ldr	r3, [r3, #4]
 80047ae:	607b      	str	r3, [r7, #4]
 80047b0:	693a      	ldr	r2, [r7, #16]
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	429a      	cmp	r2, r3
 80047b6:	d203      	bcs.n	80047c0 <xTaskIncrementTick+0xa8>
 80047b8:	4a2e      	ldr	r2, [pc, #184]	; (8004874 <xTaskIncrementTick+0x15c>)
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	6013      	str	r3, [r2, #0]
 80047be:	e02f      	b.n	8004820 <xTaskIncrementTick+0x108>
 80047c0:	68bb      	ldr	r3, [r7, #8]
 80047c2:	3304      	adds	r3, #4
 80047c4:	4618      	mov	r0, r3
 80047c6:	f7fe fef3 	bl	80035b0 <uxListRemove>
 80047ca:	68bb      	ldr	r3, [r7, #8]
 80047cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	d004      	beq.n	80047dc <xTaskIncrementTick+0xc4>
 80047d2:	68bb      	ldr	r3, [r7, #8]
 80047d4:	3318      	adds	r3, #24
 80047d6:	4618      	mov	r0, r3
 80047d8:	f7fe feea 	bl	80035b0 <uxListRemove>
 80047dc:	68bb      	ldr	r3, [r7, #8]
 80047de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047e0:	4b25      	ldr	r3, [pc, #148]	; (8004878 <xTaskIncrementTick+0x160>)
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	429a      	cmp	r2, r3
 80047e6:	d903      	bls.n	80047f0 <xTaskIncrementTick+0xd8>
 80047e8:	68bb      	ldr	r3, [r7, #8]
 80047ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047ec:	4a22      	ldr	r2, [pc, #136]	; (8004878 <xTaskIncrementTick+0x160>)
 80047ee:	6013      	str	r3, [r2, #0]
 80047f0:	68bb      	ldr	r3, [r7, #8]
 80047f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047f4:	4613      	mov	r3, r2
 80047f6:	009b      	lsls	r3, r3, #2
 80047f8:	4413      	add	r3, r2
 80047fa:	009b      	lsls	r3, r3, #2
 80047fc:	4a1f      	ldr	r2, [pc, #124]	; (800487c <xTaskIncrementTick+0x164>)
 80047fe:	441a      	add	r2, r3
 8004800:	68bb      	ldr	r3, [r7, #8]
 8004802:	3304      	adds	r3, #4
 8004804:	4619      	mov	r1, r3
 8004806:	4610      	mov	r0, r2
 8004808:	f7fe fe75 	bl	80034f6 <vListInsertEnd>
 800480c:	68bb      	ldr	r3, [r7, #8]
 800480e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004810:	4b1b      	ldr	r3, [pc, #108]	; (8004880 <xTaskIncrementTick+0x168>)
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004816:	429a      	cmp	r2, r3
 8004818:	d3b8      	bcc.n	800478c <xTaskIncrementTick+0x74>
 800481a:	2301      	movs	r3, #1
 800481c:	617b      	str	r3, [r7, #20]
 800481e:	e7b5      	b.n	800478c <xTaskIncrementTick+0x74>
 8004820:	4b17      	ldr	r3, [pc, #92]	; (8004880 <xTaskIncrementTick+0x168>)
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004826:	4915      	ldr	r1, [pc, #84]	; (800487c <xTaskIncrementTick+0x164>)
 8004828:	4613      	mov	r3, r2
 800482a:	009b      	lsls	r3, r3, #2
 800482c:	4413      	add	r3, r2
 800482e:	009b      	lsls	r3, r3, #2
 8004830:	440b      	add	r3, r1
 8004832:	681b      	ldr	r3, [r3, #0]
 8004834:	2b01      	cmp	r3, #1
 8004836:	d901      	bls.n	800483c <xTaskIncrementTick+0x124>
 8004838:	2301      	movs	r3, #1
 800483a:	617b      	str	r3, [r7, #20]
 800483c:	4b11      	ldr	r3, [pc, #68]	; (8004884 <xTaskIncrementTick+0x16c>)
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	2b00      	cmp	r3, #0
 8004842:	d007      	beq.n	8004854 <xTaskIncrementTick+0x13c>
 8004844:	2301      	movs	r3, #1
 8004846:	617b      	str	r3, [r7, #20]
 8004848:	e004      	b.n	8004854 <xTaskIncrementTick+0x13c>
 800484a:	4b0f      	ldr	r3, [pc, #60]	; (8004888 <xTaskIncrementTick+0x170>)
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	3301      	adds	r3, #1
 8004850:	4a0d      	ldr	r2, [pc, #52]	; (8004888 <xTaskIncrementTick+0x170>)
 8004852:	6013      	str	r3, [r2, #0]
 8004854:	697b      	ldr	r3, [r7, #20]
 8004856:	4618      	mov	r0, r3
 8004858:	3718      	adds	r7, #24
 800485a:	46bd      	mov	sp, r7
 800485c:	bd80      	pop	{r7, pc}
 800485e:	bf00      	nop
 8004860:	20000e3c 	.word	0x20000e3c
 8004864:	20000e18 	.word	0x20000e18
 8004868:	20000dcc 	.word	0x20000dcc
 800486c:	20000dd0 	.word	0x20000dd0
 8004870:	20000e2c 	.word	0x20000e2c
 8004874:	20000e34 	.word	0x20000e34
 8004878:	20000e1c 	.word	0x20000e1c
 800487c:	20000944 	.word	0x20000944
 8004880:	20000940 	.word	0x20000940
 8004884:	20000e28 	.word	0x20000e28
 8004888:	20000e24 	.word	0x20000e24

0800488c <vTaskSwitchContext>:
 800488c:	b480      	push	{r7}
 800488e:	b085      	sub	sp, #20
 8004890:	af00      	add	r7, sp, #0
 8004892:	4b2a      	ldr	r3, [pc, #168]	; (800493c <vTaskSwitchContext+0xb0>)
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	2b00      	cmp	r3, #0
 8004898:	d003      	beq.n	80048a2 <vTaskSwitchContext+0x16>
 800489a:	4b29      	ldr	r3, [pc, #164]	; (8004940 <vTaskSwitchContext+0xb4>)
 800489c:	2201      	movs	r2, #1
 800489e:	601a      	str	r2, [r3, #0]
 80048a0:	e046      	b.n	8004930 <vTaskSwitchContext+0xa4>
 80048a2:	4b27      	ldr	r3, [pc, #156]	; (8004940 <vTaskSwitchContext+0xb4>)
 80048a4:	2200      	movs	r2, #0
 80048a6:	601a      	str	r2, [r3, #0]
 80048a8:	4b26      	ldr	r3, [pc, #152]	; (8004944 <vTaskSwitchContext+0xb8>)
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	60fb      	str	r3, [r7, #12]
 80048ae:	e010      	b.n	80048d2 <vTaskSwitchContext+0x46>
 80048b0:	68fb      	ldr	r3, [r7, #12]
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d10a      	bne.n	80048cc <vTaskSwitchContext+0x40>
 80048b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048ba:	f383 8811 	msr	BASEPRI, r3
 80048be:	f3bf 8f6f 	isb	sy
 80048c2:	f3bf 8f4f 	dsb	sy
 80048c6:	607b      	str	r3, [r7, #4]
 80048c8:	bf00      	nop
 80048ca:	e7fe      	b.n	80048ca <vTaskSwitchContext+0x3e>
 80048cc:	68fb      	ldr	r3, [r7, #12]
 80048ce:	3b01      	subs	r3, #1
 80048d0:	60fb      	str	r3, [r7, #12]
 80048d2:	491d      	ldr	r1, [pc, #116]	; (8004948 <vTaskSwitchContext+0xbc>)
 80048d4:	68fa      	ldr	r2, [r7, #12]
 80048d6:	4613      	mov	r3, r2
 80048d8:	009b      	lsls	r3, r3, #2
 80048da:	4413      	add	r3, r2
 80048dc:	009b      	lsls	r3, r3, #2
 80048de:	440b      	add	r3, r1
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d0e4      	beq.n	80048b0 <vTaskSwitchContext+0x24>
 80048e6:	68fa      	ldr	r2, [r7, #12]
 80048e8:	4613      	mov	r3, r2
 80048ea:	009b      	lsls	r3, r3, #2
 80048ec:	4413      	add	r3, r2
 80048ee:	009b      	lsls	r3, r3, #2
 80048f0:	4a15      	ldr	r2, [pc, #84]	; (8004948 <vTaskSwitchContext+0xbc>)
 80048f2:	4413      	add	r3, r2
 80048f4:	60bb      	str	r3, [r7, #8]
 80048f6:	68bb      	ldr	r3, [r7, #8]
 80048f8:	685b      	ldr	r3, [r3, #4]
 80048fa:	685a      	ldr	r2, [r3, #4]
 80048fc:	68bb      	ldr	r3, [r7, #8]
 80048fe:	605a      	str	r2, [r3, #4]
 8004900:	68bb      	ldr	r3, [r7, #8]
 8004902:	685a      	ldr	r2, [r3, #4]
 8004904:	68bb      	ldr	r3, [r7, #8]
 8004906:	3308      	adds	r3, #8
 8004908:	429a      	cmp	r2, r3
 800490a:	d104      	bne.n	8004916 <vTaskSwitchContext+0x8a>
 800490c:	68bb      	ldr	r3, [r7, #8]
 800490e:	685b      	ldr	r3, [r3, #4]
 8004910:	685a      	ldr	r2, [r3, #4]
 8004912:	68bb      	ldr	r3, [r7, #8]
 8004914:	605a      	str	r2, [r3, #4]
 8004916:	68bb      	ldr	r3, [r7, #8]
 8004918:	685b      	ldr	r3, [r3, #4]
 800491a:	68db      	ldr	r3, [r3, #12]
 800491c:	4a0b      	ldr	r2, [pc, #44]	; (800494c <vTaskSwitchContext+0xc0>)
 800491e:	6013      	str	r3, [r2, #0]
 8004920:	4a08      	ldr	r2, [pc, #32]	; (8004944 <vTaskSwitchContext+0xb8>)
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	6013      	str	r3, [r2, #0]
 8004926:	4b09      	ldr	r3, [pc, #36]	; (800494c <vTaskSwitchContext+0xc0>)
 8004928:	681b      	ldr	r3, [r3, #0]
 800492a:	3354      	adds	r3, #84	; 0x54
 800492c:	4a08      	ldr	r2, [pc, #32]	; (8004950 <vTaskSwitchContext+0xc4>)
 800492e:	6013      	str	r3, [r2, #0]
 8004930:	bf00      	nop
 8004932:	3714      	adds	r7, #20
 8004934:	46bd      	mov	sp, r7
 8004936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493a:	4770      	bx	lr
 800493c:	20000e3c 	.word	0x20000e3c
 8004940:	20000e28 	.word	0x20000e28
 8004944:	20000e1c 	.word	0x20000e1c
 8004948:	20000944 	.word	0x20000944
 800494c:	20000940 	.word	0x20000940
 8004950:	20000090 	.word	0x20000090

08004954 <vTaskPlaceOnEventList>:
 8004954:	b580      	push	{r7, lr}
 8004956:	b084      	sub	sp, #16
 8004958:	af00      	add	r7, sp, #0
 800495a:	6078      	str	r0, [r7, #4]
 800495c:	6039      	str	r1, [r7, #0]
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	2b00      	cmp	r3, #0
 8004962:	d10a      	bne.n	800497a <vTaskPlaceOnEventList+0x26>
 8004964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004968:	f383 8811 	msr	BASEPRI, r3
 800496c:	f3bf 8f6f 	isb	sy
 8004970:	f3bf 8f4f 	dsb	sy
 8004974:	60fb      	str	r3, [r7, #12]
 8004976:	bf00      	nop
 8004978:	e7fe      	b.n	8004978 <vTaskPlaceOnEventList+0x24>
 800497a:	4b07      	ldr	r3, [pc, #28]	; (8004998 <vTaskPlaceOnEventList+0x44>)
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	3318      	adds	r3, #24
 8004980:	4619      	mov	r1, r3
 8004982:	6878      	ldr	r0, [r7, #4]
 8004984:	f7fe fddb 	bl	800353e <vListInsert>
 8004988:	2101      	movs	r1, #1
 800498a:	6838      	ldr	r0, [r7, #0]
 800498c:	f000 fb36 	bl	8004ffc <prvAddCurrentTaskToDelayedList>
 8004990:	bf00      	nop
 8004992:	3710      	adds	r7, #16
 8004994:	46bd      	mov	sp, r7
 8004996:	bd80      	pop	{r7, pc}
 8004998:	20000940 	.word	0x20000940

0800499c <vTaskPlaceOnUnorderedEventList>:
 800499c:	b580      	push	{r7, lr}
 800499e:	b086      	sub	sp, #24
 80049a0:	af00      	add	r7, sp, #0
 80049a2:	60f8      	str	r0, [r7, #12]
 80049a4:	60b9      	str	r1, [r7, #8]
 80049a6:	607a      	str	r2, [r7, #4]
 80049a8:	68fb      	ldr	r3, [r7, #12]
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d10a      	bne.n	80049c4 <vTaskPlaceOnUnorderedEventList+0x28>
 80049ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049b2:	f383 8811 	msr	BASEPRI, r3
 80049b6:	f3bf 8f6f 	isb	sy
 80049ba:	f3bf 8f4f 	dsb	sy
 80049be:	617b      	str	r3, [r7, #20]
 80049c0:	bf00      	nop
 80049c2:	e7fe      	b.n	80049c2 <vTaskPlaceOnUnorderedEventList+0x26>
 80049c4:	4b11      	ldr	r3, [pc, #68]	; (8004a0c <vTaskPlaceOnUnorderedEventList+0x70>)
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	2b00      	cmp	r3, #0
 80049ca:	d10a      	bne.n	80049e2 <vTaskPlaceOnUnorderedEventList+0x46>
 80049cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049d0:	f383 8811 	msr	BASEPRI, r3
 80049d4:	f3bf 8f6f 	isb	sy
 80049d8:	f3bf 8f4f 	dsb	sy
 80049dc:	613b      	str	r3, [r7, #16]
 80049de:	bf00      	nop
 80049e0:	e7fe      	b.n	80049e0 <vTaskPlaceOnUnorderedEventList+0x44>
 80049e2:	4b0b      	ldr	r3, [pc, #44]	; (8004a10 <vTaskPlaceOnUnorderedEventList+0x74>)
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	68ba      	ldr	r2, [r7, #8]
 80049e8:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80049ec:	619a      	str	r2, [r3, #24]
 80049ee:	4b08      	ldr	r3, [pc, #32]	; (8004a10 <vTaskPlaceOnUnorderedEventList+0x74>)
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	3318      	adds	r3, #24
 80049f4:	4619      	mov	r1, r3
 80049f6:	68f8      	ldr	r0, [r7, #12]
 80049f8:	f7fe fd7d 	bl	80034f6 <vListInsertEnd>
 80049fc:	2101      	movs	r1, #1
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f000 fafc 	bl	8004ffc <prvAddCurrentTaskToDelayedList>
 8004a04:	bf00      	nop
 8004a06:	3718      	adds	r7, #24
 8004a08:	46bd      	mov	sp, r7
 8004a0a:	bd80      	pop	{r7, pc}
 8004a0c:	20000e3c 	.word	0x20000e3c
 8004a10:	20000940 	.word	0x20000940

08004a14 <vTaskPlaceOnEventListRestricted>:
 8004a14:	b580      	push	{r7, lr}
 8004a16:	b086      	sub	sp, #24
 8004a18:	af00      	add	r7, sp, #0
 8004a1a:	60f8      	str	r0, [r7, #12]
 8004a1c:	60b9      	str	r1, [r7, #8]
 8004a1e:	607a      	str	r2, [r7, #4]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d10a      	bne.n	8004a3c <vTaskPlaceOnEventListRestricted+0x28>
 8004a26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a2a:	f383 8811 	msr	BASEPRI, r3
 8004a2e:	f3bf 8f6f 	isb	sy
 8004a32:	f3bf 8f4f 	dsb	sy
 8004a36:	617b      	str	r3, [r7, #20]
 8004a38:	bf00      	nop
 8004a3a:	e7fe      	b.n	8004a3a <vTaskPlaceOnEventListRestricted+0x26>
 8004a3c:	4b0a      	ldr	r3, [pc, #40]	; (8004a68 <vTaskPlaceOnEventListRestricted+0x54>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	3318      	adds	r3, #24
 8004a42:	4619      	mov	r1, r3
 8004a44:	68f8      	ldr	r0, [r7, #12]
 8004a46:	f7fe fd56 	bl	80034f6 <vListInsertEnd>
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	2b00      	cmp	r3, #0
 8004a4e:	d002      	beq.n	8004a56 <vTaskPlaceOnEventListRestricted+0x42>
 8004a50:	f04f 33ff 	mov.w	r3, #4294967295
 8004a54:	60bb      	str	r3, [r7, #8]
 8004a56:	6879      	ldr	r1, [r7, #4]
 8004a58:	68b8      	ldr	r0, [r7, #8]
 8004a5a:	f000 facf 	bl	8004ffc <prvAddCurrentTaskToDelayedList>
 8004a5e:	bf00      	nop
 8004a60:	3718      	adds	r7, #24
 8004a62:	46bd      	mov	sp, r7
 8004a64:	bd80      	pop	{r7, pc}
 8004a66:	bf00      	nop
 8004a68:	20000940 	.word	0x20000940

08004a6c <xTaskRemoveFromEventList>:
 8004a6c:	b580      	push	{r7, lr}
 8004a6e:	b086      	sub	sp, #24
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	6078      	str	r0, [r7, #4]
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	68db      	ldr	r3, [r3, #12]
 8004a78:	68db      	ldr	r3, [r3, #12]
 8004a7a:	613b      	str	r3, [r7, #16]
 8004a7c:	693b      	ldr	r3, [r7, #16]
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d10a      	bne.n	8004a98 <xTaskRemoveFromEventList+0x2c>
 8004a82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a86:	f383 8811 	msr	BASEPRI, r3
 8004a8a:	f3bf 8f6f 	isb	sy
 8004a8e:	f3bf 8f4f 	dsb	sy
 8004a92:	60fb      	str	r3, [r7, #12]
 8004a94:	bf00      	nop
 8004a96:	e7fe      	b.n	8004a96 <xTaskRemoveFromEventList+0x2a>
 8004a98:	693b      	ldr	r3, [r7, #16]
 8004a9a:	3318      	adds	r3, #24
 8004a9c:	4618      	mov	r0, r3
 8004a9e:	f7fe fd87 	bl	80035b0 <uxListRemove>
 8004aa2:	4b1e      	ldr	r3, [pc, #120]	; (8004b1c <xTaskRemoveFromEventList+0xb0>)
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	2b00      	cmp	r3, #0
 8004aa8:	d11d      	bne.n	8004ae6 <xTaskRemoveFromEventList+0x7a>
 8004aaa:	693b      	ldr	r3, [r7, #16]
 8004aac:	3304      	adds	r3, #4
 8004aae:	4618      	mov	r0, r3
 8004ab0:	f7fe fd7e 	bl	80035b0 <uxListRemove>
 8004ab4:	693b      	ldr	r3, [r7, #16]
 8004ab6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004ab8:	4b19      	ldr	r3, [pc, #100]	; (8004b20 <xTaskRemoveFromEventList+0xb4>)
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	429a      	cmp	r2, r3
 8004abe:	d903      	bls.n	8004ac8 <xTaskRemoveFromEventList+0x5c>
 8004ac0:	693b      	ldr	r3, [r7, #16]
 8004ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ac4:	4a16      	ldr	r2, [pc, #88]	; (8004b20 <xTaskRemoveFromEventList+0xb4>)
 8004ac6:	6013      	str	r3, [r2, #0]
 8004ac8:	693b      	ldr	r3, [r7, #16]
 8004aca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004acc:	4613      	mov	r3, r2
 8004ace:	009b      	lsls	r3, r3, #2
 8004ad0:	4413      	add	r3, r2
 8004ad2:	009b      	lsls	r3, r3, #2
 8004ad4:	4a13      	ldr	r2, [pc, #76]	; (8004b24 <xTaskRemoveFromEventList+0xb8>)
 8004ad6:	441a      	add	r2, r3
 8004ad8:	693b      	ldr	r3, [r7, #16]
 8004ada:	3304      	adds	r3, #4
 8004adc:	4619      	mov	r1, r3
 8004ade:	4610      	mov	r0, r2
 8004ae0:	f7fe fd09 	bl	80034f6 <vListInsertEnd>
 8004ae4:	e005      	b.n	8004af2 <xTaskRemoveFromEventList+0x86>
 8004ae6:	693b      	ldr	r3, [r7, #16]
 8004ae8:	3318      	adds	r3, #24
 8004aea:	4619      	mov	r1, r3
 8004aec:	480e      	ldr	r0, [pc, #56]	; (8004b28 <xTaskRemoveFromEventList+0xbc>)
 8004aee:	f7fe fd02 	bl	80034f6 <vListInsertEnd>
 8004af2:	693b      	ldr	r3, [r7, #16]
 8004af4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004af6:	4b0d      	ldr	r3, [pc, #52]	; (8004b2c <xTaskRemoveFromEventList+0xc0>)
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004afc:	429a      	cmp	r2, r3
 8004afe:	d905      	bls.n	8004b0c <xTaskRemoveFromEventList+0xa0>
 8004b00:	2301      	movs	r3, #1
 8004b02:	617b      	str	r3, [r7, #20]
 8004b04:	4b0a      	ldr	r3, [pc, #40]	; (8004b30 <xTaskRemoveFromEventList+0xc4>)
 8004b06:	2201      	movs	r2, #1
 8004b08:	601a      	str	r2, [r3, #0]
 8004b0a:	e001      	b.n	8004b10 <xTaskRemoveFromEventList+0xa4>
 8004b0c:	2300      	movs	r3, #0
 8004b0e:	617b      	str	r3, [r7, #20]
 8004b10:	697b      	ldr	r3, [r7, #20]
 8004b12:	4618      	mov	r0, r3
 8004b14:	3718      	adds	r7, #24
 8004b16:	46bd      	mov	sp, r7
 8004b18:	bd80      	pop	{r7, pc}
 8004b1a:	bf00      	nop
 8004b1c:	20000e3c 	.word	0x20000e3c
 8004b20:	20000e1c 	.word	0x20000e1c
 8004b24:	20000944 	.word	0x20000944
 8004b28:	20000dd4 	.word	0x20000dd4
 8004b2c:	20000940 	.word	0x20000940
 8004b30:	20000e28 	.word	0x20000e28

08004b34 <vTaskRemoveFromUnorderedEventList>:
 8004b34:	b580      	push	{r7, lr}
 8004b36:	b086      	sub	sp, #24
 8004b38:	af00      	add	r7, sp, #0
 8004b3a:	6078      	str	r0, [r7, #4]
 8004b3c:	6039      	str	r1, [r7, #0]
 8004b3e:	4b29      	ldr	r3, [pc, #164]	; (8004be4 <vTaskRemoveFromUnorderedEventList+0xb0>)
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d10a      	bne.n	8004b5c <vTaskRemoveFromUnorderedEventList+0x28>
 8004b46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b4a:	f383 8811 	msr	BASEPRI, r3
 8004b4e:	f3bf 8f6f 	isb	sy
 8004b52:	f3bf 8f4f 	dsb	sy
 8004b56:	613b      	str	r3, [r7, #16]
 8004b58:	bf00      	nop
 8004b5a:	e7fe      	b.n	8004b5a <vTaskRemoveFromUnorderedEventList+0x26>
 8004b5c:	683b      	ldr	r3, [r7, #0]
 8004b5e:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	601a      	str	r2, [r3, #0]
 8004b66:	687b      	ldr	r3, [r7, #4]
 8004b68:	68db      	ldr	r3, [r3, #12]
 8004b6a:	617b      	str	r3, [r7, #20]
 8004b6c:	697b      	ldr	r3, [r7, #20]
 8004b6e:	2b00      	cmp	r3, #0
 8004b70:	d10a      	bne.n	8004b88 <vTaskRemoveFromUnorderedEventList+0x54>
 8004b72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b76:	f383 8811 	msr	BASEPRI, r3
 8004b7a:	f3bf 8f6f 	isb	sy
 8004b7e:	f3bf 8f4f 	dsb	sy
 8004b82:	60fb      	str	r3, [r7, #12]
 8004b84:	bf00      	nop
 8004b86:	e7fe      	b.n	8004b86 <vTaskRemoveFromUnorderedEventList+0x52>
 8004b88:	6878      	ldr	r0, [r7, #4]
 8004b8a:	f7fe fd11 	bl	80035b0 <uxListRemove>
 8004b8e:	697b      	ldr	r3, [r7, #20]
 8004b90:	3304      	adds	r3, #4
 8004b92:	4618      	mov	r0, r3
 8004b94:	f7fe fd0c 	bl	80035b0 <uxListRemove>
 8004b98:	697b      	ldr	r3, [r7, #20]
 8004b9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004b9c:	4b12      	ldr	r3, [pc, #72]	; (8004be8 <vTaskRemoveFromUnorderedEventList+0xb4>)
 8004b9e:	681b      	ldr	r3, [r3, #0]
 8004ba0:	429a      	cmp	r2, r3
 8004ba2:	d903      	bls.n	8004bac <vTaskRemoveFromUnorderedEventList+0x78>
 8004ba4:	697b      	ldr	r3, [r7, #20]
 8004ba6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ba8:	4a0f      	ldr	r2, [pc, #60]	; (8004be8 <vTaskRemoveFromUnorderedEventList+0xb4>)
 8004baa:	6013      	str	r3, [r2, #0]
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004bb0:	4613      	mov	r3, r2
 8004bb2:	009b      	lsls	r3, r3, #2
 8004bb4:	4413      	add	r3, r2
 8004bb6:	009b      	lsls	r3, r3, #2
 8004bb8:	4a0c      	ldr	r2, [pc, #48]	; (8004bec <vTaskRemoveFromUnorderedEventList+0xb8>)
 8004bba:	441a      	add	r2, r3
 8004bbc:	697b      	ldr	r3, [r7, #20]
 8004bbe:	3304      	adds	r3, #4
 8004bc0:	4619      	mov	r1, r3
 8004bc2:	4610      	mov	r0, r2
 8004bc4:	f7fe fc97 	bl	80034f6 <vListInsertEnd>
 8004bc8:	697b      	ldr	r3, [r7, #20]
 8004bca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004bcc:	4b08      	ldr	r3, [pc, #32]	; (8004bf0 <vTaskRemoveFromUnorderedEventList+0xbc>)
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bd2:	429a      	cmp	r2, r3
 8004bd4:	d902      	bls.n	8004bdc <vTaskRemoveFromUnorderedEventList+0xa8>
 8004bd6:	4b07      	ldr	r3, [pc, #28]	; (8004bf4 <vTaskRemoveFromUnorderedEventList+0xc0>)
 8004bd8:	2201      	movs	r2, #1
 8004bda:	601a      	str	r2, [r3, #0]
 8004bdc:	bf00      	nop
 8004bde:	3718      	adds	r7, #24
 8004be0:	46bd      	mov	sp, r7
 8004be2:	bd80      	pop	{r7, pc}
 8004be4:	20000e3c 	.word	0x20000e3c
 8004be8:	20000e1c 	.word	0x20000e1c
 8004bec:	20000944 	.word	0x20000944
 8004bf0:	20000940 	.word	0x20000940
 8004bf4:	20000e28 	.word	0x20000e28

08004bf8 <vTaskInternalSetTimeOutState>:
 8004bf8:	b480      	push	{r7}
 8004bfa:	b083      	sub	sp, #12
 8004bfc:	af00      	add	r7, sp, #0
 8004bfe:	6078      	str	r0, [r7, #4]
 8004c00:	4b06      	ldr	r3, [pc, #24]	; (8004c1c <vTaskInternalSetTimeOutState+0x24>)
 8004c02:	681a      	ldr	r2, [r3, #0]
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	601a      	str	r2, [r3, #0]
 8004c08:	4b05      	ldr	r3, [pc, #20]	; (8004c20 <vTaskInternalSetTimeOutState+0x28>)
 8004c0a:	681a      	ldr	r2, [r3, #0]
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	605a      	str	r2, [r3, #4]
 8004c10:	bf00      	nop
 8004c12:	370c      	adds	r7, #12
 8004c14:	46bd      	mov	sp, r7
 8004c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c1a:	4770      	bx	lr
 8004c1c:	20000e2c 	.word	0x20000e2c
 8004c20:	20000e18 	.word	0x20000e18

08004c24 <xTaskCheckForTimeOut>:
 8004c24:	b580      	push	{r7, lr}
 8004c26:	b088      	sub	sp, #32
 8004c28:	af00      	add	r7, sp, #0
 8004c2a:	6078      	str	r0, [r7, #4]
 8004c2c:	6039      	str	r1, [r7, #0]
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	d10a      	bne.n	8004c4a <xTaskCheckForTimeOut+0x26>
 8004c34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c38:	f383 8811 	msr	BASEPRI, r3
 8004c3c:	f3bf 8f6f 	isb	sy
 8004c40:	f3bf 8f4f 	dsb	sy
 8004c44:	613b      	str	r3, [r7, #16]
 8004c46:	bf00      	nop
 8004c48:	e7fe      	b.n	8004c48 <xTaskCheckForTimeOut+0x24>
 8004c4a:	683b      	ldr	r3, [r7, #0]
 8004c4c:	2b00      	cmp	r3, #0
 8004c4e:	d10a      	bne.n	8004c66 <xTaskCheckForTimeOut+0x42>
 8004c50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c54:	f383 8811 	msr	BASEPRI, r3
 8004c58:	f3bf 8f6f 	isb	sy
 8004c5c:	f3bf 8f4f 	dsb	sy
 8004c60:	60fb      	str	r3, [r7, #12]
 8004c62:	bf00      	nop
 8004c64:	e7fe      	b.n	8004c64 <xTaskCheckForTimeOut+0x40>
 8004c66:	f000 feb5 	bl	80059d4 <vPortEnterCritical>
 8004c6a:	4b1d      	ldr	r3, [pc, #116]	; (8004ce0 <xTaskCheckForTimeOut+0xbc>)
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	61bb      	str	r3, [r7, #24]
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	685b      	ldr	r3, [r3, #4]
 8004c74:	69ba      	ldr	r2, [r7, #24]
 8004c76:	1ad3      	subs	r3, r2, r3
 8004c78:	617b      	str	r3, [r7, #20]
 8004c7a:	683b      	ldr	r3, [r7, #0]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c82:	d102      	bne.n	8004c8a <xTaskCheckForTimeOut+0x66>
 8004c84:	2300      	movs	r3, #0
 8004c86:	61fb      	str	r3, [r7, #28]
 8004c88:	e023      	b.n	8004cd2 <xTaskCheckForTimeOut+0xae>
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	681a      	ldr	r2, [r3, #0]
 8004c8e:	4b15      	ldr	r3, [pc, #84]	; (8004ce4 <xTaskCheckForTimeOut+0xc0>)
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	429a      	cmp	r2, r3
 8004c94:	d007      	beq.n	8004ca6 <xTaskCheckForTimeOut+0x82>
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	685b      	ldr	r3, [r3, #4]
 8004c9a:	69ba      	ldr	r2, [r7, #24]
 8004c9c:	429a      	cmp	r2, r3
 8004c9e:	d302      	bcc.n	8004ca6 <xTaskCheckForTimeOut+0x82>
 8004ca0:	2301      	movs	r3, #1
 8004ca2:	61fb      	str	r3, [r7, #28]
 8004ca4:	e015      	b.n	8004cd2 <xTaskCheckForTimeOut+0xae>
 8004ca6:	683b      	ldr	r3, [r7, #0]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	697a      	ldr	r2, [r7, #20]
 8004cac:	429a      	cmp	r2, r3
 8004cae:	d20b      	bcs.n	8004cc8 <xTaskCheckForTimeOut+0xa4>
 8004cb0:	683b      	ldr	r3, [r7, #0]
 8004cb2:	681a      	ldr	r2, [r3, #0]
 8004cb4:	697b      	ldr	r3, [r7, #20]
 8004cb6:	1ad2      	subs	r2, r2, r3
 8004cb8:	683b      	ldr	r3, [r7, #0]
 8004cba:	601a      	str	r2, [r3, #0]
 8004cbc:	6878      	ldr	r0, [r7, #4]
 8004cbe:	f7ff ff9b 	bl	8004bf8 <vTaskInternalSetTimeOutState>
 8004cc2:	2300      	movs	r3, #0
 8004cc4:	61fb      	str	r3, [r7, #28]
 8004cc6:	e004      	b.n	8004cd2 <xTaskCheckForTimeOut+0xae>
 8004cc8:	683b      	ldr	r3, [r7, #0]
 8004cca:	2200      	movs	r2, #0
 8004ccc:	601a      	str	r2, [r3, #0]
 8004cce:	2301      	movs	r3, #1
 8004cd0:	61fb      	str	r3, [r7, #28]
 8004cd2:	f000 feaf 	bl	8005a34 <vPortExitCritical>
 8004cd6:	69fb      	ldr	r3, [r7, #28]
 8004cd8:	4618      	mov	r0, r3
 8004cda:	3720      	adds	r7, #32
 8004cdc:	46bd      	mov	sp, r7
 8004cde:	bd80      	pop	{r7, pc}
 8004ce0:	20000e18 	.word	0x20000e18
 8004ce4:	20000e2c 	.word	0x20000e2c

08004ce8 <vTaskMissedYield>:
 8004ce8:	b480      	push	{r7}
 8004cea:	af00      	add	r7, sp, #0
 8004cec:	4b03      	ldr	r3, [pc, #12]	; (8004cfc <vTaskMissedYield+0x14>)
 8004cee:	2201      	movs	r2, #1
 8004cf0:	601a      	str	r2, [r3, #0]
 8004cf2:	bf00      	nop
 8004cf4:	46bd      	mov	sp, r7
 8004cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cfa:	4770      	bx	lr
 8004cfc:	20000e28 	.word	0x20000e28

08004d00 <prvIdleTask>:
 8004d00:	b580      	push	{r7, lr}
 8004d02:	b082      	sub	sp, #8
 8004d04:	af00      	add	r7, sp, #0
 8004d06:	6078      	str	r0, [r7, #4]
 8004d08:	f000 f852 	bl	8004db0 <prvCheckTasksWaitingTermination>
 8004d0c:	4b06      	ldr	r3, [pc, #24]	; (8004d28 <prvIdleTask+0x28>)
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	2b01      	cmp	r3, #1
 8004d12:	d9f9      	bls.n	8004d08 <prvIdleTask+0x8>
 8004d14:	4b05      	ldr	r3, [pc, #20]	; (8004d2c <prvIdleTask+0x2c>)
 8004d16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004d1a:	601a      	str	r2, [r3, #0]
 8004d1c:	f3bf 8f4f 	dsb	sy
 8004d20:	f3bf 8f6f 	isb	sy
 8004d24:	e7f0      	b.n	8004d08 <prvIdleTask+0x8>
 8004d26:	bf00      	nop
 8004d28:	20000944 	.word	0x20000944
 8004d2c:	e000ed04 	.word	0xe000ed04

08004d30 <prvInitialiseTaskLists>:
 8004d30:	b580      	push	{r7, lr}
 8004d32:	b082      	sub	sp, #8
 8004d34:	af00      	add	r7, sp, #0
 8004d36:	2300      	movs	r3, #0
 8004d38:	607b      	str	r3, [r7, #4]
 8004d3a:	e00c      	b.n	8004d56 <prvInitialiseTaskLists+0x26>
 8004d3c:	687a      	ldr	r2, [r7, #4]
 8004d3e:	4613      	mov	r3, r2
 8004d40:	009b      	lsls	r3, r3, #2
 8004d42:	4413      	add	r3, r2
 8004d44:	009b      	lsls	r3, r3, #2
 8004d46:	4a12      	ldr	r2, [pc, #72]	; (8004d90 <prvInitialiseTaskLists+0x60>)
 8004d48:	4413      	add	r3, r2
 8004d4a:	4618      	mov	r0, r3
 8004d4c:	f7fe fba6 	bl	800349c <vListInitialise>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	3301      	adds	r3, #1
 8004d54:	607b      	str	r3, [r7, #4]
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	2b37      	cmp	r3, #55	; 0x37
 8004d5a:	d9ef      	bls.n	8004d3c <prvInitialiseTaskLists+0xc>
 8004d5c:	480d      	ldr	r0, [pc, #52]	; (8004d94 <prvInitialiseTaskLists+0x64>)
 8004d5e:	f7fe fb9d 	bl	800349c <vListInitialise>
 8004d62:	480d      	ldr	r0, [pc, #52]	; (8004d98 <prvInitialiseTaskLists+0x68>)
 8004d64:	f7fe fb9a 	bl	800349c <vListInitialise>
 8004d68:	480c      	ldr	r0, [pc, #48]	; (8004d9c <prvInitialiseTaskLists+0x6c>)
 8004d6a:	f7fe fb97 	bl	800349c <vListInitialise>
 8004d6e:	480c      	ldr	r0, [pc, #48]	; (8004da0 <prvInitialiseTaskLists+0x70>)
 8004d70:	f7fe fb94 	bl	800349c <vListInitialise>
 8004d74:	480b      	ldr	r0, [pc, #44]	; (8004da4 <prvInitialiseTaskLists+0x74>)
 8004d76:	f7fe fb91 	bl	800349c <vListInitialise>
 8004d7a:	4b0b      	ldr	r3, [pc, #44]	; (8004da8 <prvInitialiseTaskLists+0x78>)
 8004d7c:	4a05      	ldr	r2, [pc, #20]	; (8004d94 <prvInitialiseTaskLists+0x64>)
 8004d7e:	601a      	str	r2, [r3, #0]
 8004d80:	4b0a      	ldr	r3, [pc, #40]	; (8004dac <prvInitialiseTaskLists+0x7c>)
 8004d82:	4a05      	ldr	r2, [pc, #20]	; (8004d98 <prvInitialiseTaskLists+0x68>)
 8004d84:	601a      	str	r2, [r3, #0]
 8004d86:	bf00      	nop
 8004d88:	3708      	adds	r7, #8
 8004d8a:	46bd      	mov	sp, r7
 8004d8c:	bd80      	pop	{r7, pc}
 8004d8e:	bf00      	nop
 8004d90:	20000944 	.word	0x20000944
 8004d94:	20000da4 	.word	0x20000da4
 8004d98:	20000db8 	.word	0x20000db8
 8004d9c:	20000dd4 	.word	0x20000dd4
 8004da0:	20000de8 	.word	0x20000de8
 8004da4:	20000e00 	.word	0x20000e00
 8004da8:	20000dcc 	.word	0x20000dcc
 8004dac:	20000dd0 	.word	0x20000dd0

08004db0 <prvCheckTasksWaitingTermination>:
 8004db0:	b580      	push	{r7, lr}
 8004db2:	b082      	sub	sp, #8
 8004db4:	af00      	add	r7, sp, #0
 8004db6:	e019      	b.n	8004dec <prvCheckTasksWaitingTermination+0x3c>
 8004db8:	f000 fe0c 	bl	80059d4 <vPortEnterCritical>
 8004dbc:	4b10      	ldr	r3, [pc, #64]	; (8004e00 <prvCheckTasksWaitingTermination+0x50>)
 8004dbe:	68db      	ldr	r3, [r3, #12]
 8004dc0:	68db      	ldr	r3, [r3, #12]
 8004dc2:	607b      	str	r3, [r7, #4]
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	3304      	adds	r3, #4
 8004dc8:	4618      	mov	r0, r3
 8004dca:	f7fe fbf1 	bl	80035b0 <uxListRemove>
 8004dce:	4b0d      	ldr	r3, [pc, #52]	; (8004e04 <prvCheckTasksWaitingTermination+0x54>)
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	3b01      	subs	r3, #1
 8004dd4:	4a0b      	ldr	r2, [pc, #44]	; (8004e04 <prvCheckTasksWaitingTermination+0x54>)
 8004dd6:	6013      	str	r3, [r2, #0]
 8004dd8:	4b0b      	ldr	r3, [pc, #44]	; (8004e08 <prvCheckTasksWaitingTermination+0x58>)
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	3b01      	subs	r3, #1
 8004dde:	4a0a      	ldr	r2, [pc, #40]	; (8004e08 <prvCheckTasksWaitingTermination+0x58>)
 8004de0:	6013      	str	r3, [r2, #0]
 8004de2:	f000 fe27 	bl	8005a34 <vPortExitCritical>
 8004de6:	6878      	ldr	r0, [r7, #4]
 8004de8:	f000 f810 	bl	8004e0c <prvDeleteTCB>
 8004dec:	4b06      	ldr	r3, [pc, #24]	; (8004e08 <prvCheckTasksWaitingTermination+0x58>)
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d1e1      	bne.n	8004db8 <prvCheckTasksWaitingTermination+0x8>
 8004df4:	bf00      	nop
 8004df6:	bf00      	nop
 8004df8:	3708      	adds	r7, #8
 8004dfa:	46bd      	mov	sp, r7
 8004dfc:	bd80      	pop	{r7, pc}
 8004dfe:	bf00      	nop
 8004e00:	20000de8 	.word	0x20000de8
 8004e04:	20000e14 	.word	0x20000e14
 8004e08:	20000dfc 	.word	0x20000dfc

08004e0c <prvDeleteTCB>:
 8004e0c:	b580      	push	{r7, lr}
 8004e0e:	b084      	sub	sp, #16
 8004e10:	af00      	add	r7, sp, #0
 8004e12:	6078      	str	r0, [r7, #4]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	3354      	adds	r3, #84	; 0x54
 8004e18:	4618      	mov	r0, r3
 8004e1a:	f001 fb07 	bl	800642c <_reclaim_reent>
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	d108      	bne.n	8004e3a <prvDeleteTCB+0x2e>
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e2c:	4618      	mov	r0, r3
 8004e2e:	f000 ffbf 	bl	8005db0 <vPortFree>
 8004e32:	6878      	ldr	r0, [r7, #4]
 8004e34:	f000 ffbc 	bl	8005db0 <vPortFree>
 8004e38:	e018      	b.n	8004e6c <prvDeleteTCB+0x60>
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8004e40:	2b01      	cmp	r3, #1
 8004e42:	d103      	bne.n	8004e4c <prvDeleteTCB+0x40>
 8004e44:	6878      	ldr	r0, [r7, #4]
 8004e46:	f000 ffb3 	bl	8005db0 <vPortFree>
 8004e4a:	e00f      	b.n	8004e6c <prvDeleteTCB+0x60>
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8004e52:	2b02      	cmp	r3, #2
 8004e54:	d00a      	beq.n	8004e6c <prvDeleteTCB+0x60>
 8004e56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004e5a:	f383 8811 	msr	BASEPRI, r3
 8004e5e:	f3bf 8f6f 	isb	sy
 8004e62:	f3bf 8f4f 	dsb	sy
 8004e66:	60fb      	str	r3, [r7, #12]
 8004e68:	bf00      	nop
 8004e6a:	e7fe      	b.n	8004e6a <prvDeleteTCB+0x5e>
 8004e6c:	bf00      	nop
 8004e6e:	3710      	adds	r7, #16
 8004e70:	46bd      	mov	sp, r7
 8004e72:	bd80      	pop	{r7, pc}

08004e74 <prvResetNextTaskUnblockTime>:
 8004e74:	b480      	push	{r7}
 8004e76:	b083      	sub	sp, #12
 8004e78:	af00      	add	r7, sp, #0
 8004e7a:	4b0c      	ldr	r3, [pc, #48]	; (8004eac <prvResetNextTaskUnblockTime+0x38>)
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	2b00      	cmp	r3, #0
 8004e82:	d104      	bne.n	8004e8e <prvResetNextTaskUnblockTime+0x1a>
 8004e84:	4b0a      	ldr	r3, [pc, #40]	; (8004eb0 <prvResetNextTaskUnblockTime+0x3c>)
 8004e86:	f04f 32ff 	mov.w	r2, #4294967295
 8004e8a:	601a      	str	r2, [r3, #0]
 8004e8c:	e008      	b.n	8004ea0 <prvResetNextTaskUnblockTime+0x2c>
 8004e8e:	4b07      	ldr	r3, [pc, #28]	; (8004eac <prvResetNextTaskUnblockTime+0x38>)
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	68db      	ldr	r3, [r3, #12]
 8004e94:	68db      	ldr	r3, [r3, #12]
 8004e96:	607b      	str	r3, [r7, #4]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	4a04      	ldr	r2, [pc, #16]	; (8004eb0 <prvResetNextTaskUnblockTime+0x3c>)
 8004e9e:	6013      	str	r3, [r2, #0]
 8004ea0:	bf00      	nop
 8004ea2:	370c      	adds	r7, #12
 8004ea4:	46bd      	mov	sp, r7
 8004ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eaa:	4770      	bx	lr
 8004eac:	20000dcc 	.word	0x20000dcc
 8004eb0:	20000e34 	.word	0x20000e34

08004eb4 <xTaskGetSchedulerState>:
 8004eb4:	b480      	push	{r7}
 8004eb6:	b083      	sub	sp, #12
 8004eb8:	af00      	add	r7, sp, #0
 8004eba:	4b0b      	ldr	r3, [pc, #44]	; (8004ee8 <xTaskGetSchedulerState+0x34>)
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d102      	bne.n	8004ec8 <xTaskGetSchedulerState+0x14>
 8004ec2:	2301      	movs	r3, #1
 8004ec4:	607b      	str	r3, [r7, #4]
 8004ec6:	e008      	b.n	8004eda <xTaskGetSchedulerState+0x26>
 8004ec8:	4b08      	ldr	r3, [pc, #32]	; (8004eec <xTaskGetSchedulerState+0x38>)
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d102      	bne.n	8004ed6 <xTaskGetSchedulerState+0x22>
 8004ed0:	2302      	movs	r3, #2
 8004ed2:	607b      	str	r3, [r7, #4]
 8004ed4:	e001      	b.n	8004eda <xTaskGetSchedulerState+0x26>
 8004ed6:	2300      	movs	r3, #0
 8004ed8:	607b      	str	r3, [r7, #4]
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	4618      	mov	r0, r3
 8004ede:	370c      	adds	r7, #12
 8004ee0:	46bd      	mov	sp, r7
 8004ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ee6:	4770      	bx	lr
 8004ee8:	20000e20 	.word	0x20000e20
 8004eec:	20000e3c 	.word	0x20000e3c

08004ef0 <xTaskPriorityDisinherit>:
 8004ef0:	b580      	push	{r7, lr}
 8004ef2:	b086      	sub	sp, #24
 8004ef4:	af00      	add	r7, sp, #0
 8004ef6:	6078      	str	r0, [r7, #4]
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	613b      	str	r3, [r7, #16]
 8004efc:	2300      	movs	r3, #0
 8004efe:	617b      	str	r3, [r7, #20]
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d056      	beq.n	8004fb4 <xTaskPriorityDisinherit+0xc4>
 8004f06:	4b2e      	ldr	r3, [pc, #184]	; (8004fc0 <xTaskPriorityDisinherit+0xd0>)
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	693a      	ldr	r2, [r7, #16]
 8004f0c:	429a      	cmp	r2, r3
 8004f0e:	d00a      	beq.n	8004f26 <xTaskPriorityDisinherit+0x36>
 8004f10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004f14:	f383 8811 	msr	BASEPRI, r3
 8004f18:	f3bf 8f6f 	isb	sy
 8004f1c:	f3bf 8f4f 	dsb	sy
 8004f20:	60fb      	str	r3, [r7, #12]
 8004f22:	bf00      	nop
 8004f24:	e7fe      	b.n	8004f24 <xTaskPriorityDisinherit+0x34>
 8004f26:	693b      	ldr	r3, [r7, #16]
 8004f28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004f2a:	2b00      	cmp	r3, #0
 8004f2c:	d10a      	bne.n	8004f44 <xTaskPriorityDisinherit+0x54>
 8004f2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004f32:	f383 8811 	msr	BASEPRI, r3
 8004f36:	f3bf 8f6f 	isb	sy
 8004f3a:	f3bf 8f4f 	dsb	sy
 8004f3e:	60bb      	str	r3, [r7, #8]
 8004f40:	bf00      	nop
 8004f42:	e7fe      	b.n	8004f42 <xTaskPriorityDisinherit+0x52>
 8004f44:	693b      	ldr	r3, [r7, #16]
 8004f46:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004f48:	1e5a      	subs	r2, r3, #1
 8004f4a:	693b      	ldr	r3, [r7, #16]
 8004f4c:	651a      	str	r2, [r3, #80]	; 0x50
 8004f4e:	693b      	ldr	r3, [r7, #16]
 8004f50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f52:	693b      	ldr	r3, [r7, #16]
 8004f54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004f56:	429a      	cmp	r2, r3
 8004f58:	d02c      	beq.n	8004fb4 <xTaskPriorityDisinherit+0xc4>
 8004f5a:	693b      	ldr	r3, [r7, #16]
 8004f5c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d128      	bne.n	8004fb4 <xTaskPriorityDisinherit+0xc4>
 8004f62:	693b      	ldr	r3, [r7, #16]
 8004f64:	3304      	adds	r3, #4
 8004f66:	4618      	mov	r0, r3
 8004f68:	f7fe fb22 	bl	80035b0 <uxListRemove>
 8004f6c:	693b      	ldr	r3, [r7, #16]
 8004f6e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004f70:	693b      	ldr	r3, [r7, #16]
 8004f72:	62da      	str	r2, [r3, #44]	; 0x2c
 8004f74:	693b      	ldr	r3, [r7, #16]
 8004f76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f78:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8004f7c:	693b      	ldr	r3, [r7, #16]
 8004f7e:	619a      	str	r2, [r3, #24]
 8004f80:	693b      	ldr	r3, [r7, #16]
 8004f82:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f84:	4b0f      	ldr	r3, [pc, #60]	; (8004fc4 <xTaskPriorityDisinherit+0xd4>)
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	429a      	cmp	r2, r3
 8004f8a:	d903      	bls.n	8004f94 <xTaskPriorityDisinherit+0xa4>
 8004f8c:	693b      	ldr	r3, [r7, #16]
 8004f8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f90:	4a0c      	ldr	r2, [pc, #48]	; (8004fc4 <xTaskPriorityDisinherit+0xd4>)
 8004f92:	6013      	str	r3, [r2, #0]
 8004f94:	693b      	ldr	r3, [r7, #16]
 8004f96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f98:	4613      	mov	r3, r2
 8004f9a:	009b      	lsls	r3, r3, #2
 8004f9c:	4413      	add	r3, r2
 8004f9e:	009b      	lsls	r3, r3, #2
 8004fa0:	4a09      	ldr	r2, [pc, #36]	; (8004fc8 <xTaskPriorityDisinherit+0xd8>)
 8004fa2:	441a      	add	r2, r3
 8004fa4:	693b      	ldr	r3, [r7, #16]
 8004fa6:	3304      	adds	r3, #4
 8004fa8:	4619      	mov	r1, r3
 8004faa:	4610      	mov	r0, r2
 8004fac:	f7fe faa3 	bl	80034f6 <vListInsertEnd>
 8004fb0:	2301      	movs	r3, #1
 8004fb2:	617b      	str	r3, [r7, #20]
 8004fb4:	697b      	ldr	r3, [r7, #20]
 8004fb6:	4618      	mov	r0, r3
 8004fb8:	3718      	adds	r7, #24
 8004fba:	46bd      	mov	sp, r7
 8004fbc:	bd80      	pop	{r7, pc}
 8004fbe:	bf00      	nop
 8004fc0:	20000940 	.word	0x20000940
 8004fc4:	20000e1c 	.word	0x20000e1c
 8004fc8:	20000944 	.word	0x20000944

08004fcc <uxTaskResetEventItemValue>:
 8004fcc:	b480      	push	{r7}
 8004fce:	b083      	sub	sp, #12
 8004fd0:	af00      	add	r7, sp, #0
 8004fd2:	4b09      	ldr	r3, [pc, #36]	; (8004ff8 <uxTaskResetEventItemValue+0x2c>)
 8004fd4:	681b      	ldr	r3, [r3, #0]
 8004fd6:	699b      	ldr	r3, [r3, #24]
 8004fd8:	607b      	str	r3, [r7, #4]
 8004fda:	4b07      	ldr	r3, [pc, #28]	; (8004ff8 <uxTaskResetEventItemValue+0x2c>)
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004fe0:	4b05      	ldr	r3, [pc, #20]	; (8004ff8 <uxTaskResetEventItemValue+0x2c>)
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8004fe8:	619a      	str	r2, [r3, #24]
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	4618      	mov	r0, r3
 8004fee:	370c      	adds	r7, #12
 8004ff0:	46bd      	mov	sp, r7
 8004ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ff6:	4770      	bx	lr
 8004ff8:	20000940 	.word	0x20000940

08004ffc <prvAddCurrentTaskToDelayedList>:
 8004ffc:	b580      	push	{r7, lr}
 8004ffe:	b084      	sub	sp, #16
 8005000:	af00      	add	r7, sp, #0
 8005002:	6078      	str	r0, [r7, #4]
 8005004:	6039      	str	r1, [r7, #0]
 8005006:	4b21      	ldr	r3, [pc, #132]	; (800508c <prvAddCurrentTaskToDelayedList+0x90>)
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	60fb      	str	r3, [r7, #12]
 800500c:	4b20      	ldr	r3, [pc, #128]	; (8005090 <prvAddCurrentTaskToDelayedList+0x94>)
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	3304      	adds	r3, #4
 8005012:	4618      	mov	r0, r3
 8005014:	f7fe facc 	bl	80035b0 <uxListRemove>
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800501e:	d10a      	bne.n	8005036 <prvAddCurrentTaskToDelayedList+0x3a>
 8005020:	683b      	ldr	r3, [r7, #0]
 8005022:	2b00      	cmp	r3, #0
 8005024:	d007      	beq.n	8005036 <prvAddCurrentTaskToDelayedList+0x3a>
 8005026:	4b1a      	ldr	r3, [pc, #104]	; (8005090 <prvAddCurrentTaskToDelayedList+0x94>)
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	3304      	adds	r3, #4
 800502c:	4619      	mov	r1, r3
 800502e:	4819      	ldr	r0, [pc, #100]	; (8005094 <prvAddCurrentTaskToDelayedList+0x98>)
 8005030:	f7fe fa61 	bl	80034f6 <vListInsertEnd>
 8005034:	e026      	b.n	8005084 <prvAddCurrentTaskToDelayedList+0x88>
 8005036:	68fa      	ldr	r2, [r7, #12]
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	4413      	add	r3, r2
 800503c:	60bb      	str	r3, [r7, #8]
 800503e:	4b14      	ldr	r3, [pc, #80]	; (8005090 <prvAddCurrentTaskToDelayedList+0x94>)
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	68ba      	ldr	r2, [r7, #8]
 8005044:	605a      	str	r2, [r3, #4]
 8005046:	68ba      	ldr	r2, [r7, #8]
 8005048:	68fb      	ldr	r3, [r7, #12]
 800504a:	429a      	cmp	r2, r3
 800504c:	d209      	bcs.n	8005062 <prvAddCurrentTaskToDelayedList+0x66>
 800504e:	4b12      	ldr	r3, [pc, #72]	; (8005098 <prvAddCurrentTaskToDelayedList+0x9c>)
 8005050:	681a      	ldr	r2, [r3, #0]
 8005052:	4b0f      	ldr	r3, [pc, #60]	; (8005090 <prvAddCurrentTaskToDelayedList+0x94>)
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	3304      	adds	r3, #4
 8005058:	4619      	mov	r1, r3
 800505a:	4610      	mov	r0, r2
 800505c:	f7fe fa6f 	bl	800353e <vListInsert>
 8005060:	e010      	b.n	8005084 <prvAddCurrentTaskToDelayedList+0x88>
 8005062:	4b0e      	ldr	r3, [pc, #56]	; (800509c <prvAddCurrentTaskToDelayedList+0xa0>)
 8005064:	681a      	ldr	r2, [r3, #0]
 8005066:	4b0a      	ldr	r3, [pc, #40]	; (8005090 <prvAddCurrentTaskToDelayedList+0x94>)
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	3304      	adds	r3, #4
 800506c:	4619      	mov	r1, r3
 800506e:	4610      	mov	r0, r2
 8005070:	f7fe fa65 	bl	800353e <vListInsert>
 8005074:	4b0a      	ldr	r3, [pc, #40]	; (80050a0 <prvAddCurrentTaskToDelayedList+0xa4>)
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	68ba      	ldr	r2, [r7, #8]
 800507a:	429a      	cmp	r2, r3
 800507c:	d202      	bcs.n	8005084 <prvAddCurrentTaskToDelayedList+0x88>
 800507e:	4a08      	ldr	r2, [pc, #32]	; (80050a0 <prvAddCurrentTaskToDelayedList+0xa4>)
 8005080:	68bb      	ldr	r3, [r7, #8]
 8005082:	6013      	str	r3, [r2, #0]
 8005084:	bf00      	nop
 8005086:	3710      	adds	r7, #16
 8005088:	46bd      	mov	sp, r7
 800508a:	bd80      	pop	{r7, pc}
 800508c:	20000e18 	.word	0x20000e18
 8005090:	20000940 	.word	0x20000940
 8005094:	20000e00 	.word	0x20000e00
 8005098:	20000dd0 	.word	0x20000dd0
 800509c:	20000dcc 	.word	0x20000dcc
 80050a0:	20000e34 	.word	0x20000e34

080050a4 <xTimerCreateTimerTask>:
 80050a4:	b580      	push	{r7, lr}
 80050a6:	b08a      	sub	sp, #40	; 0x28
 80050a8:	af04      	add	r7, sp, #16
 80050aa:	2300      	movs	r3, #0
 80050ac:	617b      	str	r3, [r7, #20]
 80050ae:	f000 fb07 	bl	80056c0 <prvCheckForValidListAndQueue>
 80050b2:	4b1c      	ldr	r3, [pc, #112]	; (8005124 <xTimerCreateTimerTask+0x80>)
 80050b4:	681b      	ldr	r3, [r3, #0]
 80050b6:	2b00      	cmp	r3, #0
 80050b8:	d021      	beq.n	80050fe <xTimerCreateTimerTask+0x5a>
 80050ba:	2300      	movs	r3, #0
 80050bc:	60fb      	str	r3, [r7, #12]
 80050be:	2300      	movs	r3, #0
 80050c0:	60bb      	str	r3, [r7, #8]
 80050c2:	1d3a      	adds	r2, r7, #4
 80050c4:	f107 0108 	add.w	r1, r7, #8
 80050c8:	f107 030c 	add.w	r3, r7, #12
 80050cc:	4618      	mov	r0, r3
 80050ce:	f7fd ff5f 	bl	8002f90 <vApplicationGetTimerTaskMemory>
 80050d2:	6879      	ldr	r1, [r7, #4]
 80050d4:	68bb      	ldr	r3, [r7, #8]
 80050d6:	68fa      	ldr	r2, [r7, #12]
 80050d8:	9202      	str	r2, [sp, #8]
 80050da:	9301      	str	r3, [sp, #4]
 80050dc:	2302      	movs	r3, #2
 80050de:	9300      	str	r3, [sp, #0]
 80050e0:	2300      	movs	r3, #0
 80050e2:	460a      	mov	r2, r1
 80050e4:	4910      	ldr	r1, [pc, #64]	; (8005128 <xTimerCreateTimerTask+0x84>)
 80050e6:	4811      	ldr	r0, [pc, #68]	; (800512c <xTimerCreateTimerTask+0x88>)
 80050e8:	f7ff f832 	bl	8004150 <xTaskCreateStatic>
 80050ec:	4603      	mov	r3, r0
 80050ee:	4a10      	ldr	r2, [pc, #64]	; (8005130 <xTimerCreateTimerTask+0x8c>)
 80050f0:	6013      	str	r3, [r2, #0]
 80050f2:	4b0f      	ldr	r3, [pc, #60]	; (8005130 <xTimerCreateTimerTask+0x8c>)
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	2b00      	cmp	r3, #0
 80050f8:	d001      	beq.n	80050fe <xTimerCreateTimerTask+0x5a>
 80050fa:	2301      	movs	r3, #1
 80050fc:	617b      	str	r3, [r7, #20]
 80050fe:	697b      	ldr	r3, [r7, #20]
 8005100:	2b00      	cmp	r3, #0
 8005102:	d10a      	bne.n	800511a <xTimerCreateTimerTask+0x76>
 8005104:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005108:	f383 8811 	msr	BASEPRI, r3
 800510c:	f3bf 8f6f 	isb	sy
 8005110:	f3bf 8f4f 	dsb	sy
 8005114:	613b      	str	r3, [r7, #16]
 8005116:	bf00      	nop
 8005118:	e7fe      	b.n	8005118 <xTimerCreateTimerTask+0x74>
 800511a:	697b      	ldr	r3, [r7, #20]
 800511c:	4618      	mov	r0, r3
 800511e:	3718      	adds	r7, #24
 8005120:	46bd      	mov	sp, r7
 8005122:	bd80      	pop	{r7, pc}
 8005124:	20000e70 	.word	0x20000e70
 8005128:	080070ac 	.word	0x080070ac
 800512c:	08005269 	.word	0x08005269
 8005130:	20000e74 	.word	0x20000e74

08005134 <xTimerGenericCommand>:
 8005134:	b580      	push	{r7, lr}
 8005136:	b08a      	sub	sp, #40	; 0x28
 8005138:	af00      	add	r7, sp, #0
 800513a:	60f8      	str	r0, [r7, #12]
 800513c:	60b9      	str	r1, [r7, #8]
 800513e:	607a      	str	r2, [r7, #4]
 8005140:	603b      	str	r3, [r7, #0]
 8005142:	2300      	movs	r3, #0
 8005144:	627b      	str	r3, [r7, #36]	; 0x24
 8005146:	68fb      	ldr	r3, [r7, #12]
 8005148:	2b00      	cmp	r3, #0
 800514a:	d10a      	bne.n	8005162 <xTimerGenericCommand+0x2e>
 800514c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005150:	f383 8811 	msr	BASEPRI, r3
 8005154:	f3bf 8f6f 	isb	sy
 8005158:	f3bf 8f4f 	dsb	sy
 800515c:	623b      	str	r3, [r7, #32]
 800515e:	bf00      	nop
 8005160:	e7fe      	b.n	8005160 <xTimerGenericCommand+0x2c>
 8005162:	4b1a      	ldr	r3, [pc, #104]	; (80051cc <xTimerGenericCommand+0x98>)
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	2b00      	cmp	r3, #0
 8005168:	d02a      	beq.n	80051c0 <xTimerGenericCommand+0x8c>
 800516a:	68bb      	ldr	r3, [r7, #8]
 800516c:	613b      	str	r3, [r7, #16]
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	617b      	str	r3, [r7, #20]
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	61bb      	str	r3, [r7, #24]
 8005176:	68bb      	ldr	r3, [r7, #8]
 8005178:	2b05      	cmp	r3, #5
 800517a:	dc18      	bgt.n	80051ae <xTimerGenericCommand+0x7a>
 800517c:	f7ff fe9a 	bl	8004eb4 <xTaskGetSchedulerState>
 8005180:	4603      	mov	r3, r0
 8005182:	2b02      	cmp	r3, #2
 8005184:	d109      	bne.n	800519a <xTimerGenericCommand+0x66>
 8005186:	4b11      	ldr	r3, [pc, #68]	; (80051cc <xTimerGenericCommand+0x98>)
 8005188:	6818      	ldr	r0, [r3, #0]
 800518a:	f107 0110 	add.w	r1, r7, #16
 800518e:	2300      	movs	r3, #0
 8005190:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005192:	f7fe fb75 	bl	8003880 <xQueueGenericSend>
 8005196:	6278      	str	r0, [r7, #36]	; 0x24
 8005198:	e012      	b.n	80051c0 <xTimerGenericCommand+0x8c>
 800519a:	4b0c      	ldr	r3, [pc, #48]	; (80051cc <xTimerGenericCommand+0x98>)
 800519c:	6818      	ldr	r0, [r3, #0]
 800519e:	f107 0110 	add.w	r1, r7, #16
 80051a2:	2300      	movs	r3, #0
 80051a4:	2200      	movs	r2, #0
 80051a6:	f7fe fb6b 	bl	8003880 <xQueueGenericSend>
 80051aa:	6278      	str	r0, [r7, #36]	; 0x24
 80051ac:	e008      	b.n	80051c0 <xTimerGenericCommand+0x8c>
 80051ae:	4b07      	ldr	r3, [pc, #28]	; (80051cc <xTimerGenericCommand+0x98>)
 80051b0:	6818      	ldr	r0, [r3, #0]
 80051b2:	f107 0110 	add.w	r1, r7, #16
 80051b6:	2300      	movs	r3, #0
 80051b8:	683a      	ldr	r2, [r7, #0]
 80051ba:	f7fe fc5f 	bl	8003a7c <xQueueGenericSendFromISR>
 80051be:	6278      	str	r0, [r7, #36]	; 0x24
 80051c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80051c2:	4618      	mov	r0, r3
 80051c4:	3728      	adds	r7, #40	; 0x28
 80051c6:	46bd      	mov	sp, r7
 80051c8:	bd80      	pop	{r7, pc}
 80051ca:	bf00      	nop
 80051cc:	20000e70 	.word	0x20000e70

080051d0 <prvProcessExpiredTimer>:
 80051d0:	b580      	push	{r7, lr}
 80051d2:	b088      	sub	sp, #32
 80051d4:	af02      	add	r7, sp, #8
 80051d6:	6078      	str	r0, [r7, #4]
 80051d8:	6039      	str	r1, [r7, #0]
 80051da:	4b22      	ldr	r3, [pc, #136]	; (8005264 <prvProcessExpiredTimer+0x94>)
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	68db      	ldr	r3, [r3, #12]
 80051e0:	68db      	ldr	r3, [r3, #12]
 80051e2:	617b      	str	r3, [r7, #20]
 80051e4:	697b      	ldr	r3, [r7, #20]
 80051e6:	3304      	adds	r3, #4
 80051e8:	4618      	mov	r0, r3
 80051ea:	f7fe f9e1 	bl	80035b0 <uxListRemove>
 80051ee:	697b      	ldr	r3, [r7, #20]
 80051f0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80051f4:	f003 0304 	and.w	r3, r3, #4
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d022      	beq.n	8005242 <prvProcessExpiredTimer+0x72>
 80051fc:	697b      	ldr	r3, [r7, #20]
 80051fe:	699a      	ldr	r2, [r3, #24]
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	18d1      	adds	r1, r2, r3
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	683a      	ldr	r2, [r7, #0]
 8005208:	6978      	ldr	r0, [r7, #20]
 800520a:	f000 f8d1 	bl	80053b0 <prvInsertTimerInActiveList>
 800520e:	4603      	mov	r3, r0
 8005210:	2b00      	cmp	r3, #0
 8005212:	d01f      	beq.n	8005254 <prvProcessExpiredTimer+0x84>
 8005214:	2300      	movs	r3, #0
 8005216:	9300      	str	r3, [sp, #0]
 8005218:	2300      	movs	r3, #0
 800521a:	687a      	ldr	r2, [r7, #4]
 800521c:	2100      	movs	r1, #0
 800521e:	6978      	ldr	r0, [r7, #20]
 8005220:	f7ff ff88 	bl	8005134 <xTimerGenericCommand>
 8005224:	6138      	str	r0, [r7, #16]
 8005226:	693b      	ldr	r3, [r7, #16]
 8005228:	2b00      	cmp	r3, #0
 800522a:	d113      	bne.n	8005254 <prvProcessExpiredTimer+0x84>
 800522c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005230:	f383 8811 	msr	BASEPRI, r3
 8005234:	f3bf 8f6f 	isb	sy
 8005238:	f3bf 8f4f 	dsb	sy
 800523c:	60fb      	str	r3, [r7, #12]
 800523e:	bf00      	nop
 8005240:	e7fe      	b.n	8005240 <prvProcessExpiredTimer+0x70>
 8005242:	697b      	ldr	r3, [r7, #20]
 8005244:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005248:	f023 0301 	bic.w	r3, r3, #1
 800524c:	b2da      	uxtb	r2, r3
 800524e:	697b      	ldr	r3, [r7, #20]
 8005250:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005254:	697b      	ldr	r3, [r7, #20]
 8005256:	6a1b      	ldr	r3, [r3, #32]
 8005258:	6978      	ldr	r0, [r7, #20]
 800525a:	4798      	blx	r3
 800525c:	bf00      	nop
 800525e:	3718      	adds	r7, #24
 8005260:	46bd      	mov	sp, r7
 8005262:	bd80      	pop	{r7, pc}
 8005264:	20000e68 	.word	0x20000e68

08005268 <prvTimerTask>:
 8005268:	b580      	push	{r7, lr}
 800526a:	b084      	sub	sp, #16
 800526c:	af00      	add	r7, sp, #0
 800526e:	6078      	str	r0, [r7, #4]
 8005270:	f107 0308 	add.w	r3, r7, #8
 8005274:	4618      	mov	r0, r3
 8005276:	f000 f857 	bl	8005328 <prvGetNextExpireTime>
 800527a:	60f8      	str	r0, [r7, #12]
 800527c:	68bb      	ldr	r3, [r7, #8]
 800527e:	4619      	mov	r1, r3
 8005280:	68f8      	ldr	r0, [r7, #12]
 8005282:	f000 f803 	bl	800528c <prvProcessTimerOrBlockTask>
 8005286:	f000 f8d5 	bl	8005434 <prvProcessReceivedCommands>
 800528a:	e7f1      	b.n	8005270 <prvTimerTask+0x8>

0800528c <prvProcessTimerOrBlockTask>:
 800528c:	b580      	push	{r7, lr}
 800528e:	b084      	sub	sp, #16
 8005290:	af00      	add	r7, sp, #0
 8005292:	6078      	str	r0, [r7, #4]
 8005294:	6039      	str	r1, [r7, #0]
 8005296:	f7ff f983 	bl	80045a0 <vTaskSuspendAll>
 800529a:	f107 0308 	add.w	r3, r7, #8
 800529e:	4618      	mov	r0, r3
 80052a0:	f000 f866 	bl	8005370 <prvSampleTimeNow>
 80052a4:	60f8      	str	r0, [r7, #12]
 80052a6:	68bb      	ldr	r3, [r7, #8]
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d130      	bne.n	800530e <prvProcessTimerOrBlockTask+0x82>
 80052ac:	683b      	ldr	r3, [r7, #0]
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d10a      	bne.n	80052c8 <prvProcessTimerOrBlockTask+0x3c>
 80052b2:	687a      	ldr	r2, [r7, #4]
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	429a      	cmp	r2, r3
 80052b8:	d806      	bhi.n	80052c8 <prvProcessTimerOrBlockTask+0x3c>
 80052ba:	f7ff f97f 	bl	80045bc <xTaskResumeAll>
 80052be:	68f9      	ldr	r1, [r7, #12]
 80052c0:	6878      	ldr	r0, [r7, #4]
 80052c2:	f7ff ff85 	bl	80051d0 <prvProcessExpiredTimer>
 80052c6:	e024      	b.n	8005312 <prvProcessTimerOrBlockTask+0x86>
 80052c8:	683b      	ldr	r3, [r7, #0]
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d008      	beq.n	80052e0 <prvProcessTimerOrBlockTask+0x54>
 80052ce:	4b13      	ldr	r3, [pc, #76]	; (800531c <prvProcessTimerOrBlockTask+0x90>)
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d101      	bne.n	80052dc <prvProcessTimerOrBlockTask+0x50>
 80052d8:	2301      	movs	r3, #1
 80052da:	e000      	b.n	80052de <prvProcessTimerOrBlockTask+0x52>
 80052dc:	2300      	movs	r3, #0
 80052de:	603b      	str	r3, [r7, #0]
 80052e0:	4b0f      	ldr	r3, [pc, #60]	; (8005320 <prvProcessTimerOrBlockTask+0x94>)
 80052e2:	6818      	ldr	r0, [r3, #0]
 80052e4:	687a      	ldr	r2, [r7, #4]
 80052e6:	68fb      	ldr	r3, [r7, #12]
 80052e8:	1ad3      	subs	r3, r2, r3
 80052ea:	683a      	ldr	r2, [r7, #0]
 80052ec:	4619      	mov	r1, r3
 80052ee:	f7fe fefb 	bl	80040e8 <vQueueWaitForMessageRestricted>
 80052f2:	f7ff f963 	bl	80045bc <xTaskResumeAll>
 80052f6:	4603      	mov	r3, r0
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d10a      	bne.n	8005312 <prvProcessTimerOrBlockTask+0x86>
 80052fc:	4b09      	ldr	r3, [pc, #36]	; (8005324 <prvProcessTimerOrBlockTask+0x98>)
 80052fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005302:	601a      	str	r2, [r3, #0]
 8005304:	f3bf 8f4f 	dsb	sy
 8005308:	f3bf 8f6f 	isb	sy
 800530c:	e001      	b.n	8005312 <prvProcessTimerOrBlockTask+0x86>
 800530e:	f7ff f955 	bl	80045bc <xTaskResumeAll>
 8005312:	bf00      	nop
 8005314:	3710      	adds	r7, #16
 8005316:	46bd      	mov	sp, r7
 8005318:	bd80      	pop	{r7, pc}
 800531a:	bf00      	nop
 800531c:	20000e6c 	.word	0x20000e6c
 8005320:	20000e70 	.word	0x20000e70
 8005324:	e000ed04 	.word	0xe000ed04

08005328 <prvGetNextExpireTime>:
 8005328:	b480      	push	{r7}
 800532a:	b085      	sub	sp, #20
 800532c:	af00      	add	r7, sp, #0
 800532e:	6078      	str	r0, [r7, #4]
 8005330:	4b0e      	ldr	r3, [pc, #56]	; (800536c <prvGetNextExpireTime+0x44>)
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	2b00      	cmp	r3, #0
 8005338:	d101      	bne.n	800533e <prvGetNextExpireTime+0x16>
 800533a:	2201      	movs	r2, #1
 800533c:	e000      	b.n	8005340 <prvGetNextExpireTime+0x18>
 800533e:	2200      	movs	r2, #0
 8005340:	687b      	ldr	r3, [r7, #4]
 8005342:	601a      	str	r2, [r3, #0]
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	2b00      	cmp	r3, #0
 800534a:	d105      	bne.n	8005358 <prvGetNextExpireTime+0x30>
 800534c:	4b07      	ldr	r3, [pc, #28]	; (800536c <prvGetNextExpireTime+0x44>)
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	68db      	ldr	r3, [r3, #12]
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	60fb      	str	r3, [r7, #12]
 8005356:	e001      	b.n	800535c <prvGetNextExpireTime+0x34>
 8005358:	2300      	movs	r3, #0
 800535a:	60fb      	str	r3, [r7, #12]
 800535c:	68fb      	ldr	r3, [r7, #12]
 800535e:	4618      	mov	r0, r3
 8005360:	3714      	adds	r7, #20
 8005362:	46bd      	mov	sp, r7
 8005364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005368:	4770      	bx	lr
 800536a:	bf00      	nop
 800536c:	20000e68 	.word	0x20000e68

08005370 <prvSampleTimeNow>:
 8005370:	b580      	push	{r7, lr}
 8005372:	b084      	sub	sp, #16
 8005374:	af00      	add	r7, sp, #0
 8005376:	6078      	str	r0, [r7, #4]
 8005378:	f7ff f9be 	bl	80046f8 <xTaskGetTickCount>
 800537c:	60f8      	str	r0, [r7, #12]
 800537e:	4b0b      	ldr	r3, [pc, #44]	; (80053ac <prvSampleTimeNow+0x3c>)
 8005380:	681b      	ldr	r3, [r3, #0]
 8005382:	68fa      	ldr	r2, [r7, #12]
 8005384:	429a      	cmp	r2, r3
 8005386:	d205      	bcs.n	8005394 <prvSampleTimeNow+0x24>
 8005388:	f000 f936 	bl	80055f8 <prvSwitchTimerLists>
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	2201      	movs	r2, #1
 8005390:	601a      	str	r2, [r3, #0]
 8005392:	e002      	b.n	800539a <prvSampleTimeNow+0x2a>
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	2200      	movs	r2, #0
 8005398:	601a      	str	r2, [r3, #0]
 800539a:	4a04      	ldr	r2, [pc, #16]	; (80053ac <prvSampleTimeNow+0x3c>)
 800539c:	68fb      	ldr	r3, [r7, #12]
 800539e:	6013      	str	r3, [r2, #0]
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	4618      	mov	r0, r3
 80053a4:	3710      	adds	r7, #16
 80053a6:	46bd      	mov	sp, r7
 80053a8:	bd80      	pop	{r7, pc}
 80053aa:	bf00      	nop
 80053ac:	20000e78 	.word	0x20000e78

080053b0 <prvInsertTimerInActiveList>:
 80053b0:	b580      	push	{r7, lr}
 80053b2:	b086      	sub	sp, #24
 80053b4:	af00      	add	r7, sp, #0
 80053b6:	60f8      	str	r0, [r7, #12]
 80053b8:	60b9      	str	r1, [r7, #8]
 80053ba:	607a      	str	r2, [r7, #4]
 80053bc:	603b      	str	r3, [r7, #0]
 80053be:	2300      	movs	r3, #0
 80053c0:	617b      	str	r3, [r7, #20]
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	68ba      	ldr	r2, [r7, #8]
 80053c6:	605a      	str	r2, [r3, #4]
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	68fa      	ldr	r2, [r7, #12]
 80053cc:	611a      	str	r2, [r3, #16]
 80053ce:	68ba      	ldr	r2, [r7, #8]
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	429a      	cmp	r2, r3
 80053d4:	d812      	bhi.n	80053fc <prvInsertTimerInActiveList+0x4c>
 80053d6:	687a      	ldr	r2, [r7, #4]
 80053d8:	683b      	ldr	r3, [r7, #0]
 80053da:	1ad2      	subs	r2, r2, r3
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	699b      	ldr	r3, [r3, #24]
 80053e0:	429a      	cmp	r2, r3
 80053e2:	d302      	bcc.n	80053ea <prvInsertTimerInActiveList+0x3a>
 80053e4:	2301      	movs	r3, #1
 80053e6:	617b      	str	r3, [r7, #20]
 80053e8:	e01b      	b.n	8005422 <prvInsertTimerInActiveList+0x72>
 80053ea:	4b10      	ldr	r3, [pc, #64]	; (800542c <prvInsertTimerInActiveList+0x7c>)
 80053ec:	681a      	ldr	r2, [r3, #0]
 80053ee:	68fb      	ldr	r3, [r7, #12]
 80053f0:	3304      	adds	r3, #4
 80053f2:	4619      	mov	r1, r3
 80053f4:	4610      	mov	r0, r2
 80053f6:	f7fe f8a2 	bl	800353e <vListInsert>
 80053fa:	e012      	b.n	8005422 <prvInsertTimerInActiveList+0x72>
 80053fc:	687a      	ldr	r2, [r7, #4]
 80053fe:	683b      	ldr	r3, [r7, #0]
 8005400:	429a      	cmp	r2, r3
 8005402:	d206      	bcs.n	8005412 <prvInsertTimerInActiveList+0x62>
 8005404:	68ba      	ldr	r2, [r7, #8]
 8005406:	683b      	ldr	r3, [r7, #0]
 8005408:	429a      	cmp	r2, r3
 800540a:	d302      	bcc.n	8005412 <prvInsertTimerInActiveList+0x62>
 800540c:	2301      	movs	r3, #1
 800540e:	617b      	str	r3, [r7, #20]
 8005410:	e007      	b.n	8005422 <prvInsertTimerInActiveList+0x72>
 8005412:	4b07      	ldr	r3, [pc, #28]	; (8005430 <prvInsertTimerInActiveList+0x80>)
 8005414:	681a      	ldr	r2, [r3, #0]
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	3304      	adds	r3, #4
 800541a:	4619      	mov	r1, r3
 800541c:	4610      	mov	r0, r2
 800541e:	f7fe f88e 	bl	800353e <vListInsert>
 8005422:	697b      	ldr	r3, [r7, #20]
 8005424:	4618      	mov	r0, r3
 8005426:	3718      	adds	r7, #24
 8005428:	46bd      	mov	sp, r7
 800542a:	bd80      	pop	{r7, pc}
 800542c:	20000e6c 	.word	0x20000e6c
 8005430:	20000e68 	.word	0x20000e68

08005434 <prvProcessReceivedCommands>:
 8005434:	b580      	push	{r7, lr}
 8005436:	b08e      	sub	sp, #56	; 0x38
 8005438:	af02      	add	r7, sp, #8
 800543a:	e0ca      	b.n	80055d2 <prvProcessReceivedCommands+0x19e>
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	2b00      	cmp	r3, #0
 8005440:	da18      	bge.n	8005474 <prvProcessReceivedCommands+0x40>
 8005442:	1d3b      	adds	r3, r7, #4
 8005444:	3304      	adds	r3, #4
 8005446:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005448:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800544a:	2b00      	cmp	r3, #0
 800544c:	d10a      	bne.n	8005464 <prvProcessReceivedCommands+0x30>
 800544e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005452:	f383 8811 	msr	BASEPRI, r3
 8005456:	f3bf 8f6f 	isb	sy
 800545a:	f3bf 8f4f 	dsb	sy
 800545e:	61fb      	str	r3, [r7, #28]
 8005460:	bf00      	nop
 8005462:	e7fe      	b.n	8005462 <prvProcessReceivedCommands+0x2e>
 8005464:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800546a:	6850      	ldr	r0, [r2, #4]
 800546c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800546e:	6892      	ldr	r2, [r2, #8]
 8005470:	4611      	mov	r1, r2
 8005472:	4798      	blx	r3
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	2b00      	cmp	r3, #0
 8005478:	f2c0 80ab 	blt.w	80055d2 <prvProcessReceivedCommands+0x19e>
 800547c:	68fb      	ldr	r3, [r7, #12]
 800547e:	62bb      	str	r3, [r7, #40]	; 0x28
 8005480:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005482:	695b      	ldr	r3, [r3, #20]
 8005484:	2b00      	cmp	r3, #0
 8005486:	d004      	beq.n	8005492 <prvProcessReceivedCommands+0x5e>
 8005488:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800548a:	3304      	adds	r3, #4
 800548c:	4618      	mov	r0, r3
 800548e:	f7fe f88f 	bl	80035b0 <uxListRemove>
 8005492:	463b      	mov	r3, r7
 8005494:	4618      	mov	r0, r3
 8005496:	f7ff ff6b 	bl	8005370 <prvSampleTimeNow>
 800549a:	6278      	str	r0, [r7, #36]	; 0x24
 800549c:	687b      	ldr	r3, [r7, #4]
 800549e:	2b09      	cmp	r3, #9
 80054a0:	f200 8096 	bhi.w	80055d0 <prvProcessReceivedCommands+0x19c>
 80054a4:	a201      	add	r2, pc, #4	; (adr r2, 80054ac <prvProcessReceivedCommands+0x78>)
 80054a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054aa:	bf00      	nop
 80054ac:	080054d5 	.word	0x080054d5
 80054b0:	080054d5 	.word	0x080054d5
 80054b4:	080054d5 	.word	0x080054d5
 80054b8:	08005549 	.word	0x08005549
 80054bc:	0800555d 	.word	0x0800555d
 80054c0:	080055a7 	.word	0x080055a7
 80054c4:	080054d5 	.word	0x080054d5
 80054c8:	080054d5 	.word	0x080054d5
 80054cc:	08005549 	.word	0x08005549
 80054d0:	0800555d 	.word	0x0800555d
 80054d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80054d6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80054da:	f043 0301 	orr.w	r3, r3, #1
 80054de:	b2da      	uxtb	r2, r3
 80054e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80054e2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80054e6:	68ba      	ldr	r2, [r7, #8]
 80054e8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80054ea:	699b      	ldr	r3, [r3, #24]
 80054ec:	18d1      	adds	r1, r2, r3
 80054ee:	68bb      	ldr	r3, [r7, #8]
 80054f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80054f2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80054f4:	f7ff ff5c 	bl	80053b0 <prvInsertTimerInActiveList>
 80054f8:	4603      	mov	r3, r0
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d069      	beq.n	80055d2 <prvProcessReceivedCommands+0x19e>
 80054fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005500:	6a1b      	ldr	r3, [r3, #32]
 8005502:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005504:	4798      	blx	r3
 8005506:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005508:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800550c:	f003 0304 	and.w	r3, r3, #4
 8005510:	2b00      	cmp	r3, #0
 8005512:	d05e      	beq.n	80055d2 <prvProcessReceivedCommands+0x19e>
 8005514:	68ba      	ldr	r2, [r7, #8]
 8005516:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005518:	699b      	ldr	r3, [r3, #24]
 800551a:	441a      	add	r2, r3
 800551c:	2300      	movs	r3, #0
 800551e:	9300      	str	r3, [sp, #0]
 8005520:	2300      	movs	r3, #0
 8005522:	2100      	movs	r1, #0
 8005524:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005526:	f7ff fe05 	bl	8005134 <xTimerGenericCommand>
 800552a:	6238      	str	r0, [r7, #32]
 800552c:	6a3b      	ldr	r3, [r7, #32]
 800552e:	2b00      	cmp	r3, #0
 8005530:	d14f      	bne.n	80055d2 <prvProcessReceivedCommands+0x19e>
 8005532:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005536:	f383 8811 	msr	BASEPRI, r3
 800553a:	f3bf 8f6f 	isb	sy
 800553e:	f3bf 8f4f 	dsb	sy
 8005542:	61bb      	str	r3, [r7, #24]
 8005544:	bf00      	nop
 8005546:	e7fe      	b.n	8005546 <prvProcessReceivedCommands+0x112>
 8005548:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800554a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800554e:	f023 0301 	bic.w	r3, r3, #1
 8005552:	b2da      	uxtb	r2, r3
 8005554:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005556:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800555a:	e03a      	b.n	80055d2 <prvProcessReceivedCommands+0x19e>
 800555c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800555e:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005562:	f043 0301 	orr.w	r3, r3, #1
 8005566:	b2da      	uxtb	r2, r3
 8005568:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800556a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800556e:	68ba      	ldr	r2, [r7, #8]
 8005570:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005572:	619a      	str	r2, [r3, #24]
 8005574:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005576:	699b      	ldr	r3, [r3, #24]
 8005578:	2b00      	cmp	r3, #0
 800557a:	d10a      	bne.n	8005592 <prvProcessReceivedCommands+0x15e>
 800557c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005580:	f383 8811 	msr	BASEPRI, r3
 8005584:	f3bf 8f6f 	isb	sy
 8005588:	f3bf 8f4f 	dsb	sy
 800558c:	617b      	str	r3, [r7, #20]
 800558e:	bf00      	nop
 8005590:	e7fe      	b.n	8005590 <prvProcessReceivedCommands+0x15c>
 8005592:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005594:	699a      	ldr	r2, [r3, #24]
 8005596:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005598:	18d1      	adds	r1, r2, r3
 800559a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800559c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800559e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80055a0:	f7ff ff06 	bl	80053b0 <prvInsertTimerInActiveList>
 80055a4:	e015      	b.n	80055d2 <prvProcessReceivedCommands+0x19e>
 80055a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80055a8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80055ac:	f003 0302 	and.w	r3, r3, #2
 80055b0:	2b00      	cmp	r3, #0
 80055b2:	d103      	bne.n	80055bc <prvProcessReceivedCommands+0x188>
 80055b4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80055b6:	f000 fbfb 	bl	8005db0 <vPortFree>
 80055ba:	e00a      	b.n	80055d2 <prvProcessReceivedCommands+0x19e>
 80055bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80055be:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80055c2:	f023 0301 	bic.w	r3, r3, #1
 80055c6:	b2da      	uxtb	r2, r3
 80055c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80055ca:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80055ce:	e000      	b.n	80055d2 <prvProcessReceivedCommands+0x19e>
 80055d0:	bf00      	nop
 80055d2:	4b08      	ldr	r3, [pc, #32]	; (80055f4 <prvProcessReceivedCommands+0x1c0>)
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	1d39      	adds	r1, r7, #4
 80055d8:	2200      	movs	r2, #0
 80055da:	4618      	mov	r0, r3
 80055dc:	f7fe faea 	bl	8003bb4 <xQueueReceive>
 80055e0:	4603      	mov	r3, r0
 80055e2:	2b00      	cmp	r3, #0
 80055e4:	f47f af2a 	bne.w	800543c <prvProcessReceivedCommands+0x8>
 80055e8:	bf00      	nop
 80055ea:	bf00      	nop
 80055ec:	3730      	adds	r7, #48	; 0x30
 80055ee:	46bd      	mov	sp, r7
 80055f0:	bd80      	pop	{r7, pc}
 80055f2:	bf00      	nop
 80055f4:	20000e70 	.word	0x20000e70

080055f8 <prvSwitchTimerLists>:
 80055f8:	b580      	push	{r7, lr}
 80055fa:	b088      	sub	sp, #32
 80055fc:	af02      	add	r7, sp, #8
 80055fe:	e048      	b.n	8005692 <prvSwitchTimerLists+0x9a>
 8005600:	4b2d      	ldr	r3, [pc, #180]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	68db      	ldr	r3, [r3, #12]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	613b      	str	r3, [r7, #16]
 800560a:	4b2b      	ldr	r3, [pc, #172]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 800560c:	681b      	ldr	r3, [r3, #0]
 800560e:	68db      	ldr	r3, [r3, #12]
 8005610:	68db      	ldr	r3, [r3, #12]
 8005612:	60fb      	str	r3, [r7, #12]
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	3304      	adds	r3, #4
 8005618:	4618      	mov	r0, r3
 800561a:	f7fd ffc9 	bl	80035b0 <uxListRemove>
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	6a1b      	ldr	r3, [r3, #32]
 8005622:	68f8      	ldr	r0, [r7, #12]
 8005624:	4798      	blx	r3
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800562c:	f003 0304 	and.w	r3, r3, #4
 8005630:	2b00      	cmp	r3, #0
 8005632:	d02e      	beq.n	8005692 <prvSwitchTimerLists+0x9a>
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	699b      	ldr	r3, [r3, #24]
 8005638:	693a      	ldr	r2, [r7, #16]
 800563a:	4413      	add	r3, r2
 800563c:	60bb      	str	r3, [r7, #8]
 800563e:	68ba      	ldr	r2, [r7, #8]
 8005640:	693b      	ldr	r3, [r7, #16]
 8005642:	429a      	cmp	r2, r3
 8005644:	d90e      	bls.n	8005664 <prvSwitchTimerLists+0x6c>
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	68ba      	ldr	r2, [r7, #8]
 800564a:	605a      	str	r2, [r3, #4]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	68fa      	ldr	r2, [r7, #12]
 8005650:	611a      	str	r2, [r3, #16]
 8005652:	4b19      	ldr	r3, [pc, #100]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 8005654:	681a      	ldr	r2, [r3, #0]
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	3304      	adds	r3, #4
 800565a:	4619      	mov	r1, r3
 800565c:	4610      	mov	r0, r2
 800565e:	f7fd ff6e 	bl	800353e <vListInsert>
 8005662:	e016      	b.n	8005692 <prvSwitchTimerLists+0x9a>
 8005664:	2300      	movs	r3, #0
 8005666:	9300      	str	r3, [sp, #0]
 8005668:	2300      	movs	r3, #0
 800566a:	693a      	ldr	r2, [r7, #16]
 800566c:	2100      	movs	r1, #0
 800566e:	68f8      	ldr	r0, [r7, #12]
 8005670:	f7ff fd60 	bl	8005134 <xTimerGenericCommand>
 8005674:	6078      	str	r0, [r7, #4]
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	2b00      	cmp	r3, #0
 800567a:	d10a      	bne.n	8005692 <prvSwitchTimerLists+0x9a>
 800567c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005680:	f383 8811 	msr	BASEPRI, r3
 8005684:	f3bf 8f6f 	isb	sy
 8005688:	f3bf 8f4f 	dsb	sy
 800568c:	603b      	str	r3, [r7, #0]
 800568e:	bf00      	nop
 8005690:	e7fe      	b.n	8005690 <prvSwitchTimerLists+0x98>
 8005692:	4b09      	ldr	r3, [pc, #36]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	2b00      	cmp	r3, #0
 800569a:	d1b1      	bne.n	8005600 <prvSwitchTimerLists+0x8>
 800569c:	4b06      	ldr	r3, [pc, #24]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	617b      	str	r3, [r7, #20]
 80056a2:	4b06      	ldr	r3, [pc, #24]	; (80056bc <prvSwitchTimerLists+0xc4>)
 80056a4:	681b      	ldr	r3, [r3, #0]
 80056a6:	4a04      	ldr	r2, [pc, #16]	; (80056b8 <prvSwitchTimerLists+0xc0>)
 80056a8:	6013      	str	r3, [r2, #0]
 80056aa:	4a04      	ldr	r2, [pc, #16]	; (80056bc <prvSwitchTimerLists+0xc4>)
 80056ac:	697b      	ldr	r3, [r7, #20]
 80056ae:	6013      	str	r3, [r2, #0]
 80056b0:	bf00      	nop
 80056b2:	3718      	adds	r7, #24
 80056b4:	46bd      	mov	sp, r7
 80056b6:	bd80      	pop	{r7, pc}
 80056b8:	20000e68 	.word	0x20000e68
 80056bc:	20000e6c 	.word	0x20000e6c

080056c0 <prvCheckForValidListAndQueue>:
 80056c0:	b580      	push	{r7, lr}
 80056c2:	b082      	sub	sp, #8
 80056c4:	af02      	add	r7, sp, #8
 80056c6:	f000 f985 	bl	80059d4 <vPortEnterCritical>
 80056ca:	4b15      	ldr	r3, [pc, #84]	; (8005720 <prvCheckForValidListAndQueue+0x60>)
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	d120      	bne.n	8005714 <prvCheckForValidListAndQueue+0x54>
 80056d2:	4814      	ldr	r0, [pc, #80]	; (8005724 <prvCheckForValidListAndQueue+0x64>)
 80056d4:	f7fd fee2 	bl	800349c <vListInitialise>
 80056d8:	4813      	ldr	r0, [pc, #76]	; (8005728 <prvCheckForValidListAndQueue+0x68>)
 80056da:	f7fd fedf 	bl	800349c <vListInitialise>
 80056de:	4b13      	ldr	r3, [pc, #76]	; (800572c <prvCheckForValidListAndQueue+0x6c>)
 80056e0:	4a10      	ldr	r2, [pc, #64]	; (8005724 <prvCheckForValidListAndQueue+0x64>)
 80056e2:	601a      	str	r2, [r3, #0]
 80056e4:	4b12      	ldr	r3, [pc, #72]	; (8005730 <prvCheckForValidListAndQueue+0x70>)
 80056e6:	4a10      	ldr	r2, [pc, #64]	; (8005728 <prvCheckForValidListAndQueue+0x68>)
 80056e8:	601a      	str	r2, [r3, #0]
 80056ea:	2300      	movs	r3, #0
 80056ec:	9300      	str	r3, [sp, #0]
 80056ee:	4b11      	ldr	r3, [pc, #68]	; (8005734 <prvCheckForValidListAndQueue+0x74>)
 80056f0:	4a11      	ldr	r2, [pc, #68]	; (8005738 <prvCheckForValidListAndQueue+0x78>)
 80056f2:	2110      	movs	r1, #16
 80056f4:	200a      	movs	r0, #10
 80056f6:	f7fd ffed 	bl	80036d4 <xQueueGenericCreateStatic>
 80056fa:	4603      	mov	r3, r0
 80056fc:	4a08      	ldr	r2, [pc, #32]	; (8005720 <prvCheckForValidListAndQueue+0x60>)
 80056fe:	6013      	str	r3, [r2, #0]
 8005700:	4b07      	ldr	r3, [pc, #28]	; (8005720 <prvCheckForValidListAndQueue+0x60>)
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	2b00      	cmp	r3, #0
 8005706:	d005      	beq.n	8005714 <prvCheckForValidListAndQueue+0x54>
 8005708:	4b05      	ldr	r3, [pc, #20]	; (8005720 <prvCheckForValidListAndQueue+0x60>)
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	490b      	ldr	r1, [pc, #44]	; (800573c <prvCheckForValidListAndQueue+0x7c>)
 800570e:	4618      	mov	r0, r3
 8005710:	f7fe fcc0 	bl	8004094 <vQueueAddToRegistry>
 8005714:	f000 f98e 	bl	8005a34 <vPortExitCritical>
 8005718:	bf00      	nop
 800571a:	46bd      	mov	sp, r7
 800571c:	bd80      	pop	{r7, pc}
 800571e:	bf00      	nop
 8005720:	20000e70 	.word	0x20000e70
 8005724:	20000e40 	.word	0x20000e40
 8005728:	20000e54 	.word	0x20000e54
 800572c:	20000e68 	.word	0x20000e68
 8005730:	20000e6c 	.word	0x20000e6c
 8005734:	20000f1c 	.word	0x20000f1c
 8005738:	20000e7c 	.word	0x20000e7c
 800573c:	080070b4 	.word	0x080070b4

08005740 <xTimerPendFunctionCallFromISR>:
 8005740:	b580      	push	{r7, lr}
 8005742:	b08a      	sub	sp, #40	; 0x28
 8005744:	af00      	add	r7, sp, #0
 8005746:	60f8      	str	r0, [r7, #12]
 8005748:	60b9      	str	r1, [r7, #8]
 800574a:	607a      	str	r2, [r7, #4]
 800574c:	603b      	str	r3, [r7, #0]
 800574e:	f06f 0301 	mvn.w	r3, #1
 8005752:	617b      	str	r3, [r7, #20]
 8005754:	68fb      	ldr	r3, [r7, #12]
 8005756:	61bb      	str	r3, [r7, #24]
 8005758:	68bb      	ldr	r3, [r7, #8]
 800575a:	61fb      	str	r3, [r7, #28]
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	623b      	str	r3, [r7, #32]
 8005760:	4b06      	ldr	r3, [pc, #24]	; (800577c <xTimerPendFunctionCallFromISR+0x3c>)
 8005762:	6818      	ldr	r0, [r3, #0]
 8005764:	f107 0114 	add.w	r1, r7, #20
 8005768:	2300      	movs	r3, #0
 800576a:	683a      	ldr	r2, [r7, #0]
 800576c:	f7fe f986 	bl	8003a7c <xQueueGenericSendFromISR>
 8005770:	6278      	str	r0, [r7, #36]	; 0x24
 8005772:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005774:	4618      	mov	r0, r3
 8005776:	3728      	adds	r7, #40	; 0x28
 8005778:	46bd      	mov	sp, r7
 800577a:	bd80      	pop	{r7, pc}
 800577c:	20000e70 	.word	0x20000e70

08005780 <pxPortInitialiseStack>:
 8005780:	b480      	push	{r7}
 8005782:	b085      	sub	sp, #20
 8005784:	af00      	add	r7, sp, #0
 8005786:	60f8      	str	r0, [r7, #12]
 8005788:	60b9      	str	r1, [r7, #8]
 800578a:	607a      	str	r2, [r7, #4]
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	3b04      	subs	r3, #4
 8005790:	60fb      	str	r3, [r7, #12]
 8005792:	68fb      	ldr	r3, [r7, #12]
 8005794:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8005798:	601a      	str	r2, [r3, #0]
 800579a:	68fb      	ldr	r3, [r7, #12]
 800579c:	3b04      	subs	r3, #4
 800579e:	60fb      	str	r3, [r7, #12]
 80057a0:	68bb      	ldr	r3, [r7, #8]
 80057a2:	f023 0201 	bic.w	r2, r3, #1
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	601a      	str	r2, [r3, #0]
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	3b04      	subs	r3, #4
 80057ae:	60fb      	str	r3, [r7, #12]
 80057b0:	4a0c      	ldr	r2, [pc, #48]	; (80057e4 <pxPortInitialiseStack+0x64>)
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	601a      	str	r2, [r3, #0]
 80057b6:	68fb      	ldr	r3, [r7, #12]
 80057b8:	3b14      	subs	r3, #20
 80057ba:	60fb      	str	r3, [r7, #12]
 80057bc:	687a      	ldr	r2, [r7, #4]
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	601a      	str	r2, [r3, #0]
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	3b04      	subs	r3, #4
 80057c6:	60fb      	str	r3, [r7, #12]
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	f06f 0202 	mvn.w	r2, #2
 80057ce:	601a      	str	r2, [r3, #0]
 80057d0:	68fb      	ldr	r3, [r7, #12]
 80057d2:	3b20      	subs	r3, #32
 80057d4:	60fb      	str	r3, [r7, #12]
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	4618      	mov	r0, r3
 80057da:	3714      	adds	r7, #20
 80057dc:	46bd      	mov	sp, r7
 80057de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e2:	4770      	bx	lr
 80057e4:	080057e9 	.word	0x080057e9

080057e8 <prvTaskExitError>:
 80057e8:	b480      	push	{r7}
 80057ea:	b085      	sub	sp, #20
 80057ec:	af00      	add	r7, sp, #0
 80057ee:	2300      	movs	r3, #0
 80057f0:	607b      	str	r3, [r7, #4]
 80057f2:	4b12      	ldr	r3, [pc, #72]	; (800583c <prvTaskExitError+0x54>)
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80057fa:	d00a      	beq.n	8005812 <prvTaskExitError+0x2a>
 80057fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005800:	f383 8811 	msr	BASEPRI, r3
 8005804:	f3bf 8f6f 	isb	sy
 8005808:	f3bf 8f4f 	dsb	sy
 800580c:	60fb      	str	r3, [r7, #12]
 800580e:	bf00      	nop
 8005810:	e7fe      	b.n	8005810 <prvTaskExitError+0x28>
 8005812:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005816:	f383 8811 	msr	BASEPRI, r3
 800581a:	f3bf 8f6f 	isb	sy
 800581e:	f3bf 8f4f 	dsb	sy
 8005822:	60bb      	str	r3, [r7, #8]
 8005824:	bf00      	nop
 8005826:	bf00      	nop
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	2b00      	cmp	r3, #0
 800582c:	d0fc      	beq.n	8005828 <prvTaskExitError+0x40>
 800582e:	bf00      	nop
 8005830:	bf00      	nop
 8005832:	3714      	adds	r7, #20
 8005834:	46bd      	mov	sp, r7
 8005836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800583a:	4770      	bx	lr
 800583c:	20000034 	.word	0x20000034

08005840 <SVC_Handler>:
 8005840:	4b07      	ldr	r3, [pc, #28]	; (8005860 <pxCurrentTCBConst2>)
 8005842:	6819      	ldr	r1, [r3, #0]
 8005844:	6808      	ldr	r0, [r1, #0]
 8005846:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800584a:	f380 8809 	msr	PSP, r0
 800584e:	f3bf 8f6f 	isb	sy
 8005852:	f04f 0000 	mov.w	r0, #0
 8005856:	f380 8811 	msr	BASEPRI, r0
 800585a:	4770      	bx	lr
 800585c:	f3af 8000 	nop.w

08005860 <pxCurrentTCBConst2>:
 8005860:	20000940 	.word	0x20000940
 8005864:	bf00      	nop
 8005866:	bf00      	nop

08005868 <prvPortStartFirstTask>:
 8005868:	4808      	ldr	r0, [pc, #32]	; (800588c <prvPortStartFirstTask+0x24>)
 800586a:	6800      	ldr	r0, [r0, #0]
 800586c:	6800      	ldr	r0, [r0, #0]
 800586e:	f380 8808 	msr	MSP, r0
 8005872:	f04f 0000 	mov.w	r0, #0
 8005876:	f380 8814 	msr	CONTROL, r0
 800587a:	b662      	cpsie	i
 800587c:	b661      	cpsie	f
 800587e:	f3bf 8f4f 	dsb	sy
 8005882:	f3bf 8f6f 	isb	sy
 8005886:	df00      	svc	0
 8005888:	bf00      	nop
 800588a:	bf00      	nop
 800588c:	e000ed08 	.word	0xe000ed08

08005890 <xPortStartScheduler>:
 8005890:	b580      	push	{r7, lr}
 8005892:	b086      	sub	sp, #24
 8005894:	af00      	add	r7, sp, #0
 8005896:	4b46      	ldr	r3, [pc, #280]	; (80059b0 <xPortStartScheduler+0x120>)
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	4a46      	ldr	r2, [pc, #280]	; (80059b4 <xPortStartScheduler+0x124>)
 800589c:	4293      	cmp	r3, r2
 800589e:	d10a      	bne.n	80058b6 <xPortStartScheduler+0x26>
 80058a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058a4:	f383 8811 	msr	BASEPRI, r3
 80058a8:	f3bf 8f6f 	isb	sy
 80058ac:	f3bf 8f4f 	dsb	sy
 80058b0:	613b      	str	r3, [r7, #16]
 80058b2:	bf00      	nop
 80058b4:	e7fe      	b.n	80058b4 <xPortStartScheduler+0x24>
 80058b6:	4b3e      	ldr	r3, [pc, #248]	; (80059b0 <xPortStartScheduler+0x120>)
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	4a3f      	ldr	r2, [pc, #252]	; (80059b8 <xPortStartScheduler+0x128>)
 80058bc:	4293      	cmp	r3, r2
 80058be:	d10a      	bne.n	80058d6 <xPortStartScheduler+0x46>
 80058c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058c4:	f383 8811 	msr	BASEPRI, r3
 80058c8:	f3bf 8f6f 	isb	sy
 80058cc:	f3bf 8f4f 	dsb	sy
 80058d0:	60fb      	str	r3, [r7, #12]
 80058d2:	bf00      	nop
 80058d4:	e7fe      	b.n	80058d4 <xPortStartScheduler+0x44>
 80058d6:	4b39      	ldr	r3, [pc, #228]	; (80059bc <xPortStartScheduler+0x12c>)
 80058d8:	617b      	str	r3, [r7, #20]
 80058da:	697b      	ldr	r3, [r7, #20]
 80058dc:	781b      	ldrb	r3, [r3, #0]
 80058de:	b2db      	uxtb	r3, r3
 80058e0:	607b      	str	r3, [r7, #4]
 80058e2:	697b      	ldr	r3, [r7, #20]
 80058e4:	22ff      	movs	r2, #255	; 0xff
 80058e6:	701a      	strb	r2, [r3, #0]
 80058e8:	697b      	ldr	r3, [r7, #20]
 80058ea:	781b      	ldrb	r3, [r3, #0]
 80058ec:	b2db      	uxtb	r3, r3
 80058ee:	70fb      	strb	r3, [r7, #3]
 80058f0:	78fb      	ldrb	r3, [r7, #3]
 80058f2:	b2db      	uxtb	r3, r3
 80058f4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80058f8:	b2da      	uxtb	r2, r3
 80058fa:	4b31      	ldr	r3, [pc, #196]	; (80059c0 <xPortStartScheduler+0x130>)
 80058fc:	701a      	strb	r2, [r3, #0]
 80058fe:	4b31      	ldr	r3, [pc, #196]	; (80059c4 <xPortStartScheduler+0x134>)
 8005900:	2207      	movs	r2, #7
 8005902:	601a      	str	r2, [r3, #0]
 8005904:	e009      	b.n	800591a <xPortStartScheduler+0x8a>
 8005906:	4b2f      	ldr	r3, [pc, #188]	; (80059c4 <xPortStartScheduler+0x134>)
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	3b01      	subs	r3, #1
 800590c:	4a2d      	ldr	r2, [pc, #180]	; (80059c4 <xPortStartScheduler+0x134>)
 800590e:	6013      	str	r3, [r2, #0]
 8005910:	78fb      	ldrb	r3, [r7, #3]
 8005912:	b2db      	uxtb	r3, r3
 8005914:	005b      	lsls	r3, r3, #1
 8005916:	b2db      	uxtb	r3, r3
 8005918:	70fb      	strb	r3, [r7, #3]
 800591a:	78fb      	ldrb	r3, [r7, #3]
 800591c:	b2db      	uxtb	r3, r3
 800591e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005922:	2b80      	cmp	r3, #128	; 0x80
 8005924:	d0ef      	beq.n	8005906 <xPortStartScheduler+0x76>
 8005926:	4b27      	ldr	r3, [pc, #156]	; (80059c4 <xPortStartScheduler+0x134>)
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	f1c3 0307 	rsb	r3, r3, #7
 800592e:	2b04      	cmp	r3, #4
 8005930:	d00a      	beq.n	8005948 <xPortStartScheduler+0xb8>
 8005932:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005936:	f383 8811 	msr	BASEPRI, r3
 800593a:	f3bf 8f6f 	isb	sy
 800593e:	f3bf 8f4f 	dsb	sy
 8005942:	60bb      	str	r3, [r7, #8]
 8005944:	bf00      	nop
 8005946:	e7fe      	b.n	8005946 <xPortStartScheduler+0xb6>
 8005948:	4b1e      	ldr	r3, [pc, #120]	; (80059c4 <xPortStartScheduler+0x134>)
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	021b      	lsls	r3, r3, #8
 800594e:	4a1d      	ldr	r2, [pc, #116]	; (80059c4 <xPortStartScheduler+0x134>)
 8005950:	6013      	str	r3, [r2, #0]
 8005952:	4b1c      	ldr	r3, [pc, #112]	; (80059c4 <xPortStartScheduler+0x134>)
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800595a:	4a1a      	ldr	r2, [pc, #104]	; (80059c4 <xPortStartScheduler+0x134>)
 800595c:	6013      	str	r3, [r2, #0]
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	b2da      	uxtb	r2, r3
 8005962:	697b      	ldr	r3, [r7, #20]
 8005964:	701a      	strb	r2, [r3, #0]
 8005966:	4b18      	ldr	r3, [pc, #96]	; (80059c8 <xPortStartScheduler+0x138>)
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	4a17      	ldr	r2, [pc, #92]	; (80059c8 <xPortStartScheduler+0x138>)
 800596c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005970:	6013      	str	r3, [r2, #0]
 8005972:	4b15      	ldr	r3, [pc, #84]	; (80059c8 <xPortStartScheduler+0x138>)
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	4a14      	ldr	r2, [pc, #80]	; (80059c8 <xPortStartScheduler+0x138>)
 8005978:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800597c:	6013      	str	r3, [r2, #0]
 800597e:	f000 f8dd 	bl	8005b3c <vPortSetupTimerInterrupt>
 8005982:	4b12      	ldr	r3, [pc, #72]	; (80059cc <xPortStartScheduler+0x13c>)
 8005984:	2200      	movs	r2, #0
 8005986:	601a      	str	r2, [r3, #0]
 8005988:	f000 f8fc 	bl	8005b84 <vPortEnableVFP>
 800598c:	4b10      	ldr	r3, [pc, #64]	; (80059d0 <xPortStartScheduler+0x140>)
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	4a0f      	ldr	r2, [pc, #60]	; (80059d0 <xPortStartScheduler+0x140>)
 8005992:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8005996:	6013      	str	r3, [r2, #0]
 8005998:	f7ff ff66 	bl	8005868 <prvPortStartFirstTask>
 800599c:	f7fe ff76 	bl	800488c <vTaskSwitchContext>
 80059a0:	f7ff ff22 	bl	80057e8 <prvTaskExitError>
 80059a4:	2300      	movs	r3, #0
 80059a6:	4618      	mov	r0, r3
 80059a8:	3718      	adds	r7, #24
 80059aa:	46bd      	mov	sp, r7
 80059ac:	bd80      	pop	{r7, pc}
 80059ae:	bf00      	nop
 80059b0:	e000ed00 	.word	0xe000ed00
 80059b4:	410fc271 	.word	0x410fc271
 80059b8:	410fc270 	.word	0x410fc270
 80059bc:	e000e400 	.word	0xe000e400
 80059c0:	20000f6c 	.word	0x20000f6c
 80059c4:	20000f70 	.word	0x20000f70
 80059c8:	e000ed20 	.word	0xe000ed20
 80059cc:	20000034 	.word	0x20000034
 80059d0:	e000ef34 	.word	0xe000ef34

080059d4 <vPortEnterCritical>:
 80059d4:	b480      	push	{r7}
 80059d6:	b083      	sub	sp, #12
 80059d8:	af00      	add	r7, sp, #0
 80059da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059de:	f383 8811 	msr	BASEPRI, r3
 80059e2:	f3bf 8f6f 	isb	sy
 80059e6:	f3bf 8f4f 	dsb	sy
 80059ea:	607b      	str	r3, [r7, #4]
 80059ec:	bf00      	nop
 80059ee:	4b0f      	ldr	r3, [pc, #60]	; (8005a2c <vPortEnterCritical+0x58>)
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	3301      	adds	r3, #1
 80059f4:	4a0d      	ldr	r2, [pc, #52]	; (8005a2c <vPortEnterCritical+0x58>)
 80059f6:	6013      	str	r3, [r2, #0]
 80059f8:	4b0c      	ldr	r3, [pc, #48]	; (8005a2c <vPortEnterCritical+0x58>)
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	2b01      	cmp	r3, #1
 80059fe:	d10f      	bne.n	8005a20 <vPortEnterCritical+0x4c>
 8005a00:	4b0b      	ldr	r3, [pc, #44]	; (8005a30 <vPortEnterCritical+0x5c>)
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	b2db      	uxtb	r3, r3
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d00a      	beq.n	8005a20 <vPortEnterCritical+0x4c>
 8005a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a0e:	f383 8811 	msr	BASEPRI, r3
 8005a12:	f3bf 8f6f 	isb	sy
 8005a16:	f3bf 8f4f 	dsb	sy
 8005a1a:	603b      	str	r3, [r7, #0]
 8005a1c:	bf00      	nop
 8005a1e:	e7fe      	b.n	8005a1e <vPortEnterCritical+0x4a>
 8005a20:	bf00      	nop
 8005a22:	370c      	adds	r7, #12
 8005a24:	46bd      	mov	sp, r7
 8005a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a2a:	4770      	bx	lr
 8005a2c:	20000034 	.word	0x20000034
 8005a30:	e000ed04 	.word	0xe000ed04

08005a34 <vPortExitCritical>:
 8005a34:	b480      	push	{r7}
 8005a36:	b083      	sub	sp, #12
 8005a38:	af00      	add	r7, sp, #0
 8005a3a:	4b12      	ldr	r3, [pc, #72]	; (8005a84 <vPortExitCritical+0x50>)
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	d10a      	bne.n	8005a58 <vPortExitCritical+0x24>
 8005a42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a46:	f383 8811 	msr	BASEPRI, r3
 8005a4a:	f3bf 8f6f 	isb	sy
 8005a4e:	f3bf 8f4f 	dsb	sy
 8005a52:	607b      	str	r3, [r7, #4]
 8005a54:	bf00      	nop
 8005a56:	e7fe      	b.n	8005a56 <vPortExitCritical+0x22>
 8005a58:	4b0a      	ldr	r3, [pc, #40]	; (8005a84 <vPortExitCritical+0x50>)
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	3b01      	subs	r3, #1
 8005a5e:	4a09      	ldr	r2, [pc, #36]	; (8005a84 <vPortExitCritical+0x50>)
 8005a60:	6013      	str	r3, [r2, #0]
 8005a62:	4b08      	ldr	r3, [pc, #32]	; (8005a84 <vPortExitCritical+0x50>)
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	2b00      	cmp	r3, #0
 8005a68:	d105      	bne.n	8005a76 <vPortExitCritical+0x42>
 8005a6a:	2300      	movs	r3, #0
 8005a6c:	603b      	str	r3, [r7, #0]
 8005a6e:	683b      	ldr	r3, [r7, #0]
 8005a70:	f383 8811 	msr	BASEPRI, r3
 8005a74:	bf00      	nop
 8005a76:	bf00      	nop
 8005a78:	370c      	adds	r7, #12
 8005a7a:	46bd      	mov	sp, r7
 8005a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a80:	4770      	bx	lr
 8005a82:	bf00      	nop
 8005a84:	20000034 	.word	0x20000034
	...

08005a90 <PendSV_Handler>:
 8005a90:	f3ef 8009 	mrs	r0, PSP
 8005a94:	f3bf 8f6f 	isb	sy
 8005a98:	4b15      	ldr	r3, [pc, #84]	; (8005af0 <pxCurrentTCBConst>)
 8005a9a:	681a      	ldr	r2, [r3, #0]
 8005a9c:	f01e 0f10 	tst.w	lr, #16
 8005aa0:	bf08      	it	eq
 8005aa2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8005aa6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005aaa:	6010      	str	r0, [r2, #0]
 8005aac:	e92d 0009 	stmdb	sp!, {r0, r3}
 8005ab0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8005ab4:	f380 8811 	msr	BASEPRI, r0
 8005ab8:	f3bf 8f4f 	dsb	sy
 8005abc:	f3bf 8f6f 	isb	sy
 8005ac0:	f7fe fee4 	bl	800488c <vTaskSwitchContext>
 8005ac4:	f04f 0000 	mov.w	r0, #0
 8005ac8:	f380 8811 	msr	BASEPRI, r0
 8005acc:	bc09      	pop	{r0, r3}
 8005ace:	6819      	ldr	r1, [r3, #0]
 8005ad0:	6808      	ldr	r0, [r1, #0]
 8005ad2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ad6:	f01e 0f10 	tst.w	lr, #16
 8005ada:	bf08      	it	eq
 8005adc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8005ae0:	f380 8809 	msr	PSP, r0
 8005ae4:	f3bf 8f6f 	isb	sy
 8005ae8:	4770      	bx	lr
 8005aea:	bf00      	nop
 8005aec:	f3af 8000 	nop.w

08005af0 <pxCurrentTCBConst>:
 8005af0:	20000940 	.word	0x20000940
 8005af4:	bf00      	nop
 8005af6:	bf00      	nop

08005af8 <xPortSysTickHandler>:
 8005af8:	b580      	push	{r7, lr}
 8005afa:	b082      	sub	sp, #8
 8005afc:	af00      	add	r7, sp, #0
 8005afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005b02:	f383 8811 	msr	BASEPRI, r3
 8005b06:	f3bf 8f6f 	isb	sy
 8005b0a:	f3bf 8f4f 	dsb	sy
 8005b0e:	607b      	str	r3, [r7, #4]
 8005b10:	bf00      	nop
 8005b12:	f7fe fe01 	bl	8004718 <xTaskIncrementTick>
 8005b16:	4603      	mov	r3, r0
 8005b18:	2b00      	cmp	r3, #0
 8005b1a:	d003      	beq.n	8005b24 <xPortSysTickHandler+0x2c>
 8005b1c:	4b06      	ldr	r3, [pc, #24]	; (8005b38 <xPortSysTickHandler+0x40>)
 8005b1e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005b22:	601a      	str	r2, [r3, #0]
 8005b24:	2300      	movs	r3, #0
 8005b26:	603b      	str	r3, [r7, #0]
 8005b28:	683b      	ldr	r3, [r7, #0]
 8005b2a:	f383 8811 	msr	BASEPRI, r3
 8005b2e:	bf00      	nop
 8005b30:	bf00      	nop
 8005b32:	3708      	adds	r7, #8
 8005b34:	46bd      	mov	sp, r7
 8005b36:	bd80      	pop	{r7, pc}
 8005b38:	e000ed04 	.word	0xe000ed04

08005b3c <vPortSetupTimerInterrupt>:
 8005b3c:	b480      	push	{r7}
 8005b3e:	af00      	add	r7, sp, #0
 8005b40:	4b0b      	ldr	r3, [pc, #44]	; (8005b70 <vPortSetupTimerInterrupt+0x34>)
 8005b42:	2200      	movs	r2, #0
 8005b44:	601a      	str	r2, [r3, #0]
 8005b46:	4b0b      	ldr	r3, [pc, #44]	; (8005b74 <vPortSetupTimerInterrupt+0x38>)
 8005b48:	2200      	movs	r2, #0
 8005b4a:	601a      	str	r2, [r3, #0]
 8005b4c:	4b0a      	ldr	r3, [pc, #40]	; (8005b78 <vPortSetupTimerInterrupt+0x3c>)
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	4a0a      	ldr	r2, [pc, #40]	; (8005b7c <vPortSetupTimerInterrupt+0x40>)
 8005b52:	fba2 2303 	umull	r2, r3, r2, r3
 8005b56:	099b      	lsrs	r3, r3, #6
 8005b58:	4a09      	ldr	r2, [pc, #36]	; (8005b80 <vPortSetupTimerInterrupt+0x44>)
 8005b5a:	3b01      	subs	r3, #1
 8005b5c:	6013      	str	r3, [r2, #0]
 8005b5e:	4b04      	ldr	r3, [pc, #16]	; (8005b70 <vPortSetupTimerInterrupt+0x34>)
 8005b60:	2207      	movs	r2, #7
 8005b62:	601a      	str	r2, [r3, #0]
 8005b64:	bf00      	nop
 8005b66:	46bd      	mov	sp, r7
 8005b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b6c:	4770      	bx	lr
 8005b6e:	bf00      	nop
 8005b70:	e000e010 	.word	0xe000e010
 8005b74:	e000e018 	.word	0xe000e018
 8005b78:	20000028 	.word	0x20000028
 8005b7c:	10624dd3 	.word	0x10624dd3
 8005b80:	e000e014 	.word	0xe000e014

08005b84 <vPortEnableVFP>:
 8005b84:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8005b94 <vPortEnableVFP+0x10>
 8005b88:	6801      	ldr	r1, [r0, #0]
 8005b8a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8005b8e:	6001      	str	r1, [r0, #0]
 8005b90:	4770      	bx	lr
 8005b92:	bf00      	nop
 8005b94:	e000ed88 	.word	0xe000ed88

08005b98 <vPortValidateInterruptPriority>:
 8005b98:	b480      	push	{r7}
 8005b9a:	b085      	sub	sp, #20
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	f3ef 8305 	mrs	r3, IPSR
 8005ba2:	60fb      	str	r3, [r7, #12]
 8005ba4:	68fb      	ldr	r3, [r7, #12]
 8005ba6:	2b0f      	cmp	r3, #15
 8005ba8:	d914      	bls.n	8005bd4 <vPortValidateInterruptPriority+0x3c>
 8005baa:	4a17      	ldr	r2, [pc, #92]	; (8005c08 <vPortValidateInterruptPriority+0x70>)
 8005bac:	68fb      	ldr	r3, [r7, #12]
 8005bae:	4413      	add	r3, r2
 8005bb0:	781b      	ldrb	r3, [r3, #0]
 8005bb2:	72fb      	strb	r3, [r7, #11]
 8005bb4:	4b15      	ldr	r3, [pc, #84]	; (8005c0c <vPortValidateInterruptPriority+0x74>)
 8005bb6:	781b      	ldrb	r3, [r3, #0]
 8005bb8:	7afa      	ldrb	r2, [r7, #11]
 8005bba:	429a      	cmp	r2, r3
 8005bbc:	d20a      	bcs.n	8005bd4 <vPortValidateInterruptPriority+0x3c>
 8005bbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005bc2:	f383 8811 	msr	BASEPRI, r3
 8005bc6:	f3bf 8f6f 	isb	sy
 8005bca:	f3bf 8f4f 	dsb	sy
 8005bce:	607b      	str	r3, [r7, #4]
 8005bd0:	bf00      	nop
 8005bd2:	e7fe      	b.n	8005bd2 <vPortValidateInterruptPriority+0x3a>
 8005bd4:	4b0e      	ldr	r3, [pc, #56]	; (8005c10 <vPortValidateInterruptPriority+0x78>)
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8005bdc:	4b0d      	ldr	r3, [pc, #52]	; (8005c14 <vPortValidateInterruptPriority+0x7c>)
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	429a      	cmp	r2, r3
 8005be2:	d90a      	bls.n	8005bfa <vPortValidateInterruptPriority+0x62>
 8005be4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005be8:	f383 8811 	msr	BASEPRI, r3
 8005bec:	f3bf 8f6f 	isb	sy
 8005bf0:	f3bf 8f4f 	dsb	sy
 8005bf4:	603b      	str	r3, [r7, #0]
 8005bf6:	bf00      	nop
 8005bf8:	e7fe      	b.n	8005bf8 <vPortValidateInterruptPriority+0x60>
 8005bfa:	bf00      	nop
 8005bfc:	3714      	adds	r7, #20
 8005bfe:	46bd      	mov	sp, r7
 8005c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c04:	4770      	bx	lr
 8005c06:	bf00      	nop
 8005c08:	e000e3f0 	.word	0xe000e3f0
 8005c0c:	20000f6c 	.word	0x20000f6c
 8005c10:	e000ed0c 	.word	0xe000ed0c
 8005c14:	20000f70 	.word	0x20000f70

08005c18 <pvPortMalloc>:
 8005c18:	b580      	push	{r7, lr}
 8005c1a:	b08a      	sub	sp, #40	; 0x28
 8005c1c:	af00      	add	r7, sp, #0
 8005c1e:	6078      	str	r0, [r7, #4]
 8005c20:	2300      	movs	r3, #0
 8005c22:	61fb      	str	r3, [r7, #28]
 8005c24:	f7fe fcbc 	bl	80045a0 <vTaskSuspendAll>
 8005c28:	4b5b      	ldr	r3, [pc, #364]	; (8005d98 <pvPortMalloc+0x180>)
 8005c2a:	681b      	ldr	r3, [r3, #0]
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d101      	bne.n	8005c34 <pvPortMalloc+0x1c>
 8005c30:	f000 f920 	bl	8005e74 <prvHeapInit>
 8005c34:	4b59      	ldr	r3, [pc, #356]	; (8005d9c <pvPortMalloc+0x184>)
 8005c36:	681a      	ldr	r2, [r3, #0]
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	4013      	ands	r3, r2
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	f040 8093 	bne.w	8005d68 <pvPortMalloc+0x150>
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d01d      	beq.n	8005c84 <pvPortMalloc+0x6c>
 8005c48:	2208      	movs	r2, #8
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	4413      	add	r3, r2
 8005c4e:	607b      	str	r3, [r7, #4]
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	f003 0307 	and.w	r3, r3, #7
 8005c56:	2b00      	cmp	r3, #0
 8005c58:	d014      	beq.n	8005c84 <pvPortMalloc+0x6c>
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	f023 0307 	bic.w	r3, r3, #7
 8005c60:	3308      	adds	r3, #8
 8005c62:	607b      	str	r3, [r7, #4]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	f003 0307 	and.w	r3, r3, #7
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d00a      	beq.n	8005c84 <pvPortMalloc+0x6c>
 8005c6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c72:	f383 8811 	msr	BASEPRI, r3
 8005c76:	f3bf 8f6f 	isb	sy
 8005c7a:	f3bf 8f4f 	dsb	sy
 8005c7e:	617b      	str	r3, [r7, #20]
 8005c80:	bf00      	nop
 8005c82:	e7fe      	b.n	8005c82 <pvPortMalloc+0x6a>
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d06e      	beq.n	8005d68 <pvPortMalloc+0x150>
 8005c8a:	4b45      	ldr	r3, [pc, #276]	; (8005da0 <pvPortMalloc+0x188>)
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	687a      	ldr	r2, [r7, #4]
 8005c90:	429a      	cmp	r2, r3
 8005c92:	d869      	bhi.n	8005d68 <pvPortMalloc+0x150>
 8005c94:	4b43      	ldr	r3, [pc, #268]	; (8005da4 <pvPortMalloc+0x18c>)
 8005c96:	623b      	str	r3, [r7, #32]
 8005c98:	4b42      	ldr	r3, [pc, #264]	; (8005da4 <pvPortMalloc+0x18c>)
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	627b      	str	r3, [r7, #36]	; 0x24
 8005c9e:	e004      	b.n	8005caa <pvPortMalloc+0x92>
 8005ca0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ca2:	623b      	str	r3, [r7, #32]
 8005ca4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ca6:	681b      	ldr	r3, [r3, #0]
 8005ca8:	627b      	str	r3, [r7, #36]	; 0x24
 8005caa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cac:	685b      	ldr	r3, [r3, #4]
 8005cae:	687a      	ldr	r2, [r7, #4]
 8005cb0:	429a      	cmp	r2, r3
 8005cb2:	d903      	bls.n	8005cbc <pvPortMalloc+0xa4>
 8005cb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	2b00      	cmp	r3, #0
 8005cba:	d1f1      	bne.n	8005ca0 <pvPortMalloc+0x88>
 8005cbc:	4b36      	ldr	r3, [pc, #216]	; (8005d98 <pvPortMalloc+0x180>)
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005cc2:	429a      	cmp	r2, r3
 8005cc4:	d050      	beq.n	8005d68 <pvPortMalloc+0x150>
 8005cc6:	6a3b      	ldr	r3, [r7, #32]
 8005cc8:	681b      	ldr	r3, [r3, #0]
 8005cca:	2208      	movs	r2, #8
 8005ccc:	4413      	add	r3, r2
 8005cce:	61fb      	str	r3, [r7, #28]
 8005cd0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cd2:	681a      	ldr	r2, [r3, #0]
 8005cd4:	6a3b      	ldr	r3, [r7, #32]
 8005cd6:	601a      	str	r2, [r3, #0]
 8005cd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cda:	685a      	ldr	r2, [r3, #4]
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	1ad2      	subs	r2, r2, r3
 8005ce0:	2308      	movs	r3, #8
 8005ce2:	005b      	lsls	r3, r3, #1
 8005ce4:	429a      	cmp	r2, r3
 8005ce6:	d91f      	bls.n	8005d28 <pvPortMalloc+0x110>
 8005ce8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	4413      	add	r3, r2
 8005cee:	61bb      	str	r3, [r7, #24]
 8005cf0:	69bb      	ldr	r3, [r7, #24]
 8005cf2:	f003 0307 	and.w	r3, r3, #7
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	d00a      	beq.n	8005d10 <pvPortMalloc+0xf8>
 8005cfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005cfe:	f383 8811 	msr	BASEPRI, r3
 8005d02:	f3bf 8f6f 	isb	sy
 8005d06:	f3bf 8f4f 	dsb	sy
 8005d0a:	613b      	str	r3, [r7, #16]
 8005d0c:	bf00      	nop
 8005d0e:	e7fe      	b.n	8005d0e <pvPortMalloc+0xf6>
 8005d10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d12:	685a      	ldr	r2, [r3, #4]
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	1ad2      	subs	r2, r2, r3
 8005d18:	69bb      	ldr	r3, [r7, #24]
 8005d1a:	605a      	str	r2, [r3, #4]
 8005d1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d1e:	687a      	ldr	r2, [r7, #4]
 8005d20:	605a      	str	r2, [r3, #4]
 8005d22:	69b8      	ldr	r0, [r7, #24]
 8005d24:	f000 f908 	bl	8005f38 <prvInsertBlockIntoFreeList>
 8005d28:	4b1d      	ldr	r3, [pc, #116]	; (8005da0 <pvPortMalloc+0x188>)
 8005d2a:	681a      	ldr	r2, [r3, #0]
 8005d2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d2e:	685b      	ldr	r3, [r3, #4]
 8005d30:	1ad3      	subs	r3, r2, r3
 8005d32:	4a1b      	ldr	r2, [pc, #108]	; (8005da0 <pvPortMalloc+0x188>)
 8005d34:	6013      	str	r3, [r2, #0]
 8005d36:	4b1a      	ldr	r3, [pc, #104]	; (8005da0 <pvPortMalloc+0x188>)
 8005d38:	681a      	ldr	r2, [r3, #0]
 8005d3a:	4b1b      	ldr	r3, [pc, #108]	; (8005da8 <pvPortMalloc+0x190>)
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	429a      	cmp	r2, r3
 8005d40:	d203      	bcs.n	8005d4a <pvPortMalloc+0x132>
 8005d42:	4b17      	ldr	r3, [pc, #92]	; (8005da0 <pvPortMalloc+0x188>)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	4a18      	ldr	r2, [pc, #96]	; (8005da8 <pvPortMalloc+0x190>)
 8005d48:	6013      	str	r3, [r2, #0]
 8005d4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d4c:	685a      	ldr	r2, [r3, #4]
 8005d4e:	4b13      	ldr	r3, [pc, #76]	; (8005d9c <pvPortMalloc+0x184>)
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	431a      	orrs	r2, r3
 8005d54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d56:	605a      	str	r2, [r3, #4]
 8005d58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d5a:	2200      	movs	r2, #0
 8005d5c:	601a      	str	r2, [r3, #0]
 8005d5e:	4b13      	ldr	r3, [pc, #76]	; (8005dac <pvPortMalloc+0x194>)
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	3301      	adds	r3, #1
 8005d64:	4a11      	ldr	r2, [pc, #68]	; (8005dac <pvPortMalloc+0x194>)
 8005d66:	6013      	str	r3, [r2, #0]
 8005d68:	f7fe fc28 	bl	80045bc <xTaskResumeAll>
 8005d6c:	69fb      	ldr	r3, [r7, #28]
 8005d6e:	f003 0307 	and.w	r3, r3, #7
 8005d72:	2b00      	cmp	r3, #0
 8005d74:	d00a      	beq.n	8005d8c <pvPortMalloc+0x174>
 8005d76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d7a:	f383 8811 	msr	BASEPRI, r3
 8005d7e:	f3bf 8f6f 	isb	sy
 8005d82:	f3bf 8f4f 	dsb	sy
 8005d86:	60fb      	str	r3, [r7, #12]
 8005d88:	bf00      	nop
 8005d8a:	e7fe      	b.n	8005d8a <pvPortMalloc+0x172>
 8005d8c:	69fb      	ldr	r3, [r7, #28]
 8005d8e:	4618      	mov	r0, r3
 8005d90:	3728      	adds	r7, #40	; 0x28
 8005d92:	46bd      	mov	sp, r7
 8005d94:	bd80      	pop	{r7, pc}
 8005d96:	bf00      	nop
 8005d98:	20004b7c 	.word	0x20004b7c
 8005d9c:	20004b90 	.word	0x20004b90
 8005da0:	20004b80 	.word	0x20004b80
 8005da4:	20004b74 	.word	0x20004b74
 8005da8:	20004b84 	.word	0x20004b84
 8005dac:	20004b88 	.word	0x20004b88

08005db0 <vPortFree>:
 8005db0:	b580      	push	{r7, lr}
 8005db2:	b086      	sub	sp, #24
 8005db4:	af00      	add	r7, sp, #0
 8005db6:	6078      	str	r0, [r7, #4]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	617b      	str	r3, [r7, #20]
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	d04d      	beq.n	8005e5e <vPortFree+0xae>
 8005dc2:	2308      	movs	r3, #8
 8005dc4:	425b      	negs	r3, r3
 8005dc6:	697a      	ldr	r2, [r7, #20]
 8005dc8:	4413      	add	r3, r2
 8005dca:	617b      	str	r3, [r7, #20]
 8005dcc:	697b      	ldr	r3, [r7, #20]
 8005dce:	613b      	str	r3, [r7, #16]
 8005dd0:	693b      	ldr	r3, [r7, #16]
 8005dd2:	685a      	ldr	r2, [r3, #4]
 8005dd4:	4b24      	ldr	r3, [pc, #144]	; (8005e68 <vPortFree+0xb8>)
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	4013      	ands	r3, r2
 8005dda:	2b00      	cmp	r3, #0
 8005ddc:	d10a      	bne.n	8005df4 <vPortFree+0x44>
 8005dde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005de2:	f383 8811 	msr	BASEPRI, r3
 8005de6:	f3bf 8f6f 	isb	sy
 8005dea:	f3bf 8f4f 	dsb	sy
 8005dee:	60fb      	str	r3, [r7, #12]
 8005df0:	bf00      	nop
 8005df2:	e7fe      	b.n	8005df2 <vPortFree+0x42>
 8005df4:	693b      	ldr	r3, [r7, #16]
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	d00a      	beq.n	8005e12 <vPortFree+0x62>
 8005dfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005e00:	f383 8811 	msr	BASEPRI, r3
 8005e04:	f3bf 8f6f 	isb	sy
 8005e08:	f3bf 8f4f 	dsb	sy
 8005e0c:	60bb      	str	r3, [r7, #8]
 8005e0e:	bf00      	nop
 8005e10:	e7fe      	b.n	8005e10 <vPortFree+0x60>
 8005e12:	693b      	ldr	r3, [r7, #16]
 8005e14:	685a      	ldr	r2, [r3, #4]
 8005e16:	4b14      	ldr	r3, [pc, #80]	; (8005e68 <vPortFree+0xb8>)
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	4013      	ands	r3, r2
 8005e1c:	2b00      	cmp	r3, #0
 8005e1e:	d01e      	beq.n	8005e5e <vPortFree+0xae>
 8005e20:	693b      	ldr	r3, [r7, #16]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d11a      	bne.n	8005e5e <vPortFree+0xae>
 8005e28:	693b      	ldr	r3, [r7, #16]
 8005e2a:	685a      	ldr	r2, [r3, #4]
 8005e2c:	4b0e      	ldr	r3, [pc, #56]	; (8005e68 <vPortFree+0xb8>)
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	43db      	mvns	r3, r3
 8005e32:	401a      	ands	r2, r3
 8005e34:	693b      	ldr	r3, [r7, #16]
 8005e36:	605a      	str	r2, [r3, #4]
 8005e38:	f7fe fbb2 	bl	80045a0 <vTaskSuspendAll>
 8005e3c:	693b      	ldr	r3, [r7, #16]
 8005e3e:	685a      	ldr	r2, [r3, #4]
 8005e40:	4b0a      	ldr	r3, [pc, #40]	; (8005e6c <vPortFree+0xbc>)
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	4413      	add	r3, r2
 8005e46:	4a09      	ldr	r2, [pc, #36]	; (8005e6c <vPortFree+0xbc>)
 8005e48:	6013      	str	r3, [r2, #0]
 8005e4a:	6938      	ldr	r0, [r7, #16]
 8005e4c:	f000 f874 	bl	8005f38 <prvInsertBlockIntoFreeList>
 8005e50:	4b07      	ldr	r3, [pc, #28]	; (8005e70 <vPortFree+0xc0>)
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	3301      	adds	r3, #1
 8005e56:	4a06      	ldr	r2, [pc, #24]	; (8005e70 <vPortFree+0xc0>)
 8005e58:	6013      	str	r3, [r2, #0]
 8005e5a:	f7fe fbaf 	bl	80045bc <xTaskResumeAll>
 8005e5e:	bf00      	nop
 8005e60:	3718      	adds	r7, #24
 8005e62:	46bd      	mov	sp, r7
 8005e64:	bd80      	pop	{r7, pc}
 8005e66:	bf00      	nop
 8005e68:	20004b90 	.word	0x20004b90
 8005e6c:	20004b80 	.word	0x20004b80
 8005e70:	20004b8c 	.word	0x20004b8c

08005e74 <prvHeapInit>:
 8005e74:	b480      	push	{r7}
 8005e76:	b085      	sub	sp, #20
 8005e78:	af00      	add	r7, sp, #0
 8005e7a:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 8005e7e:	60bb      	str	r3, [r7, #8]
 8005e80:	4b27      	ldr	r3, [pc, #156]	; (8005f20 <prvHeapInit+0xac>)
 8005e82:	60fb      	str	r3, [r7, #12]
 8005e84:	68fb      	ldr	r3, [r7, #12]
 8005e86:	f003 0307 	and.w	r3, r3, #7
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d00c      	beq.n	8005ea8 <prvHeapInit+0x34>
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	3307      	adds	r3, #7
 8005e92:	60fb      	str	r3, [r7, #12]
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	f023 0307 	bic.w	r3, r3, #7
 8005e9a:	60fb      	str	r3, [r7, #12]
 8005e9c:	68ba      	ldr	r2, [r7, #8]
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	1ad3      	subs	r3, r2, r3
 8005ea2:	4a1f      	ldr	r2, [pc, #124]	; (8005f20 <prvHeapInit+0xac>)
 8005ea4:	4413      	add	r3, r2
 8005ea6:	60bb      	str	r3, [r7, #8]
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	607b      	str	r3, [r7, #4]
 8005eac:	4a1d      	ldr	r2, [pc, #116]	; (8005f24 <prvHeapInit+0xb0>)
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	6013      	str	r3, [r2, #0]
 8005eb2:	4b1c      	ldr	r3, [pc, #112]	; (8005f24 <prvHeapInit+0xb0>)
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	605a      	str	r2, [r3, #4]
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	68ba      	ldr	r2, [r7, #8]
 8005ebc:	4413      	add	r3, r2
 8005ebe:	60fb      	str	r3, [r7, #12]
 8005ec0:	2208      	movs	r2, #8
 8005ec2:	68fb      	ldr	r3, [r7, #12]
 8005ec4:	1a9b      	subs	r3, r3, r2
 8005ec6:	60fb      	str	r3, [r7, #12]
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	f023 0307 	bic.w	r3, r3, #7
 8005ece:	60fb      	str	r3, [r7, #12]
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	4a15      	ldr	r2, [pc, #84]	; (8005f28 <prvHeapInit+0xb4>)
 8005ed4:	6013      	str	r3, [r2, #0]
 8005ed6:	4b14      	ldr	r3, [pc, #80]	; (8005f28 <prvHeapInit+0xb4>)
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	2200      	movs	r2, #0
 8005edc:	605a      	str	r2, [r3, #4]
 8005ede:	4b12      	ldr	r3, [pc, #72]	; (8005f28 <prvHeapInit+0xb4>)
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	2200      	movs	r2, #0
 8005ee4:	601a      	str	r2, [r3, #0]
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	603b      	str	r3, [r7, #0]
 8005eea:	683b      	ldr	r3, [r7, #0]
 8005eec:	68fa      	ldr	r2, [r7, #12]
 8005eee:	1ad2      	subs	r2, r2, r3
 8005ef0:	683b      	ldr	r3, [r7, #0]
 8005ef2:	605a      	str	r2, [r3, #4]
 8005ef4:	4b0c      	ldr	r3, [pc, #48]	; (8005f28 <prvHeapInit+0xb4>)
 8005ef6:	681a      	ldr	r2, [r3, #0]
 8005ef8:	683b      	ldr	r3, [r7, #0]
 8005efa:	601a      	str	r2, [r3, #0]
 8005efc:	683b      	ldr	r3, [r7, #0]
 8005efe:	685b      	ldr	r3, [r3, #4]
 8005f00:	4a0a      	ldr	r2, [pc, #40]	; (8005f2c <prvHeapInit+0xb8>)
 8005f02:	6013      	str	r3, [r2, #0]
 8005f04:	683b      	ldr	r3, [r7, #0]
 8005f06:	685b      	ldr	r3, [r3, #4]
 8005f08:	4a09      	ldr	r2, [pc, #36]	; (8005f30 <prvHeapInit+0xbc>)
 8005f0a:	6013      	str	r3, [r2, #0]
 8005f0c:	4b09      	ldr	r3, [pc, #36]	; (8005f34 <prvHeapInit+0xc0>)
 8005f0e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8005f12:	601a      	str	r2, [r3, #0]
 8005f14:	bf00      	nop
 8005f16:	3714      	adds	r7, #20
 8005f18:	46bd      	mov	sp, r7
 8005f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f1e:	4770      	bx	lr
 8005f20:	20000f74 	.word	0x20000f74
 8005f24:	20004b74 	.word	0x20004b74
 8005f28:	20004b7c 	.word	0x20004b7c
 8005f2c:	20004b84 	.word	0x20004b84
 8005f30:	20004b80 	.word	0x20004b80
 8005f34:	20004b90 	.word	0x20004b90

08005f38 <prvInsertBlockIntoFreeList>:
 8005f38:	b480      	push	{r7}
 8005f3a:	b085      	sub	sp, #20
 8005f3c:	af00      	add	r7, sp, #0
 8005f3e:	6078      	str	r0, [r7, #4]
 8005f40:	4b28      	ldr	r3, [pc, #160]	; (8005fe4 <prvInsertBlockIntoFreeList+0xac>)
 8005f42:	60fb      	str	r3, [r7, #12]
 8005f44:	e002      	b.n	8005f4c <prvInsertBlockIntoFreeList+0x14>
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	681b      	ldr	r3, [r3, #0]
 8005f4a:	60fb      	str	r3, [r7, #12]
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	687a      	ldr	r2, [r7, #4]
 8005f52:	429a      	cmp	r2, r3
 8005f54:	d8f7      	bhi.n	8005f46 <prvInsertBlockIntoFreeList+0xe>
 8005f56:	68fb      	ldr	r3, [r7, #12]
 8005f58:	60bb      	str	r3, [r7, #8]
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	685b      	ldr	r3, [r3, #4]
 8005f5e:	68ba      	ldr	r2, [r7, #8]
 8005f60:	4413      	add	r3, r2
 8005f62:	687a      	ldr	r2, [r7, #4]
 8005f64:	429a      	cmp	r2, r3
 8005f66:	d108      	bne.n	8005f7a <prvInsertBlockIntoFreeList+0x42>
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	685a      	ldr	r2, [r3, #4]
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	685b      	ldr	r3, [r3, #4]
 8005f70:	441a      	add	r2, r3
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	605a      	str	r2, [r3, #4]
 8005f76:	68fb      	ldr	r3, [r7, #12]
 8005f78:	607b      	str	r3, [r7, #4]
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	60bb      	str	r3, [r7, #8]
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	685b      	ldr	r3, [r3, #4]
 8005f82:	68ba      	ldr	r2, [r7, #8]
 8005f84:	441a      	add	r2, r3
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	429a      	cmp	r2, r3
 8005f8c:	d118      	bne.n	8005fc0 <prvInsertBlockIntoFreeList+0x88>
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	681a      	ldr	r2, [r3, #0]
 8005f92:	4b15      	ldr	r3, [pc, #84]	; (8005fe8 <prvInsertBlockIntoFreeList+0xb0>)
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	429a      	cmp	r2, r3
 8005f98:	d00d      	beq.n	8005fb6 <prvInsertBlockIntoFreeList+0x7e>
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	685a      	ldr	r2, [r3, #4]
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	685b      	ldr	r3, [r3, #4]
 8005fa4:	441a      	add	r2, r3
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	605a      	str	r2, [r3, #4]
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	681a      	ldr	r2, [r3, #0]
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	601a      	str	r2, [r3, #0]
 8005fb4:	e008      	b.n	8005fc8 <prvInsertBlockIntoFreeList+0x90>
 8005fb6:	4b0c      	ldr	r3, [pc, #48]	; (8005fe8 <prvInsertBlockIntoFreeList+0xb0>)
 8005fb8:	681a      	ldr	r2, [r3, #0]
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	601a      	str	r2, [r3, #0]
 8005fbe:	e003      	b.n	8005fc8 <prvInsertBlockIntoFreeList+0x90>
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681a      	ldr	r2, [r3, #0]
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	601a      	str	r2, [r3, #0]
 8005fc8:	68fa      	ldr	r2, [r7, #12]
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	429a      	cmp	r2, r3
 8005fce:	d002      	beq.n	8005fd6 <prvInsertBlockIntoFreeList+0x9e>
 8005fd0:	68fb      	ldr	r3, [r7, #12]
 8005fd2:	687a      	ldr	r2, [r7, #4]
 8005fd4:	601a      	str	r2, [r3, #0]
 8005fd6:	bf00      	nop
 8005fd8:	3714      	adds	r7, #20
 8005fda:	46bd      	mov	sp, r7
 8005fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fe0:	4770      	bx	lr
 8005fe2:	bf00      	nop
 8005fe4:	20004b74 	.word	0x20004b74
 8005fe8:	20004b7c 	.word	0x20004b7c

08005fec <std>:
 8005fec:	2300      	movs	r3, #0
 8005fee:	b510      	push	{r4, lr}
 8005ff0:	4604      	mov	r4, r0
 8005ff2:	e9c0 3300 	strd	r3, r3, [r0]
 8005ff6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005ffa:	6083      	str	r3, [r0, #8]
 8005ffc:	8181      	strh	r1, [r0, #12]
 8005ffe:	6643      	str	r3, [r0, #100]	; 0x64
 8006000:	81c2      	strh	r2, [r0, #14]
 8006002:	6183      	str	r3, [r0, #24]
 8006004:	4619      	mov	r1, r3
 8006006:	2208      	movs	r2, #8
 8006008:	305c      	adds	r0, #92	; 0x5c
 800600a:	f000 f9f7 	bl	80063fc <memset>
 800600e:	4b0d      	ldr	r3, [pc, #52]	; (8006044 <std+0x58>)
 8006010:	6263      	str	r3, [r4, #36]	; 0x24
 8006012:	4b0d      	ldr	r3, [pc, #52]	; (8006048 <std+0x5c>)
 8006014:	62a3      	str	r3, [r4, #40]	; 0x28
 8006016:	4b0d      	ldr	r3, [pc, #52]	; (800604c <std+0x60>)
 8006018:	62e3      	str	r3, [r4, #44]	; 0x2c
 800601a:	4b0d      	ldr	r3, [pc, #52]	; (8006050 <std+0x64>)
 800601c:	6323      	str	r3, [r4, #48]	; 0x30
 800601e:	4b0d      	ldr	r3, [pc, #52]	; (8006054 <std+0x68>)
 8006020:	6224      	str	r4, [r4, #32]
 8006022:	429c      	cmp	r4, r3
 8006024:	d006      	beq.n	8006034 <std+0x48>
 8006026:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800602a:	4294      	cmp	r4, r2
 800602c:	d002      	beq.n	8006034 <std+0x48>
 800602e:	33d0      	adds	r3, #208	; 0xd0
 8006030:	429c      	cmp	r4, r3
 8006032:	d105      	bne.n	8006040 <std+0x54>
 8006034:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800603c:	f000 baac 	b.w	8006598 <__retarget_lock_init_recursive>
 8006040:	bd10      	pop	{r4, pc}
 8006042:	bf00      	nop
 8006044:	0800624d 	.word	0x0800624d
 8006048:	0800626f 	.word	0x0800626f
 800604c:	080062a7 	.word	0x080062a7
 8006050:	080062cb 	.word	0x080062cb
 8006054:	20004b94 	.word	0x20004b94

08006058 <stdio_exit_handler>:
 8006058:	4a02      	ldr	r2, [pc, #8]	; (8006064 <stdio_exit_handler+0xc>)
 800605a:	4903      	ldr	r1, [pc, #12]	; (8006068 <stdio_exit_handler+0x10>)
 800605c:	4803      	ldr	r0, [pc, #12]	; (800606c <stdio_exit_handler+0x14>)
 800605e:	f000 b869 	b.w	8006134 <_fwalk_sglue>
 8006062:	bf00      	nop
 8006064:	20000038 	.word	0x20000038
 8006068:	08006e61 	.word	0x08006e61
 800606c:	20000044 	.word	0x20000044

08006070 <cleanup_stdio>:
 8006070:	6841      	ldr	r1, [r0, #4]
 8006072:	4b0c      	ldr	r3, [pc, #48]	; (80060a4 <cleanup_stdio+0x34>)
 8006074:	4299      	cmp	r1, r3
 8006076:	b510      	push	{r4, lr}
 8006078:	4604      	mov	r4, r0
 800607a:	d001      	beq.n	8006080 <cleanup_stdio+0x10>
 800607c:	f000 fef0 	bl	8006e60 <_fflush_r>
 8006080:	68a1      	ldr	r1, [r4, #8]
 8006082:	4b09      	ldr	r3, [pc, #36]	; (80060a8 <cleanup_stdio+0x38>)
 8006084:	4299      	cmp	r1, r3
 8006086:	d002      	beq.n	800608e <cleanup_stdio+0x1e>
 8006088:	4620      	mov	r0, r4
 800608a:	f000 fee9 	bl	8006e60 <_fflush_r>
 800608e:	68e1      	ldr	r1, [r4, #12]
 8006090:	4b06      	ldr	r3, [pc, #24]	; (80060ac <cleanup_stdio+0x3c>)
 8006092:	4299      	cmp	r1, r3
 8006094:	d004      	beq.n	80060a0 <cleanup_stdio+0x30>
 8006096:	4620      	mov	r0, r4
 8006098:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800609c:	f000 bee0 	b.w	8006e60 <_fflush_r>
 80060a0:	bd10      	pop	{r4, pc}
 80060a2:	bf00      	nop
 80060a4:	20004b94 	.word	0x20004b94
 80060a8:	20004bfc 	.word	0x20004bfc
 80060ac:	20004c64 	.word	0x20004c64

080060b0 <global_stdio_init.part.0>:
 80060b0:	b510      	push	{r4, lr}
 80060b2:	4b0b      	ldr	r3, [pc, #44]	; (80060e0 <global_stdio_init.part.0+0x30>)
 80060b4:	4c0b      	ldr	r4, [pc, #44]	; (80060e4 <global_stdio_init.part.0+0x34>)
 80060b6:	4a0c      	ldr	r2, [pc, #48]	; (80060e8 <global_stdio_init.part.0+0x38>)
 80060b8:	601a      	str	r2, [r3, #0]
 80060ba:	4620      	mov	r0, r4
 80060bc:	2200      	movs	r2, #0
 80060be:	2104      	movs	r1, #4
 80060c0:	f7ff ff94 	bl	8005fec <std>
 80060c4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80060c8:	2201      	movs	r2, #1
 80060ca:	2109      	movs	r1, #9
 80060cc:	f7ff ff8e 	bl	8005fec <std>
 80060d0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80060d4:	2202      	movs	r2, #2
 80060d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80060da:	2112      	movs	r1, #18
 80060dc:	f7ff bf86 	b.w	8005fec <std>
 80060e0:	20004ccc 	.word	0x20004ccc
 80060e4:	20004b94 	.word	0x20004b94
 80060e8:	08006059 	.word	0x08006059

080060ec <__sfp_lock_acquire>:
 80060ec:	4801      	ldr	r0, [pc, #4]	; (80060f4 <__sfp_lock_acquire+0x8>)
 80060ee:	f000 ba54 	b.w	800659a <__retarget_lock_acquire_recursive>
 80060f2:	bf00      	nop
 80060f4:	20004cd5 	.word	0x20004cd5

080060f8 <__sfp_lock_release>:
 80060f8:	4801      	ldr	r0, [pc, #4]	; (8006100 <__sfp_lock_release+0x8>)
 80060fa:	f000 ba4f 	b.w	800659c <__retarget_lock_release_recursive>
 80060fe:	bf00      	nop
 8006100:	20004cd5 	.word	0x20004cd5

08006104 <__sinit>:
 8006104:	b510      	push	{r4, lr}
 8006106:	4604      	mov	r4, r0
 8006108:	f7ff fff0 	bl	80060ec <__sfp_lock_acquire>
 800610c:	6a23      	ldr	r3, [r4, #32]
 800610e:	b11b      	cbz	r3, 8006118 <__sinit+0x14>
 8006110:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006114:	f7ff bff0 	b.w	80060f8 <__sfp_lock_release>
 8006118:	4b04      	ldr	r3, [pc, #16]	; (800612c <__sinit+0x28>)
 800611a:	6223      	str	r3, [r4, #32]
 800611c:	4b04      	ldr	r3, [pc, #16]	; (8006130 <__sinit+0x2c>)
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	2b00      	cmp	r3, #0
 8006122:	d1f5      	bne.n	8006110 <__sinit+0xc>
 8006124:	f7ff ffc4 	bl	80060b0 <global_stdio_init.part.0>
 8006128:	e7f2      	b.n	8006110 <__sinit+0xc>
 800612a:	bf00      	nop
 800612c:	08006071 	.word	0x08006071
 8006130:	20004ccc 	.word	0x20004ccc

08006134 <_fwalk_sglue>:
 8006134:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006138:	4607      	mov	r7, r0
 800613a:	4688      	mov	r8, r1
 800613c:	4614      	mov	r4, r2
 800613e:	2600      	movs	r6, #0
 8006140:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006144:	f1b9 0901 	subs.w	r9, r9, #1
 8006148:	d505      	bpl.n	8006156 <_fwalk_sglue+0x22>
 800614a:	6824      	ldr	r4, [r4, #0]
 800614c:	2c00      	cmp	r4, #0
 800614e:	d1f7      	bne.n	8006140 <_fwalk_sglue+0xc>
 8006150:	4630      	mov	r0, r6
 8006152:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006156:	89ab      	ldrh	r3, [r5, #12]
 8006158:	2b01      	cmp	r3, #1
 800615a:	d907      	bls.n	800616c <_fwalk_sglue+0x38>
 800615c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006160:	3301      	adds	r3, #1
 8006162:	d003      	beq.n	800616c <_fwalk_sglue+0x38>
 8006164:	4629      	mov	r1, r5
 8006166:	4638      	mov	r0, r7
 8006168:	47c0      	blx	r8
 800616a:	4306      	orrs	r6, r0
 800616c:	3568      	adds	r5, #104	; 0x68
 800616e:	e7e9      	b.n	8006144 <_fwalk_sglue+0x10>

08006170 <iprintf>:
 8006170:	b40f      	push	{r0, r1, r2, r3}
 8006172:	b507      	push	{r0, r1, r2, lr}
 8006174:	4906      	ldr	r1, [pc, #24]	; (8006190 <iprintf+0x20>)
 8006176:	ab04      	add	r3, sp, #16
 8006178:	6808      	ldr	r0, [r1, #0]
 800617a:	f853 2b04 	ldr.w	r2, [r3], #4
 800617e:	6881      	ldr	r1, [r0, #8]
 8006180:	9301      	str	r3, [sp, #4]
 8006182:	f000 fb3d 	bl	8006800 <_vfiprintf_r>
 8006186:	b003      	add	sp, #12
 8006188:	f85d eb04 	ldr.w	lr, [sp], #4
 800618c:	b004      	add	sp, #16
 800618e:	4770      	bx	lr
 8006190:	20000090 	.word	0x20000090

08006194 <_puts_r>:
 8006194:	6a03      	ldr	r3, [r0, #32]
 8006196:	b570      	push	{r4, r5, r6, lr}
 8006198:	6884      	ldr	r4, [r0, #8]
 800619a:	4605      	mov	r5, r0
 800619c:	460e      	mov	r6, r1
 800619e:	b90b      	cbnz	r3, 80061a4 <_puts_r+0x10>
 80061a0:	f7ff ffb0 	bl	8006104 <__sinit>
 80061a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80061a6:	07db      	lsls	r3, r3, #31
 80061a8:	d405      	bmi.n	80061b6 <_puts_r+0x22>
 80061aa:	89a3      	ldrh	r3, [r4, #12]
 80061ac:	0598      	lsls	r0, r3, #22
 80061ae:	d402      	bmi.n	80061b6 <_puts_r+0x22>
 80061b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80061b2:	f000 f9f2 	bl	800659a <__retarget_lock_acquire_recursive>
 80061b6:	89a3      	ldrh	r3, [r4, #12]
 80061b8:	0719      	lsls	r1, r3, #28
 80061ba:	d513      	bpl.n	80061e4 <_puts_r+0x50>
 80061bc:	6923      	ldr	r3, [r4, #16]
 80061be:	b18b      	cbz	r3, 80061e4 <_puts_r+0x50>
 80061c0:	3e01      	subs	r6, #1
 80061c2:	68a3      	ldr	r3, [r4, #8]
 80061c4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80061c8:	3b01      	subs	r3, #1
 80061ca:	60a3      	str	r3, [r4, #8]
 80061cc:	b9e9      	cbnz	r1, 800620a <_puts_r+0x76>
 80061ce:	2b00      	cmp	r3, #0
 80061d0:	da2e      	bge.n	8006230 <_puts_r+0x9c>
 80061d2:	4622      	mov	r2, r4
 80061d4:	210a      	movs	r1, #10
 80061d6:	4628      	mov	r0, r5
 80061d8:	f000 f87b 	bl	80062d2 <__swbuf_r>
 80061dc:	3001      	adds	r0, #1
 80061de:	d007      	beq.n	80061f0 <_puts_r+0x5c>
 80061e0:	250a      	movs	r5, #10
 80061e2:	e007      	b.n	80061f4 <_puts_r+0x60>
 80061e4:	4621      	mov	r1, r4
 80061e6:	4628      	mov	r0, r5
 80061e8:	f000 f8b0 	bl	800634c <__swsetup_r>
 80061ec:	2800      	cmp	r0, #0
 80061ee:	d0e7      	beq.n	80061c0 <_puts_r+0x2c>
 80061f0:	f04f 35ff 	mov.w	r5, #4294967295
 80061f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80061f6:	07da      	lsls	r2, r3, #31
 80061f8:	d405      	bmi.n	8006206 <_puts_r+0x72>
 80061fa:	89a3      	ldrh	r3, [r4, #12]
 80061fc:	059b      	lsls	r3, r3, #22
 80061fe:	d402      	bmi.n	8006206 <_puts_r+0x72>
 8006200:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006202:	f000 f9cb 	bl	800659c <__retarget_lock_release_recursive>
 8006206:	4628      	mov	r0, r5
 8006208:	bd70      	pop	{r4, r5, r6, pc}
 800620a:	2b00      	cmp	r3, #0
 800620c:	da04      	bge.n	8006218 <_puts_r+0x84>
 800620e:	69a2      	ldr	r2, [r4, #24]
 8006210:	429a      	cmp	r2, r3
 8006212:	dc06      	bgt.n	8006222 <_puts_r+0x8e>
 8006214:	290a      	cmp	r1, #10
 8006216:	d004      	beq.n	8006222 <_puts_r+0x8e>
 8006218:	6823      	ldr	r3, [r4, #0]
 800621a:	1c5a      	adds	r2, r3, #1
 800621c:	6022      	str	r2, [r4, #0]
 800621e:	7019      	strb	r1, [r3, #0]
 8006220:	e7cf      	b.n	80061c2 <_puts_r+0x2e>
 8006222:	4622      	mov	r2, r4
 8006224:	4628      	mov	r0, r5
 8006226:	f000 f854 	bl	80062d2 <__swbuf_r>
 800622a:	3001      	adds	r0, #1
 800622c:	d1c9      	bne.n	80061c2 <_puts_r+0x2e>
 800622e:	e7df      	b.n	80061f0 <_puts_r+0x5c>
 8006230:	6823      	ldr	r3, [r4, #0]
 8006232:	250a      	movs	r5, #10
 8006234:	1c5a      	adds	r2, r3, #1
 8006236:	6022      	str	r2, [r4, #0]
 8006238:	701d      	strb	r5, [r3, #0]
 800623a:	e7db      	b.n	80061f4 <_puts_r+0x60>

0800623c <puts>:
 800623c:	4b02      	ldr	r3, [pc, #8]	; (8006248 <puts+0xc>)
 800623e:	4601      	mov	r1, r0
 8006240:	6818      	ldr	r0, [r3, #0]
 8006242:	f7ff bfa7 	b.w	8006194 <_puts_r>
 8006246:	bf00      	nop
 8006248:	20000090 	.word	0x20000090

0800624c <__sread>:
 800624c:	b510      	push	{r4, lr}
 800624e:	460c      	mov	r4, r1
 8006250:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006254:	f000 f952 	bl	80064fc <_read_r>
 8006258:	2800      	cmp	r0, #0
 800625a:	bfab      	itete	ge
 800625c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800625e:	89a3      	ldrhlt	r3, [r4, #12]
 8006260:	181b      	addge	r3, r3, r0
 8006262:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006266:	bfac      	ite	ge
 8006268:	6563      	strge	r3, [r4, #84]	; 0x54
 800626a:	81a3      	strhlt	r3, [r4, #12]
 800626c:	bd10      	pop	{r4, pc}

0800626e <__swrite>:
 800626e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006272:	461f      	mov	r7, r3
 8006274:	898b      	ldrh	r3, [r1, #12]
 8006276:	05db      	lsls	r3, r3, #23
 8006278:	4605      	mov	r5, r0
 800627a:	460c      	mov	r4, r1
 800627c:	4616      	mov	r6, r2
 800627e:	d505      	bpl.n	800628c <__swrite+0x1e>
 8006280:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006284:	2302      	movs	r3, #2
 8006286:	2200      	movs	r2, #0
 8006288:	f000 f926 	bl	80064d8 <_lseek_r>
 800628c:	89a3      	ldrh	r3, [r4, #12]
 800628e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006292:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006296:	81a3      	strh	r3, [r4, #12]
 8006298:	4632      	mov	r2, r6
 800629a:	463b      	mov	r3, r7
 800629c:	4628      	mov	r0, r5
 800629e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80062a2:	f000 b93d 	b.w	8006520 <_write_r>

080062a6 <__sseek>:
 80062a6:	b510      	push	{r4, lr}
 80062a8:	460c      	mov	r4, r1
 80062aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062ae:	f000 f913 	bl	80064d8 <_lseek_r>
 80062b2:	1c43      	adds	r3, r0, #1
 80062b4:	89a3      	ldrh	r3, [r4, #12]
 80062b6:	bf15      	itete	ne
 80062b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80062ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80062be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80062c2:	81a3      	strheq	r3, [r4, #12]
 80062c4:	bf18      	it	ne
 80062c6:	81a3      	strhne	r3, [r4, #12]
 80062c8:	bd10      	pop	{r4, pc}

080062ca <__sclose>:
 80062ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80062ce:	f000 b89d 	b.w	800640c <_close_r>

080062d2 <__swbuf_r>:
 80062d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062d4:	460e      	mov	r6, r1
 80062d6:	4614      	mov	r4, r2
 80062d8:	4605      	mov	r5, r0
 80062da:	b118      	cbz	r0, 80062e4 <__swbuf_r+0x12>
 80062dc:	6a03      	ldr	r3, [r0, #32]
 80062de:	b90b      	cbnz	r3, 80062e4 <__swbuf_r+0x12>
 80062e0:	f7ff ff10 	bl	8006104 <__sinit>
 80062e4:	69a3      	ldr	r3, [r4, #24]
 80062e6:	60a3      	str	r3, [r4, #8]
 80062e8:	89a3      	ldrh	r3, [r4, #12]
 80062ea:	071a      	lsls	r2, r3, #28
 80062ec:	d525      	bpl.n	800633a <__swbuf_r+0x68>
 80062ee:	6923      	ldr	r3, [r4, #16]
 80062f0:	b31b      	cbz	r3, 800633a <__swbuf_r+0x68>
 80062f2:	6823      	ldr	r3, [r4, #0]
 80062f4:	6922      	ldr	r2, [r4, #16]
 80062f6:	1a98      	subs	r0, r3, r2
 80062f8:	6963      	ldr	r3, [r4, #20]
 80062fa:	b2f6      	uxtb	r6, r6
 80062fc:	4283      	cmp	r3, r0
 80062fe:	4637      	mov	r7, r6
 8006300:	dc04      	bgt.n	800630c <__swbuf_r+0x3a>
 8006302:	4621      	mov	r1, r4
 8006304:	4628      	mov	r0, r5
 8006306:	f000 fdab 	bl	8006e60 <_fflush_r>
 800630a:	b9e0      	cbnz	r0, 8006346 <__swbuf_r+0x74>
 800630c:	68a3      	ldr	r3, [r4, #8]
 800630e:	3b01      	subs	r3, #1
 8006310:	60a3      	str	r3, [r4, #8]
 8006312:	6823      	ldr	r3, [r4, #0]
 8006314:	1c5a      	adds	r2, r3, #1
 8006316:	6022      	str	r2, [r4, #0]
 8006318:	701e      	strb	r6, [r3, #0]
 800631a:	6962      	ldr	r2, [r4, #20]
 800631c:	1c43      	adds	r3, r0, #1
 800631e:	429a      	cmp	r2, r3
 8006320:	d004      	beq.n	800632c <__swbuf_r+0x5a>
 8006322:	89a3      	ldrh	r3, [r4, #12]
 8006324:	07db      	lsls	r3, r3, #31
 8006326:	d506      	bpl.n	8006336 <__swbuf_r+0x64>
 8006328:	2e0a      	cmp	r6, #10
 800632a:	d104      	bne.n	8006336 <__swbuf_r+0x64>
 800632c:	4621      	mov	r1, r4
 800632e:	4628      	mov	r0, r5
 8006330:	f000 fd96 	bl	8006e60 <_fflush_r>
 8006334:	b938      	cbnz	r0, 8006346 <__swbuf_r+0x74>
 8006336:	4638      	mov	r0, r7
 8006338:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800633a:	4621      	mov	r1, r4
 800633c:	4628      	mov	r0, r5
 800633e:	f000 f805 	bl	800634c <__swsetup_r>
 8006342:	2800      	cmp	r0, #0
 8006344:	d0d5      	beq.n	80062f2 <__swbuf_r+0x20>
 8006346:	f04f 37ff 	mov.w	r7, #4294967295
 800634a:	e7f4      	b.n	8006336 <__swbuf_r+0x64>

0800634c <__swsetup_r>:
 800634c:	b538      	push	{r3, r4, r5, lr}
 800634e:	4b2a      	ldr	r3, [pc, #168]	; (80063f8 <__swsetup_r+0xac>)
 8006350:	4605      	mov	r5, r0
 8006352:	6818      	ldr	r0, [r3, #0]
 8006354:	460c      	mov	r4, r1
 8006356:	b118      	cbz	r0, 8006360 <__swsetup_r+0x14>
 8006358:	6a03      	ldr	r3, [r0, #32]
 800635a:	b90b      	cbnz	r3, 8006360 <__swsetup_r+0x14>
 800635c:	f7ff fed2 	bl	8006104 <__sinit>
 8006360:	89a3      	ldrh	r3, [r4, #12]
 8006362:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006366:	0718      	lsls	r0, r3, #28
 8006368:	d422      	bmi.n	80063b0 <__swsetup_r+0x64>
 800636a:	06d9      	lsls	r1, r3, #27
 800636c:	d407      	bmi.n	800637e <__swsetup_r+0x32>
 800636e:	2309      	movs	r3, #9
 8006370:	602b      	str	r3, [r5, #0]
 8006372:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006376:	81a3      	strh	r3, [r4, #12]
 8006378:	f04f 30ff 	mov.w	r0, #4294967295
 800637c:	e034      	b.n	80063e8 <__swsetup_r+0x9c>
 800637e:	0758      	lsls	r0, r3, #29
 8006380:	d512      	bpl.n	80063a8 <__swsetup_r+0x5c>
 8006382:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006384:	b141      	cbz	r1, 8006398 <__swsetup_r+0x4c>
 8006386:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800638a:	4299      	cmp	r1, r3
 800638c:	d002      	beq.n	8006394 <__swsetup_r+0x48>
 800638e:	4628      	mov	r0, r5
 8006390:	f000 f914 	bl	80065bc <_free_r>
 8006394:	2300      	movs	r3, #0
 8006396:	6363      	str	r3, [r4, #52]	; 0x34
 8006398:	89a3      	ldrh	r3, [r4, #12]
 800639a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800639e:	81a3      	strh	r3, [r4, #12]
 80063a0:	2300      	movs	r3, #0
 80063a2:	6063      	str	r3, [r4, #4]
 80063a4:	6923      	ldr	r3, [r4, #16]
 80063a6:	6023      	str	r3, [r4, #0]
 80063a8:	89a3      	ldrh	r3, [r4, #12]
 80063aa:	f043 0308 	orr.w	r3, r3, #8
 80063ae:	81a3      	strh	r3, [r4, #12]
 80063b0:	6923      	ldr	r3, [r4, #16]
 80063b2:	b94b      	cbnz	r3, 80063c8 <__swsetup_r+0x7c>
 80063b4:	89a3      	ldrh	r3, [r4, #12]
 80063b6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80063ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80063be:	d003      	beq.n	80063c8 <__swsetup_r+0x7c>
 80063c0:	4621      	mov	r1, r4
 80063c2:	4628      	mov	r0, r5
 80063c4:	f000 fd9a 	bl	8006efc <__smakebuf_r>
 80063c8:	89a0      	ldrh	r0, [r4, #12]
 80063ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80063ce:	f010 0301 	ands.w	r3, r0, #1
 80063d2:	d00a      	beq.n	80063ea <__swsetup_r+0x9e>
 80063d4:	2300      	movs	r3, #0
 80063d6:	60a3      	str	r3, [r4, #8]
 80063d8:	6963      	ldr	r3, [r4, #20]
 80063da:	425b      	negs	r3, r3
 80063dc:	61a3      	str	r3, [r4, #24]
 80063de:	6923      	ldr	r3, [r4, #16]
 80063e0:	b943      	cbnz	r3, 80063f4 <__swsetup_r+0xa8>
 80063e2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80063e6:	d1c4      	bne.n	8006372 <__swsetup_r+0x26>
 80063e8:	bd38      	pop	{r3, r4, r5, pc}
 80063ea:	0781      	lsls	r1, r0, #30
 80063ec:	bf58      	it	pl
 80063ee:	6963      	ldrpl	r3, [r4, #20]
 80063f0:	60a3      	str	r3, [r4, #8]
 80063f2:	e7f4      	b.n	80063de <__swsetup_r+0x92>
 80063f4:	2000      	movs	r0, #0
 80063f6:	e7f7      	b.n	80063e8 <__swsetup_r+0x9c>
 80063f8:	20000090 	.word	0x20000090

080063fc <memset>:
 80063fc:	4402      	add	r2, r0
 80063fe:	4603      	mov	r3, r0
 8006400:	4293      	cmp	r3, r2
 8006402:	d100      	bne.n	8006406 <memset+0xa>
 8006404:	4770      	bx	lr
 8006406:	f803 1b01 	strb.w	r1, [r3], #1
 800640a:	e7f9      	b.n	8006400 <memset+0x4>

0800640c <_close_r>:
 800640c:	b538      	push	{r3, r4, r5, lr}
 800640e:	4d06      	ldr	r5, [pc, #24]	; (8006428 <_close_r+0x1c>)
 8006410:	2300      	movs	r3, #0
 8006412:	4604      	mov	r4, r0
 8006414:	4608      	mov	r0, r1
 8006416:	602b      	str	r3, [r5, #0]
 8006418:	f7fa fceb 	bl	8000df2 <_close>
 800641c:	1c43      	adds	r3, r0, #1
 800641e:	d102      	bne.n	8006426 <_close_r+0x1a>
 8006420:	682b      	ldr	r3, [r5, #0]
 8006422:	b103      	cbz	r3, 8006426 <_close_r+0x1a>
 8006424:	6023      	str	r3, [r4, #0]
 8006426:	bd38      	pop	{r3, r4, r5, pc}
 8006428:	20004cd0 	.word	0x20004cd0

0800642c <_reclaim_reent>:
 800642c:	4b29      	ldr	r3, [pc, #164]	; (80064d4 <_reclaim_reent+0xa8>)
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	4283      	cmp	r3, r0
 8006432:	b570      	push	{r4, r5, r6, lr}
 8006434:	4604      	mov	r4, r0
 8006436:	d04b      	beq.n	80064d0 <_reclaim_reent+0xa4>
 8006438:	69c3      	ldr	r3, [r0, #28]
 800643a:	b143      	cbz	r3, 800644e <_reclaim_reent+0x22>
 800643c:	68db      	ldr	r3, [r3, #12]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d144      	bne.n	80064cc <_reclaim_reent+0xa0>
 8006442:	69e3      	ldr	r3, [r4, #28]
 8006444:	6819      	ldr	r1, [r3, #0]
 8006446:	b111      	cbz	r1, 800644e <_reclaim_reent+0x22>
 8006448:	4620      	mov	r0, r4
 800644a:	f000 f8b7 	bl	80065bc <_free_r>
 800644e:	6961      	ldr	r1, [r4, #20]
 8006450:	b111      	cbz	r1, 8006458 <_reclaim_reent+0x2c>
 8006452:	4620      	mov	r0, r4
 8006454:	f000 f8b2 	bl	80065bc <_free_r>
 8006458:	69e1      	ldr	r1, [r4, #28]
 800645a:	b111      	cbz	r1, 8006462 <_reclaim_reent+0x36>
 800645c:	4620      	mov	r0, r4
 800645e:	f000 f8ad 	bl	80065bc <_free_r>
 8006462:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006464:	b111      	cbz	r1, 800646c <_reclaim_reent+0x40>
 8006466:	4620      	mov	r0, r4
 8006468:	f000 f8a8 	bl	80065bc <_free_r>
 800646c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800646e:	b111      	cbz	r1, 8006476 <_reclaim_reent+0x4a>
 8006470:	4620      	mov	r0, r4
 8006472:	f000 f8a3 	bl	80065bc <_free_r>
 8006476:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8006478:	b111      	cbz	r1, 8006480 <_reclaim_reent+0x54>
 800647a:	4620      	mov	r0, r4
 800647c:	f000 f89e 	bl	80065bc <_free_r>
 8006480:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006482:	b111      	cbz	r1, 800648a <_reclaim_reent+0x5e>
 8006484:	4620      	mov	r0, r4
 8006486:	f000 f899 	bl	80065bc <_free_r>
 800648a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800648c:	b111      	cbz	r1, 8006494 <_reclaim_reent+0x68>
 800648e:	4620      	mov	r0, r4
 8006490:	f000 f894 	bl	80065bc <_free_r>
 8006494:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006496:	b111      	cbz	r1, 800649e <_reclaim_reent+0x72>
 8006498:	4620      	mov	r0, r4
 800649a:	f000 f88f 	bl	80065bc <_free_r>
 800649e:	6a23      	ldr	r3, [r4, #32]
 80064a0:	b1b3      	cbz	r3, 80064d0 <_reclaim_reent+0xa4>
 80064a2:	4620      	mov	r0, r4
 80064a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80064a8:	4718      	bx	r3
 80064aa:	5949      	ldr	r1, [r1, r5]
 80064ac:	b941      	cbnz	r1, 80064c0 <_reclaim_reent+0x94>
 80064ae:	3504      	adds	r5, #4
 80064b0:	69e3      	ldr	r3, [r4, #28]
 80064b2:	2d80      	cmp	r5, #128	; 0x80
 80064b4:	68d9      	ldr	r1, [r3, #12]
 80064b6:	d1f8      	bne.n	80064aa <_reclaim_reent+0x7e>
 80064b8:	4620      	mov	r0, r4
 80064ba:	f000 f87f 	bl	80065bc <_free_r>
 80064be:	e7c0      	b.n	8006442 <_reclaim_reent+0x16>
 80064c0:	680e      	ldr	r6, [r1, #0]
 80064c2:	4620      	mov	r0, r4
 80064c4:	f000 f87a 	bl	80065bc <_free_r>
 80064c8:	4631      	mov	r1, r6
 80064ca:	e7ef      	b.n	80064ac <_reclaim_reent+0x80>
 80064cc:	2500      	movs	r5, #0
 80064ce:	e7ef      	b.n	80064b0 <_reclaim_reent+0x84>
 80064d0:	bd70      	pop	{r4, r5, r6, pc}
 80064d2:	bf00      	nop
 80064d4:	20000090 	.word	0x20000090

080064d8 <_lseek_r>:
 80064d8:	b538      	push	{r3, r4, r5, lr}
 80064da:	4d07      	ldr	r5, [pc, #28]	; (80064f8 <_lseek_r+0x20>)
 80064dc:	4604      	mov	r4, r0
 80064de:	4608      	mov	r0, r1
 80064e0:	4611      	mov	r1, r2
 80064e2:	2200      	movs	r2, #0
 80064e4:	602a      	str	r2, [r5, #0]
 80064e6:	461a      	mov	r2, r3
 80064e8:	f7fa fcaa 	bl	8000e40 <_lseek>
 80064ec:	1c43      	adds	r3, r0, #1
 80064ee:	d102      	bne.n	80064f6 <_lseek_r+0x1e>
 80064f0:	682b      	ldr	r3, [r5, #0]
 80064f2:	b103      	cbz	r3, 80064f6 <_lseek_r+0x1e>
 80064f4:	6023      	str	r3, [r4, #0]
 80064f6:	bd38      	pop	{r3, r4, r5, pc}
 80064f8:	20004cd0 	.word	0x20004cd0

080064fc <_read_r>:
 80064fc:	b538      	push	{r3, r4, r5, lr}
 80064fe:	4d07      	ldr	r5, [pc, #28]	; (800651c <_read_r+0x20>)
 8006500:	4604      	mov	r4, r0
 8006502:	4608      	mov	r0, r1
 8006504:	4611      	mov	r1, r2
 8006506:	2200      	movs	r2, #0
 8006508:	602a      	str	r2, [r5, #0]
 800650a:	461a      	mov	r2, r3
 800650c:	f7fa fc54 	bl	8000db8 <_read>
 8006510:	1c43      	adds	r3, r0, #1
 8006512:	d102      	bne.n	800651a <_read_r+0x1e>
 8006514:	682b      	ldr	r3, [r5, #0]
 8006516:	b103      	cbz	r3, 800651a <_read_r+0x1e>
 8006518:	6023      	str	r3, [r4, #0]
 800651a:	bd38      	pop	{r3, r4, r5, pc}
 800651c:	20004cd0 	.word	0x20004cd0

08006520 <_write_r>:
 8006520:	b538      	push	{r3, r4, r5, lr}
 8006522:	4d07      	ldr	r5, [pc, #28]	; (8006540 <_write_r+0x20>)
 8006524:	4604      	mov	r4, r0
 8006526:	4608      	mov	r0, r1
 8006528:	4611      	mov	r1, r2
 800652a:	2200      	movs	r2, #0
 800652c:	602a      	str	r2, [r5, #0]
 800652e:	461a      	mov	r2, r3
 8006530:	f7fa f853 	bl	80005da <_write>
 8006534:	1c43      	adds	r3, r0, #1
 8006536:	d102      	bne.n	800653e <_write_r+0x1e>
 8006538:	682b      	ldr	r3, [r5, #0]
 800653a:	b103      	cbz	r3, 800653e <_write_r+0x1e>
 800653c:	6023      	str	r3, [r4, #0]
 800653e:	bd38      	pop	{r3, r4, r5, pc}
 8006540:	20004cd0 	.word	0x20004cd0

08006544 <__errno>:
 8006544:	4b01      	ldr	r3, [pc, #4]	; (800654c <__errno+0x8>)
 8006546:	6818      	ldr	r0, [r3, #0]
 8006548:	4770      	bx	lr
 800654a:	bf00      	nop
 800654c:	20000090 	.word	0x20000090

08006550 <__libc_init_array>:
 8006550:	b570      	push	{r4, r5, r6, lr}
 8006552:	4d0d      	ldr	r5, [pc, #52]	; (8006588 <__libc_init_array+0x38>)
 8006554:	4c0d      	ldr	r4, [pc, #52]	; (800658c <__libc_init_array+0x3c>)
 8006556:	1b64      	subs	r4, r4, r5
 8006558:	10a4      	asrs	r4, r4, #2
 800655a:	2600      	movs	r6, #0
 800655c:	42a6      	cmp	r6, r4
 800655e:	d109      	bne.n	8006574 <__libc_init_array+0x24>
 8006560:	4d0b      	ldr	r5, [pc, #44]	; (8006590 <__libc_init_array+0x40>)
 8006562:	4c0c      	ldr	r4, [pc, #48]	; (8006594 <__libc_init_array+0x44>)
 8006564:	f000 fd38 	bl	8006fd8 <_init>
 8006568:	1b64      	subs	r4, r4, r5
 800656a:	10a4      	asrs	r4, r4, #2
 800656c:	2600      	movs	r6, #0
 800656e:	42a6      	cmp	r6, r4
 8006570:	d105      	bne.n	800657e <__libc_init_array+0x2e>
 8006572:	bd70      	pop	{r4, r5, r6, pc}
 8006574:	f855 3b04 	ldr.w	r3, [r5], #4
 8006578:	4798      	blx	r3
 800657a:	3601      	adds	r6, #1
 800657c:	e7ee      	b.n	800655c <__libc_init_array+0xc>
 800657e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006582:	4798      	blx	r3
 8006584:	3601      	adds	r6, #1
 8006586:	e7f2      	b.n	800656e <__libc_init_array+0x1e>
 8006588:	0800717c 	.word	0x0800717c
 800658c:	0800717c 	.word	0x0800717c
 8006590:	0800717c 	.word	0x0800717c
 8006594:	08007180 	.word	0x08007180

08006598 <__retarget_lock_init_recursive>:
 8006598:	4770      	bx	lr

0800659a <__retarget_lock_acquire_recursive>:
 800659a:	4770      	bx	lr

0800659c <__retarget_lock_release_recursive>:
 800659c:	4770      	bx	lr

0800659e <memcpy>:
 800659e:	440a      	add	r2, r1
 80065a0:	4291      	cmp	r1, r2
 80065a2:	f100 33ff 	add.w	r3, r0, #4294967295
 80065a6:	d100      	bne.n	80065aa <memcpy+0xc>
 80065a8:	4770      	bx	lr
 80065aa:	b510      	push	{r4, lr}
 80065ac:	f811 4b01 	ldrb.w	r4, [r1], #1
 80065b0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80065b4:	4291      	cmp	r1, r2
 80065b6:	d1f9      	bne.n	80065ac <memcpy+0xe>
 80065b8:	bd10      	pop	{r4, pc}
	...

080065bc <_free_r>:
 80065bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80065be:	2900      	cmp	r1, #0
 80065c0:	d044      	beq.n	800664c <_free_r+0x90>
 80065c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80065c6:	9001      	str	r0, [sp, #4]
 80065c8:	2b00      	cmp	r3, #0
 80065ca:	f1a1 0404 	sub.w	r4, r1, #4
 80065ce:	bfb8      	it	lt
 80065d0:	18e4      	addlt	r4, r4, r3
 80065d2:	f000 f8df 	bl	8006794 <__malloc_lock>
 80065d6:	4a1e      	ldr	r2, [pc, #120]	; (8006650 <_free_r+0x94>)
 80065d8:	9801      	ldr	r0, [sp, #4]
 80065da:	6813      	ldr	r3, [r2, #0]
 80065dc:	b933      	cbnz	r3, 80065ec <_free_r+0x30>
 80065de:	6063      	str	r3, [r4, #4]
 80065e0:	6014      	str	r4, [r2, #0]
 80065e2:	b003      	add	sp, #12
 80065e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80065e8:	f000 b8da 	b.w	80067a0 <__malloc_unlock>
 80065ec:	42a3      	cmp	r3, r4
 80065ee:	d908      	bls.n	8006602 <_free_r+0x46>
 80065f0:	6825      	ldr	r5, [r4, #0]
 80065f2:	1961      	adds	r1, r4, r5
 80065f4:	428b      	cmp	r3, r1
 80065f6:	bf01      	itttt	eq
 80065f8:	6819      	ldreq	r1, [r3, #0]
 80065fa:	685b      	ldreq	r3, [r3, #4]
 80065fc:	1949      	addeq	r1, r1, r5
 80065fe:	6021      	streq	r1, [r4, #0]
 8006600:	e7ed      	b.n	80065de <_free_r+0x22>
 8006602:	461a      	mov	r2, r3
 8006604:	685b      	ldr	r3, [r3, #4]
 8006606:	b10b      	cbz	r3, 800660c <_free_r+0x50>
 8006608:	42a3      	cmp	r3, r4
 800660a:	d9fa      	bls.n	8006602 <_free_r+0x46>
 800660c:	6811      	ldr	r1, [r2, #0]
 800660e:	1855      	adds	r5, r2, r1
 8006610:	42a5      	cmp	r5, r4
 8006612:	d10b      	bne.n	800662c <_free_r+0x70>
 8006614:	6824      	ldr	r4, [r4, #0]
 8006616:	4421      	add	r1, r4
 8006618:	1854      	adds	r4, r2, r1
 800661a:	42a3      	cmp	r3, r4
 800661c:	6011      	str	r1, [r2, #0]
 800661e:	d1e0      	bne.n	80065e2 <_free_r+0x26>
 8006620:	681c      	ldr	r4, [r3, #0]
 8006622:	685b      	ldr	r3, [r3, #4]
 8006624:	6053      	str	r3, [r2, #4]
 8006626:	440c      	add	r4, r1
 8006628:	6014      	str	r4, [r2, #0]
 800662a:	e7da      	b.n	80065e2 <_free_r+0x26>
 800662c:	d902      	bls.n	8006634 <_free_r+0x78>
 800662e:	230c      	movs	r3, #12
 8006630:	6003      	str	r3, [r0, #0]
 8006632:	e7d6      	b.n	80065e2 <_free_r+0x26>
 8006634:	6825      	ldr	r5, [r4, #0]
 8006636:	1961      	adds	r1, r4, r5
 8006638:	428b      	cmp	r3, r1
 800663a:	bf04      	itt	eq
 800663c:	6819      	ldreq	r1, [r3, #0]
 800663e:	685b      	ldreq	r3, [r3, #4]
 8006640:	6063      	str	r3, [r4, #4]
 8006642:	bf04      	itt	eq
 8006644:	1949      	addeq	r1, r1, r5
 8006646:	6021      	streq	r1, [r4, #0]
 8006648:	6054      	str	r4, [r2, #4]
 800664a:	e7ca      	b.n	80065e2 <_free_r+0x26>
 800664c:	b003      	add	sp, #12
 800664e:	bd30      	pop	{r4, r5, pc}
 8006650:	20004cd8 	.word	0x20004cd8

08006654 <sbrk_aligned>:
 8006654:	b570      	push	{r4, r5, r6, lr}
 8006656:	4e0e      	ldr	r6, [pc, #56]	; (8006690 <sbrk_aligned+0x3c>)
 8006658:	460c      	mov	r4, r1
 800665a:	6831      	ldr	r1, [r6, #0]
 800665c:	4605      	mov	r5, r0
 800665e:	b911      	cbnz	r1, 8006666 <sbrk_aligned+0x12>
 8006660:	f000 fcaa 	bl	8006fb8 <_sbrk_r>
 8006664:	6030      	str	r0, [r6, #0]
 8006666:	4621      	mov	r1, r4
 8006668:	4628      	mov	r0, r5
 800666a:	f000 fca5 	bl	8006fb8 <_sbrk_r>
 800666e:	1c43      	adds	r3, r0, #1
 8006670:	d00a      	beq.n	8006688 <sbrk_aligned+0x34>
 8006672:	1cc4      	adds	r4, r0, #3
 8006674:	f024 0403 	bic.w	r4, r4, #3
 8006678:	42a0      	cmp	r0, r4
 800667a:	d007      	beq.n	800668c <sbrk_aligned+0x38>
 800667c:	1a21      	subs	r1, r4, r0
 800667e:	4628      	mov	r0, r5
 8006680:	f000 fc9a 	bl	8006fb8 <_sbrk_r>
 8006684:	3001      	adds	r0, #1
 8006686:	d101      	bne.n	800668c <sbrk_aligned+0x38>
 8006688:	f04f 34ff 	mov.w	r4, #4294967295
 800668c:	4620      	mov	r0, r4
 800668e:	bd70      	pop	{r4, r5, r6, pc}
 8006690:	20004cdc 	.word	0x20004cdc

08006694 <_malloc_r>:
 8006694:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006698:	1ccd      	adds	r5, r1, #3
 800669a:	f025 0503 	bic.w	r5, r5, #3
 800669e:	3508      	adds	r5, #8
 80066a0:	2d0c      	cmp	r5, #12
 80066a2:	bf38      	it	cc
 80066a4:	250c      	movcc	r5, #12
 80066a6:	2d00      	cmp	r5, #0
 80066a8:	4607      	mov	r7, r0
 80066aa:	db01      	blt.n	80066b0 <_malloc_r+0x1c>
 80066ac:	42a9      	cmp	r1, r5
 80066ae:	d905      	bls.n	80066bc <_malloc_r+0x28>
 80066b0:	230c      	movs	r3, #12
 80066b2:	603b      	str	r3, [r7, #0]
 80066b4:	2600      	movs	r6, #0
 80066b6:	4630      	mov	r0, r6
 80066b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80066bc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8006790 <_malloc_r+0xfc>
 80066c0:	f000 f868 	bl	8006794 <__malloc_lock>
 80066c4:	f8d8 3000 	ldr.w	r3, [r8]
 80066c8:	461c      	mov	r4, r3
 80066ca:	bb5c      	cbnz	r4, 8006724 <_malloc_r+0x90>
 80066cc:	4629      	mov	r1, r5
 80066ce:	4638      	mov	r0, r7
 80066d0:	f7ff ffc0 	bl	8006654 <sbrk_aligned>
 80066d4:	1c43      	adds	r3, r0, #1
 80066d6:	4604      	mov	r4, r0
 80066d8:	d155      	bne.n	8006786 <_malloc_r+0xf2>
 80066da:	f8d8 4000 	ldr.w	r4, [r8]
 80066de:	4626      	mov	r6, r4
 80066e0:	2e00      	cmp	r6, #0
 80066e2:	d145      	bne.n	8006770 <_malloc_r+0xdc>
 80066e4:	2c00      	cmp	r4, #0
 80066e6:	d048      	beq.n	800677a <_malloc_r+0xe6>
 80066e8:	6823      	ldr	r3, [r4, #0]
 80066ea:	4631      	mov	r1, r6
 80066ec:	4638      	mov	r0, r7
 80066ee:	eb04 0903 	add.w	r9, r4, r3
 80066f2:	f000 fc61 	bl	8006fb8 <_sbrk_r>
 80066f6:	4581      	cmp	r9, r0
 80066f8:	d13f      	bne.n	800677a <_malloc_r+0xe6>
 80066fa:	6821      	ldr	r1, [r4, #0]
 80066fc:	1a6d      	subs	r5, r5, r1
 80066fe:	4629      	mov	r1, r5
 8006700:	4638      	mov	r0, r7
 8006702:	f7ff ffa7 	bl	8006654 <sbrk_aligned>
 8006706:	3001      	adds	r0, #1
 8006708:	d037      	beq.n	800677a <_malloc_r+0xe6>
 800670a:	6823      	ldr	r3, [r4, #0]
 800670c:	442b      	add	r3, r5
 800670e:	6023      	str	r3, [r4, #0]
 8006710:	f8d8 3000 	ldr.w	r3, [r8]
 8006714:	2b00      	cmp	r3, #0
 8006716:	d038      	beq.n	800678a <_malloc_r+0xf6>
 8006718:	685a      	ldr	r2, [r3, #4]
 800671a:	42a2      	cmp	r2, r4
 800671c:	d12b      	bne.n	8006776 <_malloc_r+0xe2>
 800671e:	2200      	movs	r2, #0
 8006720:	605a      	str	r2, [r3, #4]
 8006722:	e00f      	b.n	8006744 <_malloc_r+0xb0>
 8006724:	6822      	ldr	r2, [r4, #0]
 8006726:	1b52      	subs	r2, r2, r5
 8006728:	d41f      	bmi.n	800676a <_malloc_r+0xd6>
 800672a:	2a0b      	cmp	r2, #11
 800672c:	d917      	bls.n	800675e <_malloc_r+0xca>
 800672e:	1961      	adds	r1, r4, r5
 8006730:	42a3      	cmp	r3, r4
 8006732:	6025      	str	r5, [r4, #0]
 8006734:	bf18      	it	ne
 8006736:	6059      	strne	r1, [r3, #4]
 8006738:	6863      	ldr	r3, [r4, #4]
 800673a:	bf08      	it	eq
 800673c:	f8c8 1000 	streq.w	r1, [r8]
 8006740:	5162      	str	r2, [r4, r5]
 8006742:	604b      	str	r3, [r1, #4]
 8006744:	4638      	mov	r0, r7
 8006746:	f104 060b 	add.w	r6, r4, #11
 800674a:	f000 f829 	bl	80067a0 <__malloc_unlock>
 800674e:	f026 0607 	bic.w	r6, r6, #7
 8006752:	1d23      	adds	r3, r4, #4
 8006754:	1af2      	subs	r2, r6, r3
 8006756:	d0ae      	beq.n	80066b6 <_malloc_r+0x22>
 8006758:	1b9b      	subs	r3, r3, r6
 800675a:	50a3      	str	r3, [r4, r2]
 800675c:	e7ab      	b.n	80066b6 <_malloc_r+0x22>
 800675e:	42a3      	cmp	r3, r4
 8006760:	6862      	ldr	r2, [r4, #4]
 8006762:	d1dd      	bne.n	8006720 <_malloc_r+0x8c>
 8006764:	f8c8 2000 	str.w	r2, [r8]
 8006768:	e7ec      	b.n	8006744 <_malloc_r+0xb0>
 800676a:	4623      	mov	r3, r4
 800676c:	6864      	ldr	r4, [r4, #4]
 800676e:	e7ac      	b.n	80066ca <_malloc_r+0x36>
 8006770:	4634      	mov	r4, r6
 8006772:	6876      	ldr	r6, [r6, #4]
 8006774:	e7b4      	b.n	80066e0 <_malloc_r+0x4c>
 8006776:	4613      	mov	r3, r2
 8006778:	e7cc      	b.n	8006714 <_malloc_r+0x80>
 800677a:	230c      	movs	r3, #12
 800677c:	603b      	str	r3, [r7, #0]
 800677e:	4638      	mov	r0, r7
 8006780:	f000 f80e 	bl	80067a0 <__malloc_unlock>
 8006784:	e797      	b.n	80066b6 <_malloc_r+0x22>
 8006786:	6025      	str	r5, [r4, #0]
 8006788:	e7dc      	b.n	8006744 <_malloc_r+0xb0>
 800678a:	605b      	str	r3, [r3, #4]
 800678c:	deff      	udf	#255	; 0xff
 800678e:	bf00      	nop
 8006790:	20004cd8 	.word	0x20004cd8

08006794 <__malloc_lock>:
 8006794:	4801      	ldr	r0, [pc, #4]	; (800679c <__malloc_lock+0x8>)
 8006796:	f7ff bf00 	b.w	800659a <__retarget_lock_acquire_recursive>
 800679a:	bf00      	nop
 800679c:	20004cd4 	.word	0x20004cd4

080067a0 <__malloc_unlock>:
 80067a0:	4801      	ldr	r0, [pc, #4]	; (80067a8 <__malloc_unlock+0x8>)
 80067a2:	f7ff befb 	b.w	800659c <__retarget_lock_release_recursive>
 80067a6:	bf00      	nop
 80067a8:	20004cd4 	.word	0x20004cd4

080067ac <__sfputc_r>:
 80067ac:	6893      	ldr	r3, [r2, #8]
 80067ae:	3b01      	subs	r3, #1
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	b410      	push	{r4}
 80067b4:	6093      	str	r3, [r2, #8]
 80067b6:	da08      	bge.n	80067ca <__sfputc_r+0x1e>
 80067b8:	6994      	ldr	r4, [r2, #24]
 80067ba:	42a3      	cmp	r3, r4
 80067bc:	db01      	blt.n	80067c2 <__sfputc_r+0x16>
 80067be:	290a      	cmp	r1, #10
 80067c0:	d103      	bne.n	80067ca <__sfputc_r+0x1e>
 80067c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80067c6:	f7ff bd84 	b.w	80062d2 <__swbuf_r>
 80067ca:	6813      	ldr	r3, [r2, #0]
 80067cc:	1c58      	adds	r0, r3, #1
 80067ce:	6010      	str	r0, [r2, #0]
 80067d0:	7019      	strb	r1, [r3, #0]
 80067d2:	4608      	mov	r0, r1
 80067d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80067d8:	4770      	bx	lr

080067da <__sfputs_r>:
 80067da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067dc:	4606      	mov	r6, r0
 80067de:	460f      	mov	r7, r1
 80067e0:	4614      	mov	r4, r2
 80067e2:	18d5      	adds	r5, r2, r3
 80067e4:	42ac      	cmp	r4, r5
 80067e6:	d101      	bne.n	80067ec <__sfputs_r+0x12>
 80067e8:	2000      	movs	r0, #0
 80067ea:	e007      	b.n	80067fc <__sfputs_r+0x22>
 80067ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80067f0:	463a      	mov	r2, r7
 80067f2:	4630      	mov	r0, r6
 80067f4:	f7ff ffda 	bl	80067ac <__sfputc_r>
 80067f8:	1c43      	adds	r3, r0, #1
 80067fa:	d1f3      	bne.n	80067e4 <__sfputs_r+0xa>
 80067fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006800 <_vfiprintf_r>:
 8006800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006804:	460d      	mov	r5, r1
 8006806:	b09d      	sub	sp, #116	; 0x74
 8006808:	4614      	mov	r4, r2
 800680a:	4698      	mov	r8, r3
 800680c:	4606      	mov	r6, r0
 800680e:	b118      	cbz	r0, 8006818 <_vfiprintf_r+0x18>
 8006810:	6a03      	ldr	r3, [r0, #32]
 8006812:	b90b      	cbnz	r3, 8006818 <_vfiprintf_r+0x18>
 8006814:	f7ff fc76 	bl	8006104 <__sinit>
 8006818:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800681a:	07d9      	lsls	r1, r3, #31
 800681c:	d405      	bmi.n	800682a <_vfiprintf_r+0x2a>
 800681e:	89ab      	ldrh	r3, [r5, #12]
 8006820:	059a      	lsls	r2, r3, #22
 8006822:	d402      	bmi.n	800682a <_vfiprintf_r+0x2a>
 8006824:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006826:	f7ff feb8 	bl	800659a <__retarget_lock_acquire_recursive>
 800682a:	89ab      	ldrh	r3, [r5, #12]
 800682c:	071b      	lsls	r3, r3, #28
 800682e:	d501      	bpl.n	8006834 <_vfiprintf_r+0x34>
 8006830:	692b      	ldr	r3, [r5, #16]
 8006832:	b99b      	cbnz	r3, 800685c <_vfiprintf_r+0x5c>
 8006834:	4629      	mov	r1, r5
 8006836:	4630      	mov	r0, r6
 8006838:	f7ff fd88 	bl	800634c <__swsetup_r>
 800683c:	b170      	cbz	r0, 800685c <_vfiprintf_r+0x5c>
 800683e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006840:	07dc      	lsls	r4, r3, #31
 8006842:	d504      	bpl.n	800684e <_vfiprintf_r+0x4e>
 8006844:	f04f 30ff 	mov.w	r0, #4294967295
 8006848:	b01d      	add	sp, #116	; 0x74
 800684a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800684e:	89ab      	ldrh	r3, [r5, #12]
 8006850:	0598      	lsls	r0, r3, #22
 8006852:	d4f7      	bmi.n	8006844 <_vfiprintf_r+0x44>
 8006854:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006856:	f7ff fea1 	bl	800659c <__retarget_lock_release_recursive>
 800685a:	e7f3      	b.n	8006844 <_vfiprintf_r+0x44>
 800685c:	2300      	movs	r3, #0
 800685e:	9309      	str	r3, [sp, #36]	; 0x24
 8006860:	2320      	movs	r3, #32
 8006862:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006866:	f8cd 800c 	str.w	r8, [sp, #12]
 800686a:	2330      	movs	r3, #48	; 0x30
 800686c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8006a20 <_vfiprintf_r+0x220>
 8006870:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006874:	f04f 0901 	mov.w	r9, #1
 8006878:	4623      	mov	r3, r4
 800687a:	469a      	mov	sl, r3
 800687c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006880:	b10a      	cbz	r2, 8006886 <_vfiprintf_r+0x86>
 8006882:	2a25      	cmp	r2, #37	; 0x25
 8006884:	d1f9      	bne.n	800687a <_vfiprintf_r+0x7a>
 8006886:	ebba 0b04 	subs.w	fp, sl, r4
 800688a:	d00b      	beq.n	80068a4 <_vfiprintf_r+0xa4>
 800688c:	465b      	mov	r3, fp
 800688e:	4622      	mov	r2, r4
 8006890:	4629      	mov	r1, r5
 8006892:	4630      	mov	r0, r6
 8006894:	f7ff ffa1 	bl	80067da <__sfputs_r>
 8006898:	3001      	adds	r0, #1
 800689a:	f000 80a9 	beq.w	80069f0 <_vfiprintf_r+0x1f0>
 800689e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80068a0:	445a      	add	r2, fp
 80068a2:	9209      	str	r2, [sp, #36]	; 0x24
 80068a4:	f89a 3000 	ldrb.w	r3, [sl]
 80068a8:	2b00      	cmp	r3, #0
 80068aa:	f000 80a1 	beq.w	80069f0 <_vfiprintf_r+0x1f0>
 80068ae:	2300      	movs	r3, #0
 80068b0:	f04f 32ff 	mov.w	r2, #4294967295
 80068b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80068b8:	f10a 0a01 	add.w	sl, sl, #1
 80068bc:	9304      	str	r3, [sp, #16]
 80068be:	9307      	str	r3, [sp, #28]
 80068c0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80068c4:	931a      	str	r3, [sp, #104]	; 0x68
 80068c6:	4654      	mov	r4, sl
 80068c8:	2205      	movs	r2, #5
 80068ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80068ce:	4854      	ldr	r0, [pc, #336]	; (8006a20 <_vfiprintf_r+0x220>)
 80068d0:	f7f9 fc8e 	bl	80001f0 <memchr>
 80068d4:	9a04      	ldr	r2, [sp, #16]
 80068d6:	b9d8      	cbnz	r0, 8006910 <_vfiprintf_r+0x110>
 80068d8:	06d1      	lsls	r1, r2, #27
 80068da:	bf44      	itt	mi
 80068dc:	2320      	movmi	r3, #32
 80068de:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80068e2:	0713      	lsls	r3, r2, #28
 80068e4:	bf44      	itt	mi
 80068e6:	232b      	movmi	r3, #43	; 0x2b
 80068e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80068ec:	f89a 3000 	ldrb.w	r3, [sl]
 80068f0:	2b2a      	cmp	r3, #42	; 0x2a
 80068f2:	d015      	beq.n	8006920 <_vfiprintf_r+0x120>
 80068f4:	9a07      	ldr	r2, [sp, #28]
 80068f6:	4654      	mov	r4, sl
 80068f8:	2000      	movs	r0, #0
 80068fa:	f04f 0c0a 	mov.w	ip, #10
 80068fe:	4621      	mov	r1, r4
 8006900:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006904:	3b30      	subs	r3, #48	; 0x30
 8006906:	2b09      	cmp	r3, #9
 8006908:	d94d      	bls.n	80069a6 <_vfiprintf_r+0x1a6>
 800690a:	b1b0      	cbz	r0, 800693a <_vfiprintf_r+0x13a>
 800690c:	9207      	str	r2, [sp, #28]
 800690e:	e014      	b.n	800693a <_vfiprintf_r+0x13a>
 8006910:	eba0 0308 	sub.w	r3, r0, r8
 8006914:	fa09 f303 	lsl.w	r3, r9, r3
 8006918:	4313      	orrs	r3, r2
 800691a:	9304      	str	r3, [sp, #16]
 800691c:	46a2      	mov	sl, r4
 800691e:	e7d2      	b.n	80068c6 <_vfiprintf_r+0xc6>
 8006920:	9b03      	ldr	r3, [sp, #12]
 8006922:	1d19      	adds	r1, r3, #4
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	9103      	str	r1, [sp, #12]
 8006928:	2b00      	cmp	r3, #0
 800692a:	bfbb      	ittet	lt
 800692c:	425b      	neglt	r3, r3
 800692e:	f042 0202 	orrlt.w	r2, r2, #2
 8006932:	9307      	strge	r3, [sp, #28]
 8006934:	9307      	strlt	r3, [sp, #28]
 8006936:	bfb8      	it	lt
 8006938:	9204      	strlt	r2, [sp, #16]
 800693a:	7823      	ldrb	r3, [r4, #0]
 800693c:	2b2e      	cmp	r3, #46	; 0x2e
 800693e:	d10c      	bne.n	800695a <_vfiprintf_r+0x15a>
 8006940:	7863      	ldrb	r3, [r4, #1]
 8006942:	2b2a      	cmp	r3, #42	; 0x2a
 8006944:	d134      	bne.n	80069b0 <_vfiprintf_r+0x1b0>
 8006946:	9b03      	ldr	r3, [sp, #12]
 8006948:	1d1a      	adds	r2, r3, #4
 800694a:	681b      	ldr	r3, [r3, #0]
 800694c:	9203      	str	r2, [sp, #12]
 800694e:	2b00      	cmp	r3, #0
 8006950:	bfb8      	it	lt
 8006952:	f04f 33ff 	movlt.w	r3, #4294967295
 8006956:	3402      	adds	r4, #2
 8006958:	9305      	str	r3, [sp, #20]
 800695a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8006a30 <_vfiprintf_r+0x230>
 800695e:	7821      	ldrb	r1, [r4, #0]
 8006960:	2203      	movs	r2, #3
 8006962:	4650      	mov	r0, sl
 8006964:	f7f9 fc44 	bl	80001f0 <memchr>
 8006968:	b138      	cbz	r0, 800697a <_vfiprintf_r+0x17a>
 800696a:	9b04      	ldr	r3, [sp, #16]
 800696c:	eba0 000a 	sub.w	r0, r0, sl
 8006970:	2240      	movs	r2, #64	; 0x40
 8006972:	4082      	lsls	r2, r0
 8006974:	4313      	orrs	r3, r2
 8006976:	3401      	adds	r4, #1
 8006978:	9304      	str	r3, [sp, #16]
 800697a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800697e:	4829      	ldr	r0, [pc, #164]	; (8006a24 <_vfiprintf_r+0x224>)
 8006980:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006984:	2206      	movs	r2, #6
 8006986:	f7f9 fc33 	bl	80001f0 <memchr>
 800698a:	2800      	cmp	r0, #0
 800698c:	d03f      	beq.n	8006a0e <_vfiprintf_r+0x20e>
 800698e:	4b26      	ldr	r3, [pc, #152]	; (8006a28 <_vfiprintf_r+0x228>)
 8006990:	bb1b      	cbnz	r3, 80069da <_vfiprintf_r+0x1da>
 8006992:	9b03      	ldr	r3, [sp, #12]
 8006994:	3307      	adds	r3, #7
 8006996:	f023 0307 	bic.w	r3, r3, #7
 800699a:	3308      	adds	r3, #8
 800699c:	9303      	str	r3, [sp, #12]
 800699e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80069a0:	443b      	add	r3, r7
 80069a2:	9309      	str	r3, [sp, #36]	; 0x24
 80069a4:	e768      	b.n	8006878 <_vfiprintf_r+0x78>
 80069a6:	fb0c 3202 	mla	r2, ip, r2, r3
 80069aa:	460c      	mov	r4, r1
 80069ac:	2001      	movs	r0, #1
 80069ae:	e7a6      	b.n	80068fe <_vfiprintf_r+0xfe>
 80069b0:	2300      	movs	r3, #0
 80069b2:	3401      	adds	r4, #1
 80069b4:	9305      	str	r3, [sp, #20]
 80069b6:	4619      	mov	r1, r3
 80069b8:	f04f 0c0a 	mov.w	ip, #10
 80069bc:	4620      	mov	r0, r4
 80069be:	f810 2b01 	ldrb.w	r2, [r0], #1
 80069c2:	3a30      	subs	r2, #48	; 0x30
 80069c4:	2a09      	cmp	r2, #9
 80069c6:	d903      	bls.n	80069d0 <_vfiprintf_r+0x1d0>
 80069c8:	2b00      	cmp	r3, #0
 80069ca:	d0c6      	beq.n	800695a <_vfiprintf_r+0x15a>
 80069cc:	9105      	str	r1, [sp, #20]
 80069ce:	e7c4      	b.n	800695a <_vfiprintf_r+0x15a>
 80069d0:	fb0c 2101 	mla	r1, ip, r1, r2
 80069d4:	4604      	mov	r4, r0
 80069d6:	2301      	movs	r3, #1
 80069d8:	e7f0      	b.n	80069bc <_vfiprintf_r+0x1bc>
 80069da:	ab03      	add	r3, sp, #12
 80069dc:	9300      	str	r3, [sp, #0]
 80069de:	462a      	mov	r2, r5
 80069e0:	4b12      	ldr	r3, [pc, #72]	; (8006a2c <_vfiprintf_r+0x22c>)
 80069e2:	a904      	add	r1, sp, #16
 80069e4:	4630      	mov	r0, r6
 80069e6:	f3af 8000 	nop.w
 80069ea:	4607      	mov	r7, r0
 80069ec:	1c78      	adds	r0, r7, #1
 80069ee:	d1d6      	bne.n	800699e <_vfiprintf_r+0x19e>
 80069f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80069f2:	07d9      	lsls	r1, r3, #31
 80069f4:	d405      	bmi.n	8006a02 <_vfiprintf_r+0x202>
 80069f6:	89ab      	ldrh	r3, [r5, #12]
 80069f8:	059a      	lsls	r2, r3, #22
 80069fa:	d402      	bmi.n	8006a02 <_vfiprintf_r+0x202>
 80069fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80069fe:	f7ff fdcd 	bl	800659c <__retarget_lock_release_recursive>
 8006a02:	89ab      	ldrh	r3, [r5, #12]
 8006a04:	065b      	lsls	r3, r3, #25
 8006a06:	f53f af1d 	bmi.w	8006844 <_vfiprintf_r+0x44>
 8006a0a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a0c:	e71c      	b.n	8006848 <_vfiprintf_r+0x48>
 8006a0e:	ab03      	add	r3, sp, #12
 8006a10:	9300      	str	r3, [sp, #0]
 8006a12:	462a      	mov	r2, r5
 8006a14:	4b05      	ldr	r3, [pc, #20]	; (8006a2c <_vfiprintf_r+0x22c>)
 8006a16:	a904      	add	r1, sp, #16
 8006a18:	4630      	mov	r0, r6
 8006a1a:	f000 f879 	bl	8006b10 <_printf_i>
 8006a1e:	e7e4      	b.n	80069ea <_vfiprintf_r+0x1ea>
 8006a20:	08007140 	.word	0x08007140
 8006a24:	0800714a 	.word	0x0800714a
 8006a28:	00000000 	.word	0x00000000
 8006a2c:	080067db 	.word	0x080067db
 8006a30:	08007146 	.word	0x08007146

08006a34 <_printf_common>:
 8006a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006a38:	4616      	mov	r6, r2
 8006a3a:	4699      	mov	r9, r3
 8006a3c:	688a      	ldr	r2, [r1, #8]
 8006a3e:	690b      	ldr	r3, [r1, #16]
 8006a40:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006a44:	4293      	cmp	r3, r2
 8006a46:	bfb8      	it	lt
 8006a48:	4613      	movlt	r3, r2
 8006a4a:	6033      	str	r3, [r6, #0]
 8006a4c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006a50:	4607      	mov	r7, r0
 8006a52:	460c      	mov	r4, r1
 8006a54:	b10a      	cbz	r2, 8006a5a <_printf_common+0x26>
 8006a56:	3301      	adds	r3, #1
 8006a58:	6033      	str	r3, [r6, #0]
 8006a5a:	6823      	ldr	r3, [r4, #0]
 8006a5c:	0699      	lsls	r1, r3, #26
 8006a5e:	bf42      	ittt	mi
 8006a60:	6833      	ldrmi	r3, [r6, #0]
 8006a62:	3302      	addmi	r3, #2
 8006a64:	6033      	strmi	r3, [r6, #0]
 8006a66:	6825      	ldr	r5, [r4, #0]
 8006a68:	f015 0506 	ands.w	r5, r5, #6
 8006a6c:	d106      	bne.n	8006a7c <_printf_common+0x48>
 8006a6e:	f104 0a19 	add.w	sl, r4, #25
 8006a72:	68e3      	ldr	r3, [r4, #12]
 8006a74:	6832      	ldr	r2, [r6, #0]
 8006a76:	1a9b      	subs	r3, r3, r2
 8006a78:	42ab      	cmp	r3, r5
 8006a7a:	dc26      	bgt.n	8006aca <_printf_common+0x96>
 8006a7c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8006a80:	1e13      	subs	r3, r2, #0
 8006a82:	6822      	ldr	r2, [r4, #0]
 8006a84:	bf18      	it	ne
 8006a86:	2301      	movne	r3, #1
 8006a88:	0692      	lsls	r2, r2, #26
 8006a8a:	d42b      	bmi.n	8006ae4 <_printf_common+0xb0>
 8006a8c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006a90:	4649      	mov	r1, r9
 8006a92:	4638      	mov	r0, r7
 8006a94:	47c0      	blx	r8
 8006a96:	3001      	adds	r0, #1
 8006a98:	d01e      	beq.n	8006ad8 <_printf_common+0xa4>
 8006a9a:	6823      	ldr	r3, [r4, #0]
 8006a9c:	6922      	ldr	r2, [r4, #16]
 8006a9e:	f003 0306 	and.w	r3, r3, #6
 8006aa2:	2b04      	cmp	r3, #4
 8006aa4:	bf02      	ittt	eq
 8006aa6:	68e5      	ldreq	r5, [r4, #12]
 8006aa8:	6833      	ldreq	r3, [r6, #0]
 8006aaa:	1aed      	subeq	r5, r5, r3
 8006aac:	68a3      	ldr	r3, [r4, #8]
 8006aae:	bf0c      	ite	eq
 8006ab0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006ab4:	2500      	movne	r5, #0
 8006ab6:	4293      	cmp	r3, r2
 8006ab8:	bfc4      	itt	gt
 8006aba:	1a9b      	subgt	r3, r3, r2
 8006abc:	18ed      	addgt	r5, r5, r3
 8006abe:	2600      	movs	r6, #0
 8006ac0:	341a      	adds	r4, #26
 8006ac2:	42b5      	cmp	r5, r6
 8006ac4:	d11a      	bne.n	8006afc <_printf_common+0xc8>
 8006ac6:	2000      	movs	r0, #0
 8006ac8:	e008      	b.n	8006adc <_printf_common+0xa8>
 8006aca:	2301      	movs	r3, #1
 8006acc:	4652      	mov	r2, sl
 8006ace:	4649      	mov	r1, r9
 8006ad0:	4638      	mov	r0, r7
 8006ad2:	47c0      	blx	r8
 8006ad4:	3001      	adds	r0, #1
 8006ad6:	d103      	bne.n	8006ae0 <_printf_common+0xac>
 8006ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8006adc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ae0:	3501      	adds	r5, #1
 8006ae2:	e7c6      	b.n	8006a72 <_printf_common+0x3e>
 8006ae4:	18e1      	adds	r1, r4, r3
 8006ae6:	1c5a      	adds	r2, r3, #1
 8006ae8:	2030      	movs	r0, #48	; 0x30
 8006aea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8006aee:	4422      	add	r2, r4
 8006af0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006af4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006af8:	3302      	adds	r3, #2
 8006afa:	e7c7      	b.n	8006a8c <_printf_common+0x58>
 8006afc:	2301      	movs	r3, #1
 8006afe:	4622      	mov	r2, r4
 8006b00:	4649      	mov	r1, r9
 8006b02:	4638      	mov	r0, r7
 8006b04:	47c0      	blx	r8
 8006b06:	3001      	adds	r0, #1
 8006b08:	d0e6      	beq.n	8006ad8 <_printf_common+0xa4>
 8006b0a:	3601      	adds	r6, #1
 8006b0c:	e7d9      	b.n	8006ac2 <_printf_common+0x8e>
	...

08006b10 <_printf_i>:
 8006b10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006b14:	7e0f      	ldrb	r7, [r1, #24]
 8006b16:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8006b18:	2f78      	cmp	r7, #120	; 0x78
 8006b1a:	4691      	mov	r9, r2
 8006b1c:	4680      	mov	r8, r0
 8006b1e:	460c      	mov	r4, r1
 8006b20:	469a      	mov	sl, r3
 8006b22:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8006b26:	d807      	bhi.n	8006b38 <_printf_i+0x28>
 8006b28:	2f62      	cmp	r7, #98	; 0x62
 8006b2a:	d80a      	bhi.n	8006b42 <_printf_i+0x32>
 8006b2c:	2f00      	cmp	r7, #0
 8006b2e:	f000 80d4 	beq.w	8006cda <_printf_i+0x1ca>
 8006b32:	2f58      	cmp	r7, #88	; 0x58
 8006b34:	f000 80c0 	beq.w	8006cb8 <_printf_i+0x1a8>
 8006b38:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006b3c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8006b40:	e03a      	b.n	8006bb8 <_printf_i+0xa8>
 8006b42:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8006b46:	2b15      	cmp	r3, #21
 8006b48:	d8f6      	bhi.n	8006b38 <_printf_i+0x28>
 8006b4a:	a101      	add	r1, pc, #4	; (adr r1, 8006b50 <_printf_i+0x40>)
 8006b4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006b50:	08006ba9 	.word	0x08006ba9
 8006b54:	08006bbd 	.word	0x08006bbd
 8006b58:	08006b39 	.word	0x08006b39
 8006b5c:	08006b39 	.word	0x08006b39
 8006b60:	08006b39 	.word	0x08006b39
 8006b64:	08006b39 	.word	0x08006b39
 8006b68:	08006bbd 	.word	0x08006bbd
 8006b6c:	08006b39 	.word	0x08006b39
 8006b70:	08006b39 	.word	0x08006b39
 8006b74:	08006b39 	.word	0x08006b39
 8006b78:	08006b39 	.word	0x08006b39
 8006b7c:	08006cc1 	.word	0x08006cc1
 8006b80:	08006be9 	.word	0x08006be9
 8006b84:	08006c7b 	.word	0x08006c7b
 8006b88:	08006b39 	.word	0x08006b39
 8006b8c:	08006b39 	.word	0x08006b39
 8006b90:	08006ce3 	.word	0x08006ce3
 8006b94:	08006b39 	.word	0x08006b39
 8006b98:	08006be9 	.word	0x08006be9
 8006b9c:	08006b39 	.word	0x08006b39
 8006ba0:	08006b39 	.word	0x08006b39
 8006ba4:	08006c83 	.word	0x08006c83
 8006ba8:	682b      	ldr	r3, [r5, #0]
 8006baa:	1d1a      	adds	r2, r3, #4
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	602a      	str	r2, [r5, #0]
 8006bb0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006bb4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006bb8:	2301      	movs	r3, #1
 8006bba:	e09f      	b.n	8006cfc <_printf_i+0x1ec>
 8006bbc:	6820      	ldr	r0, [r4, #0]
 8006bbe:	682b      	ldr	r3, [r5, #0]
 8006bc0:	0607      	lsls	r7, r0, #24
 8006bc2:	f103 0104 	add.w	r1, r3, #4
 8006bc6:	6029      	str	r1, [r5, #0]
 8006bc8:	d501      	bpl.n	8006bce <_printf_i+0xbe>
 8006bca:	681e      	ldr	r6, [r3, #0]
 8006bcc:	e003      	b.n	8006bd6 <_printf_i+0xc6>
 8006bce:	0646      	lsls	r6, r0, #25
 8006bd0:	d5fb      	bpl.n	8006bca <_printf_i+0xba>
 8006bd2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8006bd6:	2e00      	cmp	r6, #0
 8006bd8:	da03      	bge.n	8006be2 <_printf_i+0xd2>
 8006bda:	232d      	movs	r3, #45	; 0x2d
 8006bdc:	4276      	negs	r6, r6
 8006bde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006be2:	485a      	ldr	r0, [pc, #360]	; (8006d4c <_printf_i+0x23c>)
 8006be4:	230a      	movs	r3, #10
 8006be6:	e012      	b.n	8006c0e <_printf_i+0xfe>
 8006be8:	682b      	ldr	r3, [r5, #0]
 8006bea:	6820      	ldr	r0, [r4, #0]
 8006bec:	1d19      	adds	r1, r3, #4
 8006bee:	6029      	str	r1, [r5, #0]
 8006bf0:	0605      	lsls	r5, r0, #24
 8006bf2:	d501      	bpl.n	8006bf8 <_printf_i+0xe8>
 8006bf4:	681e      	ldr	r6, [r3, #0]
 8006bf6:	e002      	b.n	8006bfe <_printf_i+0xee>
 8006bf8:	0641      	lsls	r1, r0, #25
 8006bfa:	d5fb      	bpl.n	8006bf4 <_printf_i+0xe4>
 8006bfc:	881e      	ldrh	r6, [r3, #0]
 8006bfe:	4853      	ldr	r0, [pc, #332]	; (8006d4c <_printf_i+0x23c>)
 8006c00:	2f6f      	cmp	r7, #111	; 0x6f
 8006c02:	bf0c      	ite	eq
 8006c04:	2308      	moveq	r3, #8
 8006c06:	230a      	movne	r3, #10
 8006c08:	2100      	movs	r1, #0
 8006c0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8006c0e:	6865      	ldr	r5, [r4, #4]
 8006c10:	60a5      	str	r5, [r4, #8]
 8006c12:	2d00      	cmp	r5, #0
 8006c14:	bfa2      	ittt	ge
 8006c16:	6821      	ldrge	r1, [r4, #0]
 8006c18:	f021 0104 	bicge.w	r1, r1, #4
 8006c1c:	6021      	strge	r1, [r4, #0]
 8006c1e:	b90e      	cbnz	r6, 8006c24 <_printf_i+0x114>
 8006c20:	2d00      	cmp	r5, #0
 8006c22:	d04b      	beq.n	8006cbc <_printf_i+0x1ac>
 8006c24:	4615      	mov	r5, r2
 8006c26:	fbb6 f1f3 	udiv	r1, r6, r3
 8006c2a:	fb03 6711 	mls	r7, r3, r1, r6
 8006c2e:	5dc7      	ldrb	r7, [r0, r7]
 8006c30:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8006c34:	4637      	mov	r7, r6
 8006c36:	42bb      	cmp	r3, r7
 8006c38:	460e      	mov	r6, r1
 8006c3a:	d9f4      	bls.n	8006c26 <_printf_i+0x116>
 8006c3c:	2b08      	cmp	r3, #8
 8006c3e:	d10b      	bne.n	8006c58 <_printf_i+0x148>
 8006c40:	6823      	ldr	r3, [r4, #0]
 8006c42:	07de      	lsls	r6, r3, #31
 8006c44:	d508      	bpl.n	8006c58 <_printf_i+0x148>
 8006c46:	6923      	ldr	r3, [r4, #16]
 8006c48:	6861      	ldr	r1, [r4, #4]
 8006c4a:	4299      	cmp	r1, r3
 8006c4c:	bfde      	ittt	le
 8006c4e:	2330      	movle	r3, #48	; 0x30
 8006c50:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006c54:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006c58:	1b52      	subs	r2, r2, r5
 8006c5a:	6122      	str	r2, [r4, #16]
 8006c5c:	f8cd a000 	str.w	sl, [sp]
 8006c60:	464b      	mov	r3, r9
 8006c62:	aa03      	add	r2, sp, #12
 8006c64:	4621      	mov	r1, r4
 8006c66:	4640      	mov	r0, r8
 8006c68:	f7ff fee4 	bl	8006a34 <_printf_common>
 8006c6c:	3001      	adds	r0, #1
 8006c6e:	d14a      	bne.n	8006d06 <_printf_i+0x1f6>
 8006c70:	f04f 30ff 	mov.w	r0, #4294967295
 8006c74:	b004      	add	sp, #16
 8006c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006c7a:	6823      	ldr	r3, [r4, #0]
 8006c7c:	f043 0320 	orr.w	r3, r3, #32
 8006c80:	6023      	str	r3, [r4, #0]
 8006c82:	4833      	ldr	r0, [pc, #204]	; (8006d50 <_printf_i+0x240>)
 8006c84:	2778      	movs	r7, #120	; 0x78
 8006c86:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8006c8a:	6823      	ldr	r3, [r4, #0]
 8006c8c:	6829      	ldr	r1, [r5, #0]
 8006c8e:	061f      	lsls	r7, r3, #24
 8006c90:	f851 6b04 	ldr.w	r6, [r1], #4
 8006c94:	d402      	bmi.n	8006c9c <_printf_i+0x18c>
 8006c96:	065f      	lsls	r7, r3, #25
 8006c98:	bf48      	it	mi
 8006c9a:	b2b6      	uxthmi	r6, r6
 8006c9c:	07df      	lsls	r7, r3, #31
 8006c9e:	bf48      	it	mi
 8006ca0:	f043 0320 	orrmi.w	r3, r3, #32
 8006ca4:	6029      	str	r1, [r5, #0]
 8006ca6:	bf48      	it	mi
 8006ca8:	6023      	strmi	r3, [r4, #0]
 8006caa:	b91e      	cbnz	r6, 8006cb4 <_printf_i+0x1a4>
 8006cac:	6823      	ldr	r3, [r4, #0]
 8006cae:	f023 0320 	bic.w	r3, r3, #32
 8006cb2:	6023      	str	r3, [r4, #0]
 8006cb4:	2310      	movs	r3, #16
 8006cb6:	e7a7      	b.n	8006c08 <_printf_i+0xf8>
 8006cb8:	4824      	ldr	r0, [pc, #144]	; (8006d4c <_printf_i+0x23c>)
 8006cba:	e7e4      	b.n	8006c86 <_printf_i+0x176>
 8006cbc:	4615      	mov	r5, r2
 8006cbe:	e7bd      	b.n	8006c3c <_printf_i+0x12c>
 8006cc0:	682b      	ldr	r3, [r5, #0]
 8006cc2:	6826      	ldr	r6, [r4, #0]
 8006cc4:	6961      	ldr	r1, [r4, #20]
 8006cc6:	1d18      	adds	r0, r3, #4
 8006cc8:	6028      	str	r0, [r5, #0]
 8006cca:	0635      	lsls	r5, r6, #24
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	d501      	bpl.n	8006cd4 <_printf_i+0x1c4>
 8006cd0:	6019      	str	r1, [r3, #0]
 8006cd2:	e002      	b.n	8006cda <_printf_i+0x1ca>
 8006cd4:	0670      	lsls	r0, r6, #25
 8006cd6:	d5fb      	bpl.n	8006cd0 <_printf_i+0x1c0>
 8006cd8:	8019      	strh	r1, [r3, #0]
 8006cda:	2300      	movs	r3, #0
 8006cdc:	6123      	str	r3, [r4, #16]
 8006cde:	4615      	mov	r5, r2
 8006ce0:	e7bc      	b.n	8006c5c <_printf_i+0x14c>
 8006ce2:	682b      	ldr	r3, [r5, #0]
 8006ce4:	1d1a      	adds	r2, r3, #4
 8006ce6:	602a      	str	r2, [r5, #0]
 8006ce8:	681d      	ldr	r5, [r3, #0]
 8006cea:	6862      	ldr	r2, [r4, #4]
 8006cec:	2100      	movs	r1, #0
 8006cee:	4628      	mov	r0, r5
 8006cf0:	f7f9 fa7e 	bl	80001f0 <memchr>
 8006cf4:	b108      	cbz	r0, 8006cfa <_printf_i+0x1ea>
 8006cf6:	1b40      	subs	r0, r0, r5
 8006cf8:	6060      	str	r0, [r4, #4]
 8006cfa:	6863      	ldr	r3, [r4, #4]
 8006cfc:	6123      	str	r3, [r4, #16]
 8006cfe:	2300      	movs	r3, #0
 8006d00:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006d04:	e7aa      	b.n	8006c5c <_printf_i+0x14c>
 8006d06:	6923      	ldr	r3, [r4, #16]
 8006d08:	462a      	mov	r2, r5
 8006d0a:	4649      	mov	r1, r9
 8006d0c:	4640      	mov	r0, r8
 8006d0e:	47d0      	blx	sl
 8006d10:	3001      	adds	r0, #1
 8006d12:	d0ad      	beq.n	8006c70 <_printf_i+0x160>
 8006d14:	6823      	ldr	r3, [r4, #0]
 8006d16:	079b      	lsls	r3, r3, #30
 8006d18:	d413      	bmi.n	8006d42 <_printf_i+0x232>
 8006d1a:	68e0      	ldr	r0, [r4, #12]
 8006d1c:	9b03      	ldr	r3, [sp, #12]
 8006d1e:	4298      	cmp	r0, r3
 8006d20:	bfb8      	it	lt
 8006d22:	4618      	movlt	r0, r3
 8006d24:	e7a6      	b.n	8006c74 <_printf_i+0x164>
 8006d26:	2301      	movs	r3, #1
 8006d28:	4632      	mov	r2, r6
 8006d2a:	4649      	mov	r1, r9
 8006d2c:	4640      	mov	r0, r8
 8006d2e:	47d0      	blx	sl
 8006d30:	3001      	adds	r0, #1
 8006d32:	d09d      	beq.n	8006c70 <_printf_i+0x160>
 8006d34:	3501      	adds	r5, #1
 8006d36:	68e3      	ldr	r3, [r4, #12]
 8006d38:	9903      	ldr	r1, [sp, #12]
 8006d3a:	1a5b      	subs	r3, r3, r1
 8006d3c:	42ab      	cmp	r3, r5
 8006d3e:	dcf2      	bgt.n	8006d26 <_printf_i+0x216>
 8006d40:	e7eb      	b.n	8006d1a <_printf_i+0x20a>
 8006d42:	2500      	movs	r5, #0
 8006d44:	f104 0619 	add.w	r6, r4, #25
 8006d48:	e7f5      	b.n	8006d36 <_printf_i+0x226>
 8006d4a:	bf00      	nop
 8006d4c:	08007151 	.word	0x08007151
 8006d50:	08007162 	.word	0x08007162

08006d54 <__sflush_r>:
 8006d54:	898a      	ldrh	r2, [r1, #12]
 8006d56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d5a:	4605      	mov	r5, r0
 8006d5c:	0710      	lsls	r0, r2, #28
 8006d5e:	460c      	mov	r4, r1
 8006d60:	d458      	bmi.n	8006e14 <__sflush_r+0xc0>
 8006d62:	684b      	ldr	r3, [r1, #4]
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	dc05      	bgt.n	8006d74 <__sflush_r+0x20>
 8006d68:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006d6a:	2b00      	cmp	r3, #0
 8006d6c:	dc02      	bgt.n	8006d74 <__sflush_r+0x20>
 8006d6e:	2000      	movs	r0, #0
 8006d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006d76:	2e00      	cmp	r6, #0
 8006d78:	d0f9      	beq.n	8006d6e <__sflush_r+0x1a>
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006d80:	682f      	ldr	r7, [r5, #0]
 8006d82:	6a21      	ldr	r1, [r4, #32]
 8006d84:	602b      	str	r3, [r5, #0]
 8006d86:	d032      	beq.n	8006dee <__sflush_r+0x9a>
 8006d88:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006d8a:	89a3      	ldrh	r3, [r4, #12]
 8006d8c:	075a      	lsls	r2, r3, #29
 8006d8e:	d505      	bpl.n	8006d9c <__sflush_r+0x48>
 8006d90:	6863      	ldr	r3, [r4, #4]
 8006d92:	1ac0      	subs	r0, r0, r3
 8006d94:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006d96:	b10b      	cbz	r3, 8006d9c <__sflush_r+0x48>
 8006d98:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006d9a:	1ac0      	subs	r0, r0, r3
 8006d9c:	2300      	movs	r3, #0
 8006d9e:	4602      	mov	r2, r0
 8006da0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006da2:	6a21      	ldr	r1, [r4, #32]
 8006da4:	4628      	mov	r0, r5
 8006da6:	47b0      	blx	r6
 8006da8:	1c43      	adds	r3, r0, #1
 8006daa:	89a3      	ldrh	r3, [r4, #12]
 8006dac:	d106      	bne.n	8006dbc <__sflush_r+0x68>
 8006dae:	6829      	ldr	r1, [r5, #0]
 8006db0:	291d      	cmp	r1, #29
 8006db2:	d82b      	bhi.n	8006e0c <__sflush_r+0xb8>
 8006db4:	4a29      	ldr	r2, [pc, #164]	; (8006e5c <__sflush_r+0x108>)
 8006db6:	410a      	asrs	r2, r1
 8006db8:	07d6      	lsls	r6, r2, #31
 8006dba:	d427      	bmi.n	8006e0c <__sflush_r+0xb8>
 8006dbc:	2200      	movs	r2, #0
 8006dbe:	6062      	str	r2, [r4, #4]
 8006dc0:	04d9      	lsls	r1, r3, #19
 8006dc2:	6922      	ldr	r2, [r4, #16]
 8006dc4:	6022      	str	r2, [r4, #0]
 8006dc6:	d504      	bpl.n	8006dd2 <__sflush_r+0x7e>
 8006dc8:	1c42      	adds	r2, r0, #1
 8006dca:	d101      	bne.n	8006dd0 <__sflush_r+0x7c>
 8006dcc:	682b      	ldr	r3, [r5, #0]
 8006dce:	b903      	cbnz	r3, 8006dd2 <__sflush_r+0x7e>
 8006dd0:	6560      	str	r0, [r4, #84]	; 0x54
 8006dd2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006dd4:	602f      	str	r7, [r5, #0]
 8006dd6:	2900      	cmp	r1, #0
 8006dd8:	d0c9      	beq.n	8006d6e <__sflush_r+0x1a>
 8006dda:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006dde:	4299      	cmp	r1, r3
 8006de0:	d002      	beq.n	8006de8 <__sflush_r+0x94>
 8006de2:	4628      	mov	r0, r5
 8006de4:	f7ff fbea 	bl	80065bc <_free_r>
 8006de8:	2000      	movs	r0, #0
 8006dea:	6360      	str	r0, [r4, #52]	; 0x34
 8006dec:	e7c0      	b.n	8006d70 <__sflush_r+0x1c>
 8006dee:	2301      	movs	r3, #1
 8006df0:	4628      	mov	r0, r5
 8006df2:	47b0      	blx	r6
 8006df4:	1c41      	adds	r1, r0, #1
 8006df6:	d1c8      	bne.n	8006d8a <__sflush_r+0x36>
 8006df8:	682b      	ldr	r3, [r5, #0]
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d0c5      	beq.n	8006d8a <__sflush_r+0x36>
 8006dfe:	2b1d      	cmp	r3, #29
 8006e00:	d001      	beq.n	8006e06 <__sflush_r+0xb2>
 8006e02:	2b16      	cmp	r3, #22
 8006e04:	d101      	bne.n	8006e0a <__sflush_r+0xb6>
 8006e06:	602f      	str	r7, [r5, #0]
 8006e08:	e7b1      	b.n	8006d6e <__sflush_r+0x1a>
 8006e0a:	89a3      	ldrh	r3, [r4, #12]
 8006e0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006e10:	81a3      	strh	r3, [r4, #12]
 8006e12:	e7ad      	b.n	8006d70 <__sflush_r+0x1c>
 8006e14:	690f      	ldr	r7, [r1, #16]
 8006e16:	2f00      	cmp	r7, #0
 8006e18:	d0a9      	beq.n	8006d6e <__sflush_r+0x1a>
 8006e1a:	0793      	lsls	r3, r2, #30
 8006e1c:	680e      	ldr	r6, [r1, #0]
 8006e1e:	bf08      	it	eq
 8006e20:	694b      	ldreq	r3, [r1, #20]
 8006e22:	600f      	str	r7, [r1, #0]
 8006e24:	bf18      	it	ne
 8006e26:	2300      	movne	r3, #0
 8006e28:	eba6 0807 	sub.w	r8, r6, r7
 8006e2c:	608b      	str	r3, [r1, #8]
 8006e2e:	f1b8 0f00 	cmp.w	r8, #0
 8006e32:	dd9c      	ble.n	8006d6e <__sflush_r+0x1a>
 8006e34:	6a21      	ldr	r1, [r4, #32]
 8006e36:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006e38:	4643      	mov	r3, r8
 8006e3a:	463a      	mov	r2, r7
 8006e3c:	4628      	mov	r0, r5
 8006e3e:	47b0      	blx	r6
 8006e40:	2800      	cmp	r0, #0
 8006e42:	dc06      	bgt.n	8006e52 <__sflush_r+0xfe>
 8006e44:	89a3      	ldrh	r3, [r4, #12]
 8006e46:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006e4a:	81a3      	strh	r3, [r4, #12]
 8006e4c:	f04f 30ff 	mov.w	r0, #4294967295
 8006e50:	e78e      	b.n	8006d70 <__sflush_r+0x1c>
 8006e52:	4407      	add	r7, r0
 8006e54:	eba8 0800 	sub.w	r8, r8, r0
 8006e58:	e7e9      	b.n	8006e2e <__sflush_r+0xda>
 8006e5a:	bf00      	nop
 8006e5c:	dfbffffe 	.word	0xdfbffffe

08006e60 <_fflush_r>:
 8006e60:	b538      	push	{r3, r4, r5, lr}
 8006e62:	690b      	ldr	r3, [r1, #16]
 8006e64:	4605      	mov	r5, r0
 8006e66:	460c      	mov	r4, r1
 8006e68:	b913      	cbnz	r3, 8006e70 <_fflush_r+0x10>
 8006e6a:	2500      	movs	r5, #0
 8006e6c:	4628      	mov	r0, r5
 8006e6e:	bd38      	pop	{r3, r4, r5, pc}
 8006e70:	b118      	cbz	r0, 8006e7a <_fflush_r+0x1a>
 8006e72:	6a03      	ldr	r3, [r0, #32]
 8006e74:	b90b      	cbnz	r3, 8006e7a <_fflush_r+0x1a>
 8006e76:	f7ff f945 	bl	8006104 <__sinit>
 8006e7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d0f3      	beq.n	8006e6a <_fflush_r+0xa>
 8006e82:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006e84:	07d0      	lsls	r0, r2, #31
 8006e86:	d404      	bmi.n	8006e92 <_fflush_r+0x32>
 8006e88:	0599      	lsls	r1, r3, #22
 8006e8a:	d402      	bmi.n	8006e92 <_fflush_r+0x32>
 8006e8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006e8e:	f7ff fb84 	bl	800659a <__retarget_lock_acquire_recursive>
 8006e92:	4628      	mov	r0, r5
 8006e94:	4621      	mov	r1, r4
 8006e96:	f7ff ff5d 	bl	8006d54 <__sflush_r>
 8006e9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006e9c:	07da      	lsls	r2, r3, #31
 8006e9e:	4605      	mov	r5, r0
 8006ea0:	d4e4      	bmi.n	8006e6c <_fflush_r+0xc>
 8006ea2:	89a3      	ldrh	r3, [r4, #12]
 8006ea4:	059b      	lsls	r3, r3, #22
 8006ea6:	d4e1      	bmi.n	8006e6c <_fflush_r+0xc>
 8006ea8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006eaa:	f7ff fb77 	bl	800659c <__retarget_lock_release_recursive>
 8006eae:	e7dd      	b.n	8006e6c <_fflush_r+0xc>

08006eb0 <__swhatbuf_r>:
 8006eb0:	b570      	push	{r4, r5, r6, lr}
 8006eb2:	460c      	mov	r4, r1
 8006eb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006eb8:	2900      	cmp	r1, #0
 8006eba:	b096      	sub	sp, #88	; 0x58
 8006ebc:	4615      	mov	r5, r2
 8006ebe:	461e      	mov	r6, r3
 8006ec0:	da0d      	bge.n	8006ede <__swhatbuf_r+0x2e>
 8006ec2:	89a3      	ldrh	r3, [r4, #12]
 8006ec4:	f013 0f80 	tst.w	r3, #128	; 0x80
 8006ec8:	f04f 0100 	mov.w	r1, #0
 8006ecc:	bf0c      	ite	eq
 8006ece:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8006ed2:	2340      	movne	r3, #64	; 0x40
 8006ed4:	2000      	movs	r0, #0
 8006ed6:	6031      	str	r1, [r6, #0]
 8006ed8:	602b      	str	r3, [r5, #0]
 8006eda:	b016      	add	sp, #88	; 0x58
 8006edc:	bd70      	pop	{r4, r5, r6, pc}
 8006ede:	466a      	mov	r2, sp
 8006ee0:	f000 f848 	bl	8006f74 <_fstat_r>
 8006ee4:	2800      	cmp	r0, #0
 8006ee6:	dbec      	blt.n	8006ec2 <__swhatbuf_r+0x12>
 8006ee8:	9901      	ldr	r1, [sp, #4]
 8006eea:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006eee:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006ef2:	4259      	negs	r1, r3
 8006ef4:	4159      	adcs	r1, r3
 8006ef6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006efa:	e7eb      	b.n	8006ed4 <__swhatbuf_r+0x24>

08006efc <__smakebuf_r>:
 8006efc:	898b      	ldrh	r3, [r1, #12]
 8006efe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f00:	079d      	lsls	r5, r3, #30
 8006f02:	4606      	mov	r6, r0
 8006f04:	460c      	mov	r4, r1
 8006f06:	d507      	bpl.n	8006f18 <__smakebuf_r+0x1c>
 8006f08:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006f0c:	6023      	str	r3, [r4, #0]
 8006f0e:	6123      	str	r3, [r4, #16]
 8006f10:	2301      	movs	r3, #1
 8006f12:	6163      	str	r3, [r4, #20]
 8006f14:	b002      	add	sp, #8
 8006f16:	bd70      	pop	{r4, r5, r6, pc}
 8006f18:	ab01      	add	r3, sp, #4
 8006f1a:	466a      	mov	r2, sp
 8006f1c:	f7ff ffc8 	bl	8006eb0 <__swhatbuf_r>
 8006f20:	9900      	ldr	r1, [sp, #0]
 8006f22:	4605      	mov	r5, r0
 8006f24:	4630      	mov	r0, r6
 8006f26:	f7ff fbb5 	bl	8006694 <_malloc_r>
 8006f2a:	b948      	cbnz	r0, 8006f40 <__smakebuf_r+0x44>
 8006f2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006f30:	059a      	lsls	r2, r3, #22
 8006f32:	d4ef      	bmi.n	8006f14 <__smakebuf_r+0x18>
 8006f34:	f023 0303 	bic.w	r3, r3, #3
 8006f38:	f043 0302 	orr.w	r3, r3, #2
 8006f3c:	81a3      	strh	r3, [r4, #12]
 8006f3e:	e7e3      	b.n	8006f08 <__smakebuf_r+0xc>
 8006f40:	89a3      	ldrh	r3, [r4, #12]
 8006f42:	6020      	str	r0, [r4, #0]
 8006f44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006f48:	81a3      	strh	r3, [r4, #12]
 8006f4a:	9b00      	ldr	r3, [sp, #0]
 8006f4c:	6163      	str	r3, [r4, #20]
 8006f4e:	9b01      	ldr	r3, [sp, #4]
 8006f50:	6120      	str	r0, [r4, #16]
 8006f52:	b15b      	cbz	r3, 8006f6c <__smakebuf_r+0x70>
 8006f54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006f58:	4630      	mov	r0, r6
 8006f5a:	f000 f81d 	bl	8006f98 <_isatty_r>
 8006f5e:	b128      	cbz	r0, 8006f6c <__smakebuf_r+0x70>
 8006f60:	89a3      	ldrh	r3, [r4, #12]
 8006f62:	f023 0303 	bic.w	r3, r3, #3
 8006f66:	f043 0301 	orr.w	r3, r3, #1
 8006f6a:	81a3      	strh	r3, [r4, #12]
 8006f6c:	89a3      	ldrh	r3, [r4, #12]
 8006f6e:	431d      	orrs	r5, r3
 8006f70:	81a5      	strh	r5, [r4, #12]
 8006f72:	e7cf      	b.n	8006f14 <__smakebuf_r+0x18>

08006f74 <_fstat_r>:
 8006f74:	b538      	push	{r3, r4, r5, lr}
 8006f76:	4d07      	ldr	r5, [pc, #28]	; (8006f94 <_fstat_r+0x20>)
 8006f78:	2300      	movs	r3, #0
 8006f7a:	4604      	mov	r4, r0
 8006f7c:	4608      	mov	r0, r1
 8006f7e:	4611      	mov	r1, r2
 8006f80:	602b      	str	r3, [r5, #0]
 8006f82:	f7f9 ff42 	bl	8000e0a <_fstat>
 8006f86:	1c43      	adds	r3, r0, #1
 8006f88:	d102      	bne.n	8006f90 <_fstat_r+0x1c>
 8006f8a:	682b      	ldr	r3, [r5, #0]
 8006f8c:	b103      	cbz	r3, 8006f90 <_fstat_r+0x1c>
 8006f8e:	6023      	str	r3, [r4, #0]
 8006f90:	bd38      	pop	{r3, r4, r5, pc}
 8006f92:	bf00      	nop
 8006f94:	20004cd0 	.word	0x20004cd0

08006f98 <_isatty_r>:
 8006f98:	b538      	push	{r3, r4, r5, lr}
 8006f9a:	4d06      	ldr	r5, [pc, #24]	; (8006fb4 <_isatty_r+0x1c>)
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	4604      	mov	r4, r0
 8006fa0:	4608      	mov	r0, r1
 8006fa2:	602b      	str	r3, [r5, #0]
 8006fa4:	f7f9 ff41 	bl	8000e2a <_isatty>
 8006fa8:	1c43      	adds	r3, r0, #1
 8006faa:	d102      	bne.n	8006fb2 <_isatty_r+0x1a>
 8006fac:	682b      	ldr	r3, [r5, #0]
 8006fae:	b103      	cbz	r3, 8006fb2 <_isatty_r+0x1a>
 8006fb0:	6023      	str	r3, [r4, #0]
 8006fb2:	bd38      	pop	{r3, r4, r5, pc}
 8006fb4:	20004cd0 	.word	0x20004cd0

08006fb8 <_sbrk_r>:
 8006fb8:	b538      	push	{r3, r4, r5, lr}
 8006fba:	4d06      	ldr	r5, [pc, #24]	; (8006fd4 <_sbrk_r+0x1c>)
 8006fbc:	2300      	movs	r3, #0
 8006fbe:	4604      	mov	r4, r0
 8006fc0:	4608      	mov	r0, r1
 8006fc2:	602b      	str	r3, [r5, #0]
 8006fc4:	f7f9 ff4a 	bl	8000e5c <_sbrk>
 8006fc8:	1c43      	adds	r3, r0, #1
 8006fca:	d102      	bne.n	8006fd2 <_sbrk_r+0x1a>
 8006fcc:	682b      	ldr	r3, [r5, #0]
 8006fce:	b103      	cbz	r3, 8006fd2 <_sbrk_r+0x1a>
 8006fd0:	6023      	str	r3, [r4, #0]
 8006fd2:	bd38      	pop	{r3, r4, r5, pc}
 8006fd4:	20004cd0 	.word	0x20004cd0

08006fd8 <_init>:
 8006fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006fda:	bf00      	nop
 8006fdc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006fde:	bc08      	pop	{r3}
 8006fe0:	469e      	mov	lr, r3
 8006fe2:	4770      	bx	lr

08006fe4 <_fini>:
 8006fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006fe6:	bf00      	nop
 8006fe8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006fea:	bc08      	pop	{r3}
 8006fec:	469e      	mov	lr, r3
 8006fee:	4770      	bx	lr
