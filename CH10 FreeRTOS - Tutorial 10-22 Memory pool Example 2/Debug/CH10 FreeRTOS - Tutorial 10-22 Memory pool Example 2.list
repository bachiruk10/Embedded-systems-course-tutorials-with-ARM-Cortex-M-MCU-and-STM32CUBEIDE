
CH10 FreeRTOS - Tutorial 10-22 Memory pool Example 2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007940  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000258  08007af0  08007af0  00017af0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007d48  08007d48  000200ac  2**0
                  CONTENTS
  4 .ARM          00000008  08007d48  08007d48  00017d48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007d50  08007d50  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007d50  08007d50  00017d50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007d54  08007d54  00017d54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08007d58  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000200ac  2**0
                  CONTENTS
 10 .bss          00004c48  200000ac  200000ac  000200ac  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20004cf4  20004cf4  000200ac  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY
 14 .debug_info   00016938  00000000  00000000  0002011f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000035ea  00000000  00000000  00036a57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001390  00000000  00000000  0003a048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000eff  00000000  00000000  0003b3d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  000047cc  00000000  00000000  0003c2d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000154c7  00000000  00000000  00040aa3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000e44f2  00000000  00000000  00055f6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000058fc  00000000  00000000  0013a45c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 000000a0  00000000  00000000  0013fd58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08007ad8 	.word	0x08007ad8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	08007ad8 	.word	0x08007ad8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000594:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000598:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 800059c:	f003 0301 	and.w	r3, r3, #1
 80005a0:	2b00      	cmp	r3, #0
 80005a2:	d013      	beq.n	80005cc <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80005a4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005a8:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80005ac:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d00b      	beq.n	80005cc <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80005b4:	e000      	b.n	80005b8 <ITM_SendChar+0x2c>
    {
      __NOP();
 80005b6:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80005b8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	2b00      	cmp	r3, #0
 80005c0:	d0f9      	beq.n	80005b6 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80005c2:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80005c6:	687a      	ldr	r2, [r7, #4]
 80005c8:	b2d2      	uxtb	r2, r2
 80005ca:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80005cc:	687b      	ldr	r3, [r7, #4]
}
 80005ce:	4618      	mov	r0, r3
 80005d0:	370c      	adds	r7, #12
 80005d2:	46bd      	mov	sp, r7
 80005d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d8:	4770      	bx	lr

080005da <_write>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
/*Function needed to use printf on CONSOLE*/
int _write(int file, char *ptr, int len){
 80005da:	b580      	push	{r7, lr}
 80005dc:	b086      	sub	sp, #24
 80005de:	af00      	add	r7, sp, #0
 80005e0:	60f8      	str	r0, [r7, #12]
 80005e2:	60b9      	str	r1, [r7, #8]
 80005e4:	607a      	str	r2, [r7, #4]
	  int i = 0;
 80005e6:	2300      	movs	r3, #0
 80005e8:	617b      	str	r3, [r7, #20]
	  for (i=0; i<len; i++)
 80005ea:	2300      	movs	r3, #0
 80005ec:	617b      	str	r3, [r7, #20]
 80005ee:	e009      	b.n	8000604 <_write+0x2a>
		  ITM_SendChar((*ptr++));
 80005f0:	68bb      	ldr	r3, [r7, #8]
 80005f2:	1c5a      	adds	r2, r3, #1
 80005f4:	60ba      	str	r2, [r7, #8]
 80005f6:	781b      	ldrb	r3, [r3, #0]
 80005f8:	4618      	mov	r0, r3
 80005fa:	f7ff ffc7 	bl	800058c <ITM_SendChar>
	  for (i=0; i<len; i++)
 80005fe:	697b      	ldr	r3, [r7, #20]
 8000600:	3301      	adds	r3, #1
 8000602:	617b      	str	r3, [r7, #20]
 8000604:	697a      	ldr	r2, [r7, #20]
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	429a      	cmp	r2, r3
 800060a:	dbf1      	blt.n	80005f0 <_write+0x16>
	  return len;
 800060c:	687b      	ldr	r3, [r7, #4]
}
 800060e:	4618      	mov	r0, r3
 8000610:	3718      	adds	r7, #24
 8000612:	46bd      	mov	sp, r7
 8000614:	bd80      	pop	{r7, pc}
	...

08000618 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800061e:	f000 fcd9 	bl	8000fd4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000622:	f000 f871 	bl	8000708 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000626:	f000 f97b 	bl	8000920 <MX_GPIO_Init>
  MX_TIM2_Init();
 800062a:	f000 f8dd 	bl	80007e8 <MX_TIM2_Init>
  MX_TIM3_Init();
 800062e:	f000 f929 	bl	8000884 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  /*Start Timer 2 and 3 in interrupt mode.*/
  if (__HAL_TIM_GET_FLAG(&htim2 , TIM_FLAG_UPDATE) != RESET)
 8000632:	4b26      	ldr	r3, [pc, #152]	; (80006cc <main+0xb4>)
 8000634:	681b      	ldr	r3, [r3, #0]
 8000636:	691b      	ldr	r3, [r3, #16]
 8000638:	f003 0301 	and.w	r3, r3, #1
 800063c:	2b01      	cmp	r3, #1
 800063e:	d104      	bne.n	800064a <main+0x32>
  __HAL_TIM_CLEAR_FLAG(&htim2 , TIM_FLAG_UPDATE);
 8000640:	4b22      	ldr	r3, [pc, #136]	; (80006cc <main+0xb4>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	f06f 0201 	mvn.w	r2, #1
 8000648:	611a      	str	r2, [r3, #16]
  if (__HAL_TIM_GET_FLAG(&htim3 , TIM_FLAG_UPDATE) != RESET)
 800064a:	4b21      	ldr	r3, [pc, #132]	; (80006d0 <main+0xb8>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	691b      	ldr	r3, [r3, #16]
 8000650:	f003 0301 	and.w	r3, r3, #1
 8000654:	2b01      	cmp	r3, #1
 8000656:	d104      	bne.n	8000662 <main+0x4a>
  __HAL_TIM_CLEAR_FLAG(&htim3 , TIM_FLAG_UPDATE);
 8000658:	4b1d      	ldr	r3, [pc, #116]	; (80006d0 <main+0xb8>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	f06f 0201 	mvn.w	r2, #1
 8000660:	611a      	str	r2, [r3, #16]
  HAL_TIM_Base_Start_IT(&htim2);
 8000662:	481a      	ldr	r0, [pc, #104]	; (80006cc <main+0xb4>)
 8000664:	f001 fd10 	bl	8002088 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 8000668:	4819      	ldr	r0, [pc, #100]	; (80006d0 <main+0xb8>)
 800066a:	f001 fd0d 	bl	8002088 <HAL_TIM_Base_Start_IT>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 800066e:	f002 f975 	bl	800295c <osKernelInitialize>
  /* USER CODE BEGIN RTOS_TIMERS */
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
  uint8_t queue_size = 2;
 8000672:	2302      	movs	r3, #2
 8000674:	71fb      	strb	r3, [r7, #7]
  Queue1Handle =  osMessageQueueNew(queue_size, sizeof(mystruct), &Queue1_attributes);
 8000676:	79fb      	ldrb	r3, [r7, #7]
 8000678:	4a16      	ldr	r2, [pc, #88]	; (80006d4 <main+0xbc>)
 800067a:	212c      	movs	r1, #44	; 0x2c
 800067c:	4618      	mov	r0, r3
 800067e:	f002 fb65 	bl	8002d4c <osMessageQueueNew>
 8000682:	4603      	mov	r3, r0
 8000684:	4a14      	ldr	r2, [pc, #80]	; (80006d8 <main+0xc0>)
 8000686:	6013      	str	r3, [r2, #0]

  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */

  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000688:	4a14      	ldr	r2, [pc, #80]	; (80006dc <main+0xc4>)
 800068a:	2100      	movs	r1, #0
 800068c:	4814      	ldr	r0, [pc, #80]	; (80006e0 <main+0xc8>)
 800068e:	f002 f9af 	bl	80029f0 <osThreadNew>
 8000692:	4603      	mov	r3, r0
 8000694:	4a13      	ldr	r2, [pc, #76]	; (80006e4 <main+0xcc>)
 8000696:	6013      	str	r3, [r2, #0]
  myTask02Handle = osThreadNew(StartTask02, NULL, &myTask02_attributes);
 8000698:	4a13      	ldr	r2, [pc, #76]	; (80006e8 <main+0xd0>)
 800069a:	2100      	movs	r1, #0
 800069c:	4813      	ldr	r0, [pc, #76]	; (80006ec <main+0xd4>)
 800069e:	f002 f9a7 	bl	80029f0 <osThreadNew>
 80006a2:	4603      	mov	r3, r0
 80006a4:	4a12      	ldr	r2, [pc, #72]	; (80006f0 <main+0xd8>)
 80006a6:	6013      	str	r3, [r2, #0]
  myTask03Handle = osThreadNew(StartTask03, NULL, &myTask03_attributes);
 80006a8:	4a12      	ldr	r2, [pc, #72]	; (80006f4 <main+0xdc>)
 80006aa:	2100      	movs	r1, #0
 80006ac:	4812      	ldr	r0, [pc, #72]	; (80006f8 <main+0xe0>)
 80006ae:	f002 f99f 	bl	80029f0 <osThreadNew>
 80006b2:	4603      	mov	r3, r0
 80006b4:	4a11      	ldr	r2, [pc, #68]	; (80006fc <main+0xe4>)
 80006b6:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* USER CODE BEGIN RTOS_EVENTS */
  Event1Handle = osEventFlagsNew(&Event1_attributes);
 80006b8:	4811      	ldr	r0, [pc, #68]	; (8000700 <main+0xe8>)
 80006ba:	f002 fa2b 	bl	8002b14 <osEventFlagsNew>
 80006be:	4603      	mov	r3, r0
 80006c0:	4a10      	ldr	r2, [pc, #64]	; (8000704 <main+0xec>)
 80006c2:	6013      	str	r3, [r2, #0]
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 80006c4:	f002 f96e 	bl	80029a4 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80006c8:	e7fe      	b.n	80006c8 <main+0xb0>
 80006ca:	bf00      	nop
 80006cc:	200000c8 	.word	0x200000c8
 80006d0:	20000110 	.word	0x20000110
 80006d4:	20000000 	.word	0x20000000
 80006d8:	20000164 	.word	0x20000164
 80006dc:	08007c90 	.word	0x08007c90
 80006e0:	080009a9 	.word	0x080009a9
 80006e4:	20000158 	.word	0x20000158
 80006e8:	08007cb4 	.word	0x08007cb4
 80006ec:	08000a5d 	.word	0x08000a5d
 80006f0:	2000015c 	.word	0x2000015c
 80006f4:	08007cd8 	.word	0x08007cd8
 80006f8:	08000b01 	.word	0x08000b01
 80006fc:	20000160 	.word	0x20000160
 8000700:	20000018 	.word	0x20000018
 8000704:	20000168 	.word	0x20000168

08000708 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000708:	b580      	push	{r7, lr}
 800070a:	b094      	sub	sp, #80	; 0x50
 800070c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800070e:	f107 0320 	add.w	r3, r7, #32
 8000712:	2230      	movs	r2, #48	; 0x30
 8000714:	2100      	movs	r1, #0
 8000716:	4618      	mov	r0, r3
 8000718:	f006 fbf0 	bl	8006efc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800071c:	f107 030c 	add.w	r3, r7, #12
 8000720:	2200      	movs	r2, #0
 8000722:	601a      	str	r2, [r3, #0]
 8000724:	605a      	str	r2, [r3, #4]
 8000726:	609a      	str	r2, [r3, #8]
 8000728:	60da      	str	r2, [r3, #12]
 800072a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800072c:	2300      	movs	r3, #0
 800072e:	60bb      	str	r3, [r7, #8]
 8000730:	4b2b      	ldr	r3, [pc, #172]	; (80007e0 <SystemClock_Config+0xd8>)
 8000732:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000734:	4a2a      	ldr	r2, [pc, #168]	; (80007e0 <SystemClock_Config+0xd8>)
 8000736:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800073a:	6413      	str	r3, [r2, #64]	; 0x40
 800073c:	4b28      	ldr	r3, [pc, #160]	; (80007e0 <SystemClock_Config+0xd8>)
 800073e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000740:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000744:	60bb      	str	r3, [r7, #8]
 8000746:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000748:	2300      	movs	r3, #0
 800074a:	607b      	str	r3, [r7, #4]
 800074c:	4b25      	ldr	r3, [pc, #148]	; (80007e4 <SystemClock_Config+0xdc>)
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	4a24      	ldr	r2, [pc, #144]	; (80007e4 <SystemClock_Config+0xdc>)
 8000752:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000756:	6013      	str	r3, [r2, #0]
 8000758:	4b22      	ldr	r3, [pc, #136]	; (80007e4 <SystemClock_Config+0xdc>)
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000760:	607b      	str	r3, [r7, #4]
 8000762:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000764:	2301      	movs	r3, #1
 8000766:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000768:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800076c:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800076e:	2302      	movs	r3, #2
 8000770:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000772:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000776:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000778:	2304      	movs	r3, #4
 800077a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 180;
 800077c:	23b4      	movs	r3, #180	; 0xb4
 800077e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000780:	2302      	movs	r3, #2
 8000782:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000784:	2307      	movs	r3, #7
 8000786:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000788:	f107 0320 	add.w	r3, r7, #32
 800078c:	4618      	mov	r0, r3
 800078e:	f000 ff75 	bl	800167c <HAL_RCC_OscConfig>
 8000792:	4603      	mov	r3, r0
 8000794:	2b00      	cmp	r3, #0
 8000796:	d001      	beq.n	800079c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000798:	f000 fa32 	bl	8000c00 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800079c:	f000 ff1e 	bl	80015dc <HAL_PWREx_EnableOverDrive>
 80007a0:	4603      	mov	r3, r0
 80007a2:	2b00      	cmp	r3, #0
 80007a4:	d001      	beq.n	80007aa <SystemClock_Config+0xa2>
  {
    Error_Handler();
 80007a6:	f000 fa2b 	bl	8000c00 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007aa:	230f      	movs	r3, #15
 80007ac:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007ae:	2302      	movs	r3, #2
 80007b0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007b2:	2300      	movs	r3, #0
 80007b4:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80007b6:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80007ba:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80007bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007c0:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80007c2:	f107 030c 	add.w	r3, r7, #12
 80007c6:	2105      	movs	r1, #5
 80007c8:	4618      	mov	r0, r3
 80007ca:	f001 f9cf 	bl	8001b6c <HAL_RCC_ClockConfig>
 80007ce:	4603      	mov	r3, r0
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d001      	beq.n	80007d8 <SystemClock_Config+0xd0>
  {
    Error_Handler();
 80007d4:	f000 fa14 	bl	8000c00 <Error_Handler>
  }
}
 80007d8:	bf00      	nop
 80007da:	3750      	adds	r7, #80	; 0x50
 80007dc:	46bd      	mov	sp, r7
 80007de:	bd80      	pop	{r7, pc}
 80007e0:	40023800 	.word	0x40023800
 80007e4:	40007000 	.word	0x40007000

080007e8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80007e8:	b580      	push	{r7, lr}
 80007ea:	b086      	sub	sp, #24
 80007ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80007ee:	f107 0308 	add.w	r3, r7, #8
 80007f2:	2200      	movs	r2, #0
 80007f4:	601a      	str	r2, [r3, #0]
 80007f6:	605a      	str	r2, [r3, #4]
 80007f8:	609a      	str	r2, [r3, #8]
 80007fa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80007fc:	463b      	mov	r3, r7
 80007fe:	2200      	movs	r2, #0
 8000800:	601a      	str	r2, [r3, #0]
 8000802:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000804:	4b1e      	ldr	r3, [pc, #120]	; (8000880 <MX_TIM2_Init+0x98>)
 8000806:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800080a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 9000-1;
 800080c:	4b1c      	ldr	r3, [pc, #112]	; (8000880 <MX_TIM2_Init+0x98>)
 800080e:	f242 3227 	movw	r2, #8999	; 0x2327
 8000812:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000814:	4b1a      	ldr	r3, [pc, #104]	; (8000880 <MX_TIM2_Init+0x98>)
 8000816:	2200      	movs	r2, #0
 8000818:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 20000-1;
 800081a:	4b19      	ldr	r3, [pc, #100]	; (8000880 <MX_TIM2_Init+0x98>)
 800081c:	f644 621f 	movw	r2, #19999	; 0x4e1f
 8000820:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000822:	4b17      	ldr	r3, [pc, #92]	; (8000880 <MX_TIM2_Init+0x98>)
 8000824:	2200      	movs	r2, #0
 8000826:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000828:	4b15      	ldr	r3, [pc, #84]	; (8000880 <MX_TIM2_Init+0x98>)
 800082a:	2200      	movs	r2, #0
 800082c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800082e:	4814      	ldr	r0, [pc, #80]	; (8000880 <MX_TIM2_Init+0x98>)
 8000830:	f001 fbda 	bl	8001fe8 <HAL_TIM_Base_Init>
 8000834:	4603      	mov	r3, r0
 8000836:	2b00      	cmp	r3, #0
 8000838:	d001      	beq.n	800083e <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 800083a:	f000 f9e1 	bl	8000c00 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800083e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000842:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000844:	f107 0308 	add.w	r3, r7, #8
 8000848:	4619      	mov	r1, r3
 800084a:	480d      	ldr	r0, [pc, #52]	; (8000880 <MX_TIM2_Init+0x98>)
 800084c:	f001 fd7c 	bl	8002348 <HAL_TIM_ConfigClockSource>
 8000850:	4603      	mov	r3, r0
 8000852:	2b00      	cmp	r3, #0
 8000854:	d001      	beq.n	800085a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8000856:	f000 f9d3 	bl	8000c00 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800085a:	2300      	movs	r3, #0
 800085c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800085e:	2300      	movs	r3, #0
 8000860:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000862:	463b      	mov	r3, r7
 8000864:	4619      	mov	r1, r3
 8000866:	4806      	ldr	r0, [pc, #24]	; (8000880 <MX_TIM2_Init+0x98>)
 8000868:	f001 ffa4 	bl	80027b4 <HAL_TIMEx_MasterConfigSynchronization>
 800086c:	4603      	mov	r3, r0
 800086e:	2b00      	cmp	r3, #0
 8000870:	d001      	beq.n	8000876 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8000872:	f000 f9c5 	bl	8000c00 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000876:	bf00      	nop
 8000878:	3718      	adds	r7, #24
 800087a:	46bd      	mov	sp, r7
 800087c:	bd80      	pop	{r7, pc}
 800087e:	bf00      	nop
 8000880:	200000c8 	.word	0x200000c8

08000884 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000884:	b580      	push	{r7, lr}
 8000886:	b086      	sub	sp, #24
 8000888:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800088a:	f107 0308 	add.w	r3, r7, #8
 800088e:	2200      	movs	r2, #0
 8000890:	601a      	str	r2, [r3, #0]
 8000892:	605a      	str	r2, [r3, #4]
 8000894:	609a      	str	r2, [r3, #8]
 8000896:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000898:	463b      	mov	r3, r7
 800089a:	2200      	movs	r2, #0
 800089c:	601a      	str	r2, [r3, #0]
 800089e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80008a0:	4b1d      	ldr	r3, [pc, #116]	; (8000918 <MX_TIM3_Init+0x94>)
 80008a2:	4a1e      	ldr	r2, [pc, #120]	; (800091c <MX_TIM3_Init+0x98>)
 80008a4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9000-1;
 80008a6:	4b1c      	ldr	r3, [pc, #112]	; (8000918 <MX_TIM3_Init+0x94>)
 80008a8:	f242 3227 	movw	r2, #8999	; 0x2327
 80008ac:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80008ae:	4b1a      	ldr	r3, [pc, #104]	; (8000918 <MX_TIM3_Init+0x94>)
 80008b0:	2200      	movs	r2, #0
 80008b2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 40000-1;
 80008b4:	4b18      	ldr	r3, [pc, #96]	; (8000918 <MX_TIM3_Init+0x94>)
 80008b6:	f649 423f 	movw	r2, #39999	; 0x9c3f
 80008ba:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80008bc:	4b16      	ldr	r3, [pc, #88]	; (8000918 <MX_TIM3_Init+0x94>)
 80008be:	2200      	movs	r2, #0
 80008c0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80008c2:	4b15      	ldr	r3, [pc, #84]	; (8000918 <MX_TIM3_Init+0x94>)
 80008c4:	2200      	movs	r2, #0
 80008c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80008c8:	4813      	ldr	r0, [pc, #76]	; (8000918 <MX_TIM3_Init+0x94>)
 80008ca:	f001 fb8d 	bl	8001fe8 <HAL_TIM_Base_Init>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d001      	beq.n	80008d8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80008d4:	f000 f994 	bl	8000c00 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80008d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008dc:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80008de:	f107 0308 	add.w	r3, r7, #8
 80008e2:	4619      	mov	r1, r3
 80008e4:	480c      	ldr	r0, [pc, #48]	; (8000918 <MX_TIM3_Init+0x94>)
 80008e6:	f001 fd2f 	bl	8002348 <HAL_TIM_ConfigClockSource>
 80008ea:	4603      	mov	r3, r0
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	d001      	beq.n	80008f4 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80008f0:	f000 f986 	bl	8000c00 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80008f4:	2300      	movs	r3, #0
 80008f6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80008f8:	2300      	movs	r3, #0
 80008fa:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80008fc:	463b      	mov	r3, r7
 80008fe:	4619      	mov	r1, r3
 8000900:	4805      	ldr	r0, [pc, #20]	; (8000918 <MX_TIM3_Init+0x94>)
 8000902:	f001 ff57 	bl	80027b4 <HAL_TIMEx_MasterConfigSynchronization>
 8000906:	4603      	mov	r3, r0
 8000908:	2b00      	cmp	r3, #0
 800090a:	d001      	beq.n	8000910 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 800090c:	f000 f978 	bl	8000c00 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000910:	bf00      	nop
 8000912:	3718      	adds	r7, #24
 8000914:	46bd      	mov	sp, r7
 8000916:	bd80      	pop	{r7, pc}
 8000918:	20000110 	.word	0x20000110
 800091c:	40000400 	.word	0x40000400

08000920 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000920:	b580      	push	{r7, lr}
 8000922:	b088      	sub	sp, #32
 8000924:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000926:	f107 030c 	add.w	r3, r7, #12
 800092a:	2200      	movs	r2, #0
 800092c:	601a      	str	r2, [r3, #0]
 800092e:	605a      	str	r2, [r3, #4]
 8000930:	609a      	str	r2, [r3, #8]
 8000932:	60da      	str	r2, [r3, #12]
 8000934:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000936:	2300      	movs	r3, #0
 8000938:	60bb      	str	r3, [r7, #8]
 800093a:	4b19      	ldr	r3, [pc, #100]	; (80009a0 <MX_GPIO_Init+0x80>)
 800093c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800093e:	4a18      	ldr	r2, [pc, #96]	; (80009a0 <MX_GPIO_Init+0x80>)
 8000940:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000944:	6313      	str	r3, [r2, #48]	; 0x30
 8000946:	4b16      	ldr	r3, [pc, #88]	; (80009a0 <MX_GPIO_Init+0x80>)
 8000948:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800094a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800094e:	60bb      	str	r3, [r7, #8]
 8000950:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000952:	2300      	movs	r3, #0
 8000954:	607b      	str	r3, [r7, #4]
 8000956:	4b12      	ldr	r3, [pc, #72]	; (80009a0 <MX_GPIO_Init+0x80>)
 8000958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800095a:	4a11      	ldr	r2, [pc, #68]	; (80009a0 <MX_GPIO_Init+0x80>)
 800095c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000960:	6313      	str	r3, [r2, #48]	; 0x30
 8000962:	4b0f      	ldr	r3, [pc, #60]	; (80009a0 <MX_GPIO_Init+0x80>)
 8000964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000966:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800096a:	607b      	str	r3, [r7, #4]
 800096c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 800096e:	2200      	movs	r2, #0
 8000970:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 8000974:	480b      	ldr	r0, [pc, #44]	; (80009a4 <MX_GPIO_Init+0x84>)
 8000976:	f000 fdfd 	bl	8001574 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PG13 PG14 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 800097a:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 800097e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000980:	2301      	movs	r3, #1
 8000982:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000984:	2300      	movs	r3, #0
 8000986:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000988:	2300      	movs	r3, #0
 800098a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800098c:	f107 030c 	add.w	r3, r7, #12
 8000990:	4619      	mov	r1, r3
 8000992:	4804      	ldr	r0, [pc, #16]	; (80009a4 <MX_GPIO_Init+0x84>)
 8000994:	f000 fc42 	bl	800121c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000998:	bf00      	nop
 800099a:	3720      	adds	r7, #32
 800099c:	46bd      	mov	sp, r7
 800099e:	bd80      	pop	{r7, pc}
 80009a0:	40023800 	.word	0x40023800
 80009a4:	40021800 	.word	0x40021800

080009a8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80009a8:	b580      	push	{r7, lr}
 80009aa:	b08e      	sub	sp, #56	; 0x38
 80009ac:	af00      	add	r7, sp, #0
 80009ae:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  mystruct re_data;
  /*Creaye memory pool with 10 blocks*/
  MemoryPoolHandle = osMemoryPoolNew(10, sizeof(re_data), &MemoryPool_attributes);
 80009b0:	4a22      	ldr	r2, [pc, #136]	; (8000a3c <StartDefaultTask+0x94>)
 80009b2:	212c      	movs	r1, #44	; 0x2c
 80009b4:	200a      	movs	r0, #10
 80009b6:	f002 fafb 	bl	8002fb0 <osMemoryPoolNew>
 80009ba:	4603      	mov	r3, r0
 80009bc:	4a20      	ldr	r2, [pc, #128]	; (8000a40 <StartDefaultTask+0x98>)
 80009be:	6013      	str	r3, [r2, #0]
  for(;;)
  {

	int ret;

	ret = osMessageQueueGet(Queue1Handle, &re_data, (uint8_t*) osPriorityNormal, osWaitForever);
 80009c0:	4b20      	ldr	r3, [pc, #128]	; (8000a44 <StartDefaultTask+0x9c>)
 80009c2:	6818      	ldr	r0, [r3, #0]
 80009c4:	f107 0108 	add.w	r1, r7, #8
 80009c8:	f04f 33ff 	mov.w	r3, #4294967295
 80009cc:	2218      	movs	r2, #24
 80009ce:	f002 fa91 	bl	8002ef4 <osMessageQueueGet>
 80009d2:	6378      	str	r0, [r7, #52]	; 0x34
	if (ret!=0){
 80009d4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80009d6:	2b00      	cmp	r3, #0
 80009d8:	d003      	beq.n	80009e2 <StartDefaultTask+0x3a>
		printf("Error retrieving memory ptr TIM2 \n");
 80009da:	481b      	ldr	r0, [pc, #108]	; (8000a48 <StartDefaultTask+0xa0>)
 80009dc:	f006 f9ae 	bl	8006d3c <puts>
 80009e0:	e00c      	b.n	80009fc <StartDefaultTask+0x54>

	}
	else {
		//printf("Memory ptr TINM 2 received successfully \n");
		if (re_data.id == 2){
 80009e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80009e4:	2b02      	cmp	r3, #2
 80009e6:	d109      	bne.n	80009fc <StartDefaultTask+0x54>
			HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009ec:	4817      	ldr	r0, [pc, #92]	; (8000a4c <StartDefaultTask+0xa4>)
 80009ee:	f000 fdda 	bl	80015a6 <HAL_GPIO_TogglePin>
			printf("TIME2 cnt: %d \n", re_data.arr[0]);
 80009f2:	68bb      	ldr	r3, [r7, #8]
 80009f4:	4619      	mov	r1, r3
 80009f6:	4816      	ldr	r0, [pc, #88]	; (8000a50 <StartDefaultTask+0xa8>)
 80009f8:	f006 f93a 	bl	8006c70 <iprintf>
		}
	}

	ret = osMessageQueueGet(Queue1Handle, &re_data, (uint8_t*) osPriorityNormal, osWaitForever);
 80009fc:	4b11      	ldr	r3, [pc, #68]	; (8000a44 <StartDefaultTask+0x9c>)
 80009fe:	6818      	ldr	r0, [r3, #0]
 8000a00:	f107 0108 	add.w	r1, r7, #8
 8000a04:	f04f 33ff 	mov.w	r3, #4294967295
 8000a08:	2218      	movs	r2, #24
 8000a0a:	f002 fa73 	bl	8002ef4 <osMessageQueueGet>
 8000a0e:	6378      	str	r0, [r7, #52]	; 0x34
	if (ret!=0){
 8000a10:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a12:	2b00      	cmp	r3, #0
 8000a14:	d003      	beq.n	8000a1e <StartDefaultTask+0x76>
		printf("Error retrieving memory ptr TIM3 \n");
 8000a16:	480f      	ldr	r0, [pc, #60]	; (8000a54 <StartDefaultTask+0xac>)
 8000a18:	f006 f990 	bl	8006d3c <puts>
 8000a1c:	e7d0      	b.n	80009c0 <StartDefaultTask+0x18>
	}
	else {
		//printf("Memory ptr TIM3 received successfully \n");
		if (re_data.id == 3){
 8000a1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000a20:	2b03      	cmp	r3, #3
 8000a22:	d1cd      	bne.n	80009c0 <StartDefaultTask+0x18>
			HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_14);
 8000a24:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000a28:	4808      	ldr	r0, [pc, #32]	; (8000a4c <StartDefaultTask+0xa4>)
 8000a2a:	f000 fdbc 	bl	80015a6 <HAL_GPIO_TogglePin>
			printf("TIME3 cnt: %d \n", re_data.arr[0]);
 8000a2e:	68bb      	ldr	r3, [r7, #8]
 8000a30:	4619      	mov	r1, r3
 8000a32:	4809      	ldr	r0, [pc, #36]	; (8000a58 <StartDefaultTask+0xb0>)
 8000a34:	f006 f91c 	bl	8006c70 <iprintf>
  {
 8000a38:	e7c2      	b.n	80009c0 <StartDefaultTask+0x18>
 8000a3a:	bf00      	nop
 8000a3c:	20000028 	.word	0x20000028
 8000a40:	2000016c 	.word	0x2000016c
 8000a44:	20000164 	.word	0x20000164
 8000a48:	08007b30 	.word	0x08007b30
 8000a4c:	40021800 	.word	0x40021800
 8000a50:	08007b54 	.word	0x08007b54
 8000a54:	08007b64 	.word	0x08007b64
 8000a58:	08007b88 	.word	0x08007b88

08000a5c <StartTask02>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void *argument)
{
 8000a5c:	b580      	push	{r7, lr}
 8000a5e:	b086      	sub	sp, #24
 8000a60:	af00      	add	r7, sp, #0
 8000a62:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTask02 */
    mystruct * data;
	int ret;
    int cnt = 0;
 8000a64:	2300      	movs	r3, #0
 8000a66:	617b      	str	r3, [r7, #20]
	/* Infinite loop */
	for(;;)
	{

		osEventFlagsWait(Event1Handle, FLAG, osFlagsWaitAny, osWaitForever);
 8000a68:	4b1f      	ldr	r3, [pc, #124]	; (8000ae8 <StartTask02+0x8c>)
 8000a6a:	6818      	ldr	r0, [r3, #0]
 8000a6c:	f04f 33ff 	mov.w	r3, #4294967295
 8000a70:	2200      	movs	r2, #0
 8000a72:	2101      	movs	r1, #1
 8000a74:	f002 f904 	bl	8002c80 <osEventFlagsWait>

		data =  (mystruct *) osMemoryPoolAlloc(MemoryPoolHandle, 0U);
 8000a78:	4b1c      	ldr	r3, [pc, #112]	; (8000aec <StartTask02+0x90>)
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	2100      	movs	r1, #0
 8000a7e:	4618      	mov	r0, r3
 8000a80:	f002 fb6c 	bl	800315c <osMemoryPoolAlloc>
 8000a84:	6138      	str	r0, [r7, #16]

		data->arr[0] = cnt;
 8000a86:	693b      	ldr	r3, [r7, #16]
 8000a88:	697a      	ldr	r2, [r7, #20]
 8000a8a:	601a      	str	r2, [r3, #0]
		data->id = 2;  // Timer 2
 8000a8c:	693b      	ldr	r3, [r7, #16]
 8000a8e:	2202      	movs	r2, #2
 8000a90:	629a      	str	r2, [r3, #40]	; 0x28

		ret = osMessageQueuePut(Queue1Handle, (mystruct *) data, osPriorityNormal, osWaitForever);
 8000a92:	4b17      	ldr	r3, [pc, #92]	; (8000af0 <StartTask02+0x94>)
 8000a94:	6818      	ldr	r0, [r3, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2218      	movs	r2, #24
 8000a9c:	6939      	ldr	r1, [r7, #16]
 8000a9e:	f002 f9c9 	bl	8002e34 <osMessageQueuePut>
 8000aa2:	60f8      	str	r0, [r7, #12]

		if (ret!=0){
 8000aa4:	68fb      	ldr	r3, [r7, #12]
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	d003      	beq.n	8000ab2 <StartTask02+0x56>
			  printf("Error putting Memory pointer (Timer 2) in queue\n");
 8000aaa:	4812      	ldr	r0, [pc, #72]	; (8000af4 <StartTask02+0x98>)
 8000aac:	f006 f946 	bl	8006d3c <puts>
 8000ab0:	e00f      	b.n	8000ad2 <StartTask02+0x76>
		}
		else {
			printf("Memory ptr TIM2 in queue successfully \n\n");
 8000ab2:	4811      	ldr	r0, [pc, #68]	; (8000af8 <StartTask02+0x9c>)
 8000ab4:	f006 f942 	bl	8006d3c <puts>
			// Free the block of memory
			ret = osMemoryPoolFree(MemoryPoolHandle , data);
 8000ab8:	4b0c      	ldr	r3, [pc, #48]	; (8000aec <StartTask02+0x90>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	6939      	ldr	r1, [r7, #16]
 8000abe:	4618      	mov	r0, r3
 8000ac0:	f002 fbc2 	bl	8003248 <osMemoryPoolFree>
 8000ac4:	60f8      	str	r0, [r7, #12]
			if (ret !=0)
 8000ac6:	68fb      	ldr	r3, [r7, #12]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	d002      	beq.n	8000ad2 <StartTask02+0x76>
				printf("Error freeing memory block from the memory pool\n");
 8000acc:	480b      	ldr	r0, [pc, #44]	; (8000afc <StartTask02+0xa0>)
 8000ace:	f006 f935 	bl	8006d3c <puts>
		}
		cnt++;
 8000ad2:	697b      	ldr	r3, [r7, #20]
 8000ad4:	3301      	adds	r3, #1
 8000ad6:	617b      	str	r3, [r7, #20]
		osEventFlagsClear(Event1Handle, FLAG);
 8000ad8:	4b03      	ldr	r3, [pc, #12]	; (8000ae8 <StartTask02+0x8c>)
 8000ada:	681b      	ldr	r3, [r3, #0]
 8000adc:	2101      	movs	r1, #1
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f002 f89c 	bl	8002c1c <osEventFlagsClear>
		osEventFlagsWait(Event1Handle, FLAG, osFlagsWaitAny, osWaitForever);
 8000ae4:	e7c0      	b.n	8000a68 <StartTask02+0xc>
 8000ae6:	bf00      	nop
 8000ae8:	20000168 	.word	0x20000168
 8000aec:	2000016c 	.word	0x2000016c
 8000af0:	20000164 	.word	0x20000164
 8000af4:	08007b98 	.word	0x08007b98
 8000af8:	08007bc8 	.word	0x08007bc8
 8000afc:	08007bf0 	.word	0x08007bf0

08000b00 <StartTask03>:
	}
  /* USER CODE END StartTask02 */
}

void StartTask03(void *argument)
{
 8000b00:	b580      	push	{r7, lr}
 8000b02:	b086      	sub	sp, #24
 8000b04:	af00      	add	r7, sp, #0
 8000b06:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTask03 */
    mystruct *data;
	int ret;
    int cnt = 0;
 8000b08:	2300      	movs	r3, #0
 8000b0a:	617b      	str	r3, [r7, #20]
	/* Infinite loop */
	for(;;)
	{

		osEventFlagsWait(Event1Handle, FLAG, osFlagsWaitAny, osWaitForever);
 8000b0c:	4b1f      	ldr	r3, [pc, #124]	; (8000b8c <StartTask03+0x8c>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f04f 33ff 	mov.w	r3, #4294967295
 8000b14:	2200      	movs	r2, #0
 8000b16:	2101      	movs	r1, #1
 8000b18:	f002 f8b2 	bl	8002c80 <osEventFlagsWait>

		data =  (mystruct *) osMemoryPoolAlloc(MemoryPoolHandle, 0U);
 8000b1c:	4b1c      	ldr	r3, [pc, #112]	; (8000b90 <StartTask03+0x90>)
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	2100      	movs	r1, #0
 8000b22:	4618      	mov	r0, r3
 8000b24:	f002 fb1a 	bl	800315c <osMemoryPoolAlloc>
 8000b28:	6138      	str	r0, [r7, #16]

		data->arr[0] = cnt;
 8000b2a:	693b      	ldr	r3, [r7, #16]
 8000b2c:	697a      	ldr	r2, [r7, #20]
 8000b2e:	601a      	str	r2, [r3, #0]
		data->id = 3;  // Timer 3
 8000b30:	693b      	ldr	r3, [r7, #16]
 8000b32:	2203      	movs	r2, #3
 8000b34:	629a      	str	r2, [r3, #40]	; 0x28

		ret = osMessageQueuePut(Queue1Handle, (mystruct *) data, osPriorityNormal, osWaitForever);
 8000b36:	4b17      	ldr	r3, [pc, #92]	; (8000b94 <StartTask03+0x94>)
 8000b38:	6818      	ldr	r0, [r3, #0]
 8000b3a:	f04f 33ff 	mov.w	r3, #4294967295
 8000b3e:	2218      	movs	r2, #24
 8000b40:	6939      	ldr	r1, [r7, #16]
 8000b42:	f002 f977 	bl	8002e34 <osMessageQueuePut>
 8000b46:	60f8      	str	r0, [r7, #12]
		if (ret!=0){
 8000b48:	68fb      	ldr	r3, [r7, #12]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d003      	beq.n	8000b56 <StartTask03+0x56>
			  printf("Error putting Memory pointer (Timer 3) in queue\n");
 8000b4e:	4812      	ldr	r0, [pc, #72]	; (8000b98 <StartTask03+0x98>)
 8000b50:	f006 f8f4 	bl	8006d3c <puts>
 8000b54:	e00f      	b.n	8000b76 <StartTask03+0x76>
		}
		else {
			printf("Memory ptr TIM3 in queue successfully \n\n");
 8000b56:	4811      	ldr	r0, [pc, #68]	; (8000b9c <StartTask03+0x9c>)
 8000b58:	f006 f8f0 	bl	8006d3c <puts>
			// Free the block of memory
			ret = osMemoryPoolFree(MemoryPoolHandle , data);
 8000b5c:	4b0c      	ldr	r3, [pc, #48]	; (8000b90 <StartTask03+0x90>)
 8000b5e:	681b      	ldr	r3, [r3, #0]
 8000b60:	6939      	ldr	r1, [r7, #16]
 8000b62:	4618      	mov	r0, r3
 8000b64:	f002 fb70 	bl	8003248 <osMemoryPoolFree>
 8000b68:	60f8      	str	r0, [r7, #12]
			if (ret !=0)
 8000b6a:	68fb      	ldr	r3, [r7, #12]
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	d002      	beq.n	8000b76 <StartTask03+0x76>
				printf("Error freeing memory block from the memory pool\n");
 8000b70:	480b      	ldr	r0, [pc, #44]	; (8000ba0 <StartTask03+0xa0>)
 8000b72:	f006 f8e3 	bl	8006d3c <puts>

		}
		cnt++;
 8000b76:	697b      	ldr	r3, [r7, #20]
 8000b78:	3301      	adds	r3, #1
 8000b7a:	617b      	str	r3, [r7, #20]
		osEventFlagsClear(Event1Handle, FLAG);
 8000b7c:	4b03      	ldr	r3, [pc, #12]	; (8000b8c <StartTask03+0x8c>)
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	2101      	movs	r1, #1
 8000b82:	4618      	mov	r0, r3
 8000b84:	f002 f84a 	bl	8002c1c <osEventFlagsClear>
		osEventFlagsWait(Event1Handle, FLAG, osFlagsWaitAny, osWaitForever);
 8000b88:	e7c0      	b.n	8000b0c <StartTask03+0xc>
 8000b8a:	bf00      	nop
 8000b8c:	20000168 	.word	0x20000168
 8000b90:	2000016c 	.word	0x2000016c
 8000b94:	20000164 	.word	0x20000164
 8000b98:	08007c20 	.word	0x08007c20
 8000b9c:	08007c50 	.word	0x08007c50
 8000ba0:	08007bf0 	.word	0x08007bf0

08000ba4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b082      	sub	sp, #8
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]

  if (htim->Instance == TIM6) {
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	4a10      	ldr	r2, [pc, #64]	; (8000bf4 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8000bb2:	4293      	cmp	r3, r2
 8000bb4:	d102      	bne.n	8000bbc <HAL_TIM_PeriodElapsedCallback+0x18>
    HAL_IncTick();
 8000bb6:	f000 fa2f 	bl	8001018 <HAL_IncTick>
  }
  else if (htim->Instance == TIM3){
	  osEventFlagsSet(Event1Handle, FLAG);
  }

}
 8000bba:	e016      	b.n	8000bea <HAL_TIM_PeriodElapsedCallback+0x46>
  else if (htim->Instance == TIM2){
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000bc4:	d106      	bne.n	8000bd4 <HAL_TIM_PeriodElapsedCallback+0x30>
	  osEventFlagsSet(Event1Handle, FLAG);
 8000bc6:	4b0c      	ldr	r3, [pc, #48]	; (8000bf8 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000bc8:	681b      	ldr	r3, [r3, #0]
 8000bca:	2101      	movs	r1, #1
 8000bcc:	4618      	mov	r0, r3
 8000bce:	f001 ffe1 	bl	8002b94 <osEventFlagsSet>
}
 8000bd2:	e00a      	b.n	8000bea <HAL_TIM_PeriodElapsedCallback+0x46>
  else if (htim->Instance == TIM3){
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	4a08      	ldr	r2, [pc, #32]	; (8000bfc <HAL_TIM_PeriodElapsedCallback+0x58>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d105      	bne.n	8000bea <HAL_TIM_PeriodElapsedCallback+0x46>
	  osEventFlagsSet(Event1Handle, FLAG);
 8000bde:	4b06      	ldr	r3, [pc, #24]	; (8000bf8 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000be0:	681b      	ldr	r3, [r3, #0]
 8000be2:	2101      	movs	r1, #1
 8000be4:	4618      	mov	r0, r3
 8000be6:	f001 ffd5 	bl	8002b94 <osEventFlagsSet>
}
 8000bea:	bf00      	nop
 8000bec:	3708      	adds	r7, #8
 8000bee:	46bd      	mov	sp, r7
 8000bf0:	bd80      	pop	{r7, pc}
 8000bf2:	bf00      	nop
 8000bf4:	40001000 	.word	0x40001000
 8000bf8:	20000168 	.word	0x20000168
 8000bfc:	40000400 	.word	0x40000400

08000c00 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c00:	b480      	push	{r7}
 8000c02:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c04:	b672      	cpsid	i
}
 8000c06:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c08:	e7fe      	b.n	8000c08 <Error_Handler+0x8>
	...

08000c0c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b082      	sub	sp, #8
 8000c10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c12:	2300      	movs	r3, #0
 8000c14:	607b      	str	r3, [r7, #4]
 8000c16:	4b12      	ldr	r3, [pc, #72]	; (8000c60 <HAL_MspInit+0x54>)
 8000c18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c1a:	4a11      	ldr	r2, [pc, #68]	; (8000c60 <HAL_MspInit+0x54>)
 8000c1c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000c20:	6453      	str	r3, [r2, #68]	; 0x44
 8000c22:	4b0f      	ldr	r3, [pc, #60]	; (8000c60 <HAL_MspInit+0x54>)
 8000c24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c26:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000c2a:	607b      	str	r3, [r7, #4]
 8000c2c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c2e:	2300      	movs	r3, #0
 8000c30:	603b      	str	r3, [r7, #0]
 8000c32:	4b0b      	ldr	r3, [pc, #44]	; (8000c60 <HAL_MspInit+0x54>)
 8000c34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c36:	4a0a      	ldr	r2, [pc, #40]	; (8000c60 <HAL_MspInit+0x54>)
 8000c38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000c3c:	6413      	str	r3, [r2, #64]	; 0x40
 8000c3e:	4b08      	ldr	r3, [pc, #32]	; (8000c60 <HAL_MspInit+0x54>)
 8000c40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c42:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000c46:	603b      	str	r3, [r7, #0]
 8000c48:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	210f      	movs	r1, #15
 8000c4e:	f06f 0001 	mvn.w	r0, #1
 8000c52:	f000 fab9 	bl	80011c8 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c56:	bf00      	nop
 8000c58:	3708      	adds	r7, #8
 8000c5a:	46bd      	mov	sp, r7
 8000c5c:	bd80      	pop	{r7, pc}
 8000c5e:	bf00      	nop
 8000c60:	40023800 	.word	0x40023800

08000c64 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000c64:	b580      	push	{r7, lr}
 8000c66:	b084      	sub	sp, #16
 8000c68:	af00      	add	r7, sp, #0
 8000c6a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	681b      	ldr	r3, [r3, #0]
 8000c70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000c74:	d116      	bne.n	8000ca4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000c76:	2300      	movs	r3, #0
 8000c78:	60fb      	str	r3, [r7, #12]
 8000c7a:	4b1a      	ldr	r3, [pc, #104]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000c7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c7e:	4a19      	ldr	r2, [pc, #100]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000c80:	f043 0301 	orr.w	r3, r3, #1
 8000c84:	6413      	str	r3, [r2, #64]	; 0x40
 8000c86:	4b17      	ldr	r3, [pc, #92]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000c88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c8a:	f003 0301 	and.w	r3, r3, #1
 8000c8e:	60fb      	str	r3, [r7, #12]
 8000c90:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8000c92:	2200      	movs	r2, #0
 8000c94:	2105      	movs	r1, #5
 8000c96:	201c      	movs	r0, #28
 8000c98:	f000 fa96 	bl	80011c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000c9c:	201c      	movs	r0, #28
 8000c9e:	f000 faaf 	bl	8001200 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8000ca2:	e01a      	b.n	8000cda <HAL_TIM_Base_MspInit+0x76>
  else if(htim_base->Instance==TIM3)
 8000ca4:	687b      	ldr	r3, [r7, #4]
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	4a0f      	ldr	r2, [pc, #60]	; (8000ce8 <HAL_TIM_Base_MspInit+0x84>)
 8000caa:	4293      	cmp	r3, r2
 8000cac:	d115      	bne.n	8000cda <HAL_TIM_Base_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8000cae:	2300      	movs	r3, #0
 8000cb0:	60bb      	str	r3, [r7, #8]
 8000cb2:	4b0c      	ldr	r3, [pc, #48]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000cb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000cb6:	4a0b      	ldr	r2, [pc, #44]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000cb8:	f043 0302 	orr.w	r3, r3, #2
 8000cbc:	6413      	str	r3, [r2, #64]	; 0x40
 8000cbe:	4b09      	ldr	r3, [pc, #36]	; (8000ce4 <HAL_TIM_Base_MspInit+0x80>)
 8000cc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000cc2:	f003 0302 	and.w	r3, r3, #2
 8000cc6:	60bb      	str	r3, [r7, #8]
 8000cc8:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 5, 0);
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2105      	movs	r1, #5
 8000cce:	201d      	movs	r0, #29
 8000cd0:	f000 fa7a 	bl	80011c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8000cd4:	201d      	movs	r0, #29
 8000cd6:	f000 fa93 	bl	8001200 <HAL_NVIC_EnableIRQ>
}
 8000cda:	bf00      	nop
 8000cdc:	3710      	adds	r7, #16
 8000cde:	46bd      	mov	sp, r7
 8000ce0:	bd80      	pop	{r7, pc}
 8000ce2:	bf00      	nop
 8000ce4:	40023800 	.word	0x40023800
 8000ce8:	40000400 	.word	0x40000400

08000cec <HAL_InitTick>:
 8000cec:	b580      	push	{r7, lr}
 8000cee:	b08e      	sub	sp, #56	; 0x38
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	62bb      	str	r3, [r7, #40]	; 0x28
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	60fb      	str	r3, [r7, #12]
 8000d00:	4b33      	ldr	r3, [pc, #204]	; (8000dd0 <HAL_InitTick+0xe4>)
 8000d02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d04:	4a32      	ldr	r2, [pc, #200]	; (8000dd0 <HAL_InitTick+0xe4>)
 8000d06:	f043 0310 	orr.w	r3, r3, #16
 8000d0a:	6413      	str	r3, [r2, #64]	; 0x40
 8000d0c:	4b30      	ldr	r3, [pc, #192]	; (8000dd0 <HAL_InitTick+0xe4>)
 8000d0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d10:	f003 0310 	and.w	r3, r3, #16
 8000d14:	60fb      	str	r3, [r7, #12]
 8000d16:	68fb      	ldr	r3, [r7, #12]
 8000d18:	f107 0210 	add.w	r2, r7, #16
 8000d1c:	f107 0314 	add.w	r3, r7, #20
 8000d20:	4611      	mov	r1, r2
 8000d22:	4618      	mov	r0, r3
 8000d24:	f001 f92e 	bl	8001f84 <HAL_RCC_GetClockConfig>
 8000d28:	6a3b      	ldr	r3, [r7, #32]
 8000d2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000d2c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d103      	bne.n	8000d3a <HAL_InitTick+0x4e>
 8000d32:	f001 f913 	bl	8001f5c <HAL_RCC_GetPCLK1Freq>
 8000d36:	6378      	str	r0, [r7, #52]	; 0x34
 8000d38:	e004      	b.n	8000d44 <HAL_InitTick+0x58>
 8000d3a:	f001 f90f 	bl	8001f5c <HAL_RCC_GetPCLK1Freq>
 8000d3e:	4603      	mov	r3, r0
 8000d40:	005b      	lsls	r3, r3, #1
 8000d42:	637b      	str	r3, [r7, #52]	; 0x34
 8000d44:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000d46:	4a23      	ldr	r2, [pc, #140]	; (8000dd4 <HAL_InitTick+0xe8>)
 8000d48:	fba2 2303 	umull	r2, r3, r2, r3
 8000d4c:	0c9b      	lsrs	r3, r3, #18
 8000d4e:	3b01      	subs	r3, #1
 8000d50:	62bb      	str	r3, [r7, #40]	; 0x28
 8000d52:	4b21      	ldr	r3, [pc, #132]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d54:	4a21      	ldr	r2, [pc, #132]	; (8000ddc <HAL_InitTick+0xf0>)
 8000d56:	601a      	str	r2, [r3, #0]
 8000d58:	4b1f      	ldr	r3, [pc, #124]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d5a:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000d5e:	60da      	str	r2, [r3, #12]
 8000d60:	4a1d      	ldr	r2, [pc, #116]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d62:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000d64:	6053      	str	r3, [r2, #4]
 8000d66:	4b1c      	ldr	r3, [pc, #112]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d68:	2200      	movs	r2, #0
 8000d6a:	611a      	str	r2, [r3, #16]
 8000d6c:	4b1a      	ldr	r3, [pc, #104]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d6e:	2200      	movs	r2, #0
 8000d70:	609a      	str	r2, [r3, #8]
 8000d72:	4b19      	ldr	r3, [pc, #100]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d74:	2200      	movs	r2, #0
 8000d76:	619a      	str	r2, [r3, #24]
 8000d78:	4817      	ldr	r0, [pc, #92]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d7a:	f001 f935 	bl	8001fe8 <HAL_TIM_Base_Init>
 8000d7e:	4603      	mov	r3, r0
 8000d80:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000d84:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	d11b      	bne.n	8000dc4 <HAL_InitTick+0xd8>
 8000d8c:	4812      	ldr	r0, [pc, #72]	; (8000dd8 <HAL_InitTick+0xec>)
 8000d8e:	f001 f97b 	bl	8002088 <HAL_TIM_Base_Start_IT>
 8000d92:	4603      	mov	r3, r0
 8000d94:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000d98:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d111      	bne.n	8000dc4 <HAL_InitTick+0xd8>
 8000da0:	2036      	movs	r0, #54	; 0x36
 8000da2:	f000 fa2d 	bl	8001200 <HAL_NVIC_EnableIRQ>
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	2b0f      	cmp	r3, #15
 8000daa:	d808      	bhi.n	8000dbe <HAL_InitTick+0xd2>
 8000dac:	2200      	movs	r2, #0
 8000dae:	6879      	ldr	r1, [r7, #4]
 8000db0:	2036      	movs	r0, #54	; 0x36
 8000db2:	f000 fa09 	bl	80011c8 <HAL_NVIC_SetPriority>
 8000db6:	4a0a      	ldr	r2, [pc, #40]	; (8000de0 <HAL_InitTick+0xf4>)
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	6013      	str	r3, [r2, #0]
 8000dbc:	e002      	b.n	8000dc4 <HAL_InitTick+0xd8>
 8000dbe:	2301      	movs	r3, #1
 8000dc0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8000dc4:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8000dc8:	4618      	mov	r0, r3
 8000dca:	3738      	adds	r7, #56	; 0x38
 8000dcc:	46bd      	mov	sp, r7
 8000dce:	bd80      	pop	{r7, pc}
 8000dd0:	40023800 	.word	0x40023800
 8000dd4:	431bde83 	.word	0x431bde83
 8000dd8:	20000170 	.word	0x20000170
 8000ddc:	40001000 	.word	0x40001000
 8000de0:	20000044 	.word	0x20000044

08000de4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000de4:	b480      	push	{r7}
 8000de6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000de8:	e7fe      	b.n	8000de8 <NMI_Handler+0x4>

08000dea <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000dea:	b480      	push	{r7}
 8000dec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000dee:	e7fe      	b.n	8000dee <HardFault_Handler+0x4>

08000df0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000df0:	b480      	push	{r7}
 8000df2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000df4:	e7fe      	b.n	8000df4 <MemManage_Handler+0x4>

08000df6 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000df6:	b480      	push	{r7}
 8000df8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000dfa:	e7fe      	b.n	8000dfa <BusFault_Handler+0x4>

08000dfc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000dfc:	b480      	push	{r7}
 8000dfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e00:	e7fe      	b.n	8000e00 <UsageFault_Handler+0x4>

08000e02 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000e02:	b480      	push	{r7}
 8000e04:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000e06:	bf00      	nop
 8000e08:	46bd      	mov	sp, r7
 8000e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e0e:	4770      	bx	lr

08000e10 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000e14:	4802      	ldr	r0, [pc, #8]	; (8000e20 <TIM2_IRQHandler+0x10>)
 8000e16:	f001 f9a7 	bl	8002168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000e1a:	bf00      	nop
 8000e1c:	bd80      	pop	{r7, pc}
 8000e1e:	bf00      	nop
 8000e20:	200000c8 	.word	0x200000c8

08000e24 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8000e24:	b580      	push	{r7, lr}
 8000e26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8000e28:	4802      	ldr	r0, [pc, #8]	; (8000e34 <TIM3_IRQHandler+0x10>)
 8000e2a:	f001 f99d 	bl	8002168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8000e2e:	bf00      	nop
 8000e30:	bd80      	pop	{r7, pc}
 8000e32:	bf00      	nop
 8000e34:	20000110 	.word	0x20000110

08000e38 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000e3c:	4802      	ldr	r0, [pc, #8]	; (8000e48 <TIM6_DAC_IRQHandler+0x10>)
 8000e3e:	f001 f993 	bl	8002168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8000e42:	bf00      	nop
 8000e44:	bd80      	pop	{r7, pc}
 8000e46:	bf00      	nop
 8000e48:	20000170 	.word	0x20000170

08000e4c <_read>:
 8000e4c:	b580      	push	{r7, lr}
 8000e4e:	b086      	sub	sp, #24
 8000e50:	af00      	add	r7, sp, #0
 8000e52:	60f8      	str	r0, [r7, #12]
 8000e54:	60b9      	str	r1, [r7, #8]
 8000e56:	607a      	str	r2, [r7, #4]
 8000e58:	2300      	movs	r3, #0
 8000e5a:	617b      	str	r3, [r7, #20]
 8000e5c:	e00a      	b.n	8000e74 <_read+0x28>
 8000e5e:	f3af 8000 	nop.w
 8000e62:	4601      	mov	r1, r0
 8000e64:	68bb      	ldr	r3, [r7, #8]
 8000e66:	1c5a      	adds	r2, r3, #1
 8000e68:	60ba      	str	r2, [r7, #8]
 8000e6a:	b2ca      	uxtb	r2, r1
 8000e6c:	701a      	strb	r2, [r3, #0]
 8000e6e:	697b      	ldr	r3, [r7, #20]
 8000e70:	3301      	adds	r3, #1
 8000e72:	617b      	str	r3, [r7, #20]
 8000e74:	697a      	ldr	r2, [r7, #20]
 8000e76:	687b      	ldr	r3, [r7, #4]
 8000e78:	429a      	cmp	r2, r3
 8000e7a:	dbf0      	blt.n	8000e5e <_read+0x12>
 8000e7c:	687b      	ldr	r3, [r7, #4]
 8000e7e:	4618      	mov	r0, r3
 8000e80:	3718      	adds	r7, #24
 8000e82:	46bd      	mov	sp, r7
 8000e84:	bd80      	pop	{r7, pc}

08000e86 <_close>:
 8000e86:	b480      	push	{r7}
 8000e88:	b083      	sub	sp, #12
 8000e8a:	af00      	add	r7, sp, #0
 8000e8c:	6078      	str	r0, [r7, #4]
 8000e8e:	f04f 33ff 	mov.w	r3, #4294967295
 8000e92:	4618      	mov	r0, r3
 8000e94:	370c      	adds	r7, #12
 8000e96:	46bd      	mov	sp, r7
 8000e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9c:	4770      	bx	lr

08000e9e <_fstat>:
 8000e9e:	b480      	push	{r7}
 8000ea0:	b083      	sub	sp, #12
 8000ea2:	af00      	add	r7, sp, #0
 8000ea4:	6078      	str	r0, [r7, #4]
 8000ea6:	6039      	str	r1, [r7, #0]
 8000ea8:	683b      	ldr	r3, [r7, #0]
 8000eaa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000eae:	605a      	str	r2, [r3, #4]
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	4618      	mov	r0, r3
 8000eb4:	370c      	adds	r7, #12
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr

08000ebe <_isatty>:
 8000ebe:	b480      	push	{r7}
 8000ec0:	b083      	sub	sp, #12
 8000ec2:	af00      	add	r7, sp, #0
 8000ec4:	6078      	str	r0, [r7, #4]
 8000ec6:	2301      	movs	r3, #1
 8000ec8:	4618      	mov	r0, r3
 8000eca:	370c      	adds	r7, #12
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed2:	4770      	bx	lr

08000ed4 <_lseek>:
 8000ed4:	b480      	push	{r7}
 8000ed6:	b085      	sub	sp, #20
 8000ed8:	af00      	add	r7, sp, #0
 8000eda:	60f8      	str	r0, [r7, #12]
 8000edc:	60b9      	str	r1, [r7, #8]
 8000ede:	607a      	str	r2, [r7, #4]
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	3714      	adds	r7, #20
 8000ee6:	46bd      	mov	sp, r7
 8000ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eec:	4770      	bx	lr
	...

08000ef0 <_sbrk>:
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	b086      	sub	sp, #24
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	6078      	str	r0, [r7, #4]
 8000ef8:	4a14      	ldr	r2, [pc, #80]	; (8000f4c <_sbrk+0x5c>)
 8000efa:	4b15      	ldr	r3, [pc, #84]	; (8000f50 <_sbrk+0x60>)
 8000efc:	1ad3      	subs	r3, r2, r3
 8000efe:	617b      	str	r3, [r7, #20]
 8000f00:	697b      	ldr	r3, [r7, #20]
 8000f02:	613b      	str	r3, [r7, #16]
 8000f04:	4b13      	ldr	r3, [pc, #76]	; (8000f54 <_sbrk+0x64>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d102      	bne.n	8000f12 <_sbrk+0x22>
 8000f0c:	4b11      	ldr	r3, [pc, #68]	; (8000f54 <_sbrk+0x64>)
 8000f0e:	4a12      	ldr	r2, [pc, #72]	; (8000f58 <_sbrk+0x68>)
 8000f10:	601a      	str	r2, [r3, #0]
 8000f12:	4b10      	ldr	r3, [pc, #64]	; (8000f54 <_sbrk+0x64>)
 8000f14:	681a      	ldr	r2, [r3, #0]
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	4413      	add	r3, r2
 8000f1a:	693a      	ldr	r2, [r7, #16]
 8000f1c:	429a      	cmp	r2, r3
 8000f1e:	d207      	bcs.n	8000f30 <_sbrk+0x40>
 8000f20:	f006 f890 	bl	8007044 <__errno>
 8000f24:	4603      	mov	r3, r0
 8000f26:	220c      	movs	r2, #12
 8000f28:	601a      	str	r2, [r3, #0]
 8000f2a:	f04f 33ff 	mov.w	r3, #4294967295
 8000f2e:	e009      	b.n	8000f44 <_sbrk+0x54>
 8000f30:	4b08      	ldr	r3, [pc, #32]	; (8000f54 <_sbrk+0x64>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	60fb      	str	r3, [r7, #12]
 8000f36:	4b07      	ldr	r3, [pc, #28]	; (8000f54 <_sbrk+0x64>)
 8000f38:	681a      	ldr	r2, [r3, #0]
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	4413      	add	r3, r2
 8000f3e:	4a05      	ldr	r2, [pc, #20]	; (8000f54 <_sbrk+0x64>)
 8000f40:	6013      	str	r3, [r2, #0]
 8000f42:	68fb      	ldr	r3, [r7, #12]
 8000f44:	4618      	mov	r0, r3
 8000f46:	3718      	adds	r7, #24
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}
 8000f4c:	20030000 	.word	0x20030000
 8000f50:	00000400 	.word	0x00000400
 8000f54:	200001b8 	.word	0x200001b8
 8000f58:	20004cf8 	.word	0x20004cf8

08000f5c <SystemInit>:
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0
 8000f60:	4b06      	ldr	r3, [pc, #24]	; (8000f7c <SystemInit+0x20>)
 8000f62:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000f66:	4a05      	ldr	r2, [pc, #20]	; (8000f7c <SystemInit+0x20>)
 8000f68:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000f6c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000f70:	bf00      	nop
 8000f72:	46bd      	mov	sp, r7
 8000f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	e000ed00 	.word	0xe000ed00

08000f80 <Reset_Handler>:
 8000f80:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000fb8 <LoopFillZerobss+0xe>
 8000f84:	f7ff ffea 	bl	8000f5c <SystemInit>
 8000f88:	480c      	ldr	r0, [pc, #48]	; (8000fbc <LoopFillZerobss+0x12>)
 8000f8a:	490d      	ldr	r1, [pc, #52]	; (8000fc0 <LoopFillZerobss+0x16>)
 8000f8c:	4a0d      	ldr	r2, [pc, #52]	; (8000fc4 <LoopFillZerobss+0x1a>)
 8000f8e:	2300      	movs	r3, #0
 8000f90:	e002      	b.n	8000f98 <LoopCopyDataInit>

08000f92 <CopyDataInit>:
 8000f92:	58d4      	ldr	r4, [r2, r3]
 8000f94:	50c4      	str	r4, [r0, r3]
 8000f96:	3304      	adds	r3, #4

08000f98 <LoopCopyDataInit>:
 8000f98:	18c4      	adds	r4, r0, r3
 8000f9a:	428c      	cmp	r4, r1
 8000f9c:	d3f9      	bcc.n	8000f92 <CopyDataInit>
 8000f9e:	4a0a      	ldr	r2, [pc, #40]	; (8000fc8 <LoopFillZerobss+0x1e>)
 8000fa0:	4c0a      	ldr	r4, [pc, #40]	; (8000fcc <LoopFillZerobss+0x22>)
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	e001      	b.n	8000faa <LoopFillZerobss>

08000fa6 <FillZerobss>:
 8000fa6:	6013      	str	r3, [r2, #0]
 8000fa8:	3204      	adds	r2, #4

08000faa <LoopFillZerobss>:
 8000faa:	42a2      	cmp	r2, r4
 8000fac:	d3fb      	bcc.n	8000fa6 <FillZerobss>
 8000fae:	f006 f84f 	bl	8007050 <__libc_init_array>
 8000fb2:	f7ff fb31 	bl	8000618 <main>
 8000fb6:	4770      	bx	lr
 8000fb8:	20030000 	.word	0x20030000
 8000fbc:	20000000 	.word	0x20000000
 8000fc0:	200000ac 	.word	0x200000ac
 8000fc4:	08007d58 	.word	0x08007d58
 8000fc8:	200000ac 	.word	0x200000ac
 8000fcc:	20004cf4 	.word	0x20004cf4

08000fd0 <ADC_IRQHandler>:
 8000fd0:	e7fe      	b.n	8000fd0 <ADC_IRQHandler>
	...

08000fd4 <HAL_Init>:
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	af00      	add	r7, sp, #0
 8000fd8:	4b0e      	ldr	r3, [pc, #56]	; (8001014 <HAL_Init+0x40>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	4a0d      	ldr	r2, [pc, #52]	; (8001014 <HAL_Init+0x40>)
 8000fde:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000fe2:	6013      	str	r3, [r2, #0]
 8000fe4:	4b0b      	ldr	r3, [pc, #44]	; (8001014 <HAL_Init+0x40>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	4a0a      	ldr	r2, [pc, #40]	; (8001014 <HAL_Init+0x40>)
 8000fea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000fee:	6013      	str	r3, [r2, #0]
 8000ff0:	4b08      	ldr	r3, [pc, #32]	; (8001014 <HAL_Init+0x40>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	4a07      	ldr	r2, [pc, #28]	; (8001014 <HAL_Init+0x40>)
 8000ff6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ffa:	6013      	str	r3, [r2, #0]
 8000ffc:	2003      	movs	r0, #3
 8000ffe:	f000 f8d8 	bl	80011b2 <HAL_NVIC_SetPriorityGrouping>
 8001002:	200f      	movs	r0, #15
 8001004:	f7ff fe72 	bl	8000cec <HAL_InitTick>
 8001008:	f7ff fe00 	bl	8000c0c <HAL_MspInit>
 800100c:	2300      	movs	r3, #0
 800100e:	4618      	mov	r0, r3
 8001010:	bd80      	pop	{r7, pc}
 8001012:	bf00      	nop
 8001014:	40023c00 	.word	0x40023c00

08001018 <HAL_IncTick>:
 8001018:	b480      	push	{r7}
 800101a:	af00      	add	r7, sp, #0
 800101c:	4b06      	ldr	r3, [pc, #24]	; (8001038 <HAL_IncTick+0x20>)
 800101e:	781b      	ldrb	r3, [r3, #0]
 8001020:	461a      	mov	r2, r3
 8001022:	4b06      	ldr	r3, [pc, #24]	; (800103c <HAL_IncTick+0x24>)
 8001024:	681b      	ldr	r3, [r3, #0]
 8001026:	4413      	add	r3, r2
 8001028:	4a04      	ldr	r2, [pc, #16]	; (800103c <HAL_IncTick+0x24>)
 800102a:	6013      	str	r3, [r2, #0]
 800102c:	bf00      	nop
 800102e:	46bd      	mov	sp, r7
 8001030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001034:	4770      	bx	lr
 8001036:	bf00      	nop
 8001038:	20000048 	.word	0x20000048
 800103c:	200001bc 	.word	0x200001bc

08001040 <HAL_GetTick>:
 8001040:	b480      	push	{r7}
 8001042:	af00      	add	r7, sp, #0
 8001044:	4b03      	ldr	r3, [pc, #12]	; (8001054 <HAL_GetTick+0x14>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	4618      	mov	r0, r3
 800104a:	46bd      	mov	sp, r7
 800104c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001050:	4770      	bx	lr
 8001052:	bf00      	nop
 8001054:	200001bc 	.word	0x200001bc

08001058 <__NVIC_SetPriorityGrouping>:
 8001058:	b480      	push	{r7}
 800105a:	b085      	sub	sp, #20
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	f003 0307 	and.w	r3, r3, #7
 8001066:	60fb      	str	r3, [r7, #12]
 8001068:	4b0c      	ldr	r3, [pc, #48]	; (800109c <__NVIC_SetPriorityGrouping+0x44>)
 800106a:	68db      	ldr	r3, [r3, #12]
 800106c:	60bb      	str	r3, [r7, #8]
 800106e:	68ba      	ldr	r2, [r7, #8]
 8001070:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001074:	4013      	ands	r3, r2
 8001076:	60bb      	str	r3, [r7, #8]
 8001078:	68fb      	ldr	r3, [r7, #12]
 800107a:	021a      	lsls	r2, r3, #8
 800107c:	68bb      	ldr	r3, [r7, #8]
 800107e:	4313      	orrs	r3, r2
 8001080:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001084:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001088:	60bb      	str	r3, [r7, #8]
 800108a:	4a04      	ldr	r2, [pc, #16]	; (800109c <__NVIC_SetPriorityGrouping+0x44>)
 800108c:	68bb      	ldr	r3, [r7, #8]
 800108e:	60d3      	str	r3, [r2, #12]
 8001090:	bf00      	nop
 8001092:	3714      	adds	r7, #20
 8001094:	46bd      	mov	sp, r7
 8001096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109a:	4770      	bx	lr
 800109c:	e000ed00 	.word	0xe000ed00

080010a0 <__NVIC_GetPriorityGrouping>:
 80010a0:	b480      	push	{r7}
 80010a2:	af00      	add	r7, sp, #0
 80010a4:	4b04      	ldr	r3, [pc, #16]	; (80010b8 <__NVIC_GetPriorityGrouping+0x18>)
 80010a6:	68db      	ldr	r3, [r3, #12]
 80010a8:	0a1b      	lsrs	r3, r3, #8
 80010aa:	f003 0307 	and.w	r3, r3, #7
 80010ae:	4618      	mov	r0, r3
 80010b0:	46bd      	mov	sp, r7
 80010b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b6:	4770      	bx	lr
 80010b8:	e000ed00 	.word	0xe000ed00

080010bc <__NVIC_EnableIRQ>:
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	4603      	mov	r3, r0
 80010c4:	71fb      	strb	r3, [r7, #7]
 80010c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	db0b      	blt.n	80010e6 <__NVIC_EnableIRQ+0x2a>
 80010ce:	79fb      	ldrb	r3, [r7, #7]
 80010d0:	f003 021f 	and.w	r2, r3, #31
 80010d4:	4907      	ldr	r1, [pc, #28]	; (80010f4 <__NVIC_EnableIRQ+0x38>)
 80010d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010da:	095b      	lsrs	r3, r3, #5
 80010dc:	2001      	movs	r0, #1
 80010de:	fa00 f202 	lsl.w	r2, r0, r2
 80010e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80010e6:	bf00      	nop
 80010e8:	370c      	adds	r7, #12
 80010ea:	46bd      	mov	sp, r7
 80010ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f0:	4770      	bx	lr
 80010f2:	bf00      	nop
 80010f4:	e000e100 	.word	0xe000e100

080010f8 <__NVIC_SetPriority>:
 80010f8:	b480      	push	{r7}
 80010fa:	b083      	sub	sp, #12
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	4603      	mov	r3, r0
 8001100:	6039      	str	r1, [r7, #0]
 8001102:	71fb      	strb	r3, [r7, #7]
 8001104:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001108:	2b00      	cmp	r3, #0
 800110a:	db0a      	blt.n	8001122 <__NVIC_SetPriority+0x2a>
 800110c:	683b      	ldr	r3, [r7, #0]
 800110e:	b2da      	uxtb	r2, r3
 8001110:	490c      	ldr	r1, [pc, #48]	; (8001144 <__NVIC_SetPriority+0x4c>)
 8001112:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001116:	0112      	lsls	r2, r2, #4
 8001118:	b2d2      	uxtb	r2, r2
 800111a:	440b      	add	r3, r1
 800111c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001120:	e00a      	b.n	8001138 <__NVIC_SetPriority+0x40>
 8001122:	683b      	ldr	r3, [r7, #0]
 8001124:	b2da      	uxtb	r2, r3
 8001126:	4908      	ldr	r1, [pc, #32]	; (8001148 <__NVIC_SetPriority+0x50>)
 8001128:	79fb      	ldrb	r3, [r7, #7]
 800112a:	f003 030f 	and.w	r3, r3, #15
 800112e:	3b04      	subs	r3, #4
 8001130:	0112      	lsls	r2, r2, #4
 8001132:	b2d2      	uxtb	r2, r2
 8001134:	440b      	add	r3, r1
 8001136:	761a      	strb	r2, [r3, #24]
 8001138:	bf00      	nop
 800113a:	370c      	adds	r7, #12
 800113c:	46bd      	mov	sp, r7
 800113e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001142:	4770      	bx	lr
 8001144:	e000e100 	.word	0xe000e100
 8001148:	e000ed00 	.word	0xe000ed00

0800114c <NVIC_EncodePriority>:
 800114c:	b480      	push	{r7}
 800114e:	b089      	sub	sp, #36	; 0x24
 8001150:	af00      	add	r7, sp, #0
 8001152:	60f8      	str	r0, [r7, #12]
 8001154:	60b9      	str	r1, [r7, #8]
 8001156:	607a      	str	r2, [r7, #4]
 8001158:	68fb      	ldr	r3, [r7, #12]
 800115a:	f003 0307 	and.w	r3, r3, #7
 800115e:	61fb      	str	r3, [r7, #28]
 8001160:	69fb      	ldr	r3, [r7, #28]
 8001162:	f1c3 0307 	rsb	r3, r3, #7
 8001166:	2b04      	cmp	r3, #4
 8001168:	bf28      	it	cs
 800116a:	2304      	movcs	r3, #4
 800116c:	61bb      	str	r3, [r7, #24]
 800116e:	69fb      	ldr	r3, [r7, #28]
 8001170:	3304      	adds	r3, #4
 8001172:	2b06      	cmp	r3, #6
 8001174:	d902      	bls.n	800117c <NVIC_EncodePriority+0x30>
 8001176:	69fb      	ldr	r3, [r7, #28]
 8001178:	3b03      	subs	r3, #3
 800117a:	e000      	b.n	800117e <NVIC_EncodePriority+0x32>
 800117c:	2300      	movs	r3, #0
 800117e:	617b      	str	r3, [r7, #20]
 8001180:	f04f 32ff 	mov.w	r2, #4294967295
 8001184:	69bb      	ldr	r3, [r7, #24]
 8001186:	fa02 f303 	lsl.w	r3, r2, r3
 800118a:	43da      	mvns	r2, r3
 800118c:	68bb      	ldr	r3, [r7, #8]
 800118e:	401a      	ands	r2, r3
 8001190:	697b      	ldr	r3, [r7, #20]
 8001192:	409a      	lsls	r2, r3
 8001194:	f04f 31ff 	mov.w	r1, #4294967295
 8001198:	697b      	ldr	r3, [r7, #20]
 800119a:	fa01 f303 	lsl.w	r3, r1, r3
 800119e:	43d9      	mvns	r1, r3
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	400b      	ands	r3, r1
 80011a4:	4313      	orrs	r3, r2
 80011a6:	4618      	mov	r0, r3
 80011a8:	3724      	adds	r7, #36	; 0x24
 80011aa:	46bd      	mov	sp, r7
 80011ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011b0:	4770      	bx	lr

080011b2 <HAL_NVIC_SetPriorityGrouping>:
 80011b2:	b580      	push	{r7, lr}
 80011b4:	b082      	sub	sp, #8
 80011b6:	af00      	add	r7, sp, #0
 80011b8:	6078      	str	r0, [r7, #4]
 80011ba:	6878      	ldr	r0, [r7, #4]
 80011bc:	f7ff ff4c 	bl	8001058 <__NVIC_SetPriorityGrouping>
 80011c0:	bf00      	nop
 80011c2:	3708      	adds	r7, #8
 80011c4:	46bd      	mov	sp, r7
 80011c6:	bd80      	pop	{r7, pc}

080011c8 <HAL_NVIC_SetPriority>:
 80011c8:	b580      	push	{r7, lr}
 80011ca:	b086      	sub	sp, #24
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	4603      	mov	r3, r0
 80011d0:	60b9      	str	r1, [r7, #8]
 80011d2:	607a      	str	r2, [r7, #4]
 80011d4:	73fb      	strb	r3, [r7, #15]
 80011d6:	2300      	movs	r3, #0
 80011d8:	617b      	str	r3, [r7, #20]
 80011da:	f7ff ff61 	bl	80010a0 <__NVIC_GetPriorityGrouping>
 80011de:	6178      	str	r0, [r7, #20]
 80011e0:	687a      	ldr	r2, [r7, #4]
 80011e2:	68b9      	ldr	r1, [r7, #8]
 80011e4:	6978      	ldr	r0, [r7, #20]
 80011e6:	f7ff ffb1 	bl	800114c <NVIC_EncodePriority>
 80011ea:	4602      	mov	r2, r0
 80011ec:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80011f0:	4611      	mov	r1, r2
 80011f2:	4618      	mov	r0, r3
 80011f4:	f7ff ff80 	bl	80010f8 <__NVIC_SetPriority>
 80011f8:	bf00      	nop
 80011fa:	3718      	adds	r7, #24
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}

08001200 <HAL_NVIC_EnableIRQ>:
 8001200:	b580      	push	{r7, lr}
 8001202:	b082      	sub	sp, #8
 8001204:	af00      	add	r7, sp, #0
 8001206:	4603      	mov	r3, r0
 8001208:	71fb      	strb	r3, [r7, #7]
 800120a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800120e:	4618      	mov	r0, r3
 8001210:	f7ff ff54 	bl	80010bc <__NVIC_EnableIRQ>
 8001214:	bf00      	nop
 8001216:	3708      	adds	r7, #8
 8001218:	46bd      	mov	sp, r7
 800121a:	bd80      	pop	{r7, pc}

0800121c <HAL_GPIO_Init>:
 800121c:	b480      	push	{r7}
 800121e:	b089      	sub	sp, #36	; 0x24
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
 8001224:	6039      	str	r1, [r7, #0]
 8001226:	2300      	movs	r3, #0
 8001228:	617b      	str	r3, [r7, #20]
 800122a:	2300      	movs	r3, #0
 800122c:	613b      	str	r3, [r7, #16]
 800122e:	2300      	movs	r3, #0
 8001230:	61bb      	str	r3, [r7, #24]
 8001232:	2300      	movs	r3, #0
 8001234:	61fb      	str	r3, [r7, #28]
 8001236:	e177      	b.n	8001528 <HAL_GPIO_Init+0x30c>
 8001238:	2201      	movs	r2, #1
 800123a:	69fb      	ldr	r3, [r7, #28]
 800123c:	fa02 f303 	lsl.w	r3, r2, r3
 8001240:	617b      	str	r3, [r7, #20]
 8001242:	683b      	ldr	r3, [r7, #0]
 8001244:	681b      	ldr	r3, [r3, #0]
 8001246:	697a      	ldr	r2, [r7, #20]
 8001248:	4013      	ands	r3, r2
 800124a:	613b      	str	r3, [r7, #16]
 800124c:	693a      	ldr	r2, [r7, #16]
 800124e:	697b      	ldr	r3, [r7, #20]
 8001250:	429a      	cmp	r2, r3
 8001252:	f040 8166 	bne.w	8001522 <HAL_GPIO_Init+0x306>
 8001256:	683b      	ldr	r3, [r7, #0]
 8001258:	685b      	ldr	r3, [r3, #4]
 800125a:	f003 0303 	and.w	r3, r3, #3
 800125e:	2b01      	cmp	r3, #1
 8001260:	d005      	beq.n	800126e <HAL_GPIO_Init+0x52>
 8001262:	683b      	ldr	r3, [r7, #0]
 8001264:	685b      	ldr	r3, [r3, #4]
 8001266:	f003 0303 	and.w	r3, r3, #3
 800126a:	2b02      	cmp	r3, #2
 800126c:	d130      	bne.n	80012d0 <HAL_GPIO_Init+0xb4>
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	689b      	ldr	r3, [r3, #8]
 8001272:	61bb      	str	r3, [r7, #24]
 8001274:	69fb      	ldr	r3, [r7, #28]
 8001276:	005b      	lsls	r3, r3, #1
 8001278:	2203      	movs	r2, #3
 800127a:	fa02 f303 	lsl.w	r3, r2, r3
 800127e:	43db      	mvns	r3, r3
 8001280:	69ba      	ldr	r2, [r7, #24]
 8001282:	4013      	ands	r3, r2
 8001284:	61bb      	str	r3, [r7, #24]
 8001286:	683b      	ldr	r3, [r7, #0]
 8001288:	68da      	ldr	r2, [r3, #12]
 800128a:	69fb      	ldr	r3, [r7, #28]
 800128c:	005b      	lsls	r3, r3, #1
 800128e:	fa02 f303 	lsl.w	r3, r2, r3
 8001292:	69ba      	ldr	r2, [r7, #24]
 8001294:	4313      	orrs	r3, r2
 8001296:	61bb      	str	r3, [r7, #24]
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	69ba      	ldr	r2, [r7, #24]
 800129c:	609a      	str	r2, [r3, #8]
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	685b      	ldr	r3, [r3, #4]
 80012a2:	61bb      	str	r3, [r7, #24]
 80012a4:	2201      	movs	r2, #1
 80012a6:	69fb      	ldr	r3, [r7, #28]
 80012a8:	fa02 f303 	lsl.w	r3, r2, r3
 80012ac:	43db      	mvns	r3, r3
 80012ae:	69ba      	ldr	r2, [r7, #24]
 80012b0:	4013      	ands	r3, r2
 80012b2:	61bb      	str	r3, [r7, #24]
 80012b4:	683b      	ldr	r3, [r7, #0]
 80012b6:	685b      	ldr	r3, [r3, #4]
 80012b8:	091b      	lsrs	r3, r3, #4
 80012ba:	f003 0201 	and.w	r2, r3, #1
 80012be:	69fb      	ldr	r3, [r7, #28]
 80012c0:	fa02 f303 	lsl.w	r3, r2, r3
 80012c4:	69ba      	ldr	r2, [r7, #24]
 80012c6:	4313      	orrs	r3, r2
 80012c8:	61bb      	str	r3, [r7, #24]
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	69ba      	ldr	r2, [r7, #24]
 80012ce:	605a      	str	r2, [r3, #4]
 80012d0:	683b      	ldr	r3, [r7, #0]
 80012d2:	685b      	ldr	r3, [r3, #4]
 80012d4:	f003 0303 	and.w	r3, r3, #3
 80012d8:	2b03      	cmp	r3, #3
 80012da:	d017      	beq.n	800130c <HAL_GPIO_Init+0xf0>
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	68db      	ldr	r3, [r3, #12]
 80012e0:	61bb      	str	r3, [r7, #24]
 80012e2:	69fb      	ldr	r3, [r7, #28]
 80012e4:	005b      	lsls	r3, r3, #1
 80012e6:	2203      	movs	r2, #3
 80012e8:	fa02 f303 	lsl.w	r3, r2, r3
 80012ec:	43db      	mvns	r3, r3
 80012ee:	69ba      	ldr	r2, [r7, #24]
 80012f0:	4013      	ands	r3, r2
 80012f2:	61bb      	str	r3, [r7, #24]
 80012f4:	683b      	ldr	r3, [r7, #0]
 80012f6:	689a      	ldr	r2, [r3, #8]
 80012f8:	69fb      	ldr	r3, [r7, #28]
 80012fa:	005b      	lsls	r3, r3, #1
 80012fc:	fa02 f303 	lsl.w	r3, r2, r3
 8001300:	69ba      	ldr	r2, [r7, #24]
 8001302:	4313      	orrs	r3, r2
 8001304:	61bb      	str	r3, [r7, #24]
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	69ba      	ldr	r2, [r7, #24]
 800130a:	60da      	str	r2, [r3, #12]
 800130c:	683b      	ldr	r3, [r7, #0]
 800130e:	685b      	ldr	r3, [r3, #4]
 8001310:	f003 0303 	and.w	r3, r3, #3
 8001314:	2b02      	cmp	r3, #2
 8001316:	d123      	bne.n	8001360 <HAL_GPIO_Init+0x144>
 8001318:	69fb      	ldr	r3, [r7, #28]
 800131a:	08da      	lsrs	r2, r3, #3
 800131c:	687b      	ldr	r3, [r7, #4]
 800131e:	3208      	adds	r2, #8
 8001320:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001324:	61bb      	str	r3, [r7, #24]
 8001326:	69fb      	ldr	r3, [r7, #28]
 8001328:	f003 0307 	and.w	r3, r3, #7
 800132c:	009b      	lsls	r3, r3, #2
 800132e:	220f      	movs	r2, #15
 8001330:	fa02 f303 	lsl.w	r3, r2, r3
 8001334:	43db      	mvns	r3, r3
 8001336:	69ba      	ldr	r2, [r7, #24]
 8001338:	4013      	ands	r3, r2
 800133a:	61bb      	str	r3, [r7, #24]
 800133c:	683b      	ldr	r3, [r7, #0]
 800133e:	691a      	ldr	r2, [r3, #16]
 8001340:	69fb      	ldr	r3, [r7, #28]
 8001342:	f003 0307 	and.w	r3, r3, #7
 8001346:	009b      	lsls	r3, r3, #2
 8001348:	fa02 f303 	lsl.w	r3, r2, r3
 800134c:	69ba      	ldr	r2, [r7, #24]
 800134e:	4313      	orrs	r3, r2
 8001350:	61bb      	str	r3, [r7, #24]
 8001352:	69fb      	ldr	r3, [r7, #28]
 8001354:	08da      	lsrs	r2, r3, #3
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	3208      	adds	r2, #8
 800135a:	69b9      	ldr	r1, [r7, #24]
 800135c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	61bb      	str	r3, [r7, #24]
 8001366:	69fb      	ldr	r3, [r7, #28]
 8001368:	005b      	lsls	r3, r3, #1
 800136a:	2203      	movs	r2, #3
 800136c:	fa02 f303 	lsl.w	r3, r2, r3
 8001370:	43db      	mvns	r3, r3
 8001372:	69ba      	ldr	r2, [r7, #24]
 8001374:	4013      	ands	r3, r2
 8001376:	61bb      	str	r3, [r7, #24]
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	f003 0203 	and.w	r2, r3, #3
 8001380:	69fb      	ldr	r3, [r7, #28]
 8001382:	005b      	lsls	r3, r3, #1
 8001384:	fa02 f303 	lsl.w	r3, r2, r3
 8001388:	69ba      	ldr	r2, [r7, #24]
 800138a:	4313      	orrs	r3, r2
 800138c:	61bb      	str	r3, [r7, #24]
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	69ba      	ldr	r2, [r7, #24]
 8001392:	601a      	str	r2, [r3, #0]
 8001394:	683b      	ldr	r3, [r7, #0]
 8001396:	685b      	ldr	r3, [r3, #4]
 8001398:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800139c:	2b00      	cmp	r3, #0
 800139e:	f000 80c0 	beq.w	8001522 <HAL_GPIO_Init+0x306>
 80013a2:	2300      	movs	r3, #0
 80013a4:	60fb      	str	r3, [r7, #12]
 80013a6:	4b66      	ldr	r3, [pc, #408]	; (8001540 <HAL_GPIO_Init+0x324>)
 80013a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013aa:	4a65      	ldr	r2, [pc, #404]	; (8001540 <HAL_GPIO_Init+0x324>)
 80013ac:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80013b0:	6453      	str	r3, [r2, #68]	; 0x44
 80013b2:	4b63      	ldr	r3, [pc, #396]	; (8001540 <HAL_GPIO_Init+0x324>)
 80013b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013b6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80013ba:	60fb      	str	r3, [r7, #12]
 80013bc:	68fb      	ldr	r3, [r7, #12]
 80013be:	4a61      	ldr	r2, [pc, #388]	; (8001544 <HAL_GPIO_Init+0x328>)
 80013c0:	69fb      	ldr	r3, [r7, #28]
 80013c2:	089b      	lsrs	r3, r3, #2
 80013c4:	3302      	adds	r3, #2
 80013c6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80013ca:	61bb      	str	r3, [r7, #24]
 80013cc:	69fb      	ldr	r3, [r7, #28]
 80013ce:	f003 0303 	and.w	r3, r3, #3
 80013d2:	009b      	lsls	r3, r3, #2
 80013d4:	220f      	movs	r2, #15
 80013d6:	fa02 f303 	lsl.w	r3, r2, r3
 80013da:	43db      	mvns	r3, r3
 80013dc:	69ba      	ldr	r2, [r7, #24]
 80013de:	4013      	ands	r3, r2
 80013e0:	61bb      	str	r3, [r7, #24]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	4a58      	ldr	r2, [pc, #352]	; (8001548 <HAL_GPIO_Init+0x32c>)
 80013e6:	4293      	cmp	r3, r2
 80013e8:	d037      	beq.n	800145a <HAL_GPIO_Init+0x23e>
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	4a57      	ldr	r2, [pc, #348]	; (800154c <HAL_GPIO_Init+0x330>)
 80013ee:	4293      	cmp	r3, r2
 80013f0:	d031      	beq.n	8001456 <HAL_GPIO_Init+0x23a>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	4a56      	ldr	r2, [pc, #344]	; (8001550 <HAL_GPIO_Init+0x334>)
 80013f6:	4293      	cmp	r3, r2
 80013f8:	d02b      	beq.n	8001452 <HAL_GPIO_Init+0x236>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	4a55      	ldr	r2, [pc, #340]	; (8001554 <HAL_GPIO_Init+0x338>)
 80013fe:	4293      	cmp	r3, r2
 8001400:	d025      	beq.n	800144e <HAL_GPIO_Init+0x232>
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	4a54      	ldr	r2, [pc, #336]	; (8001558 <HAL_GPIO_Init+0x33c>)
 8001406:	4293      	cmp	r3, r2
 8001408:	d01f      	beq.n	800144a <HAL_GPIO_Init+0x22e>
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	4a53      	ldr	r2, [pc, #332]	; (800155c <HAL_GPIO_Init+0x340>)
 800140e:	4293      	cmp	r3, r2
 8001410:	d019      	beq.n	8001446 <HAL_GPIO_Init+0x22a>
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	4a52      	ldr	r2, [pc, #328]	; (8001560 <HAL_GPIO_Init+0x344>)
 8001416:	4293      	cmp	r3, r2
 8001418:	d013      	beq.n	8001442 <HAL_GPIO_Init+0x226>
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	4a51      	ldr	r2, [pc, #324]	; (8001564 <HAL_GPIO_Init+0x348>)
 800141e:	4293      	cmp	r3, r2
 8001420:	d00d      	beq.n	800143e <HAL_GPIO_Init+0x222>
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	4a50      	ldr	r2, [pc, #320]	; (8001568 <HAL_GPIO_Init+0x34c>)
 8001426:	4293      	cmp	r3, r2
 8001428:	d007      	beq.n	800143a <HAL_GPIO_Init+0x21e>
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	4a4f      	ldr	r2, [pc, #316]	; (800156c <HAL_GPIO_Init+0x350>)
 800142e:	4293      	cmp	r3, r2
 8001430:	d101      	bne.n	8001436 <HAL_GPIO_Init+0x21a>
 8001432:	2309      	movs	r3, #9
 8001434:	e012      	b.n	800145c <HAL_GPIO_Init+0x240>
 8001436:	230a      	movs	r3, #10
 8001438:	e010      	b.n	800145c <HAL_GPIO_Init+0x240>
 800143a:	2308      	movs	r3, #8
 800143c:	e00e      	b.n	800145c <HAL_GPIO_Init+0x240>
 800143e:	2307      	movs	r3, #7
 8001440:	e00c      	b.n	800145c <HAL_GPIO_Init+0x240>
 8001442:	2306      	movs	r3, #6
 8001444:	e00a      	b.n	800145c <HAL_GPIO_Init+0x240>
 8001446:	2305      	movs	r3, #5
 8001448:	e008      	b.n	800145c <HAL_GPIO_Init+0x240>
 800144a:	2304      	movs	r3, #4
 800144c:	e006      	b.n	800145c <HAL_GPIO_Init+0x240>
 800144e:	2303      	movs	r3, #3
 8001450:	e004      	b.n	800145c <HAL_GPIO_Init+0x240>
 8001452:	2302      	movs	r3, #2
 8001454:	e002      	b.n	800145c <HAL_GPIO_Init+0x240>
 8001456:	2301      	movs	r3, #1
 8001458:	e000      	b.n	800145c <HAL_GPIO_Init+0x240>
 800145a:	2300      	movs	r3, #0
 800145c:	69fa      	ldr	r2, [r7, #28]
 800145e:	f002 0203 	and.w	r2, r2, #3
 8001462:	0092      	lsls	r2, r2, #2
 8001464:	4093      	lsls	r3, r2
 8001466:	69ba      	ldr	r2, [r7, #24]
 8001468:	4313      	orrs	r3, r2
 800146a:	61bb      	str	r3, [r7, #24]
 800146c:	4935      	ldr	r1, [pc, #212]	; (8001544 <HAL_GPIO_Init+0x328>)
 800146e:	69fb      	ldr	r3, [r7, #28]
 8001470:	089b      	lsrs	r3, r3, #2
 8001472:	3302      	adds	r3, #2
 8001474:	69ba      	ldr	r2, [r7, #24]
 8001476:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800147a:	4b3d      	ldr	r3, [pc, #244]	; (8001570 <HAL_GPIO_Init+0x354>)
 800147c:	689b      	ldr	r3, [r3, #8]
 800147e:	61bb      	str	r3, [r7, #24]
 8001480:	693b      	ldr	r3, [r7, #16]
 8001482:	43db      	mvns	r3, r3
 8001484:	69ba      	ldr	r2, [r7, #24]
 8001486:	4013      	ands	r3, r2
 8001488:	61bb      	str	r3, [r7, #24]
 800148a:	683b      	ldr	r3, [r7, #0]
 800148c:	685b      	ldr	r3, [r3, #4]
 800148e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001492:	2b00      	cmp	r3, #0
 8001494:	d003      	beq.n	800149e <HAL_GPIO_Init+0x282>
 8001496:	69ba      	ldr	r2, [r7, #24]
 8001498:	693b      	ldr	r3, [r7, #16]
 800149a:	4313      	orrs	r3, r2
 800149c:	61bb      	str	r3, [r7, #24]
 800149e:	4a34      	ldr	r2, [pc, #208]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014a0:	69bb      	ldr	r3, [r7, #24]
 80014a2:	6093      	str	r3, [r2, #8]
 80014a4:	4b32      	ldr	r3, [pc, #200]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014a6:	68db      	ldr	r3, [r3, #12]
 80014a8:	61bb      	str	r3, [r7, #24]
 80014aa:	693b      	ldr	r3, [r7, #16]
 80014ac:	43db      	mvns	r3, r3
 80014ae:	69ba      	ldr	r2, [r7, #24]
 80014b0:	4013      	ands	r3, r2
 80014b2:	61bb      	str	r3, [r7, #24]
 80014b4:	683b      	ldr	r3, [r7, #0]
 80014b6:	685b      	ldr	r3, [r3, #4]
 80014b8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d003      	beq.n	80014c8 <HAL_GPIO_Init+0x2ac>
 80014c0:	69ba      	ldr	r2, [r7, #24]
 80014c2:	693b      	ldr	r3, [r7, #16]
 80014c4:	4313      	orrs	r3, r2
 80014c6:	61bb      	str	r3, [r7, #24]
 80014c8:	4a29      	ldr	r2, [pc, #164]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014ca:	69bb      	ldr	r3, [r7, #24]
 80014cc:	60d3      	str	r3, [r2, #12]
 80014ce:	4b28      	ldr	r3, [pc, #160]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014d0:	685b      	ldr	r3, [r3, #4]
 80014d2:	61bb      	str	r3, [r7, #24]
 80014d4:	693b      	ldr	r3, [r7, #16]
 80014d6:	43db      	mvns	r3, r3
 80014d8:	69ba      	ldr	r2, [r7, #24]
 80014da:	4013      	ands	r3, r2
 80014dc:	61bb      	str	r3, [r7, #24]
 80014de:	683b      	ldr	r3, [r7, #0]
 80014e0:	685b      	ldr	r3, [r3, #4]
 80014e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d003      	beq.n	80014f2 <HAL_GPIO_Init+0x2d6>
 80014ea:	69ba      	ldr	r2, [r7, #24]
 80014ec:	693b      	ldr	r3, [r7, #16]
 80014ee:	4313      	orrs	r3, r2
 80014f0:	61bb      	str	r3, [r7, #24]
 80014f2:	4a1f      	ldr	r2, [pc, #124]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014f4:	69bb      	ldr	r3, [r7, #24]
 80014f6:	6053      	str	r3, [r2, #4]
 80014f8:	4b1d      	ldr	r3, [pc, #116]	; (8001570 <HAL_GPIO_Init+0x354>)
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	61bb      	str	r3, [r7, #24]
 80014fe:	693b      	ldr	r3, [r7, #16]
 8001500:	43db      	mvns	r3, r3
 8001502:	69ba      	ldr	r2, [r7, #24]
 8001504:	4013      	ands	r3, r2
 8001506:	61bb      	str	r3, [r7, #24]
 8001508:	683b      	ldr	r3, [r7, #0]
 800150a:	685b      	ldr	r3, [r3, #4]
 800150c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001510:	2b00      	cmp	r3, #0
 8001512:	d003      	beq.n	800151c <HAL_GPIO_Init+0x300>
 8001514:	69ba      	ldr	r2, [r7, #24]
 8001516:	693b      	ldr	r3, [r7, #16]
 8001518:	4313      	orrs	r3, r2
 800151a:	61bb      	str	r3, [r7, #24]
 800151c:	4a14      	ldr	r2, [pc, #80]	; (8001570 <HAL_GPIO_Init+0x354>)
 800151e:	69bb      	ldr	r3, [r7, #24]
 8001520:	6013      	str	r3, [r2, #0]
 8001522:	69fb      	ldr	r3, [r7, #28]
 8001524:	3301      	adds	r3, #1
 8001526:	61fb      	str	r3, [r7, #28]
 8001528:	69fb      	ldr	r3, [r7, #28]
 800152a:	2b0f      	cmp	r3, #15
 800152c:	f67f ae84 	bls.w	8001238 <HAL_GPIO_Init+0x1c>
 8001530:	bf00      	nop
 8001532:	bf00      	nop
 8001534:	3724      	adds	r7, #36	; 0x24
 8001536:	46bd      	mov	sp, r7
 8001538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800153c:	4770      	bx	lr
 800153e:	bf00      	nop
 8001540:	40023800 	.word	0x40023800
 8001544:	40013800 	.word	0x40013800
 8001548:	40020000 	.word	0x40020000
 800154c:	40020400 	.word	0x40020400
 8001550:	40020800 	.word	0x40020800
 8001554:	40020c00 	.word	0x40020c00
 8001558:	40021000 	.word	0x40021000
 800155c:	40021400 	.word	0x40021400
 8001560:	40021800 	.word	0x40021800
 8001564:	40021c00 	.word	0x40021c00
 8001568:	40022000 	.word	0x40022000
 800156c:	40022400 	.word	0x40022400
 8001570:	40013c00 	.word	0x40013c00

08001574 <HAL_GPIO_WritePin>:
 8001574:	b480      	push	{r7}
 8001576:	b083      	sub	sp, #12
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	460b      	mov	r3, r1
 800157e:	807b      	strh	r3, [r7, #2]
 8001580:	4613      	mov	r3, r2
 8001582:	707b      	strb	r3, [r7, #1]
 8001584:	787b      	ldrb	r3, [r7, #1]
 8001586:	2b00      	cmp	r3, #0
 8001588:	d003      	beq.n	8001592 <HAL_GPIO_WritePin+0x1e>
 800158a:	887a      	ldrh	r2, [r7, #2]
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	619a      	str	r2, [r3, #24]
 8001590:	e003      	b.n	800159a <HAL_GPIO_WritePin+0x26>
 8001592:	887b      	ldrh	r3, [r7, #2]
 8001594:	041a      	lsls	r2, r3, #16
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	619a      	str	r2, [r3, #24]
 800159a:	bf00      	nop
 800159c:	370c      	adds	r7, #12
 800159e:	46bd      	mov	sp, r7
 80015a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a4:	4770      	bx	lr

080015a6 <HAL_GPIO_TogglePin>:
 80015a6:	b480      	push	{r7}
 80015a8:	b085      	sub	sp, #20
 80015aa:	af00      	add	r7, sp, #0
 80015ac:	6078      	str	r0, [r7, #4]
 80015ae:	460b      	mov	r3, r1
 80015b0:	807b      	strh	r3, [r7, #2]
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	695b      	ldr	r3, [r3, #20]
 80015b6:	60fb      	str	r3, [r7, #12]
 80015b8:	887a      	ldrh	r2, [r7, #2]
 80015ba:	68fb      	ldr	r3, [r7, #12]
 80015bc:	4013      	ands	r3, r2
 80015be:	041a      	lsls	r2, r3, #16
 80015c0:	68fb      	ldr	r3, [r7, #12]
 80015c2:	43d9      	mvns	r1, r3
 80015c4:	887b      	ldrh	r3, [r7, #2]
 80015c6:	400b      	ands	r3, r1
 80015c8:	431a      	orrs	r2, r3
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	619a      	str	r2, [r3, #24]
 80015ce:	bf00      	nop
 80015d0:	3714      	adds	r7, #20
 80015d2:	46bd      	mov	sp, r7
 80015d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015d8:	4770      	bx	lr
	...

080015dc <HAL_PWREx_EnableOverDrive>:
 80015dc:	b580      	push	{r7, lr}
 80015de:	b082      	sub	sp, #8
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	2300      	movs	r3, #0
 80015e4:	607b      	str	r3, [r7, #4]
 80015e6:	2300      	movs	r3, #0
 80015e8:	603b      	str	r3, [r7, #0]
 80015ea:	4b20      	ldr	r3, [pc, #128]	; (800166c <HAL_PWREx_EnableOverDrive+0x90>)
 80015ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015ee:	4a1f      	ldr	r2, [pc, #124]	; (800166c <HAL_PWREx_EnableOverDrive+0x90>)
 80015f0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015f4:	6413      	str	r3, [r2, #64]	; 0x40
 80015f6:	4b1d      	ldr	r3, [pc, #116]	; (800166c <HAL_PWREx_EnableOverDrive+0x90>)
 80015f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015fe:	603b      	str	r3, [r7, #0]
 8001600:	683b      	ldr	r3, [r7, #0]
 8001602:	4b1b      	ldr	r3, [pc, #108]	; (8001670 <HAL_PWREx_EnableOverDrive+0x94>)
 8001604:	2201      	movs	r2, #1
 8001606:	601a      	str	r2, [r3, #0]
 8001608:	f7ff fd1a 	bl	8001040 <HAL_GetTick>
 800160c:	6078      	str	r0, [r7, #4]
 800160e:	e009      	b.n	8001624 <HAL_PWREx_EnableOverDrive+0x48>
 8001610:	f7ff fd16 	bl	8001040 <HAL_GetTick>
 8001614:	4602      	mov	r2, r0
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	1ad3      	subs	r3, r2, r3
 800161a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800161e:	d901      	bls.n	8001624 <HAL_PWREx_EnableOverDrive+0x48>
 8001620:	2303      	movs	r3, #3
 8001622:	e01f      	b.n	8001664 <HAL_PWREx_EnableOverDrive+0x88>
 8001624:	4b13      	ldr	r3, [pc, #76]	; (8001674 <HAL_PWREx_EnableOverDrive+0x98>)
 8001626:	685b      	ldr	r3, [r3, #4]
 8001628:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800162c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001630:	d1ee      	bne.n	8001610 <HAL_PWREx_EnableOverDrive+0x34>
 8001632:	4b11      	ldr	r3, [pc, #68]	; (8001678 <HAL_PWREx_EnableOverDrive+0x9c>)
 8001634:	2201      	movs	r2, #1
 8001636:	601a      	str	r2, [r3, #0]
 8001638:	f7ff fd02 	bl	8001040 <HAL_GetTick>
 800163c:	6078      	str	r0, [r7, #4]
 800163e:	e009      	b.n	8001654 <HAL_PWREx_EnableOverDrive+0x78>
 8001640:	f7ff fcfe 	bl	8001040 <HAL_GetTick>
 8001644:	4602      	mov	r2, r0
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	1ad3      	subs	r3, r2, r3
 800164a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800164e:	d901      	bls.n	8001654 <HAL_PWREx_EnableOverDrive+0x78>
 8001650:	2303      	movs	r3, #3
 8001652:	e007      	b.n	8001664 <HAL_PWREx_EnableOverDrive+0x88>
 8001654:	4b07      	ldr	r3, [pc, #28]	; (8001674 <HAL_PWREx_EnableOverDrive+0x98>)
 8001656:	685b      	ldr	r3, [r3, #4]
 8001658:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800165c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8001660:	d1ee      	bne.n	8001640 <HAL_PWREx_EnableOverDrive+0x64>
 8001662:	2300      	movs	r3, #0
 8001664:	4618      	mov	r0, r3
 8001666:	3708      	adds	r7, #8
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	40023800 	.word	0x40023800
 8001670:	420e0040 	.word	0x420e0040
 8001674:	40007000 	.word	0x40007000
 8001678:	420e0044 	.word	0x420e0044

0800167c <HAL_RCC_OscConfig>:
 800167c:	b580      	push	{r7, lr}
 800167e:	b086      	sub	sp, #24
 8001680:	af00      	add	r7, sp, #0
 8001682:	6078      	str	r0, [r7, #4]
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	2b00      	cmp	r3, #0
 8001688:	d101      	bne.n	800168e <HAL_RCC_OscConfig+0x12>
 800168a:	2301      	movs	r3, #1
 800168c:	e267      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	f003 0301 	and.w	r3, r3, #1
 8001696:	2b00      	cmp	r3, #0
 8001698:	d075      	beq.n	8001786 <HAL_RCC_OscConfig+0x10a>
 800169a:	4b88      	ldr	r3, [pc, #544]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 800169c:	689b      	ldr	r3, [r3, #8]
 800169e:	f003 030c 	and.w	r3, r3, #12
 80016a2:	2b04      	cmp	r3, #4
 80016a4:	d00c      	beq.n	80016c0 <HAL_RCC_OscConfig+0x44>
 80016a6:	4b85      	ldr	r3, [pc, #532]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016a8:	689b      	ldr	r3, [r3, #8]
 80016aa:	f003 030c 	and.w	r3, r3, #12
 80016ae:	2b08      	cmp	r3, #8
 80016b0:	d112      	bne.n	80016d8 <HAL_RCC_OscConfig+0x5c>
 80016b2:	4b82      	ldr	r3, [pc, #520]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016b4:	685b      	ldr	r3, [r3, #4]
 80016b6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80016ba:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80016be:	d10b      	bne.n	80016d8 <HAL_RCC_OscConfig+0x5c>
 80016c0:	4b7e      	ldr	r3, [pc, #504]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016c2:	681b      	ldr	r3, [r3, #0]
 80016c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d05b      	beq.n	8001784 <HAL_RCC_OscConfig+0x108>
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	2b00      	cmp	r3, #0
 80016d2:	d157      	bne.n	8001784 <HAL_RCC_OscConfig+0x108>
 80016d4:	2301      	movs	r3, #1
 80016d6:	e242      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	685b      	ldr	r3, [r3, #4]
 80016dc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80016e0:	d106      	bne.n	80016f0 <HAL_RCC_OscConfig+0x74>
 80016e2:	4b76      	ldr	r3, [pc, #472]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	4a75      	ldr	r2, [pc, #468]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80016ec:	6013      	str	r3, [r2, #0]
 80016ee:	e01d      	b.n	800172c <HAL_RCC_OscConfig+0xb0>
 80016f0:	687b      	ldr	r3, [r7, #4]
 80016f2:	685b      	ldr	r3, [r3, #4]
 80016f4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80016f8:	d10c      	bne.n	8001714 <HAL_RCC_OscConfig+0x98>
 80016fa:	4b70      	ldr	r3, [pc, #448]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	4a6f      	ldr	r2, [pc, #444]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001700:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001704:	6013      	str	r3, [r2, #0]
 8001706:	4b6d      	ldr	r3, [pc, #436]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4a6c      	ldr	r2, [pc, #432]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 800170c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001710:	6013      	str	r3, [r2, #0]
 8001712:	e00b      	b.n	800172c <HAL_RCC_OscConfig+0xb0>
 8001714:	4b69      	ldr	r3, [pc, #420]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001716:	681b      	ldr	r3, [r3, #0]
 8001718:	4a68      	ldr	r2, [pc, #416]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 800171a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800171e:	6013      	str	r3, [r2, #0]
 8001720:	4b66      	ldr	r3, [pc, #408]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	4a65      	ldr	r2, [pc, #404]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001726:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800172a:	6013      	str	r3, [r2, #0]
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	685b      	ldr	r3, [r3, #4]
 8001730:	2b00      	cmp	r3, #0
 8001732:	d013      	beq.n	800175c <HAL_RCC_OscConfig+0xe0>
 8001734:	f7ff fc84 	bl	8001040 <HAL_GetTick>
 8001738:	6138      	str	r0, [r7, #16]
 800173a:	e008      	b.n	800174e <HAL_RCC_OscConfig+0xd2>
 800173c:	f7ff fc80 	bl	8001040 <HAL_GetTick>
 8001740:	4602      	mov	r2, r0
 8001742:	693b      	ldr	r3, [r7, #16]
 8001744:	1ad3      	subs	r3, r2, r3
 8001746:	2b64      	cmp	r3, #100	; 0x64
 8001748:	d901      	bls.n	800174e <HAL_RCC_OscConfig+0xd2>
 800174a:	2303      	movs	r3, #3
 800174c:	e207      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 800174e:	4b5b      	ldr	r3, [pc, #364]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001756:	2b00      	cmp	r3, #0
 8001758:	d0f0      	beq.n	800173c <HAL_RCC_OscConfig+0xc0>
 800175a:	e014      	b.n	8001786 <HAL_RCC_OscConfig+0x10a>
 800175c:	f7ff fc70 	bl	8001040 <HAL_GetTick>
 8001760:	6138      	str	r0, [r7, #16]
 8001762:	e008      	b.n	8001776 <HAL_RCC_OscConfig+0xfa>
 8001764:	f7ff fc6c 	bl	8001040 <HAL_GetTick>
 8001768:	4602      	mov	r2, r0
 800176a:	693b      	ldr	r3, [r7, #16]
 800176c:	1ad3      	subs	r3, r2, r3
 800176e:	2b64      	cmp	r3, #100	; 0x64
 8001770:	d901      	bls.n	8001776 <HAL_RCC_OscConfig+0xfa>
 8001772:	2303      	movs	r3, #3
 8001774:	e1f3      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001776:	4b51      	ldr	r3, [pc, #324]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800177e:	2b00      	cmp	r3, #0
 8001780:	d1f0      	bne.n	8001764 <HAL_RCC_OscConfig+0xe8>
 8001782:	e000      	b.n	8001786 <HAL_RCC_OscConfig+0x10a>
 8001784:	bf00      	nop
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	f003 0302 	and.w	r3, r3, #2
 800178e:	2b00      	cmp	r3, #0
 8001790:	d063      	beq.n	800185a <HAL_RCC_OscConfig+0x1de>
 8001792:	4b4a      	ldr	r3, [pc, #296]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001794:	689b      	ldr	r3, [r3, #8]
 8001796:	f003 030c 	and.w	r3, r3, #12
 800179a:	2b00      	cmp	r3, #0
 800179c:	d00b      	beq.n	80017b6 <HAL_RCC_OscConfig+0x13a>
 800179e:	4b47      	ldr	r3, [pc, #284]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80017a0:	689b      	ldr	r3, [r3, #8]
 80017a2:	f003 030c 	and.w	r3, r3, #12
 80017a6:	2b08      	cmp	r3, #8
 80017a8:	d11c      	bne.n	80017e4 <HAL_RCC_OscConfig+0x168>
 80017aa:	4b44      	ldr	r3, [pc, #272]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80017ac:	685b      	ldr	r3, [r3, #4]
 80017ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80017b2:	2b00      	cmp	r3, #0
 80017b4:	d116      	bne.n	80017e4 <HAL_RCC_OscConfig+0x168>
 80017b6:	4b41      	ldr	r3, [pc, #260]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	f003 0302 	and.w	r3, r3, #2
 80017be:	2b00      	cmp	r3, #0
 80017c0:	d005      	beq.n	80017ce <HAL_RCC_OscConfig+0x152>
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	68db      	ldr	r3, [r3, #12]
 80017c6:	2b01      	cmp	r3, #1
 80017c8:	d001      	beq.n	80017ce <HAL_RCC_OscConfig+0x152>
 80017ca:	2301      	movs	r3, #1
 80017cc:	e1c7      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 80017ce:	4b3b      	ldr	r3, [pc, #236]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	691b      	ldr	r3, [r3, #16]
 80017da:	00db      	lsls	r3, r3, #3
 80017dc:	4937      	ldr	r1, [pc, #220]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 80017de:	4313      	orrs	r3, r2
 80017e0:	600b      	str	r3, [r1, #0]
 80017e2:	e03a      	b.n	800185a <HAL_RCC_OscConfig+0x1de>
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	68db      	ldr	r3, [r3, #12]
 80017e8:	2b00      	cmp	r3, #0
 80017ea:	d020      	beq.n	800182e <HAL_RCC_OscConfig+0x1b2>
 80017ec:	4b34      	ldr	r3, [pc, #208]	; (80018c0 <HAL_RCC_OscConfig+0x244>)
 80017ee:	2201      	movs	r2, #1
 80017f0:	601a      	str	r2, [r3, #0]
 80017f2:	f7ff fc25 	bl	8001040 <HAL_GetTick>
 80017f6:	6138      	str	r0, [r7, #16]
 80017f8:	e008      	b.n	800180c <HAL_RCC_OscConfig+0x190>
 80017fa:	f7ff fc21 	bl	8001040 <HAL_GetTick>
 80017fe:	4602      	mov	r2, r0
 8001800:	693b      	ldr	r3, [r7, #16]
 8001802:	1ad3      	subs	r3, r2, r3
 8001804:	2b02      	cmp	r3, #2
 8001806:	d901      	bls.n	800180c <HAL_RCC_OscConfig+0x190>
 8001808:	2303      	movs	r3, #3
 800180a:	e1a8      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 800180c:	4b2b      	ldr	r3, [pc, #172]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	f003 0302 	and.w	r3, r3, #2
 8001814:	2b00      	cmp	r3, #0
 8001816:	d0f0      	beq.n	80017fa <HAL_RCC_OscConfig+0x17e>
 8001818:	4b28      	ldr	r3, [pc, #160]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	691b      	ldr	r3, [r3, #16]
 8001824:	00db      	lsls	r3, r3, #3
 8001826:	4925      	ldr	r1, [pc, #148]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001828:	4313      	orrs	r3, r2
 800182a:	600b      	str	r3, [r1, #0]
 800182c:	e015      	b.n	800185a <HAL_RCC_OscConfig+0x1de>
 800182e:	4b24      	ldr	r3, [pc, #144]	; (80018c0 <HAL_RCC_OscConfig+0x244>)
 8001830:	2200      	movs	r2, #0
 8001832:	601a      	str	r2, [r3, #0]
 8001834:	f7ff fc04 	bl	8001040 <HAL_GetTick>
 8001838:	6138      	str	r0, [r7, #16]
 800183a:	e008      	b.n	800184e <HAL_RCC_OscConfig+0x1d2>
 800183c:	f7ff fc00 	bl	8001040 <HAL_GetTick>
 8001840:	4602      	mov	r2, r0
 8001842:	693b      	ldr	r3, [r7, #16]
 8001844:	1ad3      	subs	r3, r2, r3
 8001846:	2b02      	cmp	r3, #2
 8001848:	d901      	bls.n	800184e <HAL_RCC_OscConfig+0x1d2>
 800184a:	2303      	movs	r3, #3
 800184c:	e187      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 800184e:	4b1b      	ldr	r3, [pc, #108]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	f003 0302 	and.w	r3, r3, #2
 8001856:	2b00      	cmp	r3, #0
 8001858:	d1f0      	bne.n	800183c <HAL_RCC_OscConfig+0x1c0>
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f003 0308 	and.w	r3, r3, #8
 8001862:	2b00      	cmp	r3, #0
 8001864:	d036      	beq.n	80018d4 <HAL_RCC_OscConfig+0x258>
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	695b      	ldr	r3, [r3, #20]
 800186a:	2b00      	cmp	r3, #0
 800186c:	d016      	beq.n	800189c <HAL_RCC_OscConfig+0x220>
 800186e:	4b15      	ldr	r3, [pc, #84]	; (80018c4 <HAL_RCC_OscConfig+0x248>)
 8001870:	2201      	movs	r2, #1
 8001872:	601a      	str	r2, [r3, #0]
 8001874:	f7ff fbe4 	bl	8001040 <HAL_GetTick>
 8001878:	6138      	str	r0, [r7, #16]
 800187a:	e008      	b.n	800188e <HAL_RCC_OscConfig+0x212>
 800187c:	f7ff fbe0 	bl	8001040 <HAL_GetTick>
 8001880:	4602      	mov	r2, r0
 8001882:	693b      	ldr	r3, [r7, #16]
 8001884:	1ad3      	subs	r3, r2, r3
 8001886:	2b02      	cmp	r3, #2
 8001888:	d901      	bls.n	800188e <HAL_RCC_OscConfig+0x212>
 800188a:	2303      	movs	r3, #3
 800188c:	e167      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 800188e:	4b0b      	ldr	r3, [pc, #44]	; (80018bc <HAL_RCC_OscConfig+0x240>)
 8001890:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8001892:	f003 0302 	and.w	r3, r3, #2
 8001896:	2b00      	cmp	r3, #0
 8001898:	d0f0      	beq.n	800187c <HAL_RCC_OscConfig+0x200>
 800189a:	e01b      	b.n	80018d4 <HAL_RCC_OscConfig+0x258>
 800189c:	4b09      	ldr	r3, [pc, #36]	; (80018c4 <HAL_RCC_OscConfig+0x248>)
 800189e:	2200      	movs	r2, #0
 80018a0:	601a      	str	r2, [r3, #0]
 80018a2:	f7ff fbcd 	bl	8001040 <HAL_GetTick>
 80018a6:	6138      	str	r0, [r7, #16]
 80018a8:	e00e      	b.n	80018c8 <HAL_RCC_OscConfig+0x24c>
 80018aa:	f7ff fbc9 	bl	8001040 <HAL_GetTick>
 80018ae:	4602      	mov	r2, r0
 80018b0:	693b      	ldr	r3, [r7, #16]
 80018b2:	1ad3      	subs	r3, r2, r3
 80018b4:	2b02      	cmp	r3, #2
 80018b6:	d907      	bls.n	80018c8 <HAL_RCC_OscConfig+0x24c>
 80018b8:	2303      	movs	r3, #3
 80018ba:	e150      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 80018bc:	40023800 	.word	0x40023800
 80018c0:	42470000 	.word	0x42470000
 80018c4:	42470e80 	.word	0x42470e80
 80018c8:	4b88      	ldr	r3, [pc, #544]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80018ca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80018cc:	f003 0302 	and.w	r3, r3, #2
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	d1ea      	bne.n	80018aa <HAL_RCC_OscConfig+0x22e>
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	f003 0304 	and.w	r3, r3, #4
 80018dc:	2b00      	cmp	r3, #0
 80018de:	f000 8097 	beq.w	8001a10 <HAL_RCC_OscConfig+0x394>
 80018e2:	2300      	movs	r3, #0
 80018e4:	75fb      	strb	r3, [r7, #23]
 80018e6:	4b81      	ldr	r3, [pc, #516]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80018e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d10f      	bne.n	8001912 <HAL_RCC_OscConfig+0x296>
 80018f2:	2300      	movs	r3, #0
 80018f4:	60bb      	str	r3, [r7, #8]
 80018f6:	4b7d      	ldr	r3, [pc, #500]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80018f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018fa:	4a7c      	ldr	r2, [pc, #496]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80018fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001900:	6413      	str	r3, [r2, #64]	; 0x40
 8001902:	4b7a      	ldr	r3, [pc, #488]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001904:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001906:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800190a:	60bb      	str	r3, [r7, #8]
 800190c:	68bb      	ldr	r3, [r7, #8]
 800190e:	2301      	movs	r3, #1
 8001910:	75fb      	strb	r3, [r7, #23]
 8001912:	4b77      	ldr	r3, [pc, #476]	; (8001af0 <HAL_RCC_OscConfig+0x474>)
 8001914:	681b      	ldr	r3, [r3, #0]
 8001916:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800191a:	2b00      	cmp	r3, #0
 800191c:	d118      	bne.n	8001950 <HAL_RCC_OscConfig+0x2d4>
 800191e:	4b74      	ldr	r3, [pc, #464]	; (8001af0 <HAL_RCC_OscConfig+0x474>)
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4a73      	ldr	r2, [pc, #460]	; (8001af0 <HAL_RCC_OscConfig+0x474>)
 8001924:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001928:	6013      	str	r3, [r2, #0]
 800192a:	f7ff fb89 	bl	8001040 <HAL_GetTick>
 800192e:	6138      	str	r0, [r7, #16]
 8001930:	e008      	b.n	8001944 <HAL_RCC_OscConfig+0x2c8>
 8001932:	f7ff fb85 	bl	8001040 <HAL_GetTick>
 8001936:	4602      	mov	r2, r0
 8001938:	693b      	ldr	r3, [r7, #16]
 800193a:	1ad3      	subs	r3, r2, r3
 800193c:	2b02      	cmp	r3, #2
 800193e:	d901      	bls.n	8001944 <HAL_RCC_OscConfig+0x2c8>
 8001940:	2303      	movs	r3, #3
 8001942:	e10c      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001944:	4b6a      	ldr	r3, [pc, #424]	; (8001af0 <HAL_RCC_OscConfig+0x474>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800194c:	2b00      	cmp	r3, #0
 800194e:	d0f0      	beq.n	8001932 <HAL_RCC_OscConfig+0x2b6>
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	689b      	ldr	r3, [r3, #8]
 8001954:	2b01      	cmp	r3, #1
 8001956:	d106      	bne.n	8001966 <HAL_RCC_OscConfig+0x2ea>
 8001958:	4b64      	ldr	r3, [pc, #400]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800195a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800195c:	4a63      	ldr	r2, [pc, #396]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800195e:	f043 0301 	orr.w	r3, r3, #1
 8001962:	6713      	str	r3, [r2, #112]	; 0x70
 8001964:	e01c      	b.n	80019a0 <HAL_RCC_OscConfig+0x324>
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	689b      	ldr	r3, [r3, #8]
 800196a:	2b05      	cmp	r3, #5
 800196c:	d10c      	bne.n	8001988 <HAL_RCC_OscConfig+0x30c>
 800196e:	4b5f      	ldr	r3, [pc, #380]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001972:	4a5e      	ldr	r2, [pc, #376]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001974:	f043 0304 	orr.w	r3, r3, #4
 8001978:	6713      	str	r3, [r2, #112]	; 0x70
 800197a:	4b5c      	ldr	r3, [pc, #368]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800197c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800197e:	4a5b      	ldr	r2, [pc, #364]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001980:	f043 0301 	orr.w	r3, r3, #1
 8001984:	6713      	str	r3, [r2, #112]	; 0x70
 8001986:	e00b      	b.n	80019a0 <HAL_RCC_OscConfig+0x324>
 8001988:	4b58      	ldr	r3, [pc, #352]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800198a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800198c:	4a57      	ldr	r2, [pc, #348]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800198e:	f023 0301 	bic.w	r3, r3, #1
 8001992:	6713      	str	r3, [r2, #112]	; 0x70
 8001994:	4b55      	ldr	r3, [pc, #340]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001996:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001998:	4a54      	ldr	r2, [pc, #336]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 800199a:	f023 0304 	bic.w	r3, r3, #4
 800199e:	6713      	str	r3, [r2, #112]	; 0x70
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	689b      	ldr	r3, [r3, #8]
 80019a4:	2b00      	cmp	r3, #0
 80019a6:	d015      	beq.n	80019d4 <HAL_RCC_OscConfig+0x358>
 80019a8:	f7ff fb4a 	bl	8001040 <HAL_GetTick>
 80019ac:	6138      	str	r0, [r7, #16]
 80019ae:	e00a      	b.n	80019c6 <HAL_RCC_OscConfig+0x34a>
 80019b0:	f7ff fb46 	bl	8001040 <HAL_GetTick>
 80019b4:	4602      	mov	r2, r0
 80019b6:	693b      	ldr	r3, [r7, #16]
 80019b8:	1ad3      	subs	r3, r2, r3
 80019ba:	f241 3288 	movw	r2, #5000	; 0x1388
 80019be:	4293      	cmp	r3, r2
 80019c0:	d901      	bls.n	80019c6 <HAL_RCC_OscConfig+0x34a>
 80019c2:	2303      	movs	r3, #3
 80019c4:	e0cb      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 80019c6:	4b49      	ldr	r3, [pc, #292]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80019c8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80019ca:	f003 0302 	and.w	r3, r3, #2
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d0ee      	beq.n	80019b0 <HAL_RCC_OscConfig+0x334>
 80019d2:	e014      	b.n	80019fe <HAL_RCC_OscConfig+0x382>
 80019d4:	f7ff fb34 	bl	8001040 <HAL_GetTick>
 80019d8:	6138      	str	r0, [r7, #16]
 80019da:	e00a      	b.n	80019f2 <HAL_RCC_OscConfig+0x376>
 80019dc:	f7ff fb30 	bl	8001040 <HAL_GetTick>
 80019e0:	4602      	mov	r2, r0
 80019e2:	693b      	ldr	r3, [r7, #16]
 80019e4:	1ad3      	subs	r3, r2, r3
 80019e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80019ea:	4293      	cmp	r3, r2
 80019ec:	d901      	bls.n	80019f2 <HAL_RCC_OscConfig+0x376>
 80019ee:	2303      	movs	r3, #3
 80019f0:	e0b5      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 80019f2:	4b3e      	ldr	r3, [pc, #248]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 80019f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80019f6:	f003 0302 	and.w	r3, r3, #2
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d1ee      	bne.n	80019dc <HAL_RCC_OscConfig+0x360>
 80019fe:	7dfb      	ldrb	r3, [r7, #23]
 8001a00:	2b01      	cmp	r3, #1
 8001a02:	d105      	bne.n	8001a10 <HAL_RCC_OscConfig+0x394>
 8001a04:	4b39      	ldr	r3, [pc, #228]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001a06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a08:	4a38      	ldr	r2, [pc, #224]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001a0a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001a0e:	6413      	str	r3, [r2, #64]	; 0x40
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	699b      	ldr	r3, [r3, #24]
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	f000 80a1 	beq.w	8001b5c <HAL_RCC_OscConfig+0x4e0>
 8001a1a:	4b34      	ldr	r3, [pc, #208]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001a1c:	689b      	ldr	r3, [r3, #8]
 8001a1e:	f003 030c 	and.w	r3, r3, #12
 8001a22:	2b08      	cmp	r3, #8
 8001a24:	d05c      	beq.n	8001ae0 <HAL_RCC_OscConfig+0x464>
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	699b      	ldr	r3, [r3, #24]
 8001a2a:	2b02      	cmp	r3, #2
 8001a2c:	d141      	bne.n	8001ab2 <HAL_RCC_OscConfig+0x436>
 8001a2e:	4b31      	ldr	r3, [pc, #196]	; (8001af4 <HAL_RCC_OscConfig+0x478>)
 8001a30:	2200      	movs	r2, #0
 8001a32:	601a      	str	r2, [r3, #0]
 8001a34:	f7ff fb04 	bl	8001040 <HAL_GetTick>
 8001a38:	6138      	str	r0, [r7, #16]
 8001a3a:	e008      	b.n	8001a4e <HAL_RCC_OscConfig+0x3d2>
 8001a3c:	f7ff fb00 	bl	8001040 <HAL_GetTick>
 8001a40:	4602      	mov	r2, r0
 8001a42:	693b      	ldr	r3, [r7, #16]
 8001a44:	1ad3      	subs	r3, r2, r3
 8001a46:	2b02      	cmp	r3, #2
 8001a48:	d901      	bls.n	8001a4e <HAL_RCC_OscConfig+0x3d2>
 8001a4a:	2303      	movs	r3, #3
 8001a4c:	e087      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001a4e:	4b27      	ldr	r3, [pc, #156]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d1f0      	bne.n	8001a3c <HAL_RCC_OscConfig+0x3c0>
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	69da      	ldr	r2, [r3, #28]
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	6a1b      	ldr	r3, [r3, #32]
 8001a62:	431a      	orrs	r2, r3
 8001a64:	687b      	ldr	r3, [r7, #4]
 8001a66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a68:	019b      	lsls	r3, r3, #6
 8001a6a:	431a      	orrs	r2, r3
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001a70:	085b      	lsrs	r3, r3, #1
 8001a72:	3b01      	subs	r3, #1
 8001a74:	041b      	lsls	r3, r3, #16
 8001a76:	431a      	orrs	r2, r3
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a7c:	061b      	lsls	r3, r3, #24
 8001a7e:	491b      	ldr	r1, [pc, #108]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001a80:	4313      	orrs	r3, r2
 8001a82:	604b      	str	r3, [r1, #4]
 8001a84:	4b1b      	ldr	r3, [pc, #108]	; (8001af4 <HAL_RCC_OscConfig+0x478>)
 8001a86:	2201      	movs	r2, #1
 8001a88:	601a      	str	r2, [r3, #0]
 8001a8a:	f7ff fad9 	bl	8001040 <HAL_GetTick>
 8001a8e:	6138      	str	r0, [r7, #16]
 8001a90:	e008      	b.n	8001aa4 <HAL_RCC_OscConfig+0x428>
 8001a92:	f7ff fad5 	bl	8001040 <HAL_GetTick>
 8001a96:	4602      	mov	r2, r0
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	1ad3      	subs	r3, r2, r3
 8001a9c:	2b02      	cmp	r3, #2
 8001a9e:	d901      	bls.n	8001aa4 <HAL_RCC_OscConfig+0x428>
 8001aa0:	2303      	movs	r3, #3
 8001aa2:	e05c      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001aa4:	4b11      	ldr	r3, [pc, #68]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d0f0      	beq.n	8001a92 <HAL_RCC_OscConfig+0x416>
 8001ab0:	e054      	b.n	8001b5c <HAL_RCC_OscConfig+0x4e0>
 8001ab2:	4b10      	ldr	r3, [pc, #64]	; (8001af4 <HAL_RCC_OscConfig+0x478>)
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	601a      	str	r2, [r3, #0]
 8001ab8:	f7ff fac2 	bl	8001040 <HAL_GetTick>
 8001abc:	6138      	str	r0, [r7, #16]
 8001abe:	e008      	b.n	8001ad2 <HAL_RCC_OscConfig+0x456>
 8001ac0:	f7ff fabe 	bl	8001040 <HAL_GetTick>
 8001ac4:	4602      	mov	r2, r0
 8001ac6:	693b      	ldr	r3, [r7, #16]
 8001ac8:	1ad3      	subs	r3, r2, r3
 8001aca:	2b02      	cmp	r3, #2
 8001acc:	d901      	bls.n	8001ad2 <HAL_RCC_OscConfig+0x456>
 8001ace:	2303      	movs	r3, #3
 8001ad0:	e045      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001ad2:	4b06      	ldr	r3, [pc, #24]	; (8001aec <HAL_RCC_OscConfig+0x470>)
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d1f0      	bne.n	8001ac0 <HAL_RCC_OscConfig+0x444>
 8001ade:	e03d      	b.n	8001b5c <HAL_RCC_OscConfig+0x4e0>
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	699b      	ldr	r3, [r3, #24]
 8001ae4:	2b01      	cmp	r3, #1
 8001ae6:	d107      	bne.n	8001af8 <HAL_RCC_OscConfig+0x47c>
 8001ae8:	2301      	movs	r3, #1
 8001aea:	e038      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001aec:	40023800 	.word	0x40023800
 8001af0:	40007000 	.word	0x40007000
 8001af4:	42470060 	.word	0x42470060
 8001af8:	4b1b      	ldr	r3, [pc, #108]	; (8001b68 <HAL_RCC_OscConfig+0x4ec>)
 8001afa:	685b      	ldr	r3, [r3, #4]
 8001afc:	60fb      	str	r3, [r7, #12]
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	699b      	ldr	r3, [r3, #24]
 8001b02:	2b01      	cmp	r3, #1
 8001b04:	d028      	beq.n	8001b58 <HAL_RCC_OscConfig+0x4dc>
 8001b06:	68fb      	ldr	r3, [r7, #12]
 8001b08:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	69db      	ldr	r3, [r3, #28]
 8001b10:	429a      	cmp	r2, r3
 8001b12:	d121      	bne.n	8001b58 <HAL_RCC_OscConfig+0x4dc>
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	6a1b      	ldr	r3, [r3, #32]
 8001b1e:	429a      	cmp	r2, r3
 8001b20:	d11a      	bne.n	8001b58 <HAL_RCC_OscConfig+0x4dc>
 8001b22:	68fa      	ldr	r2, [r7, #12]
 8001b24:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8001b28:	4013      	ands	r3, r2
 8001b2a:	687a      	ldr	r2, [r7, #4]
 8001b2c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8001b2e:	0192      	lsls	r2, r2, #6
 8001b30:	4293      	cmp	r3, r2
 8001b32:	d111      	bne.n	8001b58 <HAL_RCC_OscConfig+0x4dc>
 8001b34:	68fb      	ldr	r3, [r7, #12]
 8001b36:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001b3e:	085b      	lsrs	r3, r3, #1
 8001b40:	3b01      	subs	r3, #1
 8001b42:	041b      	lsls	r3, r3, #16
 8001b44:	429a      	cmp	r2, r3
 8001b46:	d107      	bne.n	8001b58 <HAL_RCC_OscConfig+0x4dc>
 8001b48:	68fb      	ldr	r3, [r7, #12]
 8001b4a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001b52:	061b      	lsls	r3, r3, #24
 8001b54:	429a      	cmp	r2, r3
 8001b56:	d001      	beq.n	8001b5c <HAL_RCC_OscConfig+0x4e0>
 8001b58:	2301      	movs	r3, #1
 8001b5a:	e000      	b.n	8001b5e <HAL_RCC_OscConfig+0x4e2>
 8001b5c:	2300      	movs	r3, #0
 8001b5e:	4618      	mov	r0, r3
 8001b60:	3718      	adds	r7, #24
 8001b62:	46bd      	mov	sp, r7
 8001b64:	bd80      	pop	{r7, pc}
 8001b66:	bf00      	nop
 8001b68:	40023800 	.word	0x40023800

08001b6c <HAL_RCC_ClockConfig>:
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	b084      	sub	sp, #16
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	6078      	str	r0, [r7, #4]
 8001b74:	6039      	str	r1, [r7, #0]
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	d101      	bne.n	8001b80 <HAL_RCC_ClockConfig+0x14>
 8001b7c:	2301      	movs	r3, #1
 8001b7e:	e0cc      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001b80:	4b68      	ldr	r3, [pc, #416]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001b82:	681b      	ldr	r3, [r3, #0]
 8001b84:	f003 030f 	and.w	r3, r3, #15
 8001b88:	683a      	ldr	r2, [r7, #0]
 8001b8a:	429a      	cmp	r2, r3
 8001b8c:	d90c      	bls.n	8001ba8 <HAL_RCC_ClockConfig+0x3c>
 8001b8e:	4b65      	ldr	r3, [pc, #404]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001b90:	683a      	ldr	r2, [r7, #0]
 8001b92:	b2d2      	uxtb	r2, r2
 8001b94:	701a      	strb	r2, [r3, #0]
 8001b96:	4b63      	ldr	r3, [pc, #396]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f003 030f 	and.w	r3, r3, #15
 8001b9e:	683a      	ldr	r2, [r7, #0]
 8001ba0:	429a      	cmp	r2, r3
 8001ba2:	d001      	beq.n	8001ba8 <HAL_RCC_ClockConfig+0x3c>
 8001ba4:	2301      	movs	r3, #1
 8001ba6:	e0b8      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	f003 0302 	and.w	r3, r3, #2
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d020      	beq.n	8001bf6 <HAL_RCC_ClockConfig+0x8a>
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	681b      	ldr	r3, [r3, #0]
 8001bb8:	f003 0304 	and.w	r3, r3, #4
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d005      	beq.n	8001bcc <HAL_RCC_ClockConfig+0x60>
 8001bc0:	4b59      	ldr	r3, [pc, #356]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001bc2:	689b      	ldr	r3, [r3, #8]
 8001bc4:	4a58      	ldr	r2, [pc, #352]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001bc6:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8001bca:	6093      	str	r3, [r2, #8]
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f003 0308 	and.w	r3, r3, #8
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d005      	beq.n	8001be4 <HAL_RCC_ClockConfig+0x78>
 8001bd8:	4b53      	ldr	r3, [pc, #332]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001bda:	689b      	ldr	r3, [r3, #8]
 8001bdc:	4a52      	ldr	r2, [pc, #328]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001bde:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8001be2:	6093      	str	r3, [r2, #8]
 8001be4:	4b50      	ldr	r3, [pc, #320]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001be6:	689b      	ldr	r3, [r3, #8]
 8001be8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	689b      	ldr	r3, [r3, #8]
 8001bf0:	494d      	ldr	r1, [pc, #308]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001bf2:	4313      	orrs	r3, r2
 8001bf4:	608b      	str	r3, [r1, #8]
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	681b      	ldr	r3, [r3, #0]
 8001bfa:	f003 0301 	and.w	r3, r3, #1
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d044      	beq.n	8001c8c <HAL_RCC_ClockConfig+0x120>
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	685b      	ldr	r3, [r3, #4]
 8001c06:	2b01      	cmp	r3, #1
 8001c08:	d107      	bne.n	8001c1a <HAL_RCC_ClockConfig+0xae>
 8001c0a:	4b47      	ldr	r3, [pc, #284]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d119      	bne.n	8001c4a <HAL_RCC_ClockConfig+0xde>
 8001c16:	2301      	movs	r3, #1
 8001c18:	e07f      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	685b      	ldr	r3, [r3, #4]
 8001c1e:	2b02      	cmp	r3, #2
 8001c20:	d003      	beq.n	8001c2a <HAL_RCC_ClockConfig+0xbe>
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	685b      	ldr	r3, [r3, #4]
 8001c26:	2b03      	cmp	r3, #3
 8001c28:	d107      	bne.n	8001c3a <HAL_RCC_ClockConfig+0xce>
 8001c2a:	4b3f      	ldr	r3, [pc, #252]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c32:	2b00      	cmp	r3, #0
 8001c34:	d109      	bne.n	8001c4a <HAL_RCC_ClockConfig+0xde>
 8001c36:	2301      	movs	r3, #1
 8001c38:	e06f      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001c3a:	4b3b      	ldr	r3, [pc, #236]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	f003 0302 	and.w	r3, r3, #2
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d101      	bne.n	8001c4a <HAL_RCC_ClockConfig+0xde>
 8001c46:	2301      	movs	r3, #1
 8001c48:	e067      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001c4a:	4b37      	ldr	r3, [pc, #220]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	f023 0203 	bic.w	r2, r3, #3
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	685b      	ldr	r3, [r3, #4]
 8001c56:	4934      	ldr	r1, [pc, #208]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c58:	4313      	orrs	r3, r2
 8001c5a:	608b      	str	r3, [r1, #8]
 8001c5c:	f7ff f9f0 	bl	8001040 <HAL_GetTick>
 8001c60:	60f8      	str	r0, [r7, #12]
 8001c62:	e00a      	b.n	8001c7a <HAL_RCC_ClockConfig+0x10e>
 8001c64:	f7ff f9ec 	bl	8001040 <HAL_GetTick>
 8001c68:	4602      	mov	r2, r0
 8001c6a:	68fb      	ldr	r3, [r7, #12]
 8001c6c:	1ad3      	subs	r3, r2, r3
 8001c6e:	f241 3288 	movw	r2, #5000	; 0x1388
 8001c72:	4293      	cmp	r3, r2
 8001c74:	d901      	bls.n	8001c7a <HAL_RCC_ClockConfig+0x10e>
 8001c76:	2303      	movs	r3, #3
 8001c78:	e04f      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001c7a:	4b2b      	ldr	r3, [pc, #172]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001c7c:	689b      	ldr	r3, [r3, #8]
 8001c7e:	f003 020c 	and.w	r2, r3, #12
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	685b      	ldr	r3, [r3, #4]
 8001c86:	009b      	lsls	r3, r3, #2
 8001c88:	429a      	cmp	r2, r3
 8001c8a:	d1eb      	bne.n	8001c64 <HAL_RCC_ClockConfig+0xf8>
 8001c8c:	4b25      	ldr	r3, [pc, #148]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	f003 030f 	and.w	r3, r3, #15
 8001c94:	683a      	ldr	r2, [r7, #0]
 8001c96:	429a      	cmp	r2, r3
 8001c98:	d20c      	bcs.n	8001cb4 <HAL_RCC_ClockConfig+0x148>
 8001c9a:	4b22      	ldr	r3, [pc, #136]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001c9c:	683a      	ldr	r2, [r7, #0]
 8001c9e:	b2d2      	uxtb	r2, r2
 8001ca0:	701a      	strb	r2, [r3, #0]
 8001ca2:	4b20      	ldr	r3, [pc, #128]	; (8001d24 <HAL_RCC_ClockConfig+0x1b8>)
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	f003 030f 	and.w	r3, r3, #15
 8001caa:	683a      	ldr	r2, [r7, #0]
 8001cac:	429a      	cmp	r2, r3
 8001cae:	d001      	beq.n	8001cb4 <HAL_RCC_ClockConfig+0x148>
 8001cb0:	2301      	movs	r3, #1
 8001cb2:	e032      	b.n	8001d1a <HAL_RCC_ClockConfig+0x1ae>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	f003 0304 	and.w	r3, r3, #4
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d008      	beq.n	8001cd2 <HAL_RCC_ClockConfig+0x166>
 8001cc0:	4b19      	ldr	r3, [pc, #100]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001cc2:	689b      	ldr	r3, [r3, #8]
 8001cc4:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	68db      	ldr	r3, [r3, #12]
 8001ccc:	4916      	ldr	r1, [pc, #88]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001cce:	4313      	orrs	r3, r2
 8001cd0:	608b      	str	r3, [r1, #8]
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	681b      	ldr	r3, [r3, #0]
 8001cd6:	f003 0308 	and.w	r3, r3, #8
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d009      	beq.n	8001cf2 <HAL_RCC_ClockConfig+0x186>
 8001cde:	4b12      	ldr	r3, [pc, #72]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001ce0:	689b      	ldr	r3, [r3, #8]
 8001ce2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	691b      	ldr	r3, [r3, #16]
 8001cea:	00db      	lsls	r3, r3, #3
 8001cec:	490e      	ldr	r1, [pc, #56]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001cee:	4313      	orrs	r3, r2
 8001cf0:	608b      	str	r3, [r1, #8]
 8001cf2:	f000 f821 	bl	8001d38 <HAL_RCC_GetSysClockFreq>
 8001cf6:	4602      	mov	r2, r0
 8001cf8:	4b0b      	ldr	r3, [pc, #44]	; (8001d28 <HAL_RCC_ClockConfig+0x1bc>)
 8001cfa:	689b      	ldr	r3, [r3, #8]
 8001cfc:	091b      	lsrs	r3, r3, #4
 8001cfe:	f003 030f 	and.w	r3, r3, #15
 8001d02:	490a      	ldr	r1, [pc, #40]	; (8001d2c <HAL_RCC_ClockConfig+0x1c0>)
 8001d04:	5ccb      	ldrb	r3, [r1, r3]
 8001d06:	fa22 f303 	lsr.w	r3, r2, r3
 8001d0a:	4a09      	ldr	r2, [pc, #36]	; (8001d30 <HAL_RCC_ClockConfig+0x1c4>)
 8001d0c:	6013      	str	r3, [r2, #0]
 8001d0e:	4b09      	ldr	r3, [pc, #36]	; (8001d34 <HAL_RCC_ClockConfig+0x1c8>)
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	4618      	mov	r0, r3
 8001d14:	f7fe ffea 	bl	8000cec <HAL_InitTick>
 8001d18:	2300      	movs	r3, #0
 8001d1a:	4618      	mov	r0, r3
 8001d1c:	3710      	adds	r7, #16
 8001d1e:	46bd      	mov	sp, r7
 8001d20:	bd80      	pop	{r7, pc}
 8001d22:	bf00      	nop
 8001d24:	40023c00 	.word	0x40023c00
 8001d28:	40023800 	.word	0x40023800
 8001d2c:	08007cfc 	.word	0x08007cfc
 8001d30:	20000040 	.word	0x20000040
 8001d34:	20000044 	.word	0x20000044

08001d38 <HAL_RCC_GetSysClockFreq>:
 8001d38:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001d3c:	b094      	sub	sp, #80	; 0x50
 8001d3e:	af00      	add	r7, sp, #0
 8001d40:	2300      	movs	r3, #0
 8001d42:	647b      	str	r3, [r7, #68]	; 0x44
 8001d44:	2300      	movs	r3, #0
 8001d46:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001d48:	2300      	movs	r3, #0
 8001d4a:	643b      	str	r3, [r7, #64]	; 0x40
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	64bb      	str	r3, [r7, #72]	; 0x48
 8001d50:	4b79      	ldr	r3, [pc, #484]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001d52:	689b      	ldr	r3, [r3, #8]
 8001d54:	f003 030c 	and.w	r3, r3, #12
 8001d58:	2b08      	cmp	r3, #8
 8001d5a:	d00d      	beq.n	8001d78 <HAL_RCC_GetSysClockFreq+0x40>
 8001d5c:	2b08      	cmp	r3, #8
 8001d5e:	f200 80e1 	bhi.w	8001f24 <HAL_RCC_GetSysClockFreq+0x1ec>
 8001d62:	2b00      	cmp	r3, #0
 8001d64:	d002      	beq.n	8001d6c <HAL_RCC_GetSysClockFreq+0x34>
 8001d66:	2b04      	cmp	r3, #4
 8001d68:	d003      	beq.n	8001d72 <HAL_RCC_GetSysClockFreq+0x3a>
 8001d6a:	e0db      	b.n	8001f24 <HAL_RCC_GetSysClockFreq+0x1ec>
 8001d6c:	4b73      	ldr	r3, [pc, #460]	; (8001f3c <HAL_RCC_GetSysClockFreq+0x204>)
 8001d6e:	64bb      	str	r3, [r7, #72]	; 0x48
 8001d70:	e0db      	b.n	8001f2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8001d72:	4b73      	ldr	r3, [pc, #460]	; (8001f40 <HAL_RCC_GetSysClockFreq+0x208>)
 8001d74:	64bb      	str	r3, [r7, #72]	; 0x48
 8001d76:	e0d8      	b.n	8001f2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8001d78:	4b6f      	ldr	r3, [pc, #444]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001d7a:	685b      	ldr	r3, [r3, #4]
 8001d7c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001d80:	647b      	str	r3, [r7, #68]	; 0x44
 8001d82:	4b6d      	ldr	r3, [pc, #436]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001d84:	685b      	ldr	r3, [r3, #4]
 8001d86:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d063      	beq.n	8001e56 <HAL_RCC_GetSysClockFreq+0x11e>
 8001d8e:	4b6a      	ldr	r3, [pc, #424]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001d90:	685b      	ldr	r3, [r3, #4]
 8001d92:	099b      	lsrs	r3, r3, #6
 8001d94:	2200      	movs	r2, #0
 8001d96:	63bb      	str	r3, [r7, #56]	; 0x38
 8001d98:	63fa      	str	r2, [r7, #60]	; 0x3c
 8001d9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001d9c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001da0:	633b      	str	r3, [r7, #48]	; 0x30
 8001da2:	2300      	movs	r3, #0
 8001da4:	637b      	str	r3, [r7, #52]	; 0x34
 8001da6:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8001daa:	4622      	mov	r2, r4
 8001dac:	462b      	mov	r3, r5
 8001dae:	f04f 0000 	mov.w	r0, #0
 8001db2:	f04f 0100 	mov.w	r1, #0
 8001db6:	0159      	lsls	r1, r3, #5
 8001db8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001dbc:	0150      	lsls	r0, r2, #5
 8001dbe:	4602      	mov	r2, r0
 8001dc0:	460b      	mov	r3, r1
 8001dc2:	4621      	mov	r1, r4
 8001dc4:	1a51      	subs	r1, r2, r1
 8001dc6:	6139      	str	r1, [r7, #16]
 8001dc8:	4629      	mov	r1, r5
 8001dca:	eb63 0301 	sbc.w	r3, r3, r1
 8001dce:	617b      	str	r3, [r7, #20]
 8001dd0:	f04f 0200 	mov.w	r2, #0
 8001dd4:	f04f 0300 	mov.w	r3, #0
 8001dd8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8001ddc:	4659      	mov	r1, fp
 8001dde:	018b      	lsls	r3, r1, #6
 8001de0:	4651      	mov	r1, sl
 8001de2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8001de6:	4651      	mov	r1, sl
 8001de8:	018a      	lsls	r2, r1, #6
 8001dea:	4651      	mov	r1, sl
 8001dec:	ebb2 0801 	subs.w	r8, r2, r1
 8001df0:	4659      	mov	r1, fp
 8001df2:	eb63 0901 	sbc.w	r9, r3, r1
 8001df6:	f04f 0200 	mov.w	r2, #0
 8001dfa:	f04f 0300 	mov.w	r3, #0
 8001dfe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8001e02:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001e06:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001e0a:	4690      	mov	r8, r2
 8001e0c:	4699      	mov	r9, r3
 8001e0e:	4623      	mov	r3, r4
 8001e10:	eb18 0303 	adds.w	r3, r8, r3
 8001e14:	60bb      	str	r3, [r7, #8]
 8001e16:	462b      	mov	r3, r5
 8001e18:	eb49 0303 	adc.w	r3, r9, r3
 8001e1c:	60fb      	str	r3, [r7, #12]
 8001e1e:	f04f 0200 	mov.w	r2, #0
 8001e22:	f04f 0300 	mov.w	r3, #0
 8001e26:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8001e2a:	4629      	mov	r1, r5
 8001e2c:	024b      	lsls	r3, r1, #9
 8001e2e:	4621      	mov	r1, r4
 8001e30:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8001e34:	4621      	mov	r1, r4
 8001e36:	024a      	lsls	r2, r1, #9
 8001e38:	4610      	mov	r0, r2
 8001e3a:	4619      	mov	r1, r3
 8001e3c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001e3e:	2200      	movs	r2, #0
 8001e40:	62bb      	str	r3, [r7, #40]	; 0x28
 8001e42:	62fa      	str	r2, [r7, #44]	; 0x2c
 8001e44:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8001e48:	f7fe fa22 	bl	8000290 <__aeabi_uldivmod>
 8001e4c:	4602      	mov	r2, r0
 8001e4e:	460b      	mov	r3, r1
 8001e50:	4613      	mov	r3, r2
 8001e52:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001e54:	e058      	b.n	8001f08 <HAL_RCC_GetSysClockFreq+0x1d0>
 8001e56:	4b38      	ldr	r3, [pc, #224]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001e58:	685b      	ldr	r3, [r3, #4]
 8001e5a:	099b      	lsrs	r3, r3, #6
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	4618      	mov	r0, r3
 8001e60:	4611      	mov	r1, r2
 8001e62:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8001e66:	623b      	str	r3, [r7, #32]
 8001e68:	2300      	movs	r3, #0
 8001e6a:	627b      	str	r3, [r7, #36]	; 0x24
 8001e6c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8001e70:	4642      	mov	r2, r8
 8001e72:	464b      	mov	r3, r9
 8001e74:	f04f 0000 	mov.w	r0, #0
 8001e78:	f04f 0100 	mov.w	r1, #0
 8001e7c:	0159      	lsls	r1, r3, #5
 8001e7e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8001e82:	0150      	lsls	r0, r2, #5
 8001e84:	4602      	mov	r2, r0
 8001e86:	460b      	mov	r3, r1
 8001e88:	4641      	mov	r1, r8
 8001e8a:	ebb2 0a01 	subs.w	sl, r2, r1
 8001e8e:	4649      	mov	r1, r9
 8001e90:	eb63 0b01 	sbc.w	fp, r3, r1
 8001e94:	f04f 0200 	mov.w	r2, #0
 8001e98:	f04f 0300 	mov.w	r3, #0
 8001e9c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8001ea0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8001ea4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8001ea8:	ebb2 040a 	subs.w	r4, r2, sl
 8001eac:	eb63 050b 	sbc.w	r5, r3, fp
 8001eb0:	f04f 0200 	mov.w	r2, #0
 8001eb4:	f04f 0300 	mov.w	r3, #0
 8001eb8:	00eb      	lsls	r3, r5, #3
 8001eba:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001ebe:	00e2      	lsls	r2, r4, #3
 8001ec0:	4614      	mov	r4, r2
 8001ec2:	461d      	mov	r5, r3
 8001ec4:	4643      	mov	r3, r8
 8001ec6:	18e3      	adds	r3, r4, r3
 8001ec8:	603b      	str	r3, [r7, #0]
 8001eca:	464b      	mov	r3, r9
 8001ecc:	eb45 0303 	adc.w	r3, r5, r3
 8001ed0:	607b      	str	r3, [r7, #4]
 8001ed2:	f04f 0200 	mov.w	r2, #0
 8001ed6:	f04f 0300 	mov.w	r3, #0
 8001eda:	e9d7 4500 	ldrd	r4, r5, [r7]
 8001ede:	4629      	mov	r1, r5
 8001ee0:	028b      	lsls	r3, r1, #10
 8001ee2:	4621      	mov	r1, r4
 8001ee4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8001ee8:	4621      	mov	r1, r4
 8001eea:	028a      	lsls	r2, r1, #10
 8001eec:	4610      	mov	r0, r2
 8001eee:	4619      	mov	r1, r3
 8001ef0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	61bb      	str	r3, [r7, #24]
 8001ef6:	61fa      	str	r2, [r7, #28]
 8001ef8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001efc:	f7fe f9c8 	bl	8000290 <__aeabi_uldivmod>
 8001f00:	4602      	mov	r2, r0
 8001f02:	460b      	mov	r3, r1
 8001f04:	4613      	mov	r3, r2
 8001f06:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001f08:	4b0b      	ldr	r3, [pc, #44]	; (8001f38 <HAL_RCC_GetSysClockFreq+0x200>)
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	0c1b      	lsrs	r3, r3, #16
 8001f0e:	f003 0303 	and.w	r3, r3, #3
 8001f12:	3301      	adds	r3, #1
 8001f14:	005b      	lsls	r3, r3, #1
 8001f16:	643b      	str	r3, [r7, #64]	; 0x40
 8001f18:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8001f1a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001f1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f20:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f22:	e002      	b.n	8001f2a <HAL_RCC_GetSysClockFreq+0x1f2>
 8001f24:	4b05      	ldr	r3, [pc, #20]	; (8001f3c <HAL_RCC_GetSysClockFreq+0x204>)
 8001f26:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f28:	bf00      	nop
 8001f2a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	3750      	adds	r7, #80	; 0x50
 8001f30:	46bd      	mov	sp, r7
 8001f32:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001f36:	bf00      	nop
 8001f38:	40023800 	.word	0x40023800
 8001f3c:	00f42400 	.word	0x00f42400
 8001f40:	007a1200 	.word	0x007a1200

08001f44 <HAL_RCC_GetHCLKFreq>:
 8001f44:	b480      	push	{r7}
 8001f46:	af00      	add	r7, sp, #0
 8001f48:	4b03      	ldr	r3, [pc, #12]	; (8001f58 <HAL_RCC_GetHCLKFreq+0x14>)
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4618      	mov	r0, r3
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f54:	4770      	bx	lr
 8001f56:	bf00      	nop
 8001f58:	20000040 	.word	0x20000040

08001f5c <HAL_RCC_GetPCLK1Freq>:
 8001f5c:	b580      	push	{r7, lr}
 8001f5e:	af00      	add	r7, sp, #0
 8001f60:	f7ff fff0 	bl	8001f44 <HAL_RCC_GetHCLKFreq>
 8001f64:	4602      	mov	r2, r0
 8001f66:	4b05      	ldr	r3, [pc, #20]	; (8001f7c <HAL_RCC_GetPCLK1Freq+0x20>)
 8001f68:	689b      	ldr	r3, [r3, #8]
 8001f6a:	0a9b      	lsrs	r3, r3, #10
 8001f6c:	f003 0307 	and.w	r3, r3, #7
 8001f70:	4903      	ldr	r1, [pc, #12]	; (8001f80 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001f72:	5ccb      	ldrb	r3, [r1, r3]
 8001f74:	fa22 f303 	lsr.w	r3, r2, r3
 8001f78:	4618      	mov	r0, r3
 8001f7a:	bd80      	pop	{r7, pc}
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	08007d0c 	.word	0x08007d0c

08001f84 <HAL_RCC_GetClockConfig>:
 8001f84:	b480      	push	{r7}
 8001f86:	b083      	sub	sp, #12
 8001f88:	af00      	add	r7, sp, #0
 8001f8a:	6078      	str	r0, [r7, #4]
 8001f8c:	6039      	str	r1, [r7, #0]
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	220f      	movs	r2, #15
 8001f92:	601a      	str	r2, [r3, #0]
 8001f94:	4b12      	ldr	r3, [pc, #72]	; (8001fe0 <HAL_RCC_GetClockConfig+0x5c>)
 8001f96:	689b      	ldr	r3, [r3, #8]
 8001f98:	f003 0203 	and.w	r2, r3, #3
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	605a      	str	r2, [r3, #4]
 8001fa0:	4b0f      	ldr	r3, [pc, #60]	; (8001fe0 <HAL_RCC_GetClockConfig+0x5c>)
 8001fa2:	689b      	ldr	r3, [r3, #8]
 8001fa4:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	609a      	str	r2, [r3, #8]
 8001fac:	4b0c      	ldr	r3, [pc, #48]	; (8001fe0 <HAL_RCC_GetClockConfig+0x5c>)
 8001fae:	689b      	ldr	r3, [r3, #8]
 8001fb0:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	60da      	str	r2, [r3, #12]
 8001fb8:	4b09      	ldr	r3, [pc, #36]	; (8001fe0 <HAL_RCC_GetClockConfig+0x5c>)
 8001fba:	689b      	ldr	r3, [r3, #8]
 8001fbc:	08db      	lsrs	r3, r3, #3
 8001fbe:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	611a      	str	r2, [r3, #16]
 8001fc6:	4b07      	ldr	r3, [pc, #28]	; (8001fe4 <HAL_RCC_GetClockConfig+0x60>)
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f003 020f 	and.w	r2, r3, #15
 8001fce:	683b      	ldr	r3, [r7, #0]
 8001fd0:	601a      	str	r2, [r3, #0]
 8001fd2:	bf00      	nop
 8001fd4:	370c      	adds	r7, #12
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fdc:	4770      	bx	lr
 8001fde:	bf00      	nop
 8001fe0:	40023800 	.word	0x40023800
 8001fe4:	40023c00 	.word	0x40023c00

08001fe8 <HAL_TIM_Base_Init>:
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b082      	sub	sp, #8
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	2b00      	cmp	r3, #0
 8001ff4:	d101      	bne.n	8001ffa <HAL_TIM_Base_Init+0x12>
 8001ff6:	2301      	movs	r3, #1
 8001ff8:	e041      	b.n	800207e <HAL_TIM_Base_Init+0x96>
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002000:	b2db      	uxtb	r3, r3
 8002002:	2b00      	cmp	r3, #0
 8002004:	d106      	bne.n	8002014 <HAL_TIM_Base_Init+0x2c>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	2200      	movs	r2, #0
 800200a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800200e:	6878      	ldr	r0, [r7, #4]
 8002010:	f7fe fe28 	bl	8000c64 <HAL_TIM_Base_MspInit>
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	2202      	movs	r2, #2
 8002018:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	681a      	ldr	r2, [r3, #0]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	3304      	adds	r3, #4
 8002024:	4619      	mov	r1, r3
 8002026:	4610      	mov	r0, r2
 8002028:	f000 fa7e 	bl	8002528 <TIM_Base_SetConfig>
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	2201      	movs	r2, #1
 8002030:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002034:	687b      	ldr	r3, [r7, #4]
 8002036:	2201      	movs	r2, #1
 8002038:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	2201      	movs	r2, #1
 8002040:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	2201      	movs	r2, #1
 8002048:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	2201      	movs	r2, #1
 8002050:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	2201      	movs	r2, #1
 8002058:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	2201      	movs	r2, #1
 8002060:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	2201      	movs	r2, #1
 8002068:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	2201      	movs	r2, #1
 8002070:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	2201      	movs	r2, #1
 8002078:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800207c:	2300      	movs	r3, #0
 800207e:	4618      	mov	r0, r3
 8002080:	3708      	adds	r7, #8
 8002082:	46bd      	mov	sp, r7
 8002084:	bd80      	pop	{r7, pc}
	...

08002088 <HAL_TIM_Base_Start_IT>:
 8002088:	b480      	push	{r7}
 800208a:	b085      	sub	sp, #20
 800208c:	af00      	add	r7, sp, #0
 800208e:	6078      	str	r0, [r7, #4]
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002096:	b2db      	uxtb	r3, r3
 8002098:	2b01      	cmp	r3, #1
 800209a:	d001      	beq.n	80020a0 <HAL_TIM_Base_Start_IT+0x18>
 800209c:	2301      	movs	r3, #1
 800209e:	e04e      	b.n	800213e <HAL_TIM_Base_Start_IT+0xb6>
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	2202      	movs	r2, #2
 80020a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	68da      	ldr	r2, [r3, #12]
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	f042 0201 	orr.w	r2, r2, #1
 80020b6:	60da      	str	r2, [r3, #12]
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	4a23      	ldr	r2, [pc, #140]	; (800214c <HAL_TIM_Base_Start_IT+0xc4>)
 80020be:	4293      	cmp	r3, r2
 80020c0:	d022      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80020ca:	d01d      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	4a1f      	ldr	r2, [pc, #124]	; (8002150 <HAL_TIM_Base_Start_IT+0xc8>)
 80020d2:	4293      	cmp	r3, r2
 80020d4:	d018      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	4a1e      	ldr	r2, [pc, #120]	; (8002154 <HAL_TIM_Base_Start_IT+0xcc>)
 80020dc:	4293      	cmp	r3, r2
 80020de:	d013      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	4a1c      	ldr	r2, [pc, #112]	; (8002158 <HAL_TIM_Base_Start_IT+0xd0>)
 80020e6:	4293      	cmp	r3, r2
 80020e8:	d00e      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	4a1b      	ldr	r2, [pc, #108]	; (800215c <HAL_TIM_Base_Start_IT+0xd4>)
 80020f0:	4293      	cmp	r3, r2
 80020f2:	d009      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	681b      	ldr	r3, [r3, #0]
 80020f8:	4a19      	ldr	r2, [pc, #100]	; (8002160 <HAL_TIM_Base_Start_IT+0xd8>)
 80020fa:	4293      	cmp	r3, r2
 80020fc:	d004      	beq.n	8002108 <HAL_TIM_Base_Start_IT+0x80>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	4a18      	ldr	r2, [pc, #96]	; (8002164 <HAL_TIM_Base_Start_IT+0xdc>)
 8002104:	4293      	cmp	r3, r2
 8002106:	d111      	bne.n	800212c <HAL_TIM_Base_Start_IT+0xa4>
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	689b      	ldr	r3, [r3, #8]
 800210e:	f003 0307 	and.w	r3, r3, #7
 8002112:	60fb      	str	r3, [r7, #12]
 8002114:	68fb      	ldr	r3, [r7, #12]
 8002116:	2b06      	cmp	r3, #6
 8002118:	d010      	beq.n	800213c <HAL_TIM_Base_Start_IT+0xb4>
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	681a      	ldr	r2, [r3, #0]
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	f042 0201 	orr.w	r2, r2, #1
 8002128:	601a      	str	r2, [r3, #0]
 800212a:	e007      	b.n	800213c <HAL_TIM_Base_Start_IT+0xb4>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681b      	ldr	r3, [r3, #0]
 8002130:	681a      	ldr	r2, [r3, #0]
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	f042 0201 	orr.w	r2, r2, #1
 800213a:	601a      	str	r2, [r3, #0]
 800213c:	2300      	movs	r3, #0
 800213e:	4618      	mov	r0, r3
 8002140:	3714      	adds	r7, #20
 8002142:	46bd      	mov	sp, r7
 8002144:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002148:	4770      	bx	lr
 800214a:	bf00      	nop
 800214c:	40010000 	.word	0x40010000
 8002150:	40000400 	.word	0x40000400
 8002154:	40000800 	.word	0x40000800
 8002158:	40000c00 	.word	0x40000c00
 800215c:	40010400 	.word	0x40010400
 8002160:	40014000 	.word	0x40014000
 8002164:	40001800 	.word	0x40001800

08002168 <HAL_TIM_IRQHandler>:
 8002168:	b580      	push	{r7, lr}
 800216a:	b084      	sub	sp, #16
 800216c:	af00      	add	r7, sp, #0
 800216e:	6078      	str	r0, [r7, #4]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	68db      	ldr	r3, [r3, #12]
 8002176:	60fb      	str	r3, [r7, #12]
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	691b      	ldr	r3, [r3, #16]
 800217e:	60bb      	str	r3, [r7, #8]
 8002180:	68bb      	ldr	r3, [r7, #8]
 8002182:	f003 0302 	and.w	r3, r3, #2
 8002186:	2b00      	cmp	r3, #0
 8002188:	d020      	beq.n	80021cc <HAL_TIM_IRQHandler+0x64>
 800218a:	68fb      	ldr	r3, [r7, #12]
 800218c:	f003 0302 	and.w	r3, r3, #2
 8002190:	2b00      	cmp	r3, #0
 8002192:	d01b      	beq.n	80021cc <HAL_TIM_IRQHandler+0x64>
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	f06f 0202 	mvn.w	r2, #2
 800219c:	611a      	str	r2, [r3, #16]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	2201      	movs	r2, #1
 80021a2:	771a      	strb	r2, [r3, #28]
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	699b      	ldr	r3, [r3, #24]
 80021aa:	f003 0303 	and.w	r3, r3, #3
 80021ae:	2b00      	cmp	r3, #0
 80021b0:	d003      	beq.n	80021ba <HAL_TIM_IRQHandler+0x52>
 80021b2:	6878      	ldr	r0, [r7, #4]
 80021b4:	f000 f999 	bl	80024ea <HAL_TIM_IC_CaptureCallback>
 80021b8:	e005      	b.n	80021c6 <HAL_TIM_IRQHandler+0x5e>
 80021ba:	6878      	ldr	r0, [r7, #4]
 80021bc:	f000 f98b 	bl	80024d6 <HAL_TIM_OC_DelayElapsedCallback>
 80021c0:	6878      	ldr	r0, [r7, #4]
 80021c2:	f000 f99c 	bl	80024fe <HAL_TIM_PWM_PulseFinishedCallback>
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	2200      	movs	r2, #0
 80021ca:	771a      	strb	r2, [r3, #28]
 80021cc:	68bb      	ldr	r3, [r7, #8]
 80021ce:	f003 0304 	and.w	r3, r3, #4
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d020      	beq.n	8002218 <HAL_TIM_IRQHandler+0xb0>
 80021d6:	68fb      	ldr	r3, [r7, #12]
 80021d8:	f003 0304 	and.w	r3, r3, #4
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d01b      	beq.n	8002218 <HAL_TIM_IRQHandler+0xb0>
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	f06f 0204 	mvn.w	r2, #4
 80021e8:	611a      	str	r2, [r3, #16]
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	2202      	movs	r2, #2
 80021ee:	771a      	strb	r2, [r3, #28]
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	699b      	ldr	r3, [r3, #24]
 80021f6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d003      	beq.n	8002206 <HAL_TIM_IRQHandler+0x9e>
 80021fe:	6878      	ldr	r0, [r7, #4]
 8002200:	f000 f973 	bl	80024ea <HAL_TIM_IC_CaptureCallback>
 8002204:	e005      	b.n	8002212 <HAL_TIM_IRQHandler+0xaa>
 8002206:	6878      	ldr	r0, [r7, #4]
 8002208:	f000 f965 	bl	80024d6 <HAL_TIM_OC_DelayElapsedCallback>
 800220c:	6878      	ldr	r0, [r7, #4]
 800220e:	f000 f976 	bl	80024fe <HAL_TIM_PWM_PulseFinishedCallback>
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	2200      	movs	r2, #0
 8002216:	771a      	strb	r2, [r3, #28]
 8002218:	68bb      	ldr	r3, [r7, #8]
 800221a:	f003 0308 	and.w	r3, r3, #8
 800221e:	2b00      	cmp	r3, #0
 8002220:	d020      	beq.n	8002264 <HAL_TIM_IRQHandler+0xfc>
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	f003 0308 	and.w	r3, r3, #8
 8002228:	2b00      	cmp	r3, #0
 800222a:	d01b      	beq.n	8002264 <HAL_TIM_IRQHandler+0xfc>
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	681b      	ldr	r3, [r3, #0]
 8002230:	f06f 0208 	mvn.w	r2, #8
 8002234:	611a      	str	r2, [r3, #16]
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	2204      	movs	r2, #4
 800223a:	771a      	strb	r2, [r3, #28]
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	681b      	ldr	r3, [r3, #0]
 8002240:	69db      	ldr	r3, [r3, #28]
 8002242:	f003 0303 	and.w	r3, r3, #3
 8002246:	2b00      	cmp	r3, #0
 8002248:	d003      	beq.n	8002252 <HAL_TIM_IRQHandler+0xea>
 800224a:	6878      	ldr	r0, [r7, #4]
 800224c:	f000 f94d 	bl	80024ea <HAL_TIM_IC_CaptureCallback>
 8002250:	e005      	b.n	800225e <HAL_TIM_IRQHandler+0xf6>
 8002252:	6878      	ldr	r0, [r7, #4]
 8002254:	f000 f93f 	bl	80024d6 <HAL_TIM_OC_DelayElapsedCallback>
 8002258:	6878      	ldr	r0, [r7, #4]
 800225a:	f000 f950 	bl	80024fe <HAL_TIM_PWM_PulseFinishedCallback>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	2200      	movs	r2, #0
 8002262:	771a      	strb	r2, [r3, #28]
 8002264:	68bb      	ldr	r3, [r7, #8]
 8002266:	f003 0310 	and.w	r3, r3, #16
 800226a:	2b00      	cmp	r3, #0
 800226c:	d020      	beq.n	80022b0 <HAL_TIM_IRQHandler+0x148>
 800226e:	68fb      	ldr	r3, [r7, #12]
 8002270:	f003 0310 	and.w	r3, r3, #16
 8002274:	2b00      	cmp	r3, #0
 8002276:	d01b      	beq.n	80022b0 <HAL_TIM_IRQHandler+0x148>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f06f 0210 	mvn.w	r2, #16
 8002280:	611a      	str	r2, [r3, #16]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	2208      	movs	r2, #8
 8002286:	771a      	strb	r2, [r3, #28]
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	69db      	ldr	r3, [r3, #28]
 800228e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002292:	2b00      	cmp	r3, #0
 8002294:	d003      	beq.n	800229e <HAL_TIM_IRQHandler+0x136>
 8002296:	6878      	ldr	r0, [r7, #4]
 8002298:	f000 f927 	bl	80024ea <HAL_TIM_IC_CaptureCallback>
 800229c:	e005      	b.n	80022aa <HAL_TIM_IRQHandler+0x142>
 800229e:	6878      	ldr	r0, [r7, #4]
 80022a0:	f000 f919 	bl	80024d6 <HAL_TIM_OC_DelayElapsedCallback>
 80022a4:	6878      	ldr	r0, [r7, #4]
 80022a6:	f000 f92a 	bl	80024fe <HAL_TIM_PWM_PulseFinishedCallback>
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	2200      	movs	r2, #0
 80022ae:	771a      	strb	r2, [r3, #28]
 80022b0:	68bb      	ldr	r3, [r7, #8]
 80022b2:	f003 0301 	and.w	r3, r3, #1
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d00c      	beq.n	80022d4 <HAL_TIM_IRQHandler+0x16c>
 80022ba:	68fb      	ldr	r3, [r7, #12]
 80022bc:	f003 0301 	and.w	r3, r3, #1
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d007      	beq.n	80022d4 <HAL_TIM_IRQHandler+0x16c>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	f06f 0201 	mvn.w	r2, #1
 80022cc:	611a      	str	r2, [r3, #16]
 80022ce:	6878      	ldr	r0, [r7, #4]
 80022d0:	f7fe fc68 	bl	8000ba4 <HAL_TIM_PeriodElapsedCallback>
 80022d4:	68bb      	ldr	r3, [r7, #8]
 80022d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d00c      	beq.n	80022f8 <HAL_TIM_IRQHandler+0x190>
 80022de:	68fb      	ldr	r3, [r7, #12]
 80022e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022e4:	2b00      	cmp	r3, #0
 80022e6:	d007      	beq.n	80022f8 <HAL_TIM_IRQHandler+0x190>
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80022f0:	611a      	str	r2, [r3, #16]
 80022f2:	6878      	ldr	r0, [r7, #4]
 80022f4:	f000 fae4 	bl	80028c0 <HAL_TIMEx_BreakCallback>
 80022f8:	68bb      	ldr	r3, [r7, #8]
 80022fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80022fe:	2b00      	cmp	r3, #0
 8002300:	d00c      	beq.n	800231c <HAL_TIM_IRQHandler+0x1b4>
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002308:	2b00      	cmp	r3, #0
 800230a:	d007      	beq.n	800231c <HAL_TIM_IRQHandler+0x1b4>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002314:	611a      	str	r2, [r3, #16]
 8002316:	6878      	ldr	r0, [r7, #4]
 8002318:	f000 f8fb 	bl	8002512 <HAL_TIM_TriggerCallback>
 800231c:	68bb      	ldr	r3, [r7, #8]
 800231e:	f003 0320 	and.w	r3, r3, #32
 8002322:	2b00      	cmp	r3, #0
 8002324:	d00c      	beq.n	8002340 <HAL_TIM_IRQHandler+0x1d8>
 8002326:	68fb      	ldr	r3, [r7, #12]
 8002328:	f003 0320 	and.w	r3, r3, #32
 800232c:	2b00      	cmp	r3, #0
 800232e:	d007      	beq.n	8002340 <HAL_TIM_IRQHandler+0x1d8>
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f06f 0220 	mvn.w	r2, #32
 8002338:	611a      	str	r2, [r3, #16]
 800233a:	6878      	ldr	r0, [r7, #4]
 800233c:	f000 fab6 	bl	80028ac <HAL_TIMEx_CommutCallback>
 8002340:	bf00      	nop
 8002342:	3710      	adds	r7, #16
 8002344:	46bd      	mov	sp, r7
 8002346:	bd80      	pop	{r7, pc}

08002348 <HAL_TIM_ConfigClockSource>:
 8002348:	b580      	push	{r7, lr}
 800234a:	b084      	sub	sp, #16
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
 8002350:	6039      	str	r1, [r7, #0]
 8002352:	2300      	movs	r3, #0
 8002354:	73fb      	strb	r3, [r7, #15]
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800235c:	2b01      	cmp	r3, #1
 800235e:	d101      	bne.n	8002364 <HAL_TIM_ConfigClockSource+0x1c>
 8002360:	2302      	movs	r3, #2
 8002362:	e0b4      	b.n	80024ce <HAL_TIM_ConfigClockSource+0x186>
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	2201      	movs	r2, #1
 8002368:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	2202      	movs	r2, #2
 8002370:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	689b      	ldr	r3, [r3, #8]
 800237a:	60bb      	str	r3, [r7, #8]
 800237c:	68bb      	ldr	r3, [r7, #8]
 800237e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002382:	60bb      	str	r3, [r7, #8]
 8002384:	68bb      	ldr	r3, [r7, #8]
 8002386:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800238a:	60bb      	str	r3, [r7, #8]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	68ba      	ldr	r2, [r7, #8]
 8002392:	609a      	str	r2, [r3, #8]
 8002394:	683b      	ldr	r3, [r7, #0]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800239c:	d03e      	beq.n	800241c <HAL_TIM_ConfigClockSource+0xd4>
 800239e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80023a2:	f200 8087 	bhi.w	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023a6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80023aa:	f000 8086 	beq.w	80024ba <HAL_TIM_ConfigClockSource+0x172>
 80023ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80023b2:	d87f      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023b4:	2b70      	cmp	r3, #112	; 0x70
 80023b6:	d01a      	beq.n	80023ee <HAL_TIM_ConfigClockSource+0xa6>
 80023b8:	2b70      	cmp	r3, #112	; 0x70
 80023ba:	d87b      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023bc:	2b60      	cmp	r3, #96	; 0x60
 80023be:	d050      	beq.n	8002462 <HAL_TIM_ConfigClockSource+0x11a>
 80023c0:	2b60      	cmp	r3, #96	; 0x60
 80023c2:	d877      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023c4:	2b50      	cmp	r3, #80	; 0x50
 80023c6:	d03c      	beq.n	8002442 <HAL_TIM_ConfigClockSource+0xfa>
 80023c8:	2b50      	cmp	r3, #80	; 0x50
 80023ca:	d873      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023cc:	2b40      	cmp	r3, #64	; 0x40
 80023ce:	d058      	beq.n	8002482 <HAL_TIM_ConfigClockSource+0x13a>
 80023d0:	2b40      	cmp	r3, #64	; 0x40
 80023d2:	d86f      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023d4:	2b30      	cmp	r3, #48	; 0x30
 80023d6:	d064      	beq.n	80024a2 <HAL_TIM_ConfigClockSource+0x15a>
 80023d8:	2b30      	cmp	r3, #48	; 0x30
 80023da:	d86b      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023dc:	2b20      	cmp	r3, #32
 80023de:	d060      	beq.n	80024a2 <HAL_TIM_ConfigClockSource+0x15a>
 80023e0:	2b20      	cmp	r3, #32
 80023e2:	d867      	bhi.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d05c      	beq.n	80024a2 <HAL_TIM_ConfigClockSource+0x15a>
 80023e8:	2b10      	cmp	r3, #16
 80023ea:	d05a      	beq.n	80024a2 <HAL_TIM_ConfigClockSource+0x15a>
 80023ec:	e062      	b.n	80024b4 <HAL_TIM_ConfigClockSource+0x16c>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	6818      	ldr	r0, [r3, #0]
 80023f2:	683b      	ldr	r3, [r7, #0]
 80023f4:	6899      	ldr	r1, [r3, #8]
 80023f6:	683b      	ldr	r3, [r7, #0]
 80023f8:	685a      	ldr	r2, [r3, #4]
 80023fa:	683b      	ldr	r3, [r7, #0]
 80023fc:	68db      	ldr	r3, [r3, #12]
 80023fe:	f000 f9b9 	bl	8002774 <TIM_ETR_SetConfig>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	689b      	ldr	r3, [r3, #8]
 8002408:	60bb      	str	r3, [r7, #8]
 800240a:	68bb      	ldr	r3, [r7, #8]
 800240c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002410:	60bb      	str	r3, [r7, #8]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	68ba      	ldr	r2, [r7, #8]
 8002418:	609a      	str	r2, [r3, #8]
 800241a:	e04f      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6818      	ldr	r0, [r3, #0]
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	6899      	ldr	r1, [r3, #8]
 8002424:	683b      	ldr	r3, [r7, #0]
 8002426:	685a      	ldr	r2, [r3, #4]
 8002428:	683b      	ldr	r3, [r7, #0]
 800242a:	68db      	ldr	r3, [r3, #12]
 800242c:	f000 f9a2 	bl	8002774 <TIM_ETR_SetConfig>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	689a      	ldr	r2, [r3, #8]
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800243e:	609a      	str	r2, [r3, #8]
 8002440:	e03c      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	6818      	ldr	r0, [r3, #0]
 8002446:	683b      	ldr	r3, [r7, #0]
 8002448:	6859      	ldr	r1, [r3, #4]
 800244a:	683b      	ldr	r3, [r7, #0]
 800244c:	68db      	ldr	r3, [r3, #12]
 800244e:	461a      	mov	r2, r3
 8002450:	f000 f916 	bl	8002680 <TIM_TI1_ConfigInputStage>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	2150      	movs	r1, #80	; 0x50
 800245a:	4618      	mov	r0, r3
 800245c:	f000 f96f 	bl	800273e <TIM_ITRx_SetConfig>
 8002460:	e02c      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	6818      	ldr	r0, [r3, #0]
 8002466:	683b      	ldr	r3, [r7, #0]
 8002468:	6859      	ldr	r1, [r3, #4]
 800246a:	683b      	ldr	r3, [r7, #0]
 800246c:	68db      	ldr	r3, [r3, #12]
 800246e:	461a      	mov	r2, r3
 8002470:	f000 f935 	bl	80026de <TIM_TI2_ConfigInputStage>
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	2160      	movs	r1, #96	; 0x60
 800247a:	4618      	mov	r0, r3
 800247c:	f000 f95f 	bl	800273e <TIM_ITRx_SetConfig>
 8002480:	e01c      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	6818      	ldr	r0, [r3, #0]
 8002486:	683b      	ldr	r3, [r7, #0]
 8002488:	6859      	ldr	r1, [r3, #4]
 800248a:	683b      	ldr	r3, [r7, #0]
 800248c:	68db      	ldr	r3, [r3, #12]
 800248e:	461a      	mov	r2, r3
 8002490:	f000 f8f6 	bl	8002680 <TIM_TI1_ConfigInputStage>
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	2140      	movs	r1, #64	; 0x40
 800249a:	4618      	mov	r0, r3
 800249c:	f000 f94f 	bl	800273e <TIM_ITRx_SetConfig>
 80024a0:	e00c      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	681a      	ldr	r2, [r3, #0]
 80024a6:	683b      	ldr	r3, [r7, #0]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	4619      	mov	r1, r3
 80024ac:	4610      	mov	r0, r2
 80024ae:	f000 f946 	bl	800273e <TIM_ITRx_SetConfig>
 80024b2:	e003      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 80024b4:	2301      	movs	r3, #1
 80024b6:	73fb      	strb	r3, [r7, #15]
 80024b8:	e000      	b.n	80024bc <HAL_TIM_ConfigClockSource+0x174>
 80024ba:	bf00      	nop
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	2201      	movs	r2, #1
 80024c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	2200      	movs	r2, #0
 80024c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024cc:	7bfb      	ldrb	r3, [r7, #15]
 80024ce:	4618      	mov	r0, r3
 80024d0:	3710      	adds	r7, #16
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bd80      	pop	{r7, pc}

080024d6 <HAL_TIM_OC_DelayElapsedCallback>:
 80024d6:	b480      	push	{r7}
 80024d8:	b083      	sub	sp, #12
 80024da:	af00      	add	r7, sp, #0
 80024dc:	6078      	str	r0, [r7, #4]
 80024de:	bf00      	nop
 80024e0:	370c      	adds	r7, #12
 80024e2:	46bd      	mov	sp, r7
 80024e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024e8:	4770      	bx	lr

080024ea <HAL_TIM_IC_CaptureCallback>:
 80024ea:	b480      	push	{r7}
 80024ec:	b083      	sub	sp, #12
 80024ee:	af00      	add	r7, sp, #0
 80024f0:	6078      	str	r0, [r7, #4]
 80024f2:	bf00      	nop
 80024f4:	370c      	adds	r7, #12
 80024f6:	46bd      	mov	sp, r7
 80024f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024fc:	4770      	bx	lr

080024fe <HAL_TIM_PWM_PulseFinishedCallback>:
 80024fe:	b480      	push	{r7}
 8002500:	b083      	sub	sp, #12
 8002502:	af00      	add	r7, sp, #0
 8002504:	6078      	str	r0, [r7, #4]
 8002506:	bf00      	nop
 8002508:	370c      	adds	r7, #12
 800250a:	46bd      	mov	sp, r7
 800250c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002510:	4770      	bx	lr

08002512 <HAL_TIM_TriggerCallback>:
 8002512:	b480      	push	{r7}
 8002514:	b083      	sub	sp, #12
 8002516:	af00      	add	r7, sp, #0
 8002518:	6078      	str	r0, [r7, #4]
 800251a:	bf00      	nop
 800251c:	370c      	adds	r7, #12
 800251e:	46bd      	mov	sp, r7
 8002520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002524:	4770      	bx	lr
	...

08002528 <TIM_Base_SetConfig>:
 8002528:	b480      	push	{r7}
 800252a:	b085      	sub	sp, #20
 800252c:	af00      	add	r7, sp, #0
 800252e:	6078      	str	r0, [r7, #4]
 8002530:	6039      	str	r1, [r7, #0]
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	60fb      	str	r3, [r7, #12]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	4a46      	ldr	r2, [pc, #280]	; (8002654 <TIM_Base_SetConfig+0x12c>)
 800253c:	4293      	cmp	r3, r2
 800253e:	d013      	beq.n	8002568 <TIM_Base_SetConfig+0x40>
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002546:	d00f      	beq.n	8002568 <TIM_Base_SetConfig+0x40>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	4a43      	ldr	r2, [pc, #268]	; (8002658 <TIM_Base_SetConfig+0x130>)
 800254c:	4293      	cmp	r3, r2
 800254e:	d00b      	beq.n	8002568 <TIM_Base_SetConfig+0x40>
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	4a42      	ldr	r2, [pc, #264]	; (800265c <TIM_Base_SetConfig+0x134>)
 8002554:	4293      	cmp	r3, r2
 8002556:	d007      	beq.n	8002568 <TIM_Base_SetConfig+0x40>
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	4a41      	ldr	r2, [pc, #260]	; (8002660 <TIM_Base_SetConfig+0x138>)
 800255c:	4293      	cmp	r3, r2
 800255e:	d003      	beq.n	8002568 <TIM_Base_SetConfig+0x40>
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	4a40      	ldr	r2, [pc, #256]	; (8002664 <TIM_Base_SetConfig+0x13c>)
 8002564:	4293      	cmp	r3, r2
 8002566:	d108      	bne.n	800257a <TIM_Base_SetConfig+0x52>
 8002568:	68fb      	ldr	r3, [r7, #12]
 800256a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800256e:	60fb      	str	r3, [r7, #12]
 8002570:	683b      	ldr	r3, [r7, #0]
 8002572:	685b      	ldr	r3, [r3, #4]
 8002574:	68fa      	ldr	r2, [r7, #12]
 8002576:	4313      	orrs	r3, r2
 8002578:	60fb      	str	r3, [r7, #12]
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	4a35      	ldr	r2, [pc, #212]	; (8002654 <TIM_Base_SetConfig+0x12c>)
 800257e:	4293      	cmp	r3, r2
 8002580:	d02b      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002588:	d027      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	4a32      	ldr	r2, [pc, #200]	; (8002658 <TIM_Base_SetConfig+0x130>)
 800258e:	4293      	cmp	r3, r2
 8002590:	d023      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	4a31      	ldr	r2, [pc, #196]	; (800265c <TIM_Base_SetConfig+0x134>)
 8002596:	4293      	cmp	r3, r2
 8002598:	d01f      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	4a30      	ldr	r2, [pc, #192]	; (8002660 <TIM_Base_SetConfig+0x138>)
 800259e:	4293      	cmp	r3, r2
 80025a0:	d01b      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	4a2f      	ldr	r2, [pc, #188]	; (8002664 <TIM_Base_SetConfig+0x13c>)
 80025a6:	4293      	cmp	r3, r2
 80025a8:	d017      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	4a2e      	ldr	r2, [pc, #184]	; (8002668 <TIM_Base_SetConfig+0x140>)
 80025ae:	4293      	cmp	r3, r2
 80025b0:	d013      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	4a2d      	ldr	r2, [pc, #180]	; (800266c <TIM_Base_SetConfig+0x144>)
 80025b6:	4293      	cmp	r3, r2
 80025b8:	d00f      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	4a2c      	ldr	r2, [pc, #176]	; (8002670 <TIM_Base_SetConfig+0x148>)
 80025be:	4293      	cmp	r3, r2
 80025c0:	d00b      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	4a2b      	ldr	r2, [pc, #172]	; (8002674 <TIM_Base_SetConfig+0x14c>)
 80025c6:	4293      	cmp	r3, r2
 80025c8:	d007      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	4a2a      	ldr	r2, [pc, #168]	; (8002678 <TIM_Base_SetConfig+0x150>)
 80025ce:	4293      	cmp	r3, r2
 80025d0:	d003      	beq.n	80025da <TIM_Base_SetConfig+0xb2>
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	4a29      	ldr	r2, [pc, #164]	; (800267c <TIM_Base_SetConfig+0x154>)
 80025d6:	4293      	cmp	r3, r2
 80025d8:	d108      	bne.n	80025ec <TIM_Base_SetConfig+0xc4>
 80025da:	68fb      	ldr	r3, [r7, #12]
 80025dc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80025e0:	60fb      	str	r3, [r7, #12]
 80025e2:	683b      	ldr	r3, [r7, #0]
 80025e4:	68db      	ldr	r3, [r3, #12]
 80025e6:	68fa      	ldr	r2, [r7, #12]
 80025e8:	4313      	orrs	r3, r2
 80025ea:	60fb      	str	r3, [r7, #12]
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80025f2:	683b      	ldr	r3, [r7, #0]
 80025f4:	695b      	ldr	r3, [r3, #20]
 80025f6:	4313      	orrs	r3, r2
 80025f8:	60fb      	str	r3, [r7, #12]
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	68fa      	ldr	r2, [r7, #12]
 80025fe:	601a      	str	r2, [r3, #0]
 8002600:	683b      	ldr	r3, [r7, #0]
 8002602:	689a      	ldr	r2, [r3, #8]
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	62da      	str	r2, [r3, #44]	; 0x2c
 8002608:	683b      	ldr	r3, [r7, #0]
 800260a:	681a      	ldr	r2, [r3, #0]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	629a      	str	r2, [r3, #40]	; 0x28
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	4a10      	ldr	r2, [pc, #64]	; (8002654 <TIM_Base_SetConfig+0x12c>)
 8002614:	4293      	cmp	r3, r2
 8002616:	d003      	beq.n	8002620 <TIM_Base_SetConfig+0xf8>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	4a12      	ldr	r2, [pc, #72]	; (8002664 <TIM_Base_SetConfig+0x13c>)
 800261c:	4293      	cmp	r3, r2
 800261e:	d103      	bne.n	8002628 <TIM_Base_SetConfig+0x100>
 8002620:	683b      	ldr	r3, [r7, #0]
 8002622:	691a      	ldr	r2, [r3, #16]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	631a      	str	r2, [r3, #48]	; 0x30
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	2201      	movs	r2, #1
 800262c:	615a      	str	r2, [r3, #20]
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	691b      	ldr	r3, [r3, #16]
 8002632:	f003 0301 	and.w	r3, r3, #1
 8002636:	2b01      	cmp	r3, #1
 8002638:	d105      	bne.n	8002646 <TIM_Base_SetConfig+0x11e>
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	691b      	ldr	r3, [r3, #16]
 800263e:	f023 0201 	bic.w	r2, r3, #1
 8002642:	687b      	ldr	r3, [r7, #4]
 8002644:	611a      	str	r2, [r3, #16]
 8002646:	bf00      	nop
 8002648:	3714      	adds	r7, #20
 800264a:	46bd      	mov	sp, r7
 800264c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002650:	4770      	bx	lr
 8002652:	bf00      	nop
 8002654:	40010000 	.word	0x40010000
 8002658:	40000400 	.word	0x40000400
 800265c:	40000800 	.word	0x40000800
 8002660:	40000c00 	.word	0x40000c00
 8002664:	40010400 	.word	0x40010400
 8002668:	40014000 	.word	0x40014000
 800266c:	40014400 	.word	0x40014400
 8002670:	40014800 	.word	0x40014800
 8002674:	40001800 	.word	0x40001800
 8002678:	40001c00 	.word	0x40001c00
 800267c:	40002000 	.word	0x40002000

08002680 <TIM_TI1_ConfigInputStage>:
 8002680:	b480      	push	{r7}
 8002682:	b087      	sub	sp, #28
 8002684:	af00      	add	r7, sp, #0
 8002686:	60f8      	str	r0, [r7, #12]
 8002688:	60b9      	str	r1, [r7, #8]
 800268a:	607a      	str	r2, [r7, #4]
 800268c:	68fb      	ldr	r3, [r7, #12]
 800268e:	6a1b      	ldr	r3, [r3, #32]
 8002690:	617b      	str	r3, [r7, #20]
 8002692:	68fb      	ldr	r3, [r7, #12]
 8002694:	6a1b      	ldr	r3, [r3, #32]
 8002696:	f023 0201 	bic.w	r2, r3, #1
 800269a:	68fb      	ldr	r3, [r7, #12]
 800269c:	621a      	str	r2, [r3, #32]
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	699b      	ldr	r3, [r3, #24]
 80026a2:	613b      	str	r3, [r7, #16]
 80026a4:	693b      	ldr	r3, [r7, #16]
 80026a6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80026aa:	613b      	str	r3, [r7, #16]
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	011b      	lsls	r3, r3, #4
 80026b0:	693a      	ldr	r2, [r7, #16]
 80026b2:	4313      	orrs	r3, r2
 80026b4:	613b      	str	r3, [r7, #16]
 80026b6:	697b      	ldr	r3, [r7, #20]
 80026b8:	f023 030a 	bic.w	r3, r3, #10
 80026bc:	617b      	str	r3, [r7, #20]
 80026be:	697a      	ldr	r2, [r7, #20]
 80026c0:	68bb      	ldr	r3, [r7, #8]
 80026c2:	4313      	orrs	r3, r2
 80026c4:	617b      	str	r3, [r7, #20]
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	693a      	ldr	r2, [r7, #16]
 80026ca:	619a      	str	r2, [r3, #24]
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	697a      	ldr	r2, [r7, #20]
 80026d0:	621a      	str	r2, [r3, #32]
 80026d2:	bf00      	nop
 80026d4:	371c      	adds	r7, #28
 80026d6:	46bd      	mov	sp, r7
 80026d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026dc:	4770      	bx	lr

080026de <TIM_TI2_ConfigInputStage>:
 80026de:	b480      	push	{r7}
 80026e0:	b087      	sub	sp, #28
 80026e2:	af00      	add	r7, sp, #0
 80026e4:	60f8      	str	r0, [r7, #12]
 80026e6:	60b9      	str	r1, [r7, #8]
 80026e8:	607a      	str	r2, [r7, #4]
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	6a1b      	ldr	r3, [r3, #32]
 80026ee:	617b      	str	r3, [r7, #20]
 80026f0:	68fb      	ldr	r3, [r7, #12]
 80026f2:	6a1b      	ldr	r3, [r3, #32]
 80026f4:	f023 0210 	bic.w	r2, r3, #16
 80026f8:	68fb      	ldr	r3, [r7, #12]
 80026fa:	621a      	str	r2, [r3, #32]
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	699b      	ldr	r3, [r3, #24]
 8002700:	613b      	str	r3, [r7, #16]
 8002702:	693b      	ldr	r3, [r7, #16]
 8002704:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002708:	613b      	str	r3, [r7, #16]
 800270a:	687b      	ldr	r3, [r7, #4]
 800270c:	031b      	lsls	r3, r3, #12
 800270e:	693a      	ldr	r2, [r7, #16]
 8002710:	4313      	orrs	r3, r2
 8002712:	613b      	str	r3, [r7, #16]
 8002714:	697b      	ldr	r3, [r7, #20]
 8002716:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800271a:	617b      	str	r3, [r7, #20]
 800271c:	68bb      	ldr	r3, [r7, #8]
 800271e:	011b      	lsls	r3, r3, #4
 8002720:	697a      	ldr	r2, [r7, #20]
 8002722:	4313      	orrs	r3, r2
 8002724:	617b      	str	r3, [r7, #20]
 8002726:	68fb      	ldr	r3, [r7, #12]
 8002728:	693a      	ldr	r2, [r7, #16]
 800272a:	619a      	str	r2, [r3, #24]
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	697a      	ldr	r2, [r7, #20]
 8002730:	621a      	str	r2, [r3, #32]
 8002732:	bf00      	nop
 8002734:	371c      	adds	r7, #28
 8002736:	46bd      	mov	sp, r7
 8002738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800273c:	4770      	bx	lr

0800273e <TIM_ITRx_SetConfig>:
 800273e:	b480      	push	{r7}
 8002740:	b085      	sub	sp, #20
 8002742:	af00      	add	r7, sp, #0
 8002744:	6078      	str	r0, [r7, #4]
 8002746:	6039      	str	r1, [r7, #0]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	689b      	ldr	r3, [r3, #8]
 800274c:	60fb      	str	r3, [r7, #12]
 800274e:	68fb      	ldr	r3, [r7, #12]
 8002750:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002754:	60fb      	str	r3, [r7, #12]
 8002756:	683a      	ldr	r2, [r7, #0]
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	4313      	orrs	r3, r2
 800275c:	f043 0307 	orr.w	r3, r3, #7
 8002760:	60fb      	str	r3, [r7, #12]
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	68fa      	ldr	r2, [r7, #12]
 8002766:	609a      	str	r2, [r3, #8]
 8002768:	bf00      	nop
 800276a:	3714      	adds	r7, #20
 800276c:	46bd      	mov	sp, r7
 800276e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002772:	4770      	bx	lr

08002774 <TIM_ETR_SetConfig>:
 8002774:	b480      	push	{r7}
 8002776:	b087      	sub	sp, #28
 8002778:	af00      	add	r7, sp, #0
 800277a:	60f8      	str	r0, [r7, #12]
 800277c:	60b9      	str	r1, [r7, #8]
 800277e:	607a      	str	r2, [r7, #4]
 8002780:	603b      	str	r3, [r7, #0]
 8002782:	68fb      	ldr	r3, [r7, #12]
 8002784:	689b      	ldr	r3, [r3, #8]
 8002786:	617b      	str	r3, [r7, #20]
 8002788:	697b      	ldr	r3, [r7, #20]
 800278a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800278e:	617b      	str	r3, [r7, #20]
 8002790:	683b      	ldr	r3, [r7, #0]
 8002792:	021a      	lsls	r2, r3, #8
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	431a      	orrs	r2, r3
 8002798:	68bb      	ldr	r3, [r7, #8]
 800279a:	4313      	orrs	r3, r2
 800279c:	697a      	ldr	r2, [r7, #20]
 800279e:	4313      	orrs	r3, r2
 80027a0:	617b      	str	r3, [r7, #20]
 80027a2:	68fb      	ldr	r3, [r7, #12]
 80027a4:	697a      	ldr	r2, [r7, #20]
 80027a6:	609a      	str	r2, [r3, #8]
 80027a8:	bf00      	nop
 80027aa:	371c      	adds	r7, #28
 80027ac:	46bd      	mov	sp, r7
 80027ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027b2:	4770      	bx	lr

080027b4 <HAL_TIMEx_MasterConfigSynchronization>:
 80027b4:	b480      	push	{r7}
 80027b6:	b085      	sub	sp, #20
 80027b8:	af00      	add	r7, sp, #0
 80027ba:	6078      	str	r0, [r7, #4]
 80027bc:	6039      	str	r1, [r7, #0]
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80027c4:	2b01      	cmp	r3, #1
 80027c6:	d101      	bne.n	80027cc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80027c8:	2302      	movs	r3, #2
 80027ca:	e05a      	b.n	8002882 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	2201      	movs	r2, #1
 80027d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	2202      	movs	r2, #2
 80027d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027dc:	687b      	ldr	r3, [r7, #4]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	685b      	ldr	r3, [r3, #4]
 80027e2:	60fb      	str	r3, [r7, #12]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	689b      	ldr	r3, [r3, #8]
 80027ea:	60bb      	str	r3, [r7, #8]
 80027ec:	68fb      	ldr	r3, [r7, #12]
 80027ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80027f2:	60fb      	str	r3, [r7, #12]
 80027f4:	683b      	ldr	r3, [r7, #0]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	68fa      	ldr	r2, [r7, #12]
 80027fa:	4313      	orrs	r3, r2
 80027fc:	60fb      	str	r3, [r7, #12]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	68fa      	ldr	r2, [r7, #12]
 8002804:	605a      	str	r2, [r3, #4]
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	4a21      	ldr	r2, [pc, #132]	; (8002890 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800280c:	4293      	cmp	r3, r2
 800280e:	d022      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002818:	d01d      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	4a1d      	ldr	r2, [pc, #116]	; (8002894 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8002820:	4293      	cmp	r3, r2
 8002822:	d018      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	4a1b      	ldr	r2, [pc, #108]	; (8002898 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800282a:	4293      	cmp	r3, r2
 800282c:	d013      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	4a1a      	ldr	r2, [pc, #104]	; (800289c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8002834:	4293      	cmp	r3, r2
 8002836:	d00e      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	4a18      	ldr	r2, [pc, #96]	; (80028a0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800283e:	4293      	cmp	r3, r2
 8002840:	d009      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	4a17      	ldr	r2, [pc, #92]	; (80028a4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8002848:	4293      	cmp	r3, r2
 800284a:	d004      	beq.n	8002856 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	4a15      	ldr	r2, [pc, #84]	; (80028a8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8002852:	4293      	cmp	r3, r2
 8002854:	d10c      	bne.n	8002870 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8002856:	68bb      	ldr	r3, [r7, #8]
 8002858:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800285c:	60bb      	str	r3, [r7, #8]
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	685b      	ldr	r3, [r3, #4]
 8002862:	68ba      	ldr	r2, [r7, #8]
 8002864:	4313      	orrs	r3, r2
 8002866:	60bb      	str	r3, [r7, #8]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	68ba      	ldr	r2, [r7, #8]
 800286e:	609a      	str	r2, [r3, #8]
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	2201      	movs	r2, #1
 8002874:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	2200      	movs	r2, #0
 800287c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002880:	2300      	movs	r3, #0
 8002882:	4618      	mov	r0, r3
 8002884:	3714      	adds	r7, #20
 8002886:	46bd      	mov	sp, r7
 8002888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800288c:	4770      	bx	lr
 800288e:	bf00      	nop
 8002890:	40010000 	.word	0x40010000
 8002894:	40000400 	.word	0x40000400
 8002898:	40000800 	.word	0x40000800
 800289c:	40000c00 	.word	0x40000c00
 80028a0:	40010400 	.word	0x40010400
 80028a4:	40014000 	.word	0x40014000
 80028a8:	40001800 	.word	0x40001800

080028ac <HAL_TIMEx_CommutCallback>:
 80028ac:	b480      	push	{r7}
 80028ae:	b083      	sub	sp, #12
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	6078      	str	r0, [r7, #4]
 80028b4:	bf00      	nop
 80028b6:	370c      	adds	r7, #12
 80028b8:	46bd      	mov	sp, r7
 80028ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028be:	4770      	bx	lr

080028c0 <HAL_TIMEx_BreakCallback>:
 80028c0:	b480      	push	{r7}
 80028c2:	b083      	sub	sp, #12
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	bf00      	nop
 80028ca:	370c      	adds	r7, #12
 80028cc:	46bd      	mov	sp, r7
 80028ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d2:	4770      	bx	lr

080028d4 <__NVIC_SetPriority>:
 80028d4:	b480      	push	{r7}
 80028d6:	b083      	sub	sp, #12
 80028d8:	af00      	add	r7, sp, #0
 80028da:	4603      	mov	r3, r0
 80028dc:	6039      	str	r1, [r7, #0]
 80028de:	71fb      	strb	r3, [r7, #7]
 80028e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	db0a      	blt.n	80028fe <__NVIC_SetPriority+0x2a>
 80028e8:	683b      	ldr	r3, [r7, #0]
 80028ea:	b2da      	uxtb	r2, r3
 80028ec:	490c      	ldr	r1, [pc, #48]	; (8002920 <__NVIC_SetPriority+0x4c>)
 80028ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80028f2:	0112      	lsls	r2, r2, #4
 80028f4:	b2d2      	uxtb	r2, r2
 80028f6:	440b      	add	r3, r1
 80028f8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80028fc:	e00a      	b.n	8002914 <__NVIC_SetPriority+0x40>
 80028fe:	683b      	ldr	r3, [r7, #0]
 8002900:	b2da      	uxtb	r2, r3
 8002902:	4908      	ldr	r1, [pc, #32]	; (8002924 <__NVIC_SetPriority+0x50>)
 8002904:	79fb      	ldrb	r3, [r7, #7]
 8002906:	f003 030f 	and.w	r3, r3, #15
 800290a:	3b04      	subs	r3, #4
 800290c:	0112      	lsls	r2, r2, #4
 800290e:	b2d2      	uxtb	r2, r2
 8002910:	440b      	add	r3, r1
 8002912:	761a      	strb	r2, [r3, #24]
 8002914:	bf00      	nop
 8002916:	370c      	adds	r7, #12
 8002918:	46bd      	mov	sp, r7
 800291a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291e:	4770      	bx	lr
 8002920:	e000e100 	.word	0xe000e100
 8002924:	e000ed00 	.word	0xe000ed00

08002928 <SysTick_Handler>:
 8002928:	b580      	push	{r7, lr}
 800292a:	af00      	add	r7, sp, #0
 800292c:	4b05      	ldr	r3, [pc, #20]	; (8002944 <SysTick_Handler+0x1c>)
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	f002 ff3e 	bl	80057b0 <xTaskGetSchedulerState>
 8002934:	4603      	mov	r3, r0
 8002936:	2b01      	cmp	r3, #1
 8002938:	d001      	beq.n	800293e <SysTick_Handler+0x16>
 800293a:	f003 fe5d 	bl	80065f8 <xPortSysTickHandler>
 800293e:	bf00      	nop
 8002940:	bd80      	pop	{r7, pc}
 8002942:	bf00      	nop
 8002944:	e000e010 	.word	0xe000e010

08002948 <SVC_Setup>:
 8002948:	b580      	push	{r7, lr}
 800294a:	af00      	add	r7, sp, #0
 800294c:	2100      	movs	r1, #0
 800294e:	f06f 0004 	mvn.w	r0, #4
 8002952:	f7ff ffbf 	bl	80028d4 <__NVIC_SetPriority>
 8002956:	bf00      	nop
 8002958:	bd80      	pop	{r7, pc}
	...

0800295c <osKernelInitialize>:
 800295c:	b480      	push	{r7}
 800295e:	b083      	sub	sp, #12
 8002960:	af00      	add	r7, sp, #0
 8002962:	f3ef 8305 	mrs	r3, IPSR
 8002966:	603b      	str	r3, [r7, #0]
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	2b00      	cmp	r3, #0
 800296c:	d003      	beq.n	8002976 <osKernelInitialize+0x1a>
 800296e:	f06f 0305 	mvn.w	r3, #5
 8002972:	607b      	str	r3, [r7, #4]
 8002974:	e00c      	b.n	8002990 <osKernelInitialize+0x34>
 8002976:	4b0a      	ldr	r3, [pc, #40]	; (80029a0 <osKernelInitialize+0x44>)
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d105      	bne.n	800298a <osKernelInitialize+0x2e>
 800297e:	4b08      	ldr	r3, [pc, #32]	; (80029a0 <osKernelInitialize+0x44>)
 8002980:	2201      	movs	r2, #1
 8002982:	601a      	str	r2, [r3, #0]
 8002984:	2300      	movs	r3, #0
 8002986:	607b      	str	r3, [r7, #4]
 8002988:	e002      	b.n	8002990 <osKernelInitialize+0x34>
 800298a:	f04f 33ff 	mov.w	r3, #4294967295
 800298e:	607b      	str	r3, [r7, #4]
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	4618      	mov	r0, r3
 8002994:	370c      	adds	r7, #12
 8002996:	46bd      	mov	sp, r7
 8002998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800299c:	4770      	bx	lr
 800299e:	bf00      	nop
 80029a0:	200001c0 	.word	0x200001c0

080029a4 <osKernelStart>:
 80029a4:	b580      	push	{r7, lr}
 80029a6:	b082      	sub	sp, #8
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	f3ef 8305 	mrs	r3, IPSR
 80029ae:	603b      	str	r3, [r7, #0]
 80029b0:	683b      	ldr	r3, [r7, #0]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	d003      	beq.n	80029be <osKernelStart+0x1a>
 80029b6:	f06f 0305 	mvn.w	r3, #5
 80029ba:	607b      	str	r3, [r7, #4]
 80029bc:	e010      	b.n	80029e0 <osKernelStart+0x3c>
 80029be:	4b0b      	ldr	r3, [pc, #44]	; (80029ec <osKernelStart+0x48>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	2b01      	cmp	r3, #1
 80029c4:	d109      	bne.n	80029da <osKernelStart+0x36>
 80029c6:	f7ff ffbf 	bl	8002948 <SVC_Setup>
 80029ca:	4b08      	ldr	r3, [pc, #32]	; (80029ec <osKernelStart+0x48>)
 80029cc:	2202      	movs	r2, #2
 80029ce:	601a      	str	r2, [r3, #0]
 80029d0:	f002 f9f4 	bl	8004dbc <vTaskStartScheduler>
 80029d4:	2300      	movs	r3, #0
 80029d6:	607b      	str	r3, [r7, #4]
 80029d8:	e002      	b.n	80029e0 <osKernelStart+0x3c>
 80029da:	f04f 33ff 	mov.w	r3, #4294967295
 80029de:	607b      	str	r3, [r7, #4]
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	4618      	mov	r0, r3
 80029e4:	3708      	adds	r7, #8
 80029e6:	46bd      	mov	sp, r7
 80029e8:	bd80      	pop	{r7, pc}
 80029ea:	bf00      	nop
 80029ec:	200001c0 	.word	0x200001c0

080029f0 <osThreadNew>:
 80029f0:	b580      	push	{r7, lr}
 80029f2:	b08e      	sub	sp, #56	; 0x38
 80029f4:	af04      	add	r7, sp, #16
 80029f6:	60f8      	str	r0, [r7, #12]
 80029f8:	60b9      	str	r1, [r7, #8]
 80029fa:	607a      	str	r2, [r7, #4]
 80029fc:	2300      	movs	r3, #0
 80029fe:	613b      	str	r3, [r7, #16]
 8002a00:	f3ef 8305 	mrs	r3, IPSR
 8002a04:	617b      	str	r3, [r7, #20]
 8002a06:	697b      	ldr	r3, [r7, #20]
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d17e      	bne.n	8002b0a <osThreadNew+0x11a>
 8002a0c:	68fb      	ldr	r3, [r7, #12]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d07b      	beq.n	8002b0a <osThreadNew+0x11a>
 8002a12:	2380      	movs	r3, #128	; 0x80
 8002a14:	623b      	str	r3, [r7, #32]
 8002a16:	2318      	movs	r3, #24
 8002a18:	61fb      	str	r3, [r7, #28]
 8002a1a:	2300      	movs	r3, #0
 8002a1c:	627b      	str	r3, [r7, #36]	; 0x24
 8002a1e:	f04f 33ff 	mov.w	r3, #4294967295
 8002a22:	61bb      	str	r3, [r7, #24]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d045      	beq.n	8002ab6 <osThreadNew+0xc6>
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d002      	beq.n	8002a38 <osThreadNew+0x48>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	627b      	str	r3, [r7, #36]	; 0x24
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	699b      	ldr	r3, [r3, #24]
 8002a3c:	2b00      	cmp	r3, #0
 8002a3e:	d002      	beq.n	8002a46 <osThreadNew+0x56>
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	699b      	ldr	r3, [r3, #24]
 8002a44:	61fb      	str	r3, [r7, #28]
 8002a46:	69fb      	ldr	r3, [r7, #28]
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d008      	beq.n	8002a5e <osThreadNew+0x6e>
 8002a4c:	69fb      	ldr	r3, [r7, #28]
 8002a4e:	2b38      	cmp	r3, #56	; 0x38
 8002a50:	d805      	bhi.n	8002a5e <osThreadNew+0x6e>
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	685b      	ldr	r3, [r3, #4]
 8002a56:	f003 0301 	and.w	r3, r3, #1
 8002a5a:	2b00      	cmp	r3, #0
 8002a5c:	d001      	beq.n	8002a62 <osThreadNew+0x72>
 8002a5e:	2300      	movs	r3, #0
 8002a60:	e054      	b.n	8002b0c <osThreadNew+0x11c>
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	695b      	ldr	r3, [r3, #20]
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d003      	beq.n	8002a72 <osThreadNew+0x82>
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	695b      	ldr	r3, [r3, #20]
 8002a6e:	089b      	lsrs	r3, r3, #2
 8002a70:	623b      	str	r3, [r7, #32]
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	689b      	ldr	r3, [r3, #8]
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d00e      	beq.n	8002a98 <osThreadNew+0xa8>
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	68db      	ldr	r3, [r3, #12]
 8002a7e:	2ba7      	cmp	r3, #167	; 0xa7
 8002a80:	d90a      	bls.n	8002a98 <osThreadNew+0xa8>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	691b      	ldr	r3, [r3, #16]
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d006      	beq.n	8002a98 <osThreadNew+0xa8>
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	695b      	ldr	r3, [r3, #20]
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d002      	beq.n	8002a98 <osThreadNew+0xa8>
 8002a92:	2301      	movs	r3, #1
 8002a94:	61bb      	str	r3, [r7, #24]
 8002a96:	e010      	b.n	8002aba <osThreadNew+0xca>
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	689b      	ldr	r3, [r3, #8]
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d10c      	bne.n	8002aba <osThreadNew+0xca>
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	68db      	ldr	r3, [r3, #12]
 8002aa4:	2b00      	cmp	r3, #0
 8002aa6:	d108      	bne.n	8002aba <osThreadNew+0xca>
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	691b      	ldr	r3, [r3, #16]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d104      	bne.n	8002aba <osThreadNew+0xca>
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	61bb      	str	r3, [r7, #24]
 8002ab4:	e001      	b.n	8002aba <osThreadNew+0xca>
 8002ab6:	2300      	movs	r3, #0
 8002ab8:	61bb      	str	r3, [r7, #24]
 8002aba:	69bb      	ldr	r3, [r7, #24]
 8002abc:	2b01      	cmp	r3, #1
 8002abe:	d110      	bne.n	8002ae2 <osThreadNew+0xf2>
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	691b      	ldr	r3, [r3, #16]
 8002ac4:	687a      	ldr	r2, [r7, #4]
 8002ac6:	6892      	ldr	r2, [r2, #8]
 8002ac8:	9202      	str	r2, [sp, #8]
 8002aca:	9301      	str	r3, [sp, #4]
 8002acc:	69fb      	ldr	r3, [r7, #28]
 8002ace:	9300      	str	r3, [sp, #0]
 8002ad0:	68bb      	ldr	r3, [r7, #8]
 8002ad2:	6a3a      	ldr	r2, [r7, #32]
 8002ad4:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002ad6:	68f8      	ldr	r0, [r7, #12]
 8002ad8:	f001 ffb8 	bl	8004a4c <xTaskCreateStatic>
 8002adc:	4603      	mov	r3, r0
 8002ade:	613b      	str	r3, [r7, #16]
 8002ae0:	e013      	b.n	8002b0a <osThreadNew+0x11a>
 8002ae2:	69bb      	ldr	r3, [r7, #24]
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	d110      	bne.n	8002b0a <osThreadNew+0x11a>
 8002ae8:	6a3b      	ldr	r3, [r7, #32]
 8002aea:	b29a      	uxth	r2, r3
 8002aec:	f107 0310 	add.w	r3, r7, #16
 8002af0:	9301      	str	r3, [sp, #4]
 8002af2:	69fb      	ldr	r3, [r7, #28]
 8002af4:	9300      	str	r3, [sp, #0]
 8002af6:	68bb      	ldr	r3, [r7, #8]
 8002af8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002afa:	68f8      	ldr	r0, [r7, #12]
 8002afc:	f002 f803 	bl	8004b06 <xTaskCreate>
 8002b00:	4603      	mov	r3, r0
 8002b02:	2b01      	cmp	r3, #1
 8002b04:	d001      	beq.n	8002b0a <osThreadNew+0x11a>
 8002b06:	2300      	movs	r3, #0
 8002b08:	613b      	str	r3, [r7, #16]
 8002b0a:	693b      	ldr	r3, [r7, #16]
 8002b0c:	4618      	mov	r0, r3
 8002b0e:	3728      	adds	r7, #40	; 0x28
 8002b10:	46bd      	mov	sp, r7
 8002b12:	bd80      	pop	{r7, pc}

08002b14 <osEventFlagsNew>:
 8002b14:	b580      	push	{r7, lr}
 8002b16:	b086      	sub	sp, #24
 8002b18:	af00      	add	r7, sp, #0
 8002b1a:	6078      	str	r0, [r7, #4]
 8002b1c:	2300      	movs	r3, #0
 8002b1e:	617b      	str	r3, [r7, #20]
 8002b20:	f3ef 8305 	mrs	r3, IPSR
 8002b24:	60fb      	str	r3, [r7, #12]
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	2b00      	cmp	r3, #0
 8002b2a:	d12d      	bne.n	8002b88 <osEventFlagsNew+0x74>
 8002b2c:	f04f 33ff 	mov.w	r3, #4294967295
 8002b30:	613b      	str	r3, [r7, #16]
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	2b00      	cmp	r3, #0
 8002b36:	d015      	beq.n	8002b64 <osEventFlagsNew+0x50>
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	689b      	ldr	r3, [r3, #8]
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	d006      	beq.n	8002b4e <osEventFlagsNew+0x3a>
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	68db      	ldr	r3, [r3, #12]
 8002b44:	2b1f      	cmp	r3, #31
 8002b46:	d902      	bls.n	8002b4e <osEventFlagsNew+0x3a>
 8002b48:	2301      	movs	r3, #1
 8002b4a:	613b      	str	r3, [r7, #16]
 8002b4c:	e00c      	b.n	8002b68 <osEventFlagsNew+0x54>
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	689b      	ldr	r3, [r3, #8]
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d108      	bne.n	8002b68 <osEventFlagsNew+0x54>
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	68db      	ldr	r3, [r3, #12]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d104      	bne.n	8002b68 <osEventFlagsNew+0x54>
 8002b5e:	2300      	movs	r3, #0
 8002b60:	613b      	str	r3, [r7, #16]
 8002b62:	e001      	b.n	8002b68 <osEventFlagsNew+0x54>
 8002b64:	2300      	movs	r3, #0
 8002b66:	613b      	str	r3, [r7, #16]
 8002b68:	693b      	ldr	r3, [r7, #16]
 8002b6a:	2b01      	cmp	r3, #1
 8002b6c:	d106      	bne.n	8002b7c <osEventFlagsNew+0x68>
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	689b      	ldr	r3, [r3, #8]
 8002b72:	4618      	mov	r0, r3
 8002b74:	f000 fc82 	bl	800347c <xEventGroupCreateStatic>
 8002b78:	6178      	str	r0, [r7, #20]
 8002b7a:	e005      	b.n	8002b88 <osEventFlagsNew+0x74>
 8002b7c:	693b      	ldr	r3, [r7, #16]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d102      	bne.n	8002b88 <osEventFlagsNew+0x74>
 8002b82:	f000 fcb2 	bl	80034ea <xEventGroupCreate>
 8002b86:	6178      	str	r0, [r7, #20]
 8002b88:	697b      	ldr	r3, [r7, #20]
 8002b8a:	4618      	mov	r0, r3
 8002b8c:	3718      	adds	r7, #24
 8002b8e:	46bd      	mov	sp, r7
 8002b90:	bd80      	pop	{r7, pc}
	...

08002b94 <osEventFlagsSet>:
 8002b94:	b580      	push	{r7, lr}
 8002b96:	b086      	sub	sp, #24
 8002b98:	af00      	add	r7, sp, #0
 8002b9a:	6078      	str	r0, [r7, #4]
 8002b9c:	6039      	str	r1, [r7, #0]
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	613b      	str	r3, [r7, #16]
 8002ba2:	693b      	ldr	r3, [r7, #16]
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d004      	beq.n	8002bb2 <osEventFlagsSet+0x1e>
 8002ba8:	683b      	ldr	r3, [r7, #0]
 8002baa:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d003      	beq.n	8002bba <osEventFlagsSet+0x26>
 8002bb2:	f06f 0303 	mvn.w	r3, #3
 8002bb6:	617b      	str	r3, [r7, #20]
 8002bb8:	e028      	b.n	8002c0c <osEventFlagsSet+0x78>
 8002bba:	f3ef 8305 	mrs	r3, IPSR
 8002bbe:	60fb      	str	r3, [r7, #12]
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d01d      	beq.n	8002c02 <osEventFlagsSet+0x6e>
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	60bb      	str	r3, [r7, #8]
 8002bca:	f107 0308 	add.w	r3, r7, #8
 8002bce:	461a      	mov	r2, r3
 8002bd0:	6839      	ldr	r1, [r7, #0]
 8002bd2:	6938      	ldr	r0, [r7, #16]
 8002bd4:	f000 feaa 	bl	800392c <xEventGroupSetBitsFromISR>
 8002bd8:	4603      	mov	r3, r0
 8002bda:	2b00      	cmp	r3, #0
 8002bdc:	d103      	bne.n	8002be6 <osEventFlagsSet+0x52>
 8002bde:	f06f 0302 	mvn.w	r3, #2
 8002be2:	617b      	str	r3, [r7, #20]
 8002be4:	e012      	b.n	8002c0c <osEventFlagsSet+0x78>
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	617b      	str	r3, [r7, #20]
 8002bea:	68bb      	ldr	r3, [r7, #8]
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d00d      	beq.n	8002c0c <osEventFlagsSet+0x78>
 8002bf0:	4b09      	ldr	r3, [pc, #36]	; (8002c18 <osEventFlagsSet+0x84>)
 8002bf2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002bf6:	601a      	str	r2, [r3, #0]
 8002bf8:	f3bf 8f4f 	dsb	sy
 8002bfc:	f3bf 8f6f 	isb	sy
 8002c00:	e004      	b.n	8002c0c <osEventFlagsSet+0x78>
 8002c02:	6839      	ldr	r1, [r7, #0]
 8002c04:	6938      	ldr	r0, [r7, #16]
 8002c06:	f000 fdc9 	bl	800379c <xEventGroupSetBits>
 8002c0a:	6178      	str	r0, [r7, #20]
 8002c0c:	697b      	ldr	r3, [r7, #20]
 8002c0e:	4618      	mov	r0, r3
 8002c10:	3718      	adds	r7, #24
 8002c12:	46bd      	mov	sp, r7
 8002c14:	bd80      	pop	{r7, pc}
 8002c16:	bf00      	nop
 8002c18:	e000ed04 	.word	0xe000ed04

08002c1c <osEventFlagsClear>:
 8002c1c:	b580      	push	{r7, lr}
 8002c1e:	b086      	sub	sp, #24
 8002c20:	af00      	add	r7, sp, #0
 8002c22:	6078      	str	r0, [r7, #4]
 8002c24:	6039      	str	r1, [r7, #0]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	613b      	str	r3, [r7, #16]
 8002c2a:	693b      	ldr	r3, [r7, #16]
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d004      	beq.n	8002c3a <osEventFlagsClear+0x1e>
 8002c30:	683b      	ldr	r3, [r7, #0]
 8002c32:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d003      	beq.n	8002c42 <osEventFlagsClear+0x26>
 8002c3a:	f06f 0303 	mvn.w	r3, #3
 8002c3e:	617b      	str	r3, [r7, #20]
 8002c40:	e019      	b.n	8002c76 <osEventFlagsClear+0x5a>
 8002c42:	f3ef 8305 	mrs	r3, IPSR
 8002c46:	60fb      	str	r3, [r7, #12]
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d00e      	beq.n	8002c6c <osEventFlagsClear+0x50>
 8002c4e:	6938      	ldr	r0, [r7, #16]
 8002c50:	f000 fd80 	bl	8003754 <xEventGroupGetBitsFromISR>
 8002c54:	6178      	str	r0, [r7, #20]
 8002c56:	6839      	ldr	r1, [r7, #0]
 8002c58:	6938      	ldr	r0, [r7, #16]
 8002c5a:	f000 fd67 	bl	800372c <xEventGroupClearBitsFromISR>
 8002c5e:	4603      	mov	r3, r0
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d108      	bne.n	8002c76 <osEventFlagsClear+0x5a>
 8002c64:	f06f 0302 	mvn.w	r3, #2
 8002c68:	617b      	str	r3, [r7, #20]
 8002c6a:	e004      	b.n	8002c76 <osEventFlagsClear+0x5a>
 8002c6c:	6839      	ldr	r1, [r7, #0]
 8002c6e:	6938      	ldr	r0, [r7, #16]
 8002c70:	f000 fd24 	bl	80036bc <xEventGroupClearBits>
 8002c74:	6178      	str	r0, [r7, #20]
 8002c76:	697b      	ldr	r3, [r7, #20]
 8002c78:	4618      	mov	r0, r3
 8002c7a:	3718      	adds	r7, #24
 8002c7c:	46bd      	mov	sp, r7
 8002c7e:	bd80      	pop	{r7, pc}

08002c80 <osEventFlagsWait>:
 8002c80:	b580      	push	{r7, lr}
 8002c82:	b08c      	sub	sp, #48	; 0x30
 8002c84:	af02      	add	r7, sp, #8
 8002c86:	60f8      	str	r0, [r7, #12]
 8002c88:	60b9      	str	r1, [r7, #8]
 8002c8a:	607a      	str	r2, [r7, #4]
 8002c8c:	603b      	str	r3, [r7, #0]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	61bb      	str	r3, [r7, #24]
 8002c92:	69bb      	ldr	r3, [r7, #24]
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d004      	beq.n	8002ca2 <osEventFlagsWait+0x22>
 8002c98:	68bb      	ldr	r3, [r7, #8]
 8002c9a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	d003      	beq.n	8002caa <osEventFlagsWait+0x2a>
 8002ca2:	f06f 0303 	mvn.w	r3, #3
 8002ca6:	61fb      	str	r3, [r7, #28]
 8002ca8:	e04b      	b.n	8002d42 <osEventFlagsWait+0xc2>
 8002caa:	f3ef 8305 	mrs	r3, IPSR
 8002cae:	617b      	str	r3, [r7, #20]
 8002cb0:	697b      	ldr	r3, [r7, #20]
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d003      	beq.n	8002cbe <osEventFlagsWait+0x3e>
 8002cb6:	f06f 0305 	mvn.w	r3, #5
 8002cba:	61fb      	str	r3, [r7, #28]
 8002cbc:	e041      	b.n	8002d42 <osEventFlagsWait+0xc2>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	f003 0301 	and.w	r3, r3, #1
 8002cc4:	2b00      	cmp	r3, #0
 8002cc6:	d002      	beq.n	8002cce <osEventFlagsWait+0x4e>
 8002cc8:	2301      	movs	r3, #1
 8002cca:	627b      	str	r3, [r7, #36]	; 0x24
 8002ccc:	e001      	b.n	8002cd2 <osEventFlagsWait+0x52>
 8002cce:	2300      	movs	r3, #0
 8002cd0:	627b      	str	r3, [r7, #36]	; 0x24
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	f003 0302 	and.w	r3, r3, #2
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d002      	beq.n	8002ce2 <osEventFlagsWait+0x62>
 8002cdc:	2300      	movs	r3, #0
 8002cde:	623b      	str	r3, [r7, #32]
 8002ce0:	e001      	b.n	8002ce6 <osEventFlagsWait+0x66>
 8002ce2:	2301      	movs	r3, #1
 8002ce4:	623b      	str	r3, [r7, #32]
 8002ce6:	683b      	ldr	r3, [r7, #0]
 8002ce8:	9300      	str	r3, [sp, #0]
 8002cea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cec:	6a3a      	ldr	r2, [r7, #32]
 8002cee:	68b9      	ldr	r1, [r7, #8]
 8002cf0:	69b8      	ldr	r0, [r7, #24]
 8002cf2:	f000 fc15 	bl	8003520 <xEventGroupWaitBits>
 8002cf6:	61f8      	str	r0, [r7, #28]
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	f003 0301 	and.w	r3, r3, #1
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d010      	beq.n	8002d24 <osEventFlagsWait+0xa4>
 8002d02:	68ba      	ldr	r2, [r7, #8]
 8002d04:	69fb      	ldr	r3, [r7, #28]
 8002d06:	4013      	ands	r3, r2
 8002d08:	68ba      	ldr	r2, [r7, #8]
 8002d0a:	429a      	cmp	r2, r3
 8002d0c:	d019      	beq.n	8002d42 <osEventFlagsWait+0xc2>
 8002d0e:	683b      	ldr	r3, [r7, #0]
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d003      	beq.n	8002d1c <osEventFlagsWait+0x9c>
 8002d14:	f06f 0301 	mvn.w	r3, #1
 8002d18:	61fb      	str	r3, [r7, #28]
 8002d1a:	e012      	b.n	8002d42 <osEventFlagsWait+0xc2>
 8002d1c:	f06f 0302 	mvn.w	r3, #2
 8002d20:	61fb      	str	r3, [r7, #28]
 8002d22:	e00e      	b.n	8002d42 <osEventFlagsWait+0xc2>
 8002d24:	68ba      	ldr	r2, [r7, #8]
 8002d26:	69fb      	ldr	r3, [r7, #28]
 8002d28:	4013      	ands	r3, r2
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d109      	bne.n	8002d42 <osEventFlagsWait+0xc2>
 8002d2e:	683b      	ldr	r3, [r7, #0]
 8002d30:	2b00      	cmp	r3, #0
 8002d32:	d003      	beq.n	8002d3c <osEventFlagsWait+0xbc>
 8002d34:	f06f 0301 	mvn.w	r3, #1
 8002d38:	61fb      	str	r3, [r7, #28]
 8002d3a:	e002      	b.n	8002d42 <osEventFlagsWait+0xc2>
 8002d3c:	f06f 0302 	mvn.w	r3, #2
 8002d40:	61fb      	str	r3, [r7, #28]
 8002d42:	69fb      	ldr	r3, [r7, #28]
 8002d44:	4618      	mov	r0, r3
 8002d46:	3728      	adds	r7, #40	; 0x28
 8002d48:	46bd      	mov	sp, r7
 8002d4a:	bd80      	pop	{r7, pc}

08002d4c <osMessageQueueNew>:
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b08a      	sub	sp, #40	; 0x28
 8002d50:	af02      	add	r7, sp, #8
 8002d52:	60f8      	str	r0, [r7, #12]
 8002d54:	60b9      	str	r1, [r7, #8]
 8002d56:	607a      	str	r2, [r7, #4]
 8002d58:	2300      	movs	r3, #0
 8002d5a:	61fb      	str	r3, [r7, #28]
 8002d5c:	f3ef 8305 	mrs	r3, IPSR
 8002d60:	613b      	str	r3, [r7, #16]
 8002d62:	693b      	ldr	r3, [r7, #16]
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d15f      	bne.n	8002e28 <osMessageQueueNew+0xdc>
 8002d68:	68fb      	ldr	r3, [r7, #12]
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d05c      	beq.n	8002e28 <osMessageQueueNew+0xdc>
 8002d6e:	68bb      	ldr	r3, [r7, #8]
 8002d70:	2b00      	cmp	r3, #0
 8002d72:	d059      	beq.n	8002e28 <osMessageQueueNew+0xdc>
 8002d74:	f04f 33ff 	mov.w	r3, #4294967295
 8002d78:	61bb      	str	r3, [r7, #24]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d029      	beq.n	8002dd4 <osMessageQueueNew+0x88>
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	689b      	ldr	r3, [r3, #8]
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d012      	beq.n	8002dae <osMessageQueueNew+0x62>
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	68db      	ldr	r3, [r3, #12]
 8002d8c:	2b4f      	cmp	r3, #79	; 0x4f
 8002d8e:	d90e      	bls.n	8002dae <osMessageQueueNew+0x62>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	691b      	ldr	r3, [r3, #16]
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d00a      	beq.n	8002dae <osMessageQueueNew+0x62>
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	695a      	ldr	r2, [r3, #20]
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	68b9      	ldr	r1, [r7, #8]
 8002da0:	fb01 f303 	mul.w	r3, r1, r3
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d302      	bcc.n	8002dae <osMessageQueueNew+0x62>
 8002da8:	2301      	movs	r3, #1
 8002daa:	61bb      	str	r3, [r7, #24]
 8002dac:	e014      	b.n	8002dd8 <osMessageQueueNew+0x8c>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	689b      	ldr	r3, [r3, #8]
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d110      	bne.n	8002dd8 <osMessageQueueNew+0x8c>
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	68db      	ldr	r3, [r3, #12]
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d10c      	bne.n	8002dd8 <osMessageQueueNew+0x8c>
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	691b      	ldr	r3, [r3, #16]
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d108      	bne.n	8002dd8 <osMessageQueueNew+0x8c>
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	695b      	ldr	r3, [r3, #20]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d104      	bne.n	8002dd8 <osMessageQueueNew+0x8c>
 8002dce:	2300      	movs	r3, #0
 8002dd0:	61bb      	str	r3, [r7, #24]
 8002dd2:	e001      	b.n	8002dd8 <osMessageQueueNew+0x8c>
 8002dd4:	2300      	movs	r3, #0
 8002dd6:	61bb      	str	r3, [r7, #24]
 8002dd8:	69bb      	ldr	r3, [r7, #24]
 8002dda:	2b01      	cmp	r3, #1
 8002ddc:	d10b      	bne.n	8002df6 <osMessageQueueNew+0xaa>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	691a      	ldr	r2, [r3, #16]
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	689b      	ldr	r3, [r3, #8]
 8002de6:	2100      	movs	r1, #0
 8002de8:	9100      	str	r1, [sp, #0]
 8002dea:	68b9      	ldr	r1, [r7, #8]
 8002dec:	68f8      	ldr	r0, [r7, #12]
 8002dee:	f000 fecd 	bl	8003b8c <xQueueGenericCreateStatic>
 8002df2:	61f8      	str	r0, [r7, #28]
 8002df4:	e008      	b.n	8002e08 <osMessageQueueNew+0xbc>
 8002df6:	69bb      	ldr	r3, [r7, #24]
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d105      	bne.n	8002e08 <osMessageQueueNew+0xbc>
 8002dfc:	2200      	movs	r2, #0
 8002dfe:	68b9      	ldr	r1, [r7, #8]
 8002e00:	68f8      	ldr	r0, [r7, #12]
 8002e02:	f000 ff3b 	bl	8003c7c <xQueueGenericCreate>
 8002e06:	61f8      	str	r0, [r7, #28]
 8002e08:	69fb      	ldr	r3, [r7, #28]
 8002e0a:	2b00      	cmp	r3, #0
 8002e0c:	d00c      	beq.n	8002e28 <osMessageQueueNew+0xdc>
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d003      	beq.n	8002e1c <osMessageQueueNew+0xd0>
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	617b      	str	r3, [r7, #20]
 8002e1a:	e001      	b.n	8002e20 <osMessageQueueNew+0xd4>
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	617b      	str	r3, [r7, #20]
 8002e20:	6979      	ldr	r1, [r7, #20]
 8002e22:	69f8      	ldr	r0, [r7, #28]
 8002e24:	f001 fdb4 	bl	8004990 <vQueueAddToRegistry>
 8002e28:	69fb      	ldr	r3, [r7, #28]
 8002e2a:	4618      	mov	r0, r3
 8002e2c:	3720      	adds	r7, #32
 8002e2e:	46bd      	mov	sp, r7
 8002e30:	bd80      	pop	{r7, pc}
	...

08002e34 <osMessageQueuePut>:
 8002e34:	b580      	push	{r7, lr}
 8002e36:	b088      	sub	sp, #32
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	60f8      	str	r0, [r7, #12]
 8002e3c:	60b9      	str	r1, [r7, #8]
 8002e3e:	603b      	str	r3, [r7, #0]
 8002e40:	4613      	mov	r3, r2
 8002e42:	71fb      	strb	r3, [r7, #7]
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	61bb      	str	r3, [r7, #24]
 8002e48:	2300      	movs	r3, #0
 8002e4a:	61fb      	str	r3, [r7, #28]
 8002e4c:	f3ef 8305 	mrs	r3, IPSR
 8002e50:	617b      	str	r3, [r7, #20]
 8002e52:	697b      	ldr	r3, [r7, #20]
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d028      	beq.n	8002eaa <osMessageQueuePut+0x76>
 8002e58:	69bb      	ldr	r3, [r7, #24]
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d005      	beq.n	8002e6a <osMessageQueuePut+0x36>
 8002e5e:	68bb      	ldr	r3, [r7, #8]
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d002      	beq.n	8002e6a <osMessageQueuePut+0x36>
 8002e64:	683b      	ldr	r3, [r7, #0]
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d003      	beq.n	8002e72 <osMessageQueuePut+0x3e>
 8002e6a:	f06f 0303 	mvn.w	r3, #3
 8002e6e:	61fb      	str	r3, [r7, #28]
 8002e70:	e038      	b.n	8002ee4 <osMessageQueuePut+0xb0>
 8002e72:	2300      	movs	r3, #0
 8002e74:	613b      	str	r3, [r7, #16]
 8002e76:	f107 0210 	add.w	r2, r7, #16
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	68b9      	ldr	r1, [r7, #8]
 8002e7e:	69b8      	ldr	r0, [r7, #24]
 8002e80:	f001 f88e 	bl	8003fa0 <xQueueGenericSendFromISR>
 8002e84:	4603      	mov	r3, r0
 8002e86:	2b01      	cmp	r3, #1
 8002e88:	d003      	beq.n	8002e92 <osMessageQueuePut+0x5e>
 8002e8a:	f06f 0302 	mvn.w	r3, #2
 8002e8e:	61fb      	str	r3, [r7, #28]
 8002e90:	e028      	b.n	8002ee4 <osMessageQueuePut+0xb0>
 8002e92:	693b      	ldr	r3, [r7, #16]
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d025      	beq.n	8002ee4 <osMessageQueuePut+0xb0>
 8002e98:	4b15      	ldr	r3, [pc, #84]	; (8002ef0 <osMessageQueuePut+0xbc>)
 8002e9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002e9e:	601a      	str	r2, [r3, #0]
 8002ea0:	f3bf 8f4f 	dsb	sy
 8002ea4:	f3bf 8f6f 	isb	sy
 8002ea8:	e01c      	b.n	8002ee4 <osMessageQueuePut+0xb0>
 8002eaa:	69bb      	ldr	r3, [r7, #24]
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d002      	beq.n	8002eb6 <osMessageQueuePut+0x82>
 8002eb0:	68bb      	ldr	r3, [r7, #8]
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d103      	bne.n	8002ebe <osMessageQueuePut+0x8a>
 8002eb6:	f06f 0303 	mvn.w	r3, #3
 8002eba:	61fb      	str	r3, [r7, #28]
 8002ebc:	e012      	b.n	8002ee4 <osMessageQueuePut+0xb0>
 8002ebe:	2300      	movs	r3, #0
 8002ec0:	683a      	ldr	r2, [r7, #0]
 8002ec2:	68b9      	ldr	r1, [r7, #8]
 8002ec4:	69b8      	ldr	r0, [r7, #24]
 8002ec6:	f000 ff6d 	bl	8003da4 <xQueueGenericSend>
 8002eca:	4603      	mov	r3, r0
 8002ecc:	2b01      	cmp	r3, #1
 8002ece:	d009      	beq.n	8002ee4 <osMessageQueuePut+0xb0>
 8002ed0:	683b      	ldr	r3, [r7, #0]
 8002ed2:	2b00      	cmp	r3, #0
 8002ed4:	d003      	beq.n	8002ede <osMessageQueuePut+0xaa>
 8002ed6:	f06f 0301 	mvn.w	r3, #1
 8002eda:	61fb      	str	r3, [r7, #28]
 8002edc:	e002      	b.n	8002ee4 <osMessageQueuePut+0xb0>
 8002ede:	f06f 0302 	mvn.w	r3, #2
 8002ee2:	61fb      	str	r3, [r7, #28]
 8002ee4:	69fb      	ldr	r3, [r7, #28]
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	3720      	adds	r7, #32
 8002eea:	46bd      	mov	sp, r7
 8002eec:	bd80      	pop	{r7, pc}
 8002eee:	bf00      	nop
 8002ef0:	e000ed04 	.word	0xe000ed04

08002ef4 <osMessageQueueGet>:
 8002ef4:	b580      	push	{r7, lr}
 8002ef6:	b088      	sub	sp, #32
 8002ef8:	af00      	add	r7, sp, #0
 8002efa:	60f8      	str	r0, [r7, #12]
 8002efc:	60b9      	str	r1, [r7, #8]
 8002efe:	607a      	str	r2, [r7, #4]
 8002f00:	603b      	str	r3, [r7, #0]
 8002f02:	68fb      	ldr	r3, [r7, #12]
 8002f04:	61bb      	str	r3, [r7, #24]
 8002f06:	2300      	movs	r3, #0
 8002f08:	61fb      	str	r3, [r7, #28]
 8002f0a:	f3ef 8305 	mrs	r3, IPSR
 8002f0e:	617b      	str	r3, [r7, #20]
 8002f10:	697b      	ldr	r3, [r7, #20]
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d028      	beq.n	8002f68 <osMessageQueueGet+0x74>
 8002f16:	69bb      	ldr	r3, [r7, #24]
 8002f18:	2b00      	cmp	r3, #0
 8002f1a:	d005      	beq.n	8002f28 <osMessageQueueGet+0x34>
 8002f1c:	68bb      	ldr	r3, [r7, #8]
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d002      	beq.n	8002f28 <osMessageQueueGet+0x34>
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	2b00      	cmp	r3, #0
 8002f26:	d003      	beq.n	8002f30 <osMessageQueueGet+0x3c>
 8002f28:	f06f 0303 	mvn.w	r3, #3
 8002f2c:	61fb      	str	r3, [r7, #28]
 8002f2e:	e037      	b.n	8002fa0 <osMessageQueueGet+0xac>
 8002f30:	2300      	movs	r3, #0
 8002f32:	613b      	str	r3, [r7, #16]
 8002f34:	f107 0310 	add.w	r3, r7, #16
 8002f38:	461a      	mov	r2, r3
 8002f3a:	68b9      	ldr	r1, [r7, #8]
 8002f3c:	69b8      	ldr	r0, [r7, #24]
 8002f3e:	f001 fb43 	bl	80045c8 <xQueueReceiveFromISR>
 8002f42:	4603      	mov	r3, r0
 8002f44:	2b01      	cmp	r3, #1
 8002f46:	d003      	beq.n	8002f50 <osMessageQueueGet+0x5c>
 8002f48:	f06f 0302 	mvn.w	r3, #2
 8002f4c:	61fb      	str	r3, [r7, #28]
 8002f4e:	e027      	b.n	8002fa0 <osMessageQueueGet+0xac>
 8002f50:	693b      	ldr	r3, [r7, #16]
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d024      	beq.n	8002fa0 <osMessageQueueGet+0xac>
 8002f56:	4b15      	ldr	r3, [pc, #84]	; (8002fac <osMessageQueueGet+0xb8>)
 8002f58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002f5c:	601a      	str	r2, [r3, #0]
 8002f5e:	f3bf 8f4f 	dsb	sy
 8002f62:	f3bf 8f6f 	isb	sy
 8002f66:	e01b      	b.n	8002fa0 <osMessageQueueGet+0xac>
 8002f68:	69bb      	ldr	r3, [r7, #24]
 8002f6a:	2b00      	cmp	r3, #0
 8002f6c:	d002      	beq.n	8002f74 <osMessageQueueGet+0x80>
 8002f6e:	68bb      	ldr	r3, [r7, #8]
 8002f70:	2b00      	cmp	r3, #0
 8002f72:	d103      	bne.n	8002f7c <osMessageQueueGet+0x88>
 8002f74:	f06f 0303 	mvn.w	r3, #3
 8002f78:	61fb      	str	r3, [r7, #28]
 8002f7a:	e011      	b.n	8002fa0 <osMessageQueueGet+0xac>
 8002f7c:	683a      	ldr	r2, [r7, #0]
 8002f7e:	68b9      	ldr	r1, [r7, #8]
 8002f80:	69b8      	ldr	r0, [r7, #24]
 8002f82:	f001 f935 	bl	80041f0 <xQueueReceive>
 8002f86:	4603      	mov	r3, r0
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d009      	beq.n	8002fa0 <osMessageQueueGet+0xac>
 8002f8c:	683b      	ldr	r3, [r7, #0]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d003      	beq.n	8002f9a <osMessageQueueGet+0xa6>
 8002f92:	f06f 0301 	mvn.w	r3, #1
 8002f96:	61fb      	str	r3, [r7, #28]
 8002f98:	e002      	b.n	8002fa0 <osMessageQueueGet+0xac>
 8002f9a:	f06f 0302 	mvn.w	r3, #2
 8002f9e:	61fb      	str	r3, [r7, #28]
 8002fa0:	69fb      	ldr	r3, [r7, #28]
 8002fa2:	4618      	mov	r0, r3
 8002fa4:	3720      	adds	r7, #32
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	bd80      	pop	{r7, pc}
 8002faa:	bf00      	nop
 8002fac:	e000ed04 	.word	0xe000ed04

08002fb0 <osMemoryPoolNew>:
 8002fb0:	b580      	push	{r7, lr}
 8002fb2:	b08a      	sub	sp, #40	; 0x28
 8002fb4:	af00      	add	r7, sp, #0
 8002fb6:	60f8      	str	r0, [r7, #12]
 8002fb8:	60b9      	str	r1, [r7, #8]
 8002fba:	607a      	str	r2, [r7, #4]
 8002fbc:	f3ef 8305 	mrs	r3, IPSR
 8002fc0:	613b      	str	r3, [r7, #16]
 8002fc2:	693b      	ldr	r3, [r7, #16]
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d002      	beq.n	8002fce <osMemoryPoolNew+0x1e>
 8002fc8:	2300      	movs	r3, #0
 8002fca:	627b      	str	r3, [r7, #36]	; 0x24
 8002fcc:	e0be      	b.n	800314c <osMemoryPoolNew+0x19c>
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	2b00      	cmp	r3, #0
 8002fd2:	d002      	beq.n	8002fda <osMemoryPoolNew+0x2a>
 8002fd4:	68bb      	ldr	r3, [r7, #8]
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d102      	bne.n	8002fe0 <osMemoryPoolNew+0x30>
 8002fda:	2300      	movs	r3, #0
 8002fdc:	627b      	str	r3, [r7, #36]	; 0x24
 8002fde:	e0b5      	b.n	800314c <osMemoryPoolNew+0x19c>
 8002fe0:	2300      	movs	r3, #0
 8002fe2:	627b      	str	r3, [r7, #36]	; 0x24
 8002fe4:	68bb      	ldr	r3, [r7, #8]
 8002fe6:	3303      	adds	r3, #3
 8002fe8:	f023 0203 	bic.w	r2, r3, #3
 8002fec:	68fb      	ldr	r3, [r7, #12]
 8002fee:	fb02 f303 	mul.w	r3, r2, r3
 8002ff2:	617b      	str	r3, [r7, #20]
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	623b      	str	r3, [r7, #32]
 8002ff8:	f04f 33ff 	mov.w	r3, #4294967295
 8002ffc:	61fb      	str	r3, [r7, #28]
 8002ffe:	f04f 33ff 	mov.w	r3, #4294967295
 8003002:	61bb      	str	r3, [r7, #24]
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	2b00      	cmp	r3, #0
 8003008:	d038      	beq.n	800307c <osMemoryPoolNew+0xcc>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	2b00      	cmp	r3, #0
 8003010:	d002      	beq.n	8003018 <osMemoryPoolNew+0x68>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	623b      	str	r3, [r7, #32]
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	689b      	ldr	r3, [r3, #8]
 800301c:	2b00      	cmp	r3, #0
 800301e:	d006      	beq.n	800302e <osMemoryPoolNew+0x7e>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	68db      	ldr	r3, [r3, #12]
 8003024:	2b73      	cmp	r3, #115	; 0x73
 8003026:	d902      	bls.n	800302e <osMemoryPoolNew+0x7e>
 8003028:	2301      	movs	r3, #1
 800302a:	61fb      	str	r3, [r7, #28]
 800302c:	e009      	b.n	8003042 <osMemoryPoolNew+0x92>
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	689b      	ldr	r3, [r3, #8]
 8003032:	2b00      	cmp	r3, #0
 8003034:	d105      	bne.n	8003042 <osMemoryPoolNew+0x92>
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	68db      	ldr	r3, [r3, #12]
 800303a:	2b00      	cmp	r3, #0
 800303c:	d101      	bne.n	8003042 <osMemoryPoolNew+0x92>
 800303e:	2300      	movs	r3, #0
 8003040:	61fb      	str	r3, [r7, #28]
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	691b      	ldr	r3, [r3, #16]
 8003046:	2b00      	cmp	r3, #0
 8003048:	d106      	bne.n	8003058 <osMemoryPoolNew+0xa8>
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	695b      	ldr	r3, [r3, #20]
 800304e:	2b00      	cmp	r3, #0
 8003050:	d102      	bne.n	8003058 <osMemoryPoolNew+0xa8>
 8003052:	2300      	movs	r3, #0
 8003054:	61bb      	str	r3, [r7, #24]
 8003056:	e015      	b.n	8003084 <osMemoryPoolNew+0xd4>
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	691b      	ldr	r3, [r3, #16]
 800305c:	2b00      	cmp	r3, #0
 800305e:	d011      	beq.n	8003084 <osMemoryPoolNew+0xd4>
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	691b      	ldr	r3, [r3, #16]
 8003064:	f003 0303 	and.w	r3, r3, #3
 8003068:	2b00      	cmp	r3, #0
 800306a:	d10b      	bne.n	8003084 <osMemoryPoolNew+0xd4>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	695b      	ldr	r3, [r3, #20]
 8003070:	697a      	ldr	r2, [r7, #20]
 8003072:	429a      	cmp	r2, r3
 8003074:	d806      	bhi.n	8003084 <osMemoryPoolNew+0xd4>
 8003076:	2301      	movs	r3, #1
 8003078:	61bb      	str	r3, [r7, #24]
 800307a:	e003      	b.n	8003084 <osMemoryPoolNew+0xd4>
 800307c:	2300      	movs	r3, #0
 800307e:	61fb      	str	r3, [r7, #28]
 8003080:	2300      	movs	r3, #0
 8003082:	61bb      	str	r3, [r7, #24]
 8003084:	69fb      	ldr	r3, [r7, #28]
 8003086:	2b00      	cmp	r3, #0
 8003088:	d104      	bne.n	8003094 <osMemoryPoolNew+0xe4>
 800308a:	2074      	movs	r0, #116	; 0x74
 800308c:	f003 fb44 	bl	8006718 <pvPortMalloc>
 8003090:	6278      	str	r0, [r7, #36]	; 0x24
 8003092:	e002      	b.n	800309a <osMemoryPoolNew+0xea>
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	689b      	ldr	r3, [r3, #8]
 8003098:	627b      	str	r3, [r7, #36]	; 0x24
 800309a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800309c:	2b00      	cmp	r3, #0
 800309e:	d01b      	beq.n	80030d8 <osMemoryPoolNew+0x128>
 80030a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030a2:	3324      	adds	r3, #36	; 0x24
 80030a4:	461a      	mov	r2, r3
 80030a6:	68f9      	ldr	r1, [r7, #12]
 80030a8:	68f8      	ldr	r0, [r7, #12]
 80030aa:	f000 fe44 	bl	8003d36 <xQueueCreateCountingSemaphoreStatic>
 80030ae:	4602      	mov	r2, r0
 80030b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030b2:	605a      	str	r2, [r3, #4]
 80030b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030b6:	685b      	ldr	r3, [r3, #4]
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	d00d      	beq.n	80030d8 <osMemoryPoolNew+0x128>
 80030bc:	69bb      	ldr	r3, [r7, #24]
 80030be:	2b00      	cmp	r3, #0
 80030c0:	d106      	bne.n	80030d0 <osMemoryPoolNew+0x120>
 80030c2:	6978      	ldr	r0, [r7, #20]
 80030c4:	f003 fb28 	bl	8006718 <pvPortMalloc>
 80030c8:	4602      	mov	r2, r0
 80030ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030cc:	609a      	str	r2, [r3, #8]
 80030ce:	e003      	b.n	80030d8 <osMemoryPoolNew+0x128>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	691a      	ldr	r2, [r3, #16]
 80030d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030d6:	609a      	str	r2, [r3, #8]
 80030d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d02b      	beq.n	8003136 <osMemoryPoolNew+0x186>
 80030de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030e0:	689b      	ldr	r3, [r3, #8]
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d027      	beq.n	8003136 <osMemoryPoolNew+0x186>
 80030e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030e8:	2200      	movs	r2, #0
 80030ea:	601a      	str	r2, [r3, #0]
 80030ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030ee:	697a      	ldr	r2, [r7, #20]
 80030f0:	60da      	str	r2, [r3, #12]
 80030f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030f4:	6a3a      	ldr	r2, [r7, #32]
 80030f6:	611a      	str	r2, [r3, #16]
 80030f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030fa:	68ba      	ldr	r2, [r7, #8]
 80030fc:	615a      	str	r2, [r3, #20]
 80030fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003100:	68fa      	ldr	r2, [r7, #12]
 8003102:	619a      	str	r2, [r3, #24]
 8003104:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003106:	2200      	movs	r2, #0
 8003108:	61da      	str	r2, [r3, #28]
 800310a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800310c:	4a12      	ldr	r2, [pc, #72]	; (8003158 <osMemoryPoolNew+0x1a8>)
 800310e:	621a      	str	r2, [r3, #32]
 8003110:	69fb      	ldr	r3, [r7, #28]
 8003112:	2b00      	cmp	r3, #0
 8003114:	d105      	bne.n	8003122 <osMemoryPoolNew+0x172>
 8003116:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003118:	6a1b      	ldr	r3, [r3, #32]
 800311a:	f043 0201 	orr.w	r2, r3, #1
 800311e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003120:	621a      	str	r2, [r3, #32]
 8003122:	69bb      	ldr	r3, [r7, #24]
 8003124:	2b00      	cmp	r3, #0
 8003126:	d111      	bne.n	800314c <osMemoryPoolNew+0x19c>
 8003128:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800312a:	6a1b      	ldr	r3, [r3, #32]
 800312c:	f043 0202 	orr.w	r2, r3, #2
 8003130:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003132:	621a      	str	r2, [r3, #32]
 8003134:	e00a      	b.n	800314c <osMemoryPoolNew+0x19c>
 8003136:	69fb      	ldr	r3, [r7, #28]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d105      	bne.n	8003148 <osMemoryPoolNew+0x198>
 800313c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800313e:	2b00      	cmp	r3, #0
 8003140:	d002      	beq.n	8003148 <osMemoryPoolNew+0x198>
 8003142:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003144:	f003 fbb4 	bl	80068b0 <vPortFree>
 8003148:	2300      	movs	r3, #0
 800314a:	627b      	str	r3, [r7, #36]	; 0x24
 800314c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800314e:	4618      	mov	r0, r3
 8003150:	3728      	adds	r7, #40	; 0x28
 8003152:	46bd      	mov	sp, r7
 8003154:	bd80      	pop	{r7, pc}
 8003156:	bf00      	nop
 8003158:	5eed0000 	.word	0x5eed0000

0800315c <osMemoryPoolAlloc>:
 800315c:	b580      	push	{r7, lr}
 800315e:	b08a      	sub	sp, #40	; 0x28
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	6039      	str	r1, [r7, #0]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	2b00      	cmp	r3, #0
 800316a:	d102      	bne.n	8003172 <osMemoryPoolAlloc+0x16>
 800316c:	2300      	movs	r3, #0
 800316e:	627b      	str	r3, [r7, #36]	; 0x24
 8003170:	e062      	b.n	8003238 <osMemoryPoolAlloc+0xdc>
 8003172:	2300      	movs	r3, #0
 8003174:	627b      	str	r3, [r7, #36]	; 0x24
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	623b      	str	r3, [r7, #32]
 800317a:	6a3b      	ldr	r3, [r7, #32]
 800317c:	6a1a      	ldr	r2, [r3, #32]
 800317e:	4b31      	ldr	r3, [pc, #196]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 8003180:	4013      	ands	r3, r2
 8003182:	4a30      	ldr	r2, [pc, #192]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 8003184:	4293      	cmp	r3, r2
 8003186:	d157      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 8003188:	f3ef 8305 	mrs	r3, IPSR
 800318c:	61bb      	str	r3, [r7, #24]
 800318e:	69bb      	ldr	r3, [r7, #24]
 8003190:	2b00      	cmp	r3, #0
 8003192:	d032      	beq.n	80031fa <osMemoryPoolAlloc+0x9e>
 8003194:	683b      	ldr	r3, [r7, #0]
 8003196:	2b00      	cmp	r3, #0
 8003198:	d14e      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 800319a:	6a3b      	ldr	r3, [r7, #32]
 800319c:	685b      	ldr	r3, [r3, #4]
 800319e:	2200      	movs	r2, #0
 80031a0:	2100      	movs	r1, #0
 80031a2:	4618      	mov	r0, r3
 80031a4:	f001 fa10 	bl	80045c8 <xQueueReceiveFromISR>
 80031a8:	4603      	mov	r3, r0
 80031aa:	2b01      	cmp	r3, #1
 80031ac:	d144      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 80031ae:	6a3b      	ldr	r3, [r7, #32]
 80031b0:	6a1a      	ldr	r2, [r3, #32]
 80031b2:	4b24      	ldr	r3, [pc, #144]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 80031b4:	4013      	ands	r3, r2
 80031b6:	4a23      	ldr	r2, [pc, #140]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 80031b8:	4293      	cmp	r3, r2
 80031ba:	d13d      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 80031bc:	f3ef 8211 	mrs	r2, BASEPRI
 80031c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80031c4:	f383 8811 	msr	BASEPRI, r3
 80031c8:	f3bf 8f6f 	isb	sy
 80031cc:	f3bf 8f4f 	dsb	sy
 80031d0:	617a      	str	r2, [r7, #20]
 80031d2:	613b      	str	r3, [r7, #16]
 80031d4:	697b      	ldr	r3, [r7, #20]
 80031d6:	61fb      	str	r3, [r7, #28]
 80031d8:	6a38      	ldr	r0, [r7, #32]
 80031da:	f000 f8ef 	bl	80033bc <AllocBlock>
 80031de:	6278      	str	r0, [r7, #36]	; 0x24
 80031e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d103      	bne.n	80031ee <osMemoryPoolAlloc+0x92>
 80031e6:	6a38      	ldr	r0, [r7, #32]
 80031e8:	f000 f8c6 	bl	8003378 <CreateBlock>
 80031ec:	6278      	str	r0, [r7, #36]	; 0x24
 80031ee:	69fb      	ldr	r3, [r7, #28]
 80031f0:	60fb      	str	r3, [r7, #12]
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	f383 8811 	msr	BASEPRI, r3
 80031f8:	e01e      	b.n	8003238 <osMemoryPoolAlloc+0xdc>
 80031fa:	6a3b      	ldr	r3, [r7, #32]
 80031fc:	685b      	ldr	r3, [r3, #4]
 80031fe:	6839      	ldr	r1, [r7, #0]
 8003200:	4618      	mov	r0, r3
 8003202:	f001 f8d5 	bl	80043b0 <xQueueSemaphoreTake>
 8003206:	4603      	mov	r3, r0
 8003208:	2b01      	cmp	r3, #1
 800320a:	d115      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 800320c:	6a3b      	ldr	r3, [r7, #32]
 800320e:	6a1a      	ldr	r2, [r3, #32]
 8003210:	4b0c      	ldr	r3, [pc, #48]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 8003212:	4013      	ands	r3, r2
 8003214:	4a0b      	ldr	r2, [pc, #44]	; (8003244 <osMemoryPoolAlloc+0xe8>)
 8003216:	4293      	cmp	r3, r2
 8003218:	d10e      	bne.n	8003238 <osMemoryPoolAlloc+0xdc>
 800321a:	f003 f95b 	bl	80064d4 <vPortEnterCritical>
 800321e:	6a38      	ldr	r0, [r7, #32]
 8003220:	f000 f8cc 	bl	80033bc <AllocBlock>
 8003224:	6278      	str	r0, [r7, #36]	; 0x24
 8003226:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003228:	2b00      	cmp	r3, #0
 800322a:	d103      	bne.n	8003234 <osMemoryPoolAlloc+0xd8>
 800322c:	6a38      	ldr	r0, [r7, #32]
 800322e:	f000 f8a3 	bl	8003378 <CreateBlock>
 8003232:	6278      	str	r0, [r7, #36]	; 0x24
 8003234:	f003 f97e 	bl	8006534 <vPortExitCritical>
 8003238:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800323a:	4618      	mov	r0, r3
 800323c:	3728      	adds	r7, #40	; 0x28
 800323e:	46bd      	mov	sp, r7
 8003240:	bd80      	pop	{r7, pc}
 8003242:	bf00      	nop
 8003244:	5eed0000 	.word	0x5eed0000

08003248 <osMemoryPoolFree>:
 8003248:	b580      	push	{r7, lr}
 800324a:	b08a      	sub	sp, #40	; 0x28
 800324c:	af00      	add	r7, sp, #0
 800324e:	6078      	str	r0, [r7, #4]
 8003250:	6039      	str	r1, [r7, #0]
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	2b00      	cmp	r3, #0
 8003256:	d002      	beq.n	800325e <osMemoryPoolFree+0x16>
 8003258:	683b      	ldr	r3, [r7, #0]
 800325a:	2b00      	cmp	r3, #0
 800325c:	d103      	bne.n	8003266 <osMemoryPoolFree+0x1e>
 800325e:	f06f 0303 	mvn.w	r3, #3
 8003262:	627b      	str	r3, [r7, #36]	; 0x24
 8003264:	e07f      	b.n	8003366 <osMemoryPoolFree+0x11e>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	623b      	str	r3, [r7, #32]
 800326a:	6a3b      	ldr	r3, [r7, #32]
 800326c:	6a1a      	ldr	r2, [r3, #32]
 800326e:	4b40      	ldr	r3, [pc, #256]	; (8003370 <osMemoryPoolFree+0x128>)
 8003270:	4013      	ands	r3, r2
 8003272:	4a3f      	ldr	r2, [pc, #252]	; (8003370 <osMemoryPoolFree+0x128>)
 8003274:	4293      	cmp	r3, r2
 8003276:	d003      	beq.n	8003280 <osMemoryPoolFree+0x38>
 8003278:	f06f 0302 	mvn.w	r3, #2
 800327c:	627b      	str	r3, [r7, #36]	; 0x24
 800327e:	e072      	b.n	8003366 <osMemoryPoolFree+0x11e>
 8003280:	6a3b      	ldr	r3, [r7, #32]
 8003282:	689b      	ldr	r3, [r3, #8]
 8003284:	683a      	ldr	r2, [r7, #0]
 8003286:	429a      	cmp	r2, r3
 8003288:	d308      	bcc.n	800329c <osMemoryPoolFree+0x54>
 800328a:	6a3b      	ldr	r3, [r7, #32]
 800328c:	689a      	ldr	r2, [r3, #8]
 800328e:	6a3b      	ldr	r3, [r7, #32]
 8003290:	68db      	ldr	r3, [r3, #12]
 8003292:	3b01      	subs	r3, #1
 8003294:	4413      	add	r3, r2
 8003296:	683a      	ldr	r2, [r7, #0]
 8003298:	429a      	cmp	r2, r3
 800329a:	d903      	bls.n	80032a4 <osMemoryPoolFree+0x5c>
 800329c:	f06f 0303 	mvn.w	r3, #3
 80032a0:	627b      	str	r3, [r7, #36]	; 0x24
 80032a2:	e060      	b.n	8003366 <osMemoryPoolFree+0x11e>
 80032a4:	2300      	movs	r3, #0
 80032a6:	627b      	str	r3, [r7, #36]	; 0x24
 80032a8:	f3ef 8305 	mrs	r3, IPSR
 80032ac:	61bb      	str	r3, [r7, #24]
 80032ae:	69bb      	ldr	r3, [r7, #24]
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d03b      	beq.n	800332c <osMemoryPoolFree+0xe4>
 80032b4:	6a3b      	ldr	r3, [r7, #32]
 80032b6:	685b      	ldr	r3, [r3, #4]
 80032b8:	4618      	mov	r0, r3
 80032ba:	f001 fa23 	bl	8004704 <uxQueueMessagesWaitingFromISR>
 80032be:	4602      	mov	r2, r0
 80032c0:	6a3b      	ldr	r3, [r7, #32]
 80032c2:	699b      	ldr	r3, [r3, #24]
 80032c4:	429a      	cmp	r2, r3
 80032c6:	d103      	bne.n	80032d0 <osMemoryPoolFree+0x88>
 80032c8:	f06f 0302 	mvn.w	r3, #2
 80032cc:	627b      	str	r3, [r7, #36]	; 0x24
 80032ce:	e04a      	b.n	8003366 <osMemoryPoolFree+0x11e>
 80032d0:	f3ef 8211 	mrs	r2, BASEPRI
 80032d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80032d8:	f383 8811 	msr	BASEPRI, r3
 80032dc:	f3bf 8f6f 	isb	sy
 80032e0:	f3bf 8f4f 	dsb	sy
 80032e4:	613a      	str	r2, [r7, #16]
 80032e6:	60fb      	str	r3, [r7, #12]
 80032e8:	693b      	ldr	r3, [r7, #16]
 80032ea:	61fb      	str	r3, [r7, #28]
 80032ec:	6839      	ldr	r1, [r7, #0]
 80032ee:	6a38      	ldr	r0, [r7, #32]
 80032f0:	f000 f87c 	bl	80033ec <FreeBlock>
 80032f4:	69fb      	ldr	r3, [r7, #28]
 80032f6:	617b      	str	r3, [r7, #20]
 80032f8:	697b      	ldr	r3, [r7, #20]
 80032fa:	f383 8811 	msr	BASEPRI, r3
 80032fe:	bf00      	nop
 8003300:	2300      	movs	r3, #0
 8003302:	60bb      	str	r3, [r7, #8]
 8003304:	6a3b      	ldr	r3, [r7, #32]
 8003306:	685b      	ldr	r3, [r3, #4]
 8003308:	f107 0208 	add.w	r2, r7, #8
 800330c:	4611      	mov	r1, r2
 800330e:	4618      	mov	r0, r3
 8003310:	f000 fee1 	bl	80040d6 <xQueueGiveFromISR>
 8003314:	68bb      	ldr	r3, [r7, #8]
 8003316:	2b00      	cmp	r3, #0
 8003318:	d025      	beq.n	8003366 <osMemoryPoolFree+0x11e>
 800331a:	4b16      	ldr	r3, [pc, #88]	; (8003374 <osMemoryPoolFree+0x12c>)
 800331c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003320:	601a      	str	r2, [r3, #0]
 8003322:	f3bf 8f4f 	dsb	sy
 8003326:	f3bf 8f6f 	isb	sy
 800332a:	e01c      	b.n	8003366 <osMemoryPoolFree+0x11e>
 800332c:	6a3b      	ldr	r3, [r7, #32]
 800332e:	685b      	ldr	r3, [r3, #4]
 8003330:	4618      	mov	r0, r3
 8003332:	f001 f9c9 	bl	80046c8 <uxQueueMessagesWaiting>
 8003336:	4602      	mov	r2, r0
 8003338:	6a3b      	ldr	r3, [r7, #32]
 800333a:	699b      	ldr	r3, [r3, #24]
 800333c:	429a      	cmp	r2, r3
 800333e:	d103      	bne.n	8003348 <osMemoryPoolFree+0x100>
 8003340:	f06f 0302 	mvn.w	r3, #2
 8003344:	627b      	str	r3, [r7, #36]	; 0x24
 8003346:	e00e      	b.n	8003366 <osMemoryPoolFree+0x11e>
 8003348:	f003 f8c4 	bl	80064d4 <vPortEnterCritical>
 800334c:	6839      	ldr	r1, [r7, #0]
 800334e:	6a38      	ldr	r0, [r7, #32]
 8003350:	f000 f84c 	bl	80033ec <FreeBlock>
 8003354:	f003 f8ee 	bl	8006534 <vPortExitCritical>
 8003358:	6a3b      	ldr	r3, [r7, #32]
 800335a:	6858      	ldr	r0, [r3, #4]
 800335c:	2300      	movs	r3, #0
 800335e:	2200      	movs	r2, #0
 8003360:	2100      	movs	r1, #0
 8003362:	f000 fd1f 	bl	8003da4 <xQueueGenericSend>
 8003366:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003368:	4618      	mov	r0, r3
 800336a:	3728      	adds	r7, #40	; 0x28
 800336c:	46bd      	mov	sp, r7
 800336e:	bd80      	pop	{r7, pc}
 8003370:	5eed0000 	.word	0x5eed0000
 8003374:	e000ed04 	.word	0xe000ed04

08003378 <CreateBlock>:
 8003378:	b480      	push	{r7}
 800337a:	b085      	sub	sp, #20
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
 8003380:	2300      	movs	r3, #0
 8003382:	60fb      	str	r3, [r7, #12]
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	69da      	ldr	r2, [r3, #28]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	699b      	ldr	r3, [r3, #24]
 800338c:	429a      	cmp	r2, r3
 800338e:	d20e      	bcs.n	80033ae <CreateBlock+0x36>
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	689a      	ldr	r2, [r3, #8]
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	695b      	ldr	r3, [r3, #20]
 8003398:	6879      	ldr	r1, [r7, #4]
 800339a:	69c9      	ldr	r1, [r1, #28]
 800339c:	fb01 f303 	mul.w	r3, r1, r3
 80033a0:	4413      	add	r3, r2
 80033a2:	60fb      	str	r3, [r7, #12]
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	69db      	ldr	r3, [r3, #28]
 80033a8:	1c5a      	adds	r2, r3, #1
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	61da      	str	r2, [r3, #28]
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	4618      	mov	r0, r3
 80033b2:	3714      	adds	r7, #20
 80033b4:	46bd      	mov	sp, r7
 80033b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ba:	4770      	bx	lr

080033bc <AllocBlock>:
 80033bc:	b480      	push	{r7}
 80033be:	b085      	sub	sp, #20
 80033c0:	af00      	add	r7, sp, #0
 80033c2:	6078      	str	r0, [r7, #4]
 80033c4:	2300      	movs	r3, #0
 80033c6:	60fb      	str	r3, [r7, #12]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	2b00      	cmp	r3, #0
 80033ce:	d006      	beq.n	80033de <AllocBlock+0x22>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	60fb      	str	r3, [r7, #12]
 80033d6:	68fb      	ldr	r3, [r7, #12]
 80033d8:	681a      	ldr	r2, [r3, #0]
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	601a      	str	r2, [r3, #0]
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	4618      	mov	r0, r3
 80033e2:	3714      	adds	r7, #20
 80033e4:	46bd      	mov	sp, r7
 80033e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ea:	4770      	bx	lr

080033ec <FreeBlock>:
 80033ec:	b480      	push	{r7}
 80033ee:	b085      	sub	sp, #20
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	6039      	str	r1, [r7, #0]
 80033f6:	683b      	ldr	r3, [r7, #0]
 80033f8:	60fb      	str	r3, [r7, #12]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	681a      	ldr	r2, [r3, #0]
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	601a      	str	r2, [r3, #0]
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	68fa      	ldr	r2, [r7, #12]
 8003406:	601a      	str	r2, [r3, #0]
 8003408:	bf00      	nop
 800340a:	3714      	adds	r7, #20
 800340c:	46bd      	mov	sp, r7
 800340e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003412:	4770      	bx	lr

08003414 <vApplicationGetIdleTaskMemory>:
 8003414:	b480      	push	{r7}
 8003416:	b085      	sub	sp, #20
 8003418:	af00      	add	r7, sp, #0
 800341a:	60f8      	str	r0, [r7, #12]
 800341c:	60b9      	str	r1, [r7, #8]
 800341e:	607a      	str	r2, [r7, #4]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	4a07      	ldr	r2, [pc, #28]	; (8003440 <vApplicationGetIdleTaskMemory+0x2c>)
 8003424:	601a      	str	r2, [r3, #0]
 8003426:	68bb      	ldr	r3, [r7, #8]
 8003428:	4a06      	ldr	r2, [pc, #24]	; (8003444 <vApplicationGetIdleTaskMemory+0x30>)
 800342a:	601a      	str	r2, [r3, #0]
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	2280      	movs	r2, #128	; 0x80
 8003430:	601a      	str	r2, [r3, #0]
 8003432:	bf00      	nop
 8003434:	3714      	adds	r7, #20
 8003436:	46bd      	mov	sp, r7
 8003438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800343c:	4770      	bx	lr
 800343e:	bf00      	nop
 8003440:	200001c4 	.word	0x200001c4
 8003444:	2000026c 	.word	0x2000026c

08003448 <vApplicationGetTimerTaskMemory>:
 8003448:	b480      	push	{r7}
 800344a:	b085      	sub	sp, #20
 800344c:	af00      	add	r7, sp, #0
 800344e:	60f8      	str	r0, [r7, #12]
 8003450:	60b9      	str	r1, [r7, #8]
 8003452:	607a      	str	r2, [r7, #4]
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	4a07      	ldr	r2, [pc, #28]	; (8003474 <vApplicationGetTimerTaskMemory+0x2c>)
 8003458:	601a      	str	r2, [r3, #0]
 800345a:	68bb      	ldr	r3, [r7, #8]
 800345c:	4a06      	ldr	r2, [pc, #24]	; (8003478 <vApplicationGetTimerTaskMemory+0x30>)
 800345e:	601a      	str	r2, [r3, #0]
 8003460:	687b      	ldr	r3, [r7, #4]
 8003462:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003466:	601a      	str	r2, [r3, #0]
 8003468:	bf00      	nop
 800346a:	3714      	adds	r7, #20
 800346c:	46bd      	mov	sp, r7
 800346e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003472:	4770      	bx	lr
 8003474:	2000046c 	.word	0x2000046c
 8003478:	20000514 	.word	0x20000514

0800347c <xEventGroupCreateStatic>:
 800347c:	b580      	push	{r7, lr}
 800347e:	b086      	sub	sp, #24
 8003480:	af00      	add	r7, sp, #0
 8003482:	6078      	str	r0, [r7, #4]
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	2b00      	cmp	r3, #0
 8003488:	d10a      	bne.n	80034a0 <xEventGroupCreateStatic+0x24>
 800348a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800348e:	f383 8811 	msr	BASEPRI, r3
 8003492:	f3bf 8f6f 	isb	sy
 8003496:	f3bf 8f4f 	dsb	sy
 800349a:	613b      	str	r3, [r7, #16]
 800349c:	bf00      	nop
 800349e:	e7fe      	b.n	800349e <xEventGroupCreateStatic+0x22>
 80034a0:	2320      	movs	r3, #32
 80034a2:	60bb      	str	r3, [r7, #8]
 80034a4:	68bb      	ldr	r3, [r7, #8]
 80034a6:	2b20      	cmp	r3, #32
 80034a8:	d00a      	beq.n	80034c0 <xEventGroupCreateStatic+0x44>
 80034aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80034ae:	f383 8811 	msr	BASEPRI, r3
 80034b2:	f3bf 8f6f 	isb	sy
 80034b6:	f3bf 8f4f 	dsb	sy
 80034ba:	60fb      	str	r3, [r7, #12]
 80034bc:	bf00      	nop
 80034be:	e7fe      	b.n	80034be <xEventGroupCreateStatic+0x42>
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	617b      	str	r3, [r7, #20]
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	2b00      	cmp	r3, #0
 80034c8:	d00a      	beq.n	80034e0 <xEventGroupCreateStatic+0x64>
 80034ca:	697b      	ldr	r3, [r7, #20]
 80034cc:	2200      	movs	r2, #0
 80034ce:	601a      	str	r2, [r3, #0]
 80034d0:	697b      	ldr	r3, [r7, #20]
 80034d2:	3304      	adds	r3, #4
 80034d4:	4618      	mov	r0, r3
 80034d6:	f000 fa3d 	bl	8003954 <vListInitialise>
 80034da:	697b      	ldr	r3, [r7, #20]
 80034dc:	2201      	movs	r2, #1
 80034de:	771a      	strb	r2, [r3, #28]
 80034e0:	697b      	ldr	r3, [r7, #20]
 80034e2:	4618      	mov	r0, r3
 80034e4:	3718      	adds	r7, #24
 80034e6:	46bd      	mov	sp, r7
 80034e8:	bd80      	pop	{r7, pc}

080034ea <xEventGroupCreate>:
 80034ea:	b580      	push	{r7, lr}
 80034ec:	b082      	sub	sp, #8
 80034ee:	af00      	add	r7, sp, #0
 80034f0:	2020      	movs	r0, #32
 80034f2:	f003 f911 	bl	8006718 <pvPortMalloc>
 80034f6:	6078      	str	r0, [r7, #4]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d00a      	beq.n	8003514 <xEventGroupCreate+0x2a>
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	2200      	movs	r2, #0
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	3304      	adds	r3, #4
 8003508:	4618      	mov	r0, r3
 800350a:	f000 fa23 	bl	8003954 <vListInitialise>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	2200      	movs	r2, #0
 8003512:	771a      	strb	r2, [r3, #28]
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	4618      	mov	r0, r3
 8003518:	3708      	adds	r7, #8
 800351a:	46bd      	mov	sp, r7
 800351c:	bd80      	pop	{r7, pc}
	...

08003520 <xEventGroupWaitBits>:
 8003520:	b580      	push	{r7, lr}
 8003522:	b090      	sub	sp, #64	; 0x40
 8003524:	af00      	add	r7, sp, #0
 8003526:	60f8      	str	r0, [r7, #12]
 8003528:	60b9      	str	r1, [r7, #8]
 800352a:	607a      	str	r2, [r7, #4]
 800352c:	603b      	str	r3, [r7, #0]
 800352e:	68fb      	ldr	r3, [r7, #12]
 8003530:	637b      	str	r3, [r7, #52]	; 0x34
 8003532:	2300      	movs	r3, #0
 8003534:	63bb      	str	r3, [r7, #56]	; 0x38
 8003536:	2300      	movs	r3, #0
 8003538:	633b      	str	r3, [r7, #48]	; 0x30
 800353a:	68fb      	ldr	r3, [r7, #12]
 800353c:	2b00      	cmp	r3, #0
 800353e:	d10a      	bne.n	8003556 <xEventGroupWaitBits+0x36>
 8003540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003544:	f383 8811 	msr	BASEPRI, r3
 8003548:	f3bf 8f6f 	isb	sy
 800354c:	f3bf 8f4f 	dsb	sy
 8003550:	623b      	str	r3, [r7, #32]
 8003552:	bf00      	nop
 8003554:	e7fe      	b.n	8003554 <xEventGroupWaitBits+0x34>
 8003556:	68bb      	ldr	r3, [r7, #8]
 8003558:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800355c:	2b00      	cmp	r3, #0
 800355e:	d00a      	beq.n	8003576 <xEventGroupWaitBits+0x56>
 8003560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003564:	f383 8811 	msr	BASEPRI, r3
 8003568:	f3bf 8f6f 	isb	sy
 800356c:	f3bf 8f4f 	dsb	sy
 8003570:	61fb      	str	r3, [r7, #28]
 8003572:	bf00      	nop
 8003574:	e7fe      	b.n	8003574 <xEventGroupWaitBits+0x54>
 8003576:	68bb      	ldr	r3, [r7, #8]
 8003578:	2b00      	cmp	r3, #0
 800357a:	d10a      	bne.n	8003592 <xEventGroupWaitBits+0x72>
 800357c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003580:	f383 8811 	msr	BASEPRI, r3
 8003584:	f3bf 8f6f 	isb	sy
 8003588:	f3bf 8f4f 	dsb	sy
 800358c:	61bb      	str	r3, [r7, #24]
 800358e:	bf00      	nop
 8003590:	e7fe      	b.n	8003590 <xEventGroupWaitBits+0x70>
 8003592:	f002 f90d 	bl	80057b0 <xTaskGetSchedulerState>
 8003596:	4603      	mov	r3, r0
 8003598:	2b00      	cmp	r3, #0
 800359a:	d102      	bne.n	80035a2 <xEventGroupWaitBits+0x82>
 800359c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800359e:	2b00      	cmp	r3, #0
 80035a0:	d101      	bne.n	80035a6 <xEventGroupWaitBits+0x86>
 80035a2:	2301      	movs	r3, #1
 80035a4:	e000      	b.n	80035a8 <xEventGroupWaitBits+0x88>
 80035a6:	2300      	movs	r3, #0
 80035a8:	2b00      	cmp	r3, #0
 80035aa:	d10a      	bne.n	80035c2 <xEventGroupWaitBits+0xa2>
 80035ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80035b0:	f383 8811 	msr	BASEPRI, r3
 80035b4:	f3bf 8f6f 	isb	sy
 80035b8:	f3bf 8f4f 	dsb	sy
 80035bc:	617b      	str	r3, [r7, #20]
 80035be:	bf00      	nop
 80035c0:	e7fe      	b.n	80035c0 <xEventGroupWaitBits+0xa0>
 80035c2:	f001 fc6b 	bl	8004e9c <vTaskSuspendAll>
 80035c6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	62fb      	str	r3, [r7, #44]	; 0x2c
 80035cc:	683a      	ldr	r2, [r7, #0]
 80035ce:	68b9      	ldr	r1, [r7, #8]
 80035d0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80035d2:	f000 f988 	bl	80038e6 <prvTestWaitCondition>
 80035d6:	62b8      	str	r0, [r7, #40]	; 0x28
 80035d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d00e      	beq.n	80035fc <xEventGroupWaitBits+0xdc>
 80035de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80035e0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80035e2:	2300      	movs	r3, #0
 80035e4:	64bb      	str	r3, [r7, #72]	; 0x48
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	d028      	beq.n	800363e <xEventGroupWaitBits+0x11e>
 80035ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80035ee:	681a      	ldr	r2, [r3, #0]
 80035f0:	68bb      	ldr	r3, [r7, #8]
 80035f2:	43db      	mvns	r3, r3
 80035f4:	401a      	ands	r2, r3
 80035f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80035f8:	601a      	str	r2, [r3, #0]
 80035fa:	e020      	b.n	800363e <xEventGroupWaitBits+0x11e>
 80035fc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d104      	bne.n	800360c <xEventGroupWaitBits+0xec>
 8003602:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003604:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003606:	2301      	movs	r3, #1
 8003608:	633b      	str	r3, [r7, #48]	; 0x30
 800360a:	e018      	b.n	800363e <xEventGroupWaitBits+0x11e>
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	2b00      	cmp	r3, #0
 8003610:	d003      	beq.n	800361a <xEventGroupWaitBits+0xfa>
 8003612:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003614:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003618:	63bb      	str	r3, [r7, #56]	; 0x38
 800361a:	683b      	ldr	r3, [r7, #0]
 800361c:	2b00      	cmp	r3, #0
 800361e:	d003      	beq.n	8003628 <xEventGroupWaitBits+0x108>
 8003620:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003622:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003626:	63bb      	str	r3, [r7, #56]	; 0x38
 8003628:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800362a:	1d18      	adds	r0, r3, #4
 800362c:	68ba      	ldr	r2, [r7, #8]
 800362e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003630:	4313      	orrs	r3, r2
 8003632:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8003634:	4619      	mov	r1, r3
 8003636:	f001 fe2f 	bl	8005298 <vTaskPlaceOnUnorderedEventList>
 800363a:	2300      	movs	r3, #0
 800363c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800363e:	f001 fc3b 	bl	8004eb8 <xTaskResumeAll>
 8003642:	6278      	str	r0, [r7, #36]	; 0x24
 8003644:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003646:	2b00      	cmp	r3, #0
 8003648:	d031      	beq.n	80036ae <xEventGroupWaitBits+0x18e>
 800364a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800364c:	2b00      	cmp	r3, #0
 800364e:	d107      	bne.n	8003660 <xEventGroupWaitBits+0x140>
 8003650:	4b19      	ldr	r3, [pc, #100]	; (80036b8 <xEventGroupWaitBits+0x198>)
 8003652:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003656:	601a      	str	r2, [r3, #0]
 8003658:	f3bf 8f4f 	dsb	sy
 800365c:	f3bf 8f6f 	isb	sy
 8003660:	f002 fa1c 	bl	8005a9c <uxTaskResetEventItemValue>
 8003664:	63f8      	str	r0, [r7, #60]	; 0x3c
 8003666:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003668:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800366c:	2b00      	cmp	r3, #0
 800366e:	d11a      	bne.n	80036a6 <xEventGroupWaitBits+0x186>
 8003670:	f002 ff30 	bl	80064d4 <vPortEnterCritical>
 8003674:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	63fb      	str	r3, [r7, #60]	; 0x3c
 800367a:	683a      	ldr	r2, [r7, #0]
 800367c:	68b9      	ldr	r1, [r7, #8]
 800367e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8003680:	f000 f931 	bl	80038e6 <prvTestWaitCondition>
 8003684:	4603      	mov	r3, r0
 8003686:	2b00      	cmp	r3, #0
 8003688:	d009      	beq.n	800369e <xEventGroupWaitBits+0x17e>
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	2b00      	cmp	r3, #0
 800368e:	d006      	beq.n	800369e <xEventGroupWaitBits+0x17e>
 8003690:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003692:	681a      	ldr	r2, [r3, #0]
 8003694:	68bb      	ldr	r3, [r7, #8]
 8003696:	43db      	mvns	r3, r3
 8003698:	401a      	ands	r2, r3
 800369a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800369c:	601a      	str	r2, [r3, #0]
 800369e:	2301      	movs	r3, #1
 80036a0:	633b      	str	r3, [r7, #48]	; 0x30
 80036a2:	f002 ff47 	bl	8006534 <vPortExitCritical>
 80036a6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80036a8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80036ac:	63fb      	str	r3, [r7, #60]	; 0x3c
 80036ae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80036b0:	4618      	mov	r0, r3
 80036b2:	3740      	adds	r7, #64	; 0x40
 80036b4:	46bd      	mov	sp, r7
 80036b6:	bd80      	pop	{r7, pc}
 80036b8:	e000ed04 	.word	0xe000ed04

080036bc <xEventGroupClearBits>:
 80036bc:	b580      	push	{r7, lr}
 80036be:	b086      	sub	sp, #24
 80036c0:	af00      	add	r7, sp, #0
 80036c2:	6078      	str	r0, [r7, #4]
 80036c4:	6039      	str	r1, [r7, #0]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	617b      	str	r3, [r7, #20]
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	2b00      	cmp	r3, #0
 80036ce:	d10a      	bne.n	80036e6 <xEventGroupClearBits+0x2a>
 80036d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036d4:	f383 8811 	msr	BASEPRI, r3
 80036d8:	f3bf 8f6f 	isb	sy
 80036dc:	f3bf 8f4f 	dsb	sy
 80036e0:	60fb      	str	r3, [r7, #12]
 80036e2:	bf00      	nop
 80036e4:	e7fe      	b.n	80036e4 <xEventGroupClearBits+0x28>
 80036e6:	683b      	ldr	r3, [r7, #0]
 80036e8:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80036ec:	2b00      	cmp	r3, #0
 80036ee:	d00a      	beq.n	8003706 <xEventGroupClearBits+0x4a>
 80036f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036f4:	f383 8811 	msr	BASEPRI, r3
 80036f8:	f3bf 8f6f 	isb	sy
 80036fc:	f3bf 8f4f 	dsb	sy
 8003700:	60bb      	str	r3, [r7, #8]
 8003702:	bf00      	nop
 8003704:	e7fe      	b.n	8003704 <xEventGroupClearBits+0x48>
 8003706:	f002 fee5 	bl	80064d4 <vPortEnterCritical>
 800370a:	697b      	ldr	r3, [r7, #20]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	613b      	str	r3, [r7, #16]
 8003710:	697b      	ldr	r3, [r7, #20]
 8003712:	681a      	ldr	r2, [r3, #0]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	43db      	mvns	r3, r3
 8003718:	401a      	ands	r2, r3
 800371a:	697b      	ldr	r3, [r7, #20]
 800371c:	601a      	str	r2, [r3, #0]
 800371e:	f002 ff09 	bl	8006534 <vPortExitCritical>
 8003722:	693b      	ldr	r3, [r7, #16]
 8003724:	4618      	mov	r0, r3
 8003726:	3718      	adds	r7, #24
 8003728:	46bd      	mov	sp, r7
 800372a:	bd80      	pop	{r7, pc}

0800372c <xEventGroupClearBitsFromISR>:
 800372c:	b580      	push	{r7, lr}
 800372e:	b084      	sub	sp, #16
 8003730:	af00      	add	r7, sp, #0
 8003732:	6078      	str	r0, [r7, #4]
 8003734:	6039      	str	r1, [r7, #0]
 8003736:	2300      	movs	r3, #0
 8003738:	683a      	ldr	r2, [r7, #0]
 800373a:	6879      	ldr	r1, [r7, #4]
 800373c:	4804      	ldr	r0, [pc, #16]	; (8003750 <xEventGroupClearBitsFromISR+0x24>)
 800373e:	f002 fd7b 	bl	8006238 <xTimerPendFunctionCallFromISR>
 8003742:	60f8      	str	r0, [r7, #12]
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	4618      	mov	r0, r3
 8003748:	3710      	adds	r7, #16
 800374a:	46bd      	mov	sp, r7
 800374c:	bd80      	pop	{r7, pc}
 800374e:	bf00      	nop
 8003750:	080038cd 	.word	0x080038cd

08003754 <xEventGroupGetBitsFromISR>:
 8003754:	b480      	push	{r7}
 8003756:	b089      	sub	sp, #36	; 0x24
 8003758:	af00      	add	r7, sp, #0
 800375a:	6078      	str	r0, [r7, #4]
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	61fb      	str	r3, [r7, #28]
 8003760:	f3ef 8211 	mrs	r2, BASEPRI
 8003764:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003768:	f383 8811 	msr	BASEPRI, r3
 800376c:	f3bf 8f6f 	isb	sy
 8003770:	f3bf 8f4f 	dsb	sy
 8003774:	60fa      	str	r2, [r7, #12]
 8003776:	60bb      	str	r3, [r7, #8]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	61bb      	str	r3, [r7, #24]
 800377c:	69fb      	ldr	r3, [r7, #28]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	617b      	str	r3, [r7, #20]
 8003782:	69bb      	ldr	r3, [r7, #24]
 8003784:	613b      	str	r3, [r7, #16]
 8003786:	693b      	ldr	r3, [r7, #16]
 8003788:	f383 8811 	msr	BASEPRI, r3
 800378c:	bf00      	nop
 800378e:	697b      	ldr	r3, [r7, #20]
 8003790:	4618      	mov	r0, r3
 8003792:	3724      	adds	r7, #36	; 0x24
 8003794:	46bd      	mov	sp, r7
 8003796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800379a:	4770      	bx	lr

0800379c <xEventGroupSetBits>:
 800379c:	b580      	push	{r7, lr}
 800379e:	b08e      	sub	sp, #56	; 0x38
 80037a0:	af00      	add	r7, sp, #0
 80037a2:	6078      	str	r0, [r7, #4]
 80037a4:	6039      	str	r1, [r7, #0]
 80037a6:	2300      	movs	r3, #0
 80037a8:	633b      	str	r3, [r7, #48]	; 0x30
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80037ae:	2300      	movs	r3, #0
 80037b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d10a      	bne.n	80037ce <xEventGroupSetBits+0x32>
 80037b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037bc:	f383 8811 	msr	BASEPRI, r3
 80037c0:	f3bf 8f6f 	isb	sy
 80037c4:	f3bf 8f4f 	dsb	sy
 80037c8:	613b      	str	r3, [r7, #16]
 80037ca:	bf00      	nop
 80037cc:	e7fe      	b.n	80037cc <xEventGroupSetBits+0x30>
 80037ce:	683b      	ldr	r3, [r7, #0]
 80037d0:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d00a      	beq.n	80037ee <xEventGroupSetBits+0x52>
 80037d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037dc:	f383 8811 	msr	BASEPRI, r3
 80037e0:	f3bf 8f6f 	isb	sy
 80037e4:	f3bf 8f4f 	dsb	sy
 80037e8:	60fb      	str	r3, [r7, #12]
 80037ea:	bf00      	nop
 80037ec:	e7fe      	b.n	80037ec <xEventGroupSetBits+0x50>
 80037ee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80037f0:	3304      	adds	r3, #4
 80037f2:	627b      	str	r3, [r7, #36]	; 0x24
 80037f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037f6:	3308      	adds	r3, #8
 80037f8:	623b      	str	r3, [r7, #32]
 80037fa:	f001 fb4f 	bl	8004e9c <vTaskSuspendAll>
 80037fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003800:	68db      	ldr	r3, [r3, #12]
 8003802:	637b      	str	r3, [r7, #52]	; 0x34
 8003804:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003806:	681a      	ldr	r2, [r3, #0]
 8003808:	683b      	ldr	r3, [r7, #0]
 800380a:	431a      	orrs	r2, r3
 800380c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800380e:	601a      	str	r2, [r3, #0]
 8003810:	e03c      	b.n	800388c <xEventGroupSetBits+0xf0>
 8003812:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003814:	685b      	ldr	r3, [r3, #4]
 8003816:	61fb      	str	r3, [r7, #28]
 8003818:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	61bb      	str	r3, [r7, #24]
 800381e:	2300      	movs	r3, #0
 8003820:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003822:	69bb      	ldr	r3, [r7, #24]
 8003824:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003828:	617b      	str	r3, [r7, #20]
 800382a:	69bb      	ldr	r3, [r7, #24]
 800382c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8003830:	61bb      	str	r3, [r7, #24]
 8003832:	697b      	ldr	r3, [r7, #20]
 8003834:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8003838:	2b00      	cmp	r3, #0
 800383a:	d108      	bne.n	800384e <xEventGroupSetBits+0xb2>
 800383c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800383e:	681a      	ldr	r2, [r3, #0]
 8003840:	69bb      	ldr	r3, [r7, #24]
 8003842:	4013      	ands	r3, r2
 8003844:	2b00      	cmp	r3, #0
 8003846:	d00b      	beq.n	8003860 <xEventGroupSetBits+0xc4>
 8003848:	2301      	movs	r3, #1
 800384a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800384c:	e008      	b.n	8003860 <xEventGroupSetBits+0xc4>
 800384e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003850:	681a      	ldr	r2, [r3, #0]
 8003852:	69bb      	ldr	r3, [r7, #24]
 8003854:	4013      	ands	r3, r2
 8003856:	69ba      	ldr	r2, [r7, #24]
 8003858:	429a      	cmp	r2, r3
 800385a:	d101      	bne.n	8003860 <xEventGroupSetBits+0xc4>
 800385c:	2301      	movs	r3, #1
 800385e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003860:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003862:	2b00      	cmp	r3, #0
 8003864:	d010      	beq.n	8003888 <xEventGroupSetBits+0xec>
 8003866:	697b      	ldr	r3, [r7, #20]
 8003868:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800386c:	2b00      	cmp	r3, #0
 800386e:	d003      	beq.n	8003878 <xEventGroupSetBits+0xdc>
 8003870:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003872:	69bb      	ldr	r3, [r7, #24]
 8003874:	4313      	orrs	r3, r2
 8003876:	633b      	str	r3, [r7, #48]	; 0x30
 8003878:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003880:	4619      	mov	r1, r3
 8003882:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003884:	f001 fdd4 	bl	8005430 <vTaskRemoveFromUnorderedEventList>
 8003888:	69fb      	ldr	r3, [r7, #28]
 800388a:	637b      	str	r3, [r7, #52]	; 0x34
 800388c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800388e:	6a3b      	ldr	r3, [r7, #32]
 8003890:	429a      	cmp	r2, r3
 8003892:	d1be      	bne.n	8003812 <xEventGroupSetBits+0x76>
 8003894:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003896:	681a      	ldr	r2, [r3, #0]
 8003898:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800389a:	43db      	mvns	r3, r3
 800389c:	401a      	ands	r2, r3
 800389e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038a0:	601a      	str	r2, [r3, #0]
 80038a2:	f001 fb09 	bl	8004eb8 <xTaskResumeAll>
 80038a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	4618      	mov	r0, r3
 80038ac:	3738      	adds	r7, #56	; 0x38
 80038ae:	46bd      	mov	sp, r7
 80038b0:	bd80      	pop	{r7, pc}

080038b2 <vEventGroupSetBitsCallback>:
 80038b2:	b580      	push	{r7, lr}
 80038b4:	b082      	sub	sp, #8
 80038b6:	af00      	add	r7, sp, #0
 80038b8:	6078      	str	r0, [r7, #4]
 80038ba:	6039      	str	r1, [r7, #0]
 80038bc:	6839      	ldr	r1, [r7, #0]
 80038be:	6878      	ldr	r0, [r7, #4]
 80038c0:	f7ff ff6c 	bl	800379c <xEventGroupSetBits>
 80038c4:	bf00      	nop
 80038c6:	3708      	adds	r7, #8
 80038c8:	46bd      	mov	sp, r7
 80038ca:	bd80      	pop	{r7, pc}

080038cc <vEventGroupClearBitsCallback>:
 80038cc:	b580      	push	{r7, lr}
 80038ce:	b082      	sub	sp, #8
 80038d0:	af00      	add	r7, sp, #0
 80038d2:	6078      	str	r0, [r7, #4]
 80038d4:	6039      	str	r1, [r7, #0]
 80038d6:	6839      	ldr	r1, [r7, #0]
 80038d8:	6878      	ldr	r0, [r7, #4]
 80038da:	f7ff feef 	bl	80036bc <xEventGroupClearBits>
 80038de:	bf00      	nop
 80038e0:	3708      	adds	r7, #8
 80038e2:	46bd      	mov	sp, r7
 80038e4:	bd80      	pop	{r7, pc}

080038e6 <prvTestWaitCondition>:
 80038e6:	b480      	push	{r7}
 80038e8:	b087      	sub	sp, #28
 80038ea:	af00      	add	r7, sp, #0
 80038ec:	60f8      	str	r0, [r7, #12]
 80038ee:	60b9      	str	r1, [r7, #8]
 80038f0:	607a      	str	r2, [r7, #4]
 80038f2:	2300      	movs	r3, #0
 80038f4:	617b      	str	r3, [r7, #20]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d107      	bne.n	800390c <prvTestWaitCondition+0x26>
 80038fc:	68fa      	ldr	r2, [r7, #12]
 80038fe:	68bb      	ldr	r3, [r7, #8]
 8003900:	4013      	ands	r3, r2
 8003902:	2b00      	cmp	r3, #0
 8003904:	d00a      	beq.n	800391c <prvTestWaitCondition+0x36>
 8003906:	2301      	movs	r3, #1
 8003908:	617b      	str	r3, [r7, #20]
 800390a:	e007      	b.n	800391c <prvTestWaitCondition+0x36>
 800390c:	68fa      	ldr	r2, [r7, #12]
 800390e:	68bb      	ldr	r3, [r7, #8]
 8003910:	4013      	ands	r3, r2
 8003912:	68ba      	ldr	r2, [r7, #8]
 8003914:	429a      	cmp	r2, r3
 8003916:	d101      	bne.n	800391c <prvTestWaitCondition+0x36>
 8003918:	2301      	movs	r3, #1
 800391a:	617b      	str	r3, [r7, #20]
 800391c:	697b      	ldr	r3, [r7, #20]
 800391e:	4618      	mov	r0, r3
 8003920:	371c      	adds	r7, #28
 8003922:	46bd      	mov	sp, r7
 8003924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003928:	4770      	bx	lr
	...

0800392c <xEventGroupSetBitsFromISR>:
 800392c:	b580      	push	{r7, lr}
 800392e:	b086      	sub	sp, #24
 8003930:	af00      	add	r7, sp, #0
 8003932:	60f8      	str	r0, [r7, #12]
 8003934:	60b9      	str	r1, [r7, #8]
 8003936:	607a      	str	r2, [r7, #4]
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	68ba      	ldr	r2, [r7, #8]
 800393c:	68f9      	ldr	r1, [r7, #12]
 800393e:	4804      	ldr	r0, [pc, #16]	; (8003950 <xEventGroupSetBitsFromISR+0x24>)
 8003940:	f002 fc7a 	bl	8006238 <xTimerPendFunctionCallFromISR>
 8003944:	6178      	str	r0, [r7, #20]
 8003946:	697b      	ldr	r3, [r7, #20]
 8003948:	4618      	mov	r0, r3
 800394a:	3718      	adds	r7, #24
 800394c:	46bd      	mov	sp, r7
 800394e:	bd80      	pop	{r7, pc}
 8003950:	080038b3 	.word	0x080038b3

08003954 <vListInitialise>:
 8003954:	b480      	push	{r7}
 8003956:	b083      	sub	sp, #12
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	f103 0208 	add.w	r2, r3, #8
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	605a      	str	r2, [r3, #4]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	f04f 32ff 	mov.w	r2, #4294967295
 800396c:	609a      	str	r2, [r3, #8]
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	f103 0208 	add.w	r2, r3, #8
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	60da      	str	r2, [r3, #12]
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	f103 0208 	add.w	r2, r3, #8
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	611a      	str	r2, [r3, #16]
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	2200      	movs	r2, #0
 8003986:	601a      	str	r2, [r3, #0]
 8003988:	bf00      	nop
 800398a:	370c      	adds	r7, #12
 800398c:	46bd      	mov	sp, r7
 800398e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003992:	4770      	bx	lr

08003994 <vListInitialiseItem>:
 8003994:	b480      	push	{r7}
 8003996:	b083      	sub	sp, #12
 8003998:	af00      	add	r7, sp, #0
 800399a:	6078      	str	r0, [r7, #4]
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	2200      	movs	r2, #0
 80039a0:	611a      	str	r2, [r3, #16]
 80039a2:	bf00      	nop
 80039a4:	370c      	adds	r7, #12
 80039a6:	46bd      	mov	sp, r7
 80039a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ac:	4770      	bx	lr

080039ae <vListInsertEnd>:
 80039ae:	b480      	push	{r7}
 80039b0:	b085      	sub	sp, #20
 80039b2:	af00      	add	r7, sp, #0
 80039b4:	6078      	str	r0, [r7, #4]
 80039b6:	6039      	str	r1, [r7, #0]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	685b      	ldr	r3, [r3, #4]
 80039bc:	60fb      	str	r3, [r7, #12]
 80039be:	683b      	ldr	r3, [r7, #0]
 80039c0:	68fa      	ldr	r2, [r7, #12]
 80039c2:	605a      	str	r2, [r3, #4]
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	689a      	ldr	r2, [r3, #8]
 80039c8:	683b      	ldr	r3, [r7, #0]
 80039ca:	609a      	str	r2, [r3, #8]
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	689b      	ldr	r3, [r3, #8]
 80039d0:	683a      	ldr	r2, [r7, #0]
 80039d2:	605a      	str	r2, [r3, #4]
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	683a      	ldr	r2, [r7, #0]
 80039d8:	609a      	str	r2, [r3, #8]
 80039da:	683b      	ldr	r3, [r7, #0]
 80039dc:	687a      	ldr	r2, [r7, #4]
 80039de:	611a      	str	r2, [r3, #16]
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	1c5a      	adds	r2, r3, #1
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	601a      	str	r2, [r3, #0]
 80039ea:	bf00      	nop
 80039ec:	3714      	adds	r7, #20
 80039ee:	46bd      	mov	sp, r7
 80039f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039f4:	4770      	bx	lr

080039f6 <vListInsert>:
 80039f6:	b480      	push	{r7}
 80039f8:	b085      	sub	sp, #20
 80039fa:	af00      	add	r7, sp, #0
 80039fc:	6078      	str	r0, [r7, #4]
 80039fe:	6039      	str	r1, [r7, #0]
 8003a00:	683b      	ldr	r3, [r7, #0]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	60bb      	str	r3, [r7, #8]
 8003a06:	68bb      	ldr	r3, [r7, #8]
 8003a08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003a0c:	d103      	bne.n	8003a16 <vListInsert+0x20>
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	691b      	ldr	r3, [r3, #16]
 8003a12:	60fb      	str	r3, [r7, #12]
 8003a14:	e00c      	b.n	8003a30 <vListInsert+0x3a>
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	3308      	adds	r3, #8
 8003a1a:	60fb      	str	r3, [r7, #12]
 8003a1c:	e002      	b.n	8003a24 <vListInsert+0x2e>
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	685b      	ldr	r3, [r3, #4]
 8003a22:	60fb      	str	r3, [r7, #12]
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	685b      	ldr	r3, [r3, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	68ba      	ldr	r2, [r7, #8]
 8003a2c:	429a      	cmp	r2, r3
 8003a2e:	d2f6      	bcs.n	8003a1e <vListInsert+0x28>
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	685a      	ldr	r2, [r3, #4]
 8003a34:	683b      	ldr	r3, [r7, #0]
 8003a36:	605a      	str	r2, [r3, #4]
 8003a38:	683b      	ldr	r3, [r7, #0]
 8003a3a:	685b      	ldr	r3, [r3, #4]
 8003a3c:	683a      	ldr	r2, [r7, #0]
 8003a3e:	609a      	str	r2, [r3, #8]
 8003a40:	683b      	ldr	r3, [r7, #0]
 8003a42:	68fa      	ldr	r2, [r7, #12]
 8003a44:	609a      	str	r2, [r3, #8]
 8003a46:	68fb      	ldr	r3, [r7, #12]
 8003a48:	683a      	ldr	r2, [r7, #0]
 8003a4a:	605a      	str	r2, [r3, #4]
 8003a4c:	683b      	ldr	r3, [r7, #0]
 8003a4e:	687a      	ldr	r2, [r7, #4]
 8003a50:	611a      	str	r2, [r3, #16]
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	1c5a      	adds	r2, r3, #1
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	601a      	str	r2, [r3, #0]
 8003a5c:	bf00      	nop
 8003a5e:	3714      	adds	r7, #20
 8003a60:	46bd      	mov	sp, r7
 8003a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a66:	4770      	bx	lr

08003a68 <uxListRemove>:
 8003a68:	b480      	push	{r7}
 8003a6a:	b085      	sub	sp, #20
 8003a6c:	af00      	add	r7, sp, #0
 8003a6e:	6078      	str	r0, [r7, #4]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	691b      	ldr	r3, [r3, #16]
 8003a74:	60fb      	str	r3, [r7, #12]
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	685b      	ldr	r3, [r3, #4]
 8003a7a:	687a      	ldr	r2, [r7, #4]
 8003a7c:	6892      	ldr	r2, [r2, #8]
 8003a7e:	609a      	str	r2, [r3, #8]
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	689b      	ldr	r3, [r3, #8]
 8003a84:	687a      	ldr	r2, [r7, #4]
 8003a86:	6852      	ldr	r2, [r2, #4]
 8003a88:	605a      	str	r2, [r3, #4]
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	685b      	ldr	r3, [r3, #4]
 8003a8e:	687a      	ldr	r2, [r7, #4]
 8003a90:	429a      	cmp	r2, r3
 8003a92:	d103      	bne.n	8003a9c <uxListRemove+0x34>
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	689a      	ldr	r2, [r3, #8]
 8003a98:	68fb      	ldr	r3, [r7, #12]
 8003a9a:	605a      	str	r2, [r3, #4]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2200      	movs	r2, #0
 8003aa0:	611a      	str	r2, [r3, #16]
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	1e5a      	subs	r2, r3, #1
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	601a      	str	r2, [r3, #0]
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	4618      	mov	r0, r3
 8003ab2:	3714      	adds	r7, #20
 8003ab4:	46bd      	mov	sp, r7
 8003ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aba:	4770      	bx	lr

08003abc <xQueueGenericReset>:
 8003abc:	b580      	push	{r7, lr}
 8003abe:	b084      	sub	sp, #16
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	6078      	str	r0, [r7, #4]
 8003ac4:	6039      	str	r1, [r7, #0]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	60fb      	str	r3, [r7, #12]
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d10a      	bne.n	8003ae6 <xQueueGenericReset+0x2a>
 8003ad0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ad4:	f383 8811 	msr	BASEPRI, r3
 8003ad8:	f3bf 8f6f 	isb	sy
 8003adc:	f3bf 8f4f 	dsb	sy
 8003ae0:	60bb      	str	r3, [r7, #8]
 8003ae2:	bf00      	nop
 8003ae4:	e7fe      	b.n	8003ae4 <xQueueGenericReset+0x28>
 8003ae6:	f002 fcf5 	bl	80064d4 <vPortEnterCritical>
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	681a      	ldr	r2, [r3, #0]
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003af2:	68f9      	ldr	r1, [r7, #12]
 8003af4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8003af6:	fb01 f303 	mul.w	r3, r1, r3
 8003afa:	441a      	add	r2, r3
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	609a      	str	r2, [r3, #8]
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2200      	movs	r2, #0
 8003b04:	639a      	str	r2, [r3, #56]	; 0x38
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	681a      	ldr	r2, [r3, #0]
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	605a      	str	r2, [r3, #4]
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	681a      	ldr	r2, [r3, #0]
 8003b12:	68fb      	ldr	r3, [r7, #12]
 8003b14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003b16:	3b01      	subs	r3, #1
 8003b18:	68f9      	ldr	r1, [r7, #12]
 8003b1a:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8003b1c:	fb01 f303 	mul.w	r3, r1, r3
 8003b20:	441a      	add	r2, r3
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	60da      	str	r2, [r3, #12]
 8003b26:	68fb      	ldr	r3, [r7, #12]
 8003b28:	22ff      	movs	r2, #255	; 0xff
 8003b2a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	22ff      	movs	r2, #255	; 0xff
 8003b32:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003b36:	683b      	ldr	r3, [r7, #0]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d114      	bne.n	8003b66 <xQueueGenericReset+0xaa>
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	691b      	ldr	r3, [r3, #16]
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d01a      	beq.n	8003b7a <xQueueGenericReset+0xbe>
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	3310      	adds	r3, #16
 8003b48:	4618      	mov	r0, r3
 8003b4a:	f001 fc0d 	bl	8005368 <xTaskRemoveFromEventList>
 8003b4e:	4603      	mov	r3, r0
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d012      	beq.n	8003b7a <xQueueGenericReset+0xbe>
 8003b54:	4b0c      	ldr	r3, [pc, #48]	; (8003b88 <xQueueGenericReset+0xcc>)
 8003b56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003b5a:	601a      	str	r2, [r3, #0]
 8003b5c:	f3bf 8f4f 	dsb	sy
 8003b60:	f3bf 8f6f 	isb	sy
 8003b64:	e009      	b.n	8003b7a <xQueueGenericReset+0xbe>
 8003b66:	68fb      	ldr	r3, [r7, #12]
 8003b68:	3310      	adds	r3, #16
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	f7ff fef2 	bl	8003954 <vListInitialise>
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	3324      	adds	r3, #36	; 0x24
 8003b74:	4618      	mov	r0, r3
 8003b76:	f7ff feed 	bl	8003954 <vListInitialise>
 8003b7a:	f002 fcdb 	bl	8006534 <vPortExitCritical>
 8003b7e:	2301      	movs	r3, #1
 8003b80:	4618      	mov	r0, r3
 8003b82:	3710      	adds	r7, #16
 8003b84:	46bd      	mov	sp, r7
 8003b86:	bd80      	pop	{r7, pc}
 8003b88:	e000ed04 	.word	0xe000ed04

08003b8c <xQueueGenericCreateStatic>:
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b08e      	sub	sp, #56	; 0x38
 8003b90:	af02      	add	r7, sp, #8
 8003b92:	60f8      	str	r0, [r7, #12]
 8003b94:	60b9      	str	r1, [r7, #8]
 8003b96:	607a      	str	r2, [r7, #4]
 8003b98:	603b      	str	r3, [r7, #0]
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	2b00      	cmp	r3, #0
 8003b9e:	d10a      	bne.n	8003bb6 <xQueueGenericCreateStatic+0x2a>
 8003ba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ba4:	f383 8811 	msr	BASEPRI, r3
 8003ba8:	f3bf 8f6f 	isb	sy
 8003bac:	f3bf 8f4f 	dsb	sy
 8003bb0:	62bb      	str	r3, [r7, #40]	; 0x28
 8003bb2:	bf00      	nop
 8003bb4:	e7fe      	b.n	8003bb4 <xQueueGenericCreateStatic+0x28>
 8003bb6:	683b      	ldr	r3, [r7, #0]
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	d10a      	bne.n	8003bd2 <xQueueGenericCreateStatic+0x46>
 8003bbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bc0:	f383 8811 	msr	BASEPRI, r3
 8003bc4:	f3bf 8f6f 	isb	sy
 8003bc8:	f3bf 8f4f 	dsb	sy
 8003bcc:	627b      	str	r3, [r7, #36]	; 0x24
 8003bce:	bf00      	nop
 8003bd0:	e7fe      	b.n	8003bd0 <xQueueGenericCreateStatic+0x44>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	2b00      	cmp	r3, #0
 8003bd6:	d002      	beq.n	8003bde <xQueueGenericCreateStatic+0x52>
 8003bd8:	68bb      	ldr	r3, [r7, #8]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d001      	beq.n	8003be2 <xQueueGenericCreateStatic+0x56>
 8003bde:	2301      	movs	r3, #1
 8003be0:	e000      	b.n	8003be4 <xQueueGenericCreateStatic+0x58>
 8003be2:	2300      	movs	r3, #0
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d10a      	bne.n	8003bfe <xQueueGenericCreateStatic+0x72>
 8003be8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bec:	f383 8811 	msr	BASEPRI, r3
 8003bf0:	f3bf 8f6f 	isb	sy
 8003bf4:	f3bf 8f4f 	dsb	sy
 8003bf8:	623b      	str	r3, [r7, #32]
 8003bfa:	bf00      	nop
 8003bfc:	e7fe      	b.n	8003bfc <xQueueGenericCreateStatic+0x70>
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d102      	bne.n	8003c0a <xQueueGenericCreateStatic+0x7e>
 8003c04:	68bb      	ldr	r3, [r7, #8]
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d101      	bne.n	8003c0e <xQueueGenericCreateStatic+0x82>
 8003c0a:	2301      	movs	r3, #1
 8003c0c:	e000      	b.n	8003c10 <xQueueGenericCreateStatic+0x84>
 8003c0e:	2300      	movs	r3, #0
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d10a      	bne.n	8003c2a <xQueueGenericCreateStatic+0x9e>
 8003c14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c18:	f383 8811 	msr	BASEPRI, r3
 8003c1c:	f3bf 8f6f 	isb	sy
 8003c20:	f3bf 8f4f 	dsb	sy
 8003c24:	61fb      	str	r3, [r7, #28]
 8003c26:	bf00      	nop
 8003c28:	e7fe      	b.n	8003c28 <xQueueGenericCreateStatic+0x9c>
 8003c2a:	2350      	movs	r3, #80	; 0x50
 8003c2c:	617b      	str	r3, [r7, #20]
 8003c2e:	697b      	ldr	r3, [r7, #20]
 8003c30:	2b50      	cmp	r3, #80	; 0x50
 8003c32:	d00a      	beq.n	8003c4a <xQueueGenericCreateStatic+0xbe>
 8003c34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c38:	f383 8811 	msr	BASEPRI, r3
 8003c3c:	f3bf 8f6f 	isb	sy
 8003c40:	f3bf 8f4f 	dsb	sy
 8003c44:	61bb      	str	r3, [r7, #24]
 8003c46:	bf00      	nop
 8003c48:	e7fe      	b.n	8003c48 <xQueueGenericCreateStatic+0xbc>
 8003c4a:	697b      	ldr	r3, [r7, #20]
 8003c4c:	683b      	ldr	r3, [r7, #0]
 8003c4e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003c50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d00d      	beq.n	8003c72 <xQueueGenericCreateStatic+0xe6>
 8003c56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c58:	2201      	movs	r2, #1
 8003c5a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003c5e:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8003c62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c64:	9300      	str	r3, [sp, #0]
 8003c66:	4613      	mov	r3, r2
 8003c68:	687a      	ldr	r2, [r7, #4]
 8003c6a:	68b9      	ldr	r1, [r7, #8]
 8003c6c:	68f8      	ldr	r0, [r7, #12]
 8003c6e:	f000 f83f 	bl	8003cf0 <prvInitialiseNewQueue>
 8003c72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c74:	4618      	mov	r0, r3
 8003c76:	3730      	adds	r7, #48	; 0x30
 8003c78:	46bd      	mov	sp, r7
 8003c7a:	bd80      	pop	{r7, pc}

08003c7c <xQueueGenericCreate>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	b08a      	sub	sp, #40	; 0x28
 8003c80:	af02      	add	r7, sp, #8
 8003c82:	60f8      	str	r0, [r7, #12]
 8003c84:	60b9      	str	r1, [r7, #8]
 8003c86:	4613      	mov	r3, r2
 8003c88:	71fb      	strb	r3, [r7, #7]
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d10a      	bne.n	8003ca6 <xQueueGenericCreate+0x2a>
 8003c90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003c94:	f383 8811 	msr	BASEPRI, r3
 8003c98:	f3bf 8f6f 	isb	sy
 8003c9c:	f3bf 8f4f 	dsb	sy
 8003ca0:	613b      	str	r3, [r7, #16]
 8003ca2:	bf00      	nop
 8003ca4:	e7fe      	b.n	8003ca4 <xQueueGenericCreate+0x28>
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	68ba      	ldr	r2, [r7, #8]
 8003caa:	fb02 f303 	mul.w	r3, r2, r3
 8003cae:	61fb      	str	r3, [r7, #28]
 8003cb0:	69fb      	ldr	r3, [r7, #28]
 8003cb2:	3350      	adds	r3, #80	; 0x50
 8003cb4:	4618      	mov	r0, r3
 8003cb6:	f002 fd2f 	bl	8006718 <pvPortMalloc>
 8003cba:	61b8      	str	r0, [r7, #24]
 8003cbc:	69bb      	ldr	r3, [r7, #24]
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d011      	beq.n	8003ce6 <xQueueGenericCreate+0x6a>
 8003cc2:	69bb      	ldr	r3, [r7, #24]
 8003cc4:	617b      	str	r3, [r7, #20]
 8003cc6:	697b      	ldr	r3, [r7, #20]
 8003cc8:	3350      	adds	r3, #80	; 0x50
 8003cca:	617b      	str	r3, [r7, #20]
 8003ccc:	69bb      	ldr	r3, [r7, #24]
 8003cce:	2200      	movs	r2, #0
 8003cd0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003cd4:	79fa      	ldrb	r2, [r7, #7]
 8003cd6:	69bb      	ldr	r3, [r7, #24]
 8003cd8:	9300      	str	r3, [sp, #0]
 8003cda:	4613      	mov	r3, r2
 8003cdc:	697a      	ldr	r2, [r7, #20]
 8003cde:	68b9      	ldr	r1, [r7, #8]
 8003ce0:	68f8      	ldr	r0, [r7, #12]
 8003ce2:	f000 f805 	bl	8003cf0 <prvInitialiseNewQueue>
 8003ce6:	69bb      	ldr	r3, [r7, #24]
 8003ce8:	4618      	mov	r0, r3
 8003cea:	3720      	adds	r7, #32
 8003cec:	46bd      	mov	sp, r7
 8003cee:	bd80      	pop	{r7, pc}

08003cf0 <prvInitialiseNewQueue>:
 8003cf0:	b580      	push	{r7, lr}
 8003cf2:	b084      	sub	sp, #16
 8003cf4:	af00      	add	r7, sp, #0
 8003cf6:	60f8      	str	r0, [r7, #12]
 8003cf8:	60b9      	str	r1, [r7, #8]
 8003cfa:	607a      	str	r2, [r7, #4]
 8003cfc:	70fb      	strb	r3, [r7, #3]
 8003cfe:	68bb      	ldr	r3, [r7, #8]
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d103      	bne.n	8003d0c <prvInitialiseNewQueue+0x1c>
 8003d04:	69bb      	ldr	r3, [r7, #24]
 8003d06:	69ba      	ldr	r2, [r7, #24]
 8003d08:	601a      	str	r2, [r3, #0]
 8003d0a:	e002      	b.n	8003d12 <prvInitialiseNewQueue+0x22>
 8003d0c:	69bb      	ldr	r3, [r7, #24]
 8003d0e:	687a      	ldr	r2, [r7, #4]
 8003d10:	601a      	str	r2, [r3, #0]
 8003d12:	69bb      	ldr	r3, [r7, #24]
 8003d14:	68fa      	ldr	r2, [r7, #12]
 8003d16:	63da      	str	r2, [r3, #60]	; 0x3c
 8003d18:	69bb      	ldr	r3, [r7, #24]
 8003d1a:	68ba      	ldr	r2, [r7, #8]
 8003d1c:	641a      	str	r2, [r3, #64]	; 0x40
 8003d1e:	2101      	movs	r1, #1
 8003d20:	69b8      	ldr	r0, [r7, #24]
 8003d22:	f7ff fecb 	bl	8003abc <xQueueGenericReset>
 8003d26:	69bb      	ldr	r3, [r7, #24]
 8003d28:	78fa      	ldrb	r2, [r7, #3]
 8003d2a:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8003d2e:	bf00      	nop
 8003d30:	3710      	adds	r7, #16
 8003d32:	46bd      	mov	sp, r7
 8003d34:	bd80      	pop	{r7, pc}

08003d36 <xQueueCreateCountingSemaphoreStatic>:
 8003d36:	b580      	push	{r7, lr}
 8003d38:	b08a      	sub	sp, #40	; 0x28
 8003d3a:	af02      	add	r7, sp, #8
 8003d3c:	60f8      	str	r0, [r7, #12]
 8003d3e:	60b9      	str	r1, [r7, #8]
 8003d40:	607a      	str	r2, [r7, #4]
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	d10a      	bne.n	8003d5e <xQueueCreateCountingSemaphoreStatic+0x28>
 8003d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d4c:	f383 8811 	msr	BASEPRI, r3
 8003d50:	f3bf 8f6f 	isb	sy
 8003d54:	f3bf 8f4f 	dsb	sy
 8003d58:	61bb      	str	r3, [r7, #24]
 8003d5a:	bf00      	nop
 8003d5c:	e7fe      	b.n	8003d5c <xQueueCreateCountingSemaphoreStatic+0x26>
 8003d5e:	68ba      	ldr	r2, [r7, #8]
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	429a      	cmp	r2, r3
 8003d64:	d90a      	bls.n	8003d7c <xQueueCreateCountingSemaphoreStatic+0x46>
 8003d66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d6a:	f383 8811 	msr	BASEPRI, r3
 8003d6e:	f3bf 8f6f 	isb	sy
 8003d72:	f3bf 8f4f 	dsb	sy
 8003d76:	617b      	str	r3, [r7, #20]
 8003d78:	bf00      	nop
 8003d7a:	e7fe      	b.n	8003d7a <xQueueCreateCountingSemaphoreStatic+0x44>
 8003d7c:	2302      	movs	r3, #2
 8003d7e:	9300      	str	r3, [sp, #0]
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	2200      	movs	r2, #0
 8003d84:	2100      	movs	r1, #0
 8003d86:	68f8      	ldr	r0, [r7, #12]
 8003d88:	f7ff ff00 	bl	8003b8c <xQueueGenericCreateStatic>
 8003d8c:	61f8      	str	r0, [r7, #28]
 8003d8e:	69fb      	ldr	r3, [r7, #28]
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d002      	beq.n	8003d9a <xQueueCreateCountingSemaphoreStatic+0x64>
 8003d94:	69fb      	ldr	r3, [r7, #28]
 8003d96:	68ba      	ldr	r2, [r7, #8]
 8003d98:	639a      	str	r2, [r3, #56]	; 0x38
 8003d9a:	69fb      	ldr	r3, [r7, #28]
 8003d9c:	4618      	mov	r0, r3
 8003d9e:	3720      	adds	r7, #32
 8003da0:	46bd      	mov	sp, r7
 8003da2:	bd80      	pop	{r7, pc}

08003da4 <xQueueGenericSend>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	b08e      	sub	sp, #56	; 0x38
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	60f8      	str	r0, [r7, #12]
 8003dac:	60b9      	str	r1, [r7, #8]
 8003dae:	607a      	str	r2, [r7, #4]
 8003db0:	603b      	str	r3, [r7, #0]
 8003db2:	2300      	movs	r3, #0
 8003db4:	637b      	str	r3, [r7, #52]	; 0x34
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	633b      	str	r3, [r7, #48]	; 0x30
 8003dba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d10a      	bne.n	8003dd6 <xQueueGenericSend+0x32>
 8003dc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003dc4:	f383 8811 	msr	BASEPRI, r3
 8003dc8:	f3bf 8f6f 	isb	sy
 8003dcc:	f3bf 8f4f 	dsb	sy
 8003dd0:	62bb      	str	r3, [r7, #40]	; 0x28
 8003dd2:	bf00      	nop
 8003dd4:	e7fe      	b.n	8003dd4 <xQueueGenericSend+0x30>
 8003dd6:	68bb      	ldr	r3, [r7, #8]
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	d103      	bne.n	8003de4 <xQueueGenericSend+0x40>
 8003ddc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003dde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	d101      	bne.n	8003de8 <xQueueGenericSend+0x44>
 8003de4:	2301      	movs	r3, #1
 8003de6:	e000      	b.n	8003dea <xQueueGenericSend+0x46>
 8003de8:	2300      	movs	r3, #0
 8003dea:	2b00      	cmp	r3, #0
 8003dec:	d10a      	bne.n	8003e04 <xQueueGenericSend+0x60>
 8003dee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003df2:	f383 8811 	msr	BASEPRI, r3
 8003df6:	f3bf 8f6f 	isb	sy
 8003dfa:	f3bf 8f4f 	dsb	sy
 8003dfe:	627b      	str	r3, [r7, #36]	; 0x24
 8003e00:	bf00      	nop
 8003e02:	e7fe      	b.n	8003e02 <xQueueGenericSend+0x5e>
 8003e04:	683b      	ldr	r3, [r7, #0]
 8003e06:	2b02      	cmp	r3, #2
 8003e08:	d103      	bne.n	8003e12 <xQueueGenericSend+0x6e>
 8003e0a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003e0e:	2b01      	cmp	r3, #1
 8003e10:	d101      	bne.n	8003e16 <xQueueGenericSend+0x72>
 8003e12:	2301      	movs	r3, #1
 8003e14:	e000      	b.n	8003e18 <xQueueGenericSend+0x74>
 8003e16:	2300      	movs	r3, #0
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d10a      	bne.n	8003e32 <xQueueGenericSend+0x8e>
 8003e1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003e20:	f383 8811 	msr	BASEPRI, r3
 8003e24:	f3bf 8f6f 	isb	sy
 8003e28:	f3bf 8f4f 	dsb	sy
 8003e2c:	623b      	str	r3, [r7, #32]
 8003e2e:	bf00      	nop
 8003e30:	e7fe      	b.n	8003e30 <xQueueGenericSend+0x8c>
 8003e32:	f001 fcbd 	bl	80057b0 <xTaskGetSchedulerState>
 8003e36:	4603      	mov	r3, r0
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d102      	bne.n	8003e42 <xQueueGenericSend+0x9e>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d101      	bne.n	8003e46 <xQueueGenericSend+0xa2>
 8003e42:	2301      	movs	r3, #1
 8003e44:	e000      	b.n	8003e48 <xQueueGenericSend+0xa4>
 8003e46:	2300      	movs	r3, #0
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	d10a      	bne.n	8003e62 <xQueueGenericSend+0xbe>
 8003e4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003e50:	f383 8811 	msr	BASEPRI, r3
 8003e54:	f3bf 8f6f 	isb	sy
 8003e58:	f3bf 8f4f 	dsb	sy
 8003e5c:	61fb      	str	r3, [r7, #28]
 8003e5e:	bf00      	nop
 8003e60:	e7fe      	b.n	8003e60 <xQueueGenericSend+0xbc>
 8003e62:	f002 fb37 	bl	80064d4 <vPortEnterCritical>
 8003e66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e68:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003e6a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003e6e:	429a      	cmp	r2, r3
 8003e70:	d302      	bcc.n	8003e78 <xQueueGenericSend+0xd4>
 8003e72:	683b      	ldr	r3, [r7, #0]
 8003e74:	2b02      	cmp	r3, #2
 8003e76:	d129      	bne.n	8003ecc <xQueueGenericSend+0x128>
 8003e78:	683a      	ldr	r2, [r7, #0]
 8003e7a:	68b9      	ldr	r1, [r7, #8]
 8003e7c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003e7e:	f000 fc77 	bl	8004770 <prvCopyDataToQueue>
 8003e82:	62f8      	str	r0, [r7, #44]	; 0x2c
 8003e84:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d010      	beq.n	8003eae <xQueueGenericSend+0x10a>
 8003e8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e8e:	3324      	adds	r3, #36	; 0x24
 8003e90:	4618      	mov	r0, r3
 8003e92:	f001 fa69 	bl	8005368 <xTaskRemoveFromEventList>
 8003e96:	4603      	mov	r3, r0
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d013      	beq.n	8003ec4 <xQueueGenericSend+0x120>
 8003e9c:	4b3f      	ldr	r3, [pc, #252]	; (8003f9c <xQueueGenericSend+0x1f8>)
 8003e9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003ea2:	601a      	str	r2, [r3, #0]
 8003ea4:	f3bf 8f4f 	dsb	sy
 8003ea8:	f3bf 8f6f 	isb	sy
 8003eac:	e00a      	b.n	8003ec4 <xQueueGenericSend+0x120>
 8003eae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003eb0:	2b00      	cmp	r3, #0
 8003eb2:	d007      	beq.n	8003ec4 <xQueueGenericSend+0x120>
 8003eb4:	4b39      	ldr	r3, [pc, #228]	; (8003f9c <xQueueGenericSend+0x1f8>)
 8003eb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003eba:	601a      	str	r2, [r3, #0]
 8003ebc:	f3bf 8f4f 	dsb	sy
 8003ec0:	f3bf 8f6f 	isb	sy
 8003ec4:	f002 fb36 	bl	8006534 <vPortExitCritical>
 8003ec8:	2301      	movs	r3, #1
 8003eca:	e063      	b.n	8003f94 <xQueueGenericSend+0x1f0>
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	d103      	bne.n	8003eda <xQueueGenericSend+0x136>
 8003ed2:	f002 fb2f 	bl	8006534 <vPortExitCritical>
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	e05c      	b.n	8003f94 <xQueueGenericSend+0x1f0>
 8003eda:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d106      	bne.n	8003eee <xQueueGenericSend+0x14a>
 8003ee0:	f107 0314 	add.w	r3, r7, #20
 8003ee4:	4618      	mov	r0, r3
 8003ee6:	f001 fb05 	bl	80054f4 <vTaskInternalSetTimeOutState>
 8003eea:	2301      	movs	r3, #1
 8003eec:	637b      	str	r3, [r7, #52]	; 0x34
 8003eee:	f002 fb21 	bl	8006534 <vPortExitCritical>
 8003ef2:	f000 ffd3 	bl	8004e9c <vTaskSuspendAll>
 8003ef6:	f002 faed 	bl	80064d4 <vPortEnterCritical>
 8003efa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003efc:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8003f00:	b25b      	sxtb	r3, r3
 8003f02:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f06:	d103      	bne.n	8003f10 <xQueueGenericSend+0x16c>
 8003f08:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f0a:	2200      	movs	r2, #0
 8003f0c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003f10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f12:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8003f16:	b25b      	sxtb	r3, r3
 8003f18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f1c:	d103      	bne.n	8003f26 <xQueueGenericSend+0x182>
 8003f1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f20:	2200      	movs	r2, #0
 8003f22:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003f26:	f002 fb05 	bl	8006534 <vPortExitCritical>
 8003f2a:	1d3a      	adds	r2, r7, #4
 8003f2c:	f107 0314 	add.w	r3, r7, #20
 8003f30:	4611      	mov	r1, r2
 8003f32:	4618      	mov	r0, r3
 8003f34:	f001 faf4 	bl	8005520 <xTaskCheckForTimeOut>
 8003f38:	4603      	mov	r3, r0
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d124      	bne.n	8003f88 <xQueueGenericSend+0x1e4>
 8003f3e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003f40:	f000 fd0e 	bl	8004960 <prvIsQueueFull>
 8003f44:	4603      	mov	r3, r0
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d018      	beq.n	8003f7c <xQueueGenericSend+0x1d8>
 8003f4a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f4c:	3310      	adds	r3, #16
 8003f4e:	687a      	ldr	r2, [r7, #4]
 8003f50:	4611      	mov	r1, r2
 8003f52:	4618      	mov	r0, r3
 8003f54:	f001 f97c 	bl	8005250 <vTaskPlaceOnEventList>
 8003f58:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003f5a:	f000 fc99 	bl	8004890 <prvUnlockQueue>
 8003f5e:	f000 ffab 	bl	8004eb8 <xTaskResumeAll>
 8003f62:	4603      	mov	r3, r0
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	f47f af7c 	bne.w	8003e62 <xQueueGenericSend+0xbe>
 8003f6a:	4b0c      	ldr	r3, [pc, #48]	; (8003f9c <xQueueGenericSend+0x1f8>)
 8003f6c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003f70:	601a      	str	r2, [r3, #0]
 8003f72:	f3bf 8f4f 	dsb	sy
 8003f76:	f3bf 8f6f 	isb	sy
 8003f7a:	e772      	b.n	8003e62 <xQueueGenericSend+0xbe>
 8003f7c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003f7e:	f000 fc87 	bl	8004890 <prvUnlockQueue>
 8003f82:	f000 ff99 	bl	8004eb8 <xTaskResumeAll>
 8003f86:	e76c      	b.n	8003e62 <xQueueGenericSend+0xbe>
 8003f88:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003f8a:	f000 fc81 	bl	8004890 <prvUnlockQueue>
 8003f8e:	f000 ff93 	bl	8004eb8 <xTaskResumeAll>
 8003f92:	2300      	movs	r3, #0
 8003f94:	4618      	mov	r0, r3
 8003f96:	3738      	adds	r7, #56	; 0x38
 8003f98:	46bd      	mov	sp, r7
 8003f9a:	bd80      	pop	{r7, pc}
 8003f9c:	e000ed04 	.word	0xe000ed04

08003fa0 <xQueueGenericSendFromISR>:
 8003fa0:	b580      	push	{r7, lr}
 8003fa2:	b090      	sub	sp, #64	; 0x40
 8003fa4:	af00      	add	r7, sp, #0
 8003fa6:	60f8      	str	r0, [r7, #12]
 8003fa8:	60b9      	str	r1, [r7, #8]
 8003faa:	607a      	str	r2, [r7, #4]
 8003fac:	603b      	str	r3, [r7, #0]
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	63bb      	str	r3, [r7, #56]	; 0x38
 8003fb2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	d10a      	bne.n	8003fce <xQueueGenericSendFromISR+0x2e>
 8003fb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003fbc:	f383 8811 	msr	BASEPRI, r3
 8003fc0:	f3bf 8f6f 	isb	sy
 8003fc4:	f3bf 8f4f 	dsb	sy
 8003fc8:	62bb      	str	r3, [r7, #40]	; 0x28
 8003fca:	bf00      	nop
 8003fcc:	e7fe      	b.n	8003fcc <xQueueGenericSendFromISR+0x2c>
 8003fce:	68bb      	ldr	r3, [r7, #8]
 8003fd0:	2b00      	cmp	r3, #0
 8003fd2:	d103      	bne.n	8003fdc <xQueueGenericSendFromISR+0x3c>
 8003fd4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003fd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fd8:	2b00      	cmp	r3, #0
 8003fda:	d101      	bne.n	8003fe0 <xQueueGenericSendFromISR+0x40>
 8003fdc:	2301      	movs	r3, #1
 8003fde:	e000      	b.n	8003fe2 <xQueueGenericSendFromISR+0x42>
 8003fe0:	2300      	movs	r3, #0
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d10a      	bne.n	8003ffc <xQueueGenericSendFromISR+0x5c>
 8003fe6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003fea:	f383 8811 	msr	BASEPRI, r3
 8003fee:	f3bf 8f6f 	isb	sy
 8003ff2:	f3bf 8f4f 	dsb	sy
 8003ff6:	627b      	str	r3, [r7, #36]	; 0x24
 8003ff8:	bf00      	nop
 8003ffa:	e7fe      	b.n	8003ffa <xQueueGenericSendFromISR+0x5a>
 8003ffc:	683b      	ldr	r3, [r7, #0]
 8003ffe:	2b02      	cmp	r3, #2
 8004000:	d103      	bne.n	800400a <xQueueGenericSendFromISR+0x6a>
 8004002:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004004:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004006:	2b01      	cmp	r3, #1
 8004008:	d101      	bne.n	800400e <xQueueGenericSendFromISR+0x6e>
 800400a:	2301      	movs	r3, #1
 800400c:	e000      	b.n	8004010 <xQueueGenericSendFromISR+0x70>
 800400e:	2300      	movs	r3, #0
 8004010:	2b00      	cmp	r3, #0
 8004012:	d10a      	bne.n	800402a <xQueueGenericSendFromISR+0x8a>
 8004014:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004018:	f383 8811 	msr	BASEPRI, r3
 800401c:	f3bf 8f6f 	isb	sy
 8004020:	f3bf 8f4f 	dsb	sy
 8004024:	623b      	str	r3, [r7, #32]
 8004026:	bf00      	nop
 8004028:	e7fe      	b.n	8004028 <xQueueGenericSendFromISR+0x88>
 800402a:	f002 fb35 	bl	8006698 <vPortValidateInterruptPriority>
 800402e:	f3ef 8211 	mrs	r2, BASEPRI
 8004032:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004036:	f383 8811 	msr	BASEPRI, r3
 800403a:	f3bf 8f6f 	isb	sy
 800403e:	f3bf 8f4f 	dsb	sy
 8004042:	61fa      	str	r2, [r7, #28]
 8004044:	61bb      	str	r3, [r7, #24]
 8004046:	69fb      	ldr	r3, [r7, #28]
 8004048:	637b      	str	r3, [r7, #52]	; 0x34
 800404a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800404c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800404e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004050:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004052:	429a      	cmp	r2, r3
 8004054:	d302      	bcc.n	800405c <xQueueGenericSendFromISR+0xbc>
 8004056:	683b      	ldr	r3, [r7, #0]
 8004058:	2b02      	cmp	r3, #2
 800405a:	d12f      	bne.n	80040bc <xQueueGenericSendFromISR+0x11c>
 800405c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800405e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004062:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8004066:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004068:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800406a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800406c:	683a      	ldr	r2, [r7, #0]
 800406e:	68b9      	ldr	r1, [r7, #8]
 8004070:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8004072:	f000 fb7d 	bl	8004770 <prvCopyDataToQueue>
 8004076:	f997 3033 	ldrsb.w	r3, [r7, #51]	; 0x33
 800407a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800407e:	d112      	bne.n	80040a6 <xQueueGenericSendFromISR+0x106>
 8004080:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004084:	2b00      	cmp	r3, #0
 8004086:	d016      	beq.n	80040b6 <xQueueGenericSendFromISR+0x116>
 8004088:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800408a:	3324      	adds	r3, #36	; 0x24
 800408c:	4618      	mov	r0, r3
 800408e:	f001 f96b 	bl	8005368 <xTaskRemoveFromEventList>
 8004092:	4603      	mov	r3, r0
 8004094:	2b00      	cmp	r3, #0
 8004096:	d00e      	beq.n	80040b6 <xQueueGenericSendFromISR+0x116>
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	2b00      	cmp	r3, #0
 800409c:	d00b      	beq.n	80040b6 <xQueueGenericSendFromISR+0x116>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	2201      	movs	r2, #1
 80040a2:	601a      	str	r2, [r3, #0]
 80040a4:	e007      	b.n	80040b6 <xQueueGenericSendFromISR+0x116>
 80040a6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80040aa:	3301      	adds	r3, #1
 80040ac:	b2db      	uxtb	r3, r3
 80040ae:	b25a      	sxtb	r2, r3
 80040b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80040b2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80040b6:	2301      	movs	r3, #1
 80040b8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80040ba:	e001      	b.n	80040c0 <xQueueGenericSendFromISR+0x120>
 80040bc:	2300      	movs	r3, #0
 80040be:	63fb      	str	r3, [r7, #60]	; 0x3c
 80040c0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80040c2:	617b      	str	r3, [r7, #20]
 80040c4:	697b      	ldr	r3, [r7, #20]
 80040c6:	f383 8811 	msr	BASEPRI, r3
 80040ca:	bf00      	nop
 80040cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80040ce:	4618      	mov	r0, r3
 80040d0:	3740      	adds	r7, #64	; 0x40
 80040d2:	46bd      	mov	sp, r7
 80040d4:	bd80      	pop	{r7, pc}

080040d6 <xQueueGiveFromISR>:
 80040d6:	b580      	push	{r7, lr}
 80040d8:	b08e      	sub	sp, #56	; 0x38
 80040da:	af00      	add	r7, sp, #0
 80040dc:	6078      	str	r0, [r7, #4]
 80040de:	6039      	str	r1, [r7, #0]
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	633b      	str	r3, [r7, #48]	; 0x30
 80040e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80040e6:	2b00      	cmp	r3, #0
 80040e8:	d10a      	bne.n	8004100 <xQueueGiveFromISR+0x2a>
 80040ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040ee:	f383 8811 	msr	BASEPRI, r3
 80040f2:	f3bf 8f6f 	isb	sy
 80040f6:	f3bf 8f4f 	dsb	sy
 80040fa:	623b      	str	r3, [r7, #32]
 80040fc:	bf00      	nop
 80040fe:	e7fe      	b.n	80040fe <xQueueGiveFromISR+0x28>
 8004100:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004102:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004104:	2b00      	cmp	r3, #0
 8004106:	d00a      	beq.n	800411e <xQueueGiveFromISR+0x48>
 8004108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800410c:	f383 8811 	msr	BASEPRI, r3
 8004110:	f3bf 8f6f 	isb	sy
 8004114:	f3bf 8f4f 	dsb	sy
 8004118:	61fb      	str	r3, [r7, #28]
 800411a:	bf00      	nop
 800411c:	e7fe      	b.n	800411c <xQueueGiveFromISR+0x46>
 800411e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	2b00      	cmp	r3, #0
 8004124:	d103      	bne.n	800412e <xQueueGiveFromISR+0x58>
 8004126:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004128:	689b      	ldr	r3, [r3, #8]
 800412a:	2b00      	cmp	r3, #0
 800412c:	d101      	bne.n	8004132 <xQueueGiveFromISR+0x5c>
 800412e:	2301      	movs	r3, #1
 8004130:	e000      	b.n	8004134 <xQueueGiveFromISR+0x5e>
 8004132:	2300      	movs	r3, #0
 8004134:	2b00      	cmp	r3, #0
 8004136:	d10a      	bne.n	800414e <xQueueGiveFromISR+0x78>
 8004138:	f04f 0350 	mov.w	r3, #80	; 0x50
 800413c:	f383 8811 	msr	BASEPRI, r3
 8004140:	f3bf 8f6f 	isb	sy
 8004144:	f3bf 8f4f 	dsb	sy
 8004148:	61bb      	str	r3, [r7, #24]
 800414a:	bf00      	nop
 800414c:	e7fe      	b.n	800414c <xQueueGiveFromISR+0x76>
 800414e:	f002 faa3 	bl	8006698 <vPortValidateInterruptPriority>
 8004152:	f3ef 8211 	mrs	r2, BASEPRI
 8004156:	f04f 0350 	mov.w	r3, #80	; 0x50
 800415a:	f383 8811 	msr	BASEPRI, r3
 800415e:	f3bf 8f6f 	isb	sy
 8004162:	f3bf 8f4f 	dsb	sy
 8004166:	617a      	str	r2, [r7, #20]
 8004168:	613b      	str	r3, [r7, #16]
 800416a:	697b      	ldr	r3, [r7, #20]
 800416c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800416e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004170:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004172:	62bb      	str	r3, [r7, #40]	; 0x28
 8004174:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004176:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004178:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800417a:	429a      	cmp	r2, r3
 800417c:	d22b      	bcs.n	80041d6 <xQueueGiveFromISR+0x100>
 800417e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004180:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004184:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004188:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800418a:	1c5a      	adds	r2, r3, #1
 800418c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800418e:	639a      	str	r2, [r3, #56]	; 0x38
 8004190:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 8004194:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004198:	d112      	bne.n	80041c0 <xQueueGiveFromISR+0xea>
 800419a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800419c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d016      	beq.n	80041d0 <xQueueGiveFromISR+0xfa>
 80041a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041a4:	3324      	adds	r3, #36	; 0x24
 80041a6:	4618      	mov	r0, r3
 80041a8:	f001 f8de 	bl	8005368 <xTaskRemoveFromEventList>
 80041ac:	4603      	mov	r3, r0
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d00e      	beq.n	80041d0 <xQueueGiveFromISR+0xfa>
 80041b2:	683b      	ldr	r3, [r7, #0]
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d00b      	beq.n	80041d0 <xQueueGiveFromISR+0xfa>
 80041b8:	683b      	ldr	r3, [r7, #0]
 80041ba:	2201      	movs	r2, #1
 80041bc:	601a      	str	r2, [r3, #0]
 80041be:	e007      	b.n	80041d0 <xQueueGiveFromISR+0xfa>
 80041c0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80041c4:	3301      	adds	r3, #1
 80041c6:	b2db      	uxtb	r3, r3
 80041c8:	b25a      	sxtb	r2, r3
 80041ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80041cc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80041d0:	2301      	movs	r3, #1
 80041d2:	637b      	str	r3, [r7, #52]	; 0x34
 80041d4:	e001      	b.n	80041da <xQueueGiveFromISR+0x104>
 80041d6:	2300      	movs	r3, #0
 80041d8:	637b      	str	r3, [r7, #52]	; 0x34
 80041da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80041dc:	60fb      	str	r3, [r7, #12]
 80041de:	68fb      	ldr	r3, [r7, #12]
 80041e0:	f383 8811 	msr	BASEPRI, r3
 80041e4:	bf00      	nop
 80041e6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80041e8:	4618      	mov	r0, r3
 80041ea:	3738      	adds	r7, #56	; 0x38
 80041ec:	46bd      	mov	sp, r7
 80041ee:	bd80      	pop	{r7, pc}

080041f0 <xQueueReceive>:
 80041f0:	b580      	push	{r7, lr}
 80041f2:	b08c      	sub	sp, #48	; 0x30
 80041f4:	af00      	add	r7, sp, #0
 80041f6:	60f8      	str	r0, [r7, #12]
 80041f8:	60b9      	str	r1, [r7, #8]
 80041fa:	607a      	str	r2, [r7, #4]
 80041fc:	2300      	movs	r3, #0
 80041fe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	62bb      	str	r3, [r7, #40]	; 0x28
 8004204:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004206:	2b00      	cmp	r3, #0
 8004208:	d10a      	bne.n	8004220 <xQueueReceive+0x30>
 800420a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800420e:	f383 8811 	msr	BASEPRI, r3
 8004212:	f3bf 8f6f 	isb	sy
 8004216:	f3bf 8f4f 	dsb	sy
 800421a:	623b      	str	r3, [r7, #32]
 800421c:	bf00      	nop
 800421e:	e7fe      	b.n	800421e <xQueueReceive+0x2e>
 8004220:	68bb      	ldr	r3, [r7, #8]
 8004222:	2b00      	cmp	r3, #0
 8004224:	d103      	bne.n	800422e <xQueueReceive+0x3e>
 8004226:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800422a:	2b00      	cmp	r3, #0
 800422c:	d101      	bne.n	8004232 <xQueueReceive+0x42>
 800422e:	2301      	movs	r3, #1
 8004230:	e000      	b.n	8004234 <xQueueReceive+0x44>
 8004232:	2300      	movs	r3, #0
 8004234:	2b00      	cmp	r3, #0
 8004236:	d10a      	bne.n	800424e <xQueueReceive+0x5e>
 8004238:	f04f 0350 	mov.w	r3, #80	; 0x50
 800423c:	f383 8811 	msr	BASEPRI, r3
 8004240:	f3bf 8f6f 	isb	sy
 8004244:	f3bf 8f4f 	dsb	sy
 8004248:	61fb      	str	r3, [r7, #28]
 800424a:	bf00      	nop
 800424c:	e7fe      	b.n	800424c <xQueueReceive+0x5c>
 800424e:	f001 faaf 	bl	80057b0 <xTaskGetSchedulerState>
 8004252:	4603      	mov	r3, r0
 8004254:	2b00      	cmp	r3, #0
 8004256:	d102      	bne.n	800425e <xQueueReceive+0x6e>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	2b00      	cmp	r3, #0
 800425c:	d101      	bne.n	8004262 <xQueueReceive+0x72>
 800425e:	2301      	movs	r3, #1
 8004260:	e000      	b.n	8004264 <xQueueReceive+0x74>
 8004262:	2300      	movs	r3, #0
 8004264:	2b00      	cmp	r3, #0
 8004266:	d10a      	bne.n	800427e <xQueueReceive+0x8e>
 8004268:	f04f 0350 	mov.w	r3, #80	; 0x50
 800426c:	f383 8811 	msr	BASEPRI, r3
 8004270:	f3bf 8f6f 	isb	sy
 8004274:	f3bf 8f4f 	dsb	sy
 8004278:	61bb      	str	r3, [r7, #24]
 800427a:	bf00      	nop
 800427c:	e7fe      	b.n	800427c <xQueueReceive+0x8c>
 800427e:	f002 f929 	bl	80064d4 <vPortEnterCritical>
 8004282:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004284:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004286:	627b      	str	r3, [r7, #36]	; 0x24
 8004288:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800428a:	2b00      	cmp	r3, #0
 800428c:	d01f      	beq.n	80042ce <xQueueReceive+0xde>
 800428e:	68b9      	ldr	r1, [r7, #8]
 8004290:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004292:	f000 fad7 	bl	8004844 <prvCopyDataFromQueue>
 8004296:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004298:	1e5a      	subs	r2, r3, #1
 800429a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800429c:	639a      	str	r2, [r3, #56]	; 0x38
 800429e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80042a0:	691b      	ldr	r3, [r3, #16]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d00f      	beq.n	80042c6 <xQueueReceive+0xd6>
 80042a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80042a8:	3310      	adds	r3, #16
 80042aa:	4618      	mov	r0, r3
 80042ac:	f001 f85c 	bl	8005368 <xTaskRemoveFromEventList>
 80042b0:	4603      	mov	r3, r0
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d007      	beq.n	80042c6 <xQueueReceive+0xd6>
 80042b6:	4b3d      	ldr	r3, [pc, #244]	; (80043ac <xQueueReceive+0x1bc>)
 80042b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80042bc:	601a      	str	r2, [r3, #0]
 80042be:	f3bf 8f4f 	dsb	sy
 80042c2:	f3bf 8f6f 	isb	sy
 80042c6:	f002 f935 	bl	8006534 <vPortExitCritical>
 80042ca:	2301      	movs	r3, #1
 80042cc:	e069      	b.n	80043a2 <xQueueReceive+0x1b2>
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	2b00      	cmp	r3, #0
 80042d2:	d103      	bne.n	80042dc <xQueueReceive+0xec>
 80042d4:	f002 f92e 	bl	8006534 <vPortExitCritical>
 80042d8:	2300      	movs	r3, #0
 80042da:	e062      	b.n	80043a2 <xQueueReceive+0x1b2>
 80042dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80042de:	2b00      	cmp	r3, #0
 80042e0:	d106      	bne.n	80042f0 <xQueueReceive+0x100>
 80042e2:	f107 0310 	add.w	r3, r7, #16
 80042e6:	4618      	mov	r0, r3
 80042e8:	f001 f904 	bl	80054f4 <vTaskInternalSetTimeOutState>
 80042ec:	2301      	movs	r3, #1
 80042ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80042f0:	f002 f920 	bl	8006534 <vPortExitCritical>
 80042f4:	f000 fdd2 	bl	8004e9c <vTaskSuspendAll>
 80042f8:	f002 f8ec 	bl	80064d4 <vPortEnterCritical>
 80042fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80042fe:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004302:	b25b      	sxtb	r3, r3
 8004304:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004308:	d103      	bne.n	8004312 <xQueueReceive+0x122>
 800430a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800430c:	2200      	movs	r2, #0
 800430e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004312:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004314:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004318:	b25b      	sxtb	r3, r3
 800431a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800431e:	d103      	bne.n	8004328 <xQueueReceive+0x138>
 8004320:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004322:	2200      	movs	r2, #0
 8004324:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004328:	f002 f904 	bl	8006534 <vPortExitCritical>
 800432c:	1d3a      	adds	r2, r7, #4
 800432e:	f107 0310 	add.w	r3, r7, #16
 8004332:	4611      	mov	r1, r2
 8004334:	4618      	mov	r0, r3
 8004336:	f001 f8f3 	bl	8005520 <xTaskCheckForTimeOut>
 800433a:	4603      	mov	r3, r0
 800433c:	2b00      	cmp	r3, #0
 800433e:	d123      	bne.n	8004388 <xQueueReceive+0x198>
 8004340:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004342:	f000 faf7 	bl	8004934 <prvIsQueueEmpty>
 8004346:	4603      	mov	r3, r0
 8004348:	2b00      	cmp	r3, #0
 800434a:	d017      	beq.n	800437c <xQueueReceive+0x18c>
 800434c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800434e:	3324      	adds	r3, #36	; 0x24
 8004350:	687a      	ldr	r2, [r7, #4]
 8004352:	4611      	mov	r1, r2
 8004354:	4618      	mov	r0, r3
 8004356:	f000 ff7b 	bl	8005250 <vTaskPlaceOnEventList>
 800435a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800435c:	f000 fa98 	bl	8004890 <prvUnlockQueue>
 8004360:	f000 fdaa 	bl	8004eb8 <xTaskResumeAll>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d189      	bne.n	800427e <xQueueReceive+0x8e>
 800436a:	4b10      	ldr	r3, [pc, #64]	; (80043ac <xQueueReceive+0x1bc>)
 800436c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004370:	601a      	str	r2, [r3, #0]
 8004372:	f3bf 8f4f 	dsb	sy
 8004376:	f3bf 8f6f 	isb	sy
 800437a:	e780      	b.n	800427e <xQueueReceive+0x8e>
 800437c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800437e:	f000 fa87 	bl	8004890 <prvUnlockQueue>
 8004382:	f000 fd99 	bl	8004eb8 <xTaskResumeAll>
 8004386:	e77a      	b.n	800427e <xQueueReceive+0x8e>
 8004388:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800438a:	f000 fa81 	bl	8004890 <prvUnlockQueue>
 800438e:	f000 fd93 	bl	8004eb8 <xTaskResumeAll>
 8004392:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004394:	f000 face 	bl	8004934 <prvIsQueueEmpty>
 8004398:	4603      	mov	r3, r0
 800439a:	2b00      	cmp	r3, #0
 800439c:	f43f af6f 	beq.w	800427e <xQueueReceive+0x8e>
 80043a0:	2300      	movs	r3, #0
 80043a2:	4618      	mov	r0, r3
 80043a4:	3730      	adds	r7, #48	; 0x30
 80043a6:	46bd      	mov	sp, r7
 80043a8:	bd80      	pop	{r7, pc}
 80043aa:	bf00      	nop
 80043ac:	e000ed04 	.word	0xe000ed04

080043b0 <xQueueSemaphoreTake>:
 80043b0:	b580      	push	{r7, lr}
 80043b2:	b08e      	sub	sp, #56	; 0x38
 80043b4:	af00      	add	r7, sp, #0
 80043b6:	6078      	str	r0, [r7, #4]
 80043b8:	6039      	str	r1, [r7, #0]
 80043ba:	2300      	movs	r3, #0
 80043bc:	637b      	str	r3, [r7, #52]	; 0x34
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043c2:	2300      	movs	r3, #0
 80043c4:	633b      	str	r3, [r7, #48]	; 0x30
 80043c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	d10a      	bne.n	80043e2 <xQueueSemaphoreTake+0x32>
 80043cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043d0:	f383 8811 	msr	BASEPRI, r3
 80043d4:	f3bf 8f6f 	isb	sy
 80043d8:	f3bf 8f4f 	dsb	sy
 80043dc:	623b      	str	r3, [r7, #32]
 80043de:	bf00      	nop
 80043e0:	e7fe      	b.n	80043e0 <xQueueSemaphoreTake+0x30>
 80043e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80043e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043e6:	2b00      	cmp	r3, #0
 80043e8:	d00a      	beq.n	8004400 <xQueueSemaphoreTake+0x50>
 80043ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043ee:	f383 8811 	msr	BASEPRI, r3
 80043f2:	f3bf 8f6f 	isb	sy
 80043f6:	f3bf 8f4f 	dsb	sy
 80043fa:	61fb      	str	r3, [r7, #28]
 80043fc:	bf00      	nop
 80043fe:	e7fe      	b.n	80043fe <xQueueSemaphoreTake+0x4e>
 8004400:	f001 f9d6 	bl	80057b0 <xTaskGetSchedulerState>
 8004404:	4603      	mov	r3, r0
 8004406:	2b00      	cmp	r3, #0
 8004408:	d102      	bne.n	8004410 <xQueueSemaphoreTake+0x60>
 800440a:	683b      	ldr	r3, [r7, #0]
 800440c:	2b00      	cmp	r3, #0
 800440e:	d101      	bne.n	8004414 <xQueueSemaphoreTake+0x64>
 8004410:	2301      	movs	r3, #1
 8004412:	e000      	b.n	8004416 <xQueueSemaphoreTake+0x66>
 8004414:	2300      	movs	r3, #0
 8004416:	2b00      	cmp	r3, #0
 8004418:	d10a      	bne.n	8004430 <xQueueSemaphoreTake+0x80>
 800441a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800441e:	f383 8811 	msr	BASEPRI, r3
 8004422:	f3bf 8f6f 	isb	sy
 8004426:	f3bf 8f4f 	dsb	sy
 800442a:	61bb      	str	r3, [r7, #24]
 800442c:	bf00      	nop
 800442e:	e7fe      	b.n	800442e <xQueueSemaphoreTake+0x7e>
 8004430:	f002 f850 	bl	80064d4 <vPortEnterCritical>
 8004434:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004436:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004438:	62bb      	str	r3, [r7, #40]	; 0x28
 800443a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800443c:	2b00      	cmp	r3, #0
 800443e:	d024      	beq.n	800448a <xQueueSemaphoreTake+0xda>
 8004440:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004442:	1e5a      	subs	r2, r3, #1
 8004444:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004446:	639a      	str	r2, [r3, #56]	; 0x38
 8004448:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	2b00      	cmp	r3, #0
 800444e:	d104      	bne.n	800445a <xQueueSemaphoreTake+0xaa>
 8004450:	f001 fb3c 	bl	8005acc <pvTaskIncrementMutexHeldCount>
 8004454:	4602      	mov	r2, r0
 8004456:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004458:	609a      	str	r2, [r3, #8]
 800445a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800445c:	691b      	ldr	r3, [r3, #16]
 800445e:	2b00      	cmp	r3, #0
 8004460:	d00f      	beq.n	8004482 <xQueueSemaphoreTake+0xd2>
 8004462:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004464:	3310      	adds	r3, #16
 8004466:	4618      	mov	r0, r3
 8004468:	f000 ff7e 	bl	8005368 <xTaskRemoveFromEventList>
 800446c:	4603      	mov	r3, r0
 800446e:	2b00      	cmp	r3, #0
 8004470:	d007      	beq.n	8004482 <xQueueSemaphoreTake+0xd2>
 8004472:	4b54      	ldr	r3, [pc, #336]	; (80045c4 <xQueueSemaphoreTake+0x214>)
 8004474:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004478:	601a      	str	r2, [r3, #0]
 800447a:	f3bf 8f4f 	dsb	sy
 800447e:	f3bf 8f6f 	isb	sy
 8004482:	f002 f857 	bl	8006534 <vPortExitCritical>
 8004486:	2301      	movs	r3, #1
 8004488:	e097      	b.n	80045ba <xQueueSemaphoreTake+0x20a>
 800448a:	683b      	ldr	r3, [r7, #0]
 800448c:	2b00      	cmp	r3, #0
 800448e:	d111      	bne.n	80044b4 <xQueueSemaphoreTake+0x104>
 8004490:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004492:	2b00      	cmp	r3, #0
 8004494:	d00a      	beq.n	80044ac <xQueueSemaphoreTake+0xfc>
 8004496:	f04f 0350 	mov.w	r3, #80	; 0x50
 800449a:	f383 8811 	msr	BASEPRI, r3
 800449e:	f3bf 8f6f 	isb	sy
 80044a2:	f3bf 8f4f 	dsb	sy
 80044a6:	617b      	str	r3, [r7, #20]
 80044a8:	bf00      	nop
 80044aa:	e7fe      	b.n	80044aa <xQueueSemaphoreTake+0xfa>
 80044ac:	f002 f842 	bl	8006534 <vPortExitCritical>
 80044b0:	2300      	movs	r3, #0
 80044b2:	e082      	b.n	80045ba <xQueueSemaphoreTake+0x20a>
 80044b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d106      	bne.n	80044c8 <xQueueSemaphoreTake+0x118>
 80044ba:	f107 030c 	add.w	r3, r7, #12
 80044be:	4618      	mov	r0, r3
 80044c0:	f001 f818 	bl	80054f4 <vTaskInternalSetTimeOutState>
 80044c4:	2301      	movs	r3, #1
 80044c6:	637b      	str	r3, [r7, #52]	; 0x34
 80044c8:	f002 f834 	bl	8006534 <vPortExitCritical>
 80044cc:	f000 fce6 	bl	8004e9c <vTaskSuspendAll>
 80044d0:	f002 f800 	bl	80064d4 <vPortEnterCritical>
 80044d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044d6:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80044da:	b25b      	sxtb	r3, r3
 80044dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80044e0:	d103      	bne.n	80044ea <xQueueSemaphoreTake+0x13a>
 80044e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044e4:	2200      	movs	r2, #0
 80044e6:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80044ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044ec:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80044f0:	b25b      	sxtb	r3, r3
 80044f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80044f6:	d103      	bne.n	8004500 <xQueueSemaphoreTake+0x150>
 80044f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80044fa:	2200      	movs	r2, #0
 80044fc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004500:	f002 f818 	bl	8006534 <vPortExitCritical>
 8004504:	463a      	mov	r2, r7
 8004506:	f107 030c 	add.w	r3, r7, #12
 800450a:	4611      	mov	r1, r2
 800450c:	4618      	mov	r0, r3
 800450e:	f001 f807 	bl	8005520 <xTaskCheckForTimeOut>
 8004512:	4603      	mov	r3, r0
 8004514:	2b00      	cmp	r3, #0
 8004516:	d132      	bne.n	800457e <xQueueSemaphoreTake+0x1ce>
 8004518:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800451a:	f000 fa0b 	bl	8004934 <prvIsQueueEmpty>
 800451e:	4603      	mov	r3, r0
 8004520:	2b00      	cmp	r3, #0
 8004522:	d026      	beq.n	8004572 <xQueueSemaphoreTake+0x1c2>
 8004524:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	2b00      	cmp	r3, #0
 800452a:	d109      	bne.n	8004540 <xQueueSemaphoreTake+0x190>
 800452c:	f001 ffd2 	bl	80064d4 <vPortEnterCritical>
 8004530:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004532:	689b      	ldr	r3, [r3, #8]
 8004534:	4618      	mov	r0, r3
 8004536:	f001 f959 	bl	80057ec <xTaskPriorityInherit>
 800453a:	6338      	str	r0, [r7, #48]	; 0x30
 800453c:	f001 fffa 	bl	8006534 <vPortExitCritical>
 8004540:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004542:	3324      	adds	r3, #36	; 0x24
 8004544:	683a      	ldr	r2, [r7, #0]
 8004546:	4611      	mov	r1, r2
 8004548:	4618      	mov	r0, r3
 800454a:	f000 fe81 	bl	8005250 <vTaskPlaceOnEventList>
 800454e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004550:	f000 f99e 	bl	8004890 <prvUnlockQueue>
 8004554:	f000 fcb0 	bl	8004eb8 <xTaskResumeAll>
 8004558:	4603      	mov	r3, r0
 800455a:	2b00      	cmp	r3, #0
 800455c:	f47f af68 	bne.w	8004430 <xQueueSemaphoreTake+0x80>
 8004560:	4b18      	ldr	r3, [pc, #96]	; (80045c4 <xQueueSemaphoreTake+0x214>)
 8004562:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004566:	601a      	str	r2, [r3, #0]
 8004568:	f3bf 8f4f 	dsb	sy
 800456c:	f3bf 8f6f 	isb	sy
 8004570:	e75e      	b.n	8004430 <xQueueSemaphoreTake+0x80>
 8004572:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004574:	f000 f98c 	bl	8004890 <prvUnlockQueue>
 8004578:	f000 fc9e 	bl	8004eb8 <xTaskResumeAll>
 800457c:	e758      	b.n	8004430 <xQueueSemaphoreTake+0x80>
 800457e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8004580:	f000 f986 	bl	8004890 <prvUnlockQueue>
 8004584:	f000 fc98 	bl	8004eb8 <xTaskResumeAll>
 8004588:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800458a:	f000 f9d3 	bl	8004934 <prvIsQueueEmpty>
 800458e:	4603      	mov	r3, r0
 8004590:	2b00      	cmp	r3, #0
 8004592:	f43f af4d 	beq.w	8004430 <xQueueSemaphoreTake+0x80>
 8004596:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004598:	2b00      	cmp	r3, #0
 800459a:	d00d      	beq.n	80045b8 <xQueueSemaphoreTake+0x208>
 800459c:	f001 ff9a 	bl	80064d4 <vPortEnterCritical>
 80045a0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80045a2:	f000 f8cd 	bl	8004740 <prvGetDisinheritPriorityAfterTimeout>
 80045a6:	6278      	str	r0, [r7, #36]	; 0x24
 80045a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80045aa:	689b      	ldr	r3, [r3, #8]
 80045ac:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80045ae:	4618      	mov	r0, r3
 80045b0:	f001 f9f2 	bl	8005998 <vTaskPriorityDisinheritAfterTimeout>
 80045b4:	f001 ffbe 	bl	8006534 <vPortExitCritical>
 80045b8:	2300      	movs	r3, #0
 80045ba:	4618      	mov	r0, r3
 80045bc:	3738      	adds	r7, #56	; 0x38
 80045be:	46bd      	mov	sp, r7
 80045c0:	bd80      	pop	{r7, pc}
 80045c2:	bf00      	nop
 80045c4:	e000ed04 	.word	0xe000ed04

080045c8 <xQueueReceiveFromISR>:
 80045c8:	b580      	push	{r7, lr}
 80045ca:	b08e      	sub	sp, #56	; 0x38
 80045cc:	af00      	add	r7, sp, #0
 80045ce:	60f8      	str	r0, [r7, #12]
 80045d0:	60b9      	str	r1, [r7, #8]
 80045d2:	607a      	str	r2, [r7, #4]
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	633b      	str	r3, [r7, #48]	; 0x30
 80045d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d10a      	bne.n	80045f4 <xQueueReceiveFromISR+0x2c>
 80045de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80045e2:	f383 8811 	msr	BASEPRI, r3
 80045e6:	f3bf 8f6f 	isb	sy
 80045ea:	f3bf 8f4f 	dsb	sy
 80045ee:	623b      	str	r3, [r7, #32]
 80045f0:	bf00      	nop
 80045f2:	e7fe      	b.n	80045f2 <xQueueReceiveFromISR+0x2a>
 80045f4:	68bb      	ldr	r3, [r7, #8]
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d103      	bne.n	8004602 <xQueueReceiveFromISR+0x3a>
 80045fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80045fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045fe:	2b00      	cmp	r3, #0
 8004600:	d101      	bne.n	8004606 <xQueueReceiveFromISR+0x3e>
 8004602:	2301      	movs	r3, #1
 8004604:	e000      	b.n	8004608 <xQueueReceiveFromISR+0x40>
 8004606:	2300      	movs	r3, #0
 8004608:	2b00      	cmp	r3, #0
 800460a:	d10a      	bne.n	8004622 <xQueueReceiveFromISR+0x5a>
 800460c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004610:	f383 8811 	msr	BASEPRI, r3
 8004614:	f3bf 8f6f 	isb	sy
 8004618:	f3bf 8f4f 	dsb	sy
 800461c:	61fb      	str	r3, [r7, #28]
 800461e:	bf00      	nop
 8004620:	e7fe      	b.n	8004620 <xQueueReceiveFromISR+0x58>
 8004622:	f002 f839 	bl	8006698 <vPortValidateInterruptPriority>
 8004626:	f3ef 8211 	mrs	r2, BASEPRI
 800462a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800462e:	f383 8811 	msr	BASEPRI, r3
 8004632:	f3bf 8f6f 	isb	sy
 8004636:	f3bf 8f4f 	dsb	sy
 800463a:	61ba      	str	r2, [r7, #24]
 800463c:	617b      	str	r3, [r7, #20]
 800463e:	69bb      	ldr	r3, [r7, #24]
 8004640:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004642:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004644:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004646:	62bb      	str	r3, [r7, #40]	; 0x28
 8004648:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800464a:	2b00      	cmp	r3, #0
 800464c:	d02f      	beq.n	80046ae <xQueueReceiveFromISR+0xe6>
 800464e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004650:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8004654:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8004658:	68b9      	ldr	r1, [r7, #8]
 800465a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800465c:	f000 f8f2 	bl	8004844 <prvCopyDataFromQueue>
 8004660:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004662:	1e5a      	subs	r2, r3, #1
 8004664:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004666:	639a      	str	r2, [r3, #56]	; 0x38
 8004668:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 800466c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004670:	d112      	bne.n	8004698 <xQueueReceiveFromISR+0xd0>
 8004672:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004674:	691b      	ldr	r3, [r3, #16]
 8004676:	2b00      	cmp	r3, #0
 8004678:	d016      	beq.n	80046a8 <xQueueReceiveFromISR+0xe0>
 800467a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800467c:	3310      	adds	r3, #16
 800467e:	4618      	mov	r0, r3
 8004680:	f000 fe72 	bl	8005368 <xTaskRemoveFromEventList>
 8004684:	4603      	mov	r3, r0
 8004686:	2b00      	cmp	r3, #0
 8004688:	d00e      	beq.n	80046a8 <xQueueReceiveFromISR+0xe0>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	2b00      	cmp	r3, #0
 800468e:	d00b      	beq.n	80046a8 <xQueueReceiveFromISR+0xe0>
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	2201      	movs	r2, #1
 8004694:	601a      	str	r2, [r3, #0]
 8004696:	e007      	b.n	80046a8 <xQueueReceiveFromISR+0xe0>
 8004698:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800469c:	3301      	adds	r3, #1
 800469e:	b2db      	uxtb	r3, r3
 80046a0:	b25a      	sxtb	r2, r3
 80046a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80046a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80046a8:	2301      	movs	r3, #1
 80046aa:	637b      	str	r3, [r7, #52]	; 0x34
 80046ac:	e001      	b.n	80046b2 <xQueueReceiveFromISR+0xea>
 80046ae:	2300      	movs	r3, #0
 80046b0:	637b      	str	r3, [r7, #52]	; 0x34
 80046b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80046b4:	613b      	str	r3, [r7, #16]
 80046b6:	693b      	ldr	r3, [r7, #16]
 80046b8:	f383 8811 	msr	BASEPRI, r3
 80046bc:	bf00      	nop
 80046be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80046c0:	4618      	mov	r0, r3
 80046c2:	3738      	adds	r7, #56	; 0x38
 80046c4:	46bd      	mov	sp, r7
 80046c6:	bd80      	pop	{r7, pc}

080046c8 <uxQueueMessagesWaiting>:
 80046c8:	b580      	push	{r7, lr}
 80046ca:	b084      	sub	sp, #16
 80046cc:	af00      	add	r7, sp, #0
 80046ce:	6078      	str	r0, [r7, #4]
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d10a      	bne.n	80046ec <uxQueueMessagesWaiting+0x24>
 80046d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046da:	f383 8811 	msr	BASEPRI, r3
 80046de:	f3bf 8f6f 	isb	sy
 80046e2:	f3bf 8f4f 	dsb	sy
 80046e6:	60bb      	str	r3, [r7, #8]
 80046e8:	bf00      	nop
 80046ea:	e7fe      	b.n	80046ea <uxQueueMessagesWaiting+0x22>
 80046ec:	f001 fef2 	bl	80064d4 <vPortEnterCritical>
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80046f4:	60fb      	str	r3, [r7, #12]
 80046f6:	f001 ff1d 	bl	8006534 <vPortExitCritical>
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	4618      	mov	r0, r3
 80046fe:	3710      	adds	r7, #16
 8004700:	46bd      	mov	sp, r7
 8004702:	bd80      	pop	{r7, pc}

08004704 <uxQueueMessagesWaitingFromISR>:
 8004704:	b480      	push	{r7}
 8004706:	b087      	sub	sp, #28
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	617b      	str	r3, [r7, #20]
 8004710:	697b      	ldr	r3, [r7, #20]
 8004712:	2b00      	cmp	r3, #0
 8004714:	d10a      	bne.n	800472c <uxQueueMessagesWaitingFromISR+0x28>
 8004716:	f04f 0350 	mov.w	r3, #80	; 0x50
 800471a:	f383 8811 	msr	BASEPRI, r3
 800471e:	f3bf 8f6f 	isb	sy
 8004722:	f3bf 8f4f 	dsb	sy
 8004726:	60fb      	str	r3, [r7, #12]
 8004728:	bf00      	nop
 800472a:	e7fe      	b.n	800472a <uxQueueMessagesWaitingFromISR+0x26>
 800472c:	697b      	ldr	r3, [r7, #20]
 800472e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004730:	613b      	str	r3, [r7, #16]
 8004732:	693b      	ldr	r3, [r7, #16]
 8004734:	4618      	mov	r0, r3
 8004736:	371c      	adds	r7, #28
 8004738:	46bd      	mov	sp, r7
 800473a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800473e:	4770      	bx	lr

08004740 <prvGetDisinheritPriorityAfterTimeout>:
 8004740:	b480      	push	{r7}
 8004742:	b085      	sub	sp, #20
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800474c:	2b00      	cmp	r3, #0
 800474e:	d006      	beq.n	800475e <prvGetDisinheritPriorityAfterTimeout+0x1e>
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	f1c3 0338 	rsb	r3, r3, #56	; 0x38
 800475a:	60fb      	str	r3, [r7, #12]
 800475c:	e001      	b.n	8004762 <prvGetDisinheritPriorityAfterTimeout+0x22>
 800475e:	2300      	movs	r3, #0
 8004760:	60fb      	str	r3, [r7, #12]
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	4618      	mov	r0, r3
 8004766:	3714      	adds	r7, #20
 8004768:	46bd      	mov	sp, r7
 800476a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800476e:	4770      	bx	lr

08004770 <prvCopyDataToQueue>:
 8004770:	b580      	push	{r7, lr}
 8004772:	b086      	sub	sp, #24
 8004774:	af00      	add	r7, sp, #0
 8004776:	60f8      	str	r0, [r7, #12]
 8004778:	60b9      	str	r1, [r7, #8]
 800477a:	607a      	str	r2, [r7, #4]
 800477c:	2300      	movs	r3, #0
 800477e:	617b      	str	r3, [r7, #20]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004784:	613b      	str	r3, [r7, #16]
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800478a:	2b00      	cmp	r3, #0
 800478c:	d10d      	bne.n	80047aa <prvCopyDataToQueue+0x3a>
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	2b00      	cmp	r3, #0
 8004794:	d14d      	bne.n	8004832 <prvCopyDataToQueue+0xc2>
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	689b      	ldr	r3, [r3, #8]
 800479a:	4618      	mov	r0, r3
 800479c:	f001 f88e 	bl	80058bc <xTaskPriorityDisinherit>
 80047a0:	6178      	str	r0, [r7, #20]
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	2200      	movs	r2, #0
 80047a6:	609a      	str	r2, [r3, #8]
 80047a8:	e043      	b.n	8004832 <prvCopyDataToQueue+0xc2>
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	2b00      	cmp	r3, #0
 80047ae:	d119      	bne.n	80047e4 <prvCopyDataToQueue+0x74>
 80047b0:	68fb      	ldr	r3, [r7, #12]
 80047b2:	6858      	ldr	r0, [r3, #4]
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047b8:	461a      	mov	r2, r3
 80047ba:	68b9      	ldr	r1, [r7, #8]
 80047bc:	f002 fc6f 	bl	800709e <memcpy>
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	685a      	ldr	r2, [r3, #4]
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047c8:	441a      	add	r2, r3
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	605a      	str	r2, [r3, #4]
 80047ce:	68fb      	ldr	r3, [r7, #12]
 80047d0:	685a      	ldr	r2, [r3, #4]
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	689b      	ldr	r3, [r3, #8]
 80047d6:	429a      	cmp	r2, r3
 80047d8:	d32b      	bcc.n	8004832 <prvCopyDataToQueue+0xc2>
 80047da:	68fb      	ldr	r3, [r7, #12]
 80047dc:	681a      	ldr	r2, [r3, #0]
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	605a      	str	r2, [r3, #4]
 80047e2:	e026      	b.n	8004832 <prvCopyDataToQueue+0xc2>
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	68d8      	ldr	r0, [r3, #12]
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047ec:	461a      	mov	r2, r3
 80047ee:	68b9      	ldr	r1, [r7, #8]
 80047f0:	f002 fc55 	bl	800709e <memcpy>
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	68da      	ldr	r2, [r3, #12]
 80047f8:	68fb      	ldr	r3, [r7, #12]
 80047fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047fc:	425b      	negs	r3, r3
 80047fe:	441a      	add	r2, r3
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	60da      	str	r2, [r3, #12]
 8004804:	68fb      	ldr	r3, [r7, #12]
 8004806:	68da      	ldr	r2, [r3, #12]
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	429a      	cmp	r2, r3
 800480e:	d207      	bcs.n	8004820 <prvCopyDataToQueue+0xb0>
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	689a      	ldr	r2, [r3, #8]
 8004814:	68fb      	ldr	r3, [r7, #12]
 8004816:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004818:	425b      	negs	r3, r3
 800481a:	441a      	add	r2, r3
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	60da      	str	r2, [r3, #12]
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	2b02      	cmp	r3, #2
 8004824:	d105      	bne.n	8004832 <prvCopyDataToQueue+0xc2>
 8004826:	693b      	ldr	r3, [r7, #16]
 8004828:	2b00      	cmp	r3, #0
 800482a:	d002      	beq.n	8004832 <prvCopyDataToQueue+0xc2>
 800482c:	693b      	ldr	r3, [r7, #16]
 800482e:	3b01      	subs	r3, #1
 8004830:	613b      	str	r3, [r7, #16]
 8004832:	693b      	ldr	r3, [r7, #16]
 8004834:	1c5a      	adds	r2, r3, #1
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	639a      	str	r2, [r3, #56]	; 0x38
 800483a:	697b      	ldr	r3, [r7, #20]
 800483c:	4618      	mov	r0, r3
 800483e:	3718      	adds	r7, #24
 8004840:	46bd      	mov	sp, r7
 8004842:	bd80      	pop	{r7, pc}

08004844 <prvCopyDataFromQueue>:
 8004844:	b580      	push	{r7, lr}
 8004846:	b082      	sub	sp, #8
 8004848:	af00      	add	r7, sp, #0
 800484a:	6078      	str	r0, [r7, #4]
 800484c:	6039      	str	r1, [r7, #0]
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004852:	2b00      	cmp	r3, #0
 8004854:	d018      	beq.n	8004888 <prvCopyDataFromQueue+0x44>
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	68da      	ldr	r2, [r3, #12]
 800485a:	687b      	ldr	r3, [r7, #4]
 800485c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800485e:	441a      	add	r2, r3
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	60da      	str	r2, [r3, #12]
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	68da      	ldr	r2, [r3, #12]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	689b      	ldr	r3, [r3, #8]
 800486c:	429a      	cmp	r2, r3
 800486e:	d303      	bcc.n	8004878 <prvCopyDataFromQueue+0x34>
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681a      	ldr	r2, [r3, #0]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	60da      	str	r2, [r3, #12]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	68d9      	ldr	r1, [r3, #12]
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004880:	461a      	mov	r2, r3
 8004882:	6838      	ldr	r0, [r7, #0]
 8004884:	f002 fc0b 	bl	800709e <memcpy>
 8004888:	bf00      	nop
 800488a:	3708      	adds	r7, #8
 800488c:	46bd      	mov	sp, r7
 800488e:	bd80      	pop	{r7, pc}

08004890 <prvUnlockQueue>:
 8004890:	b580      	push	{r7, lr}
 8004892:	b084      	sub	sp, #16
 8004894:	af00      	add	r7, sp, #0
 8004896:	6078      	str	r0, [r7, #4]
 8004898:	f001 fe1c 	bl	80064d4 <vPortEnterCritical>
 800489c:	687b      	ldr	r3, [r7, #4]
 800489e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80048a2:	73fb      	strb	r3, [r7, #15]
 80048a4:	e011      	b.n	80048ca <prvUnlockQueue+0x3a>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d012      	beq.n	80048d4 <prvUnlockQueue+0x44>
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	3324      	adds	r3, #36	; 0x24
 80048b2:	4618      	mov	r0, r3
 80048b4:	f000 fd58 	bl	8005368 <xTaskRemoveFromEventList>
 80048b8:	4603      	mov	r3, r0
 80048ba:	2b00      	cmp	r3, #0
 80048bc:	d001      	beq.n	80048c2 <prvUnlockQueue+0x32>
 80048be:	f000 fe91 	bl	80055e4 <vTaskMissedYield>
 80048c2:	7bfb      	ldrb	r3, [r7, #15]
 80048c4:	3b01      	subs	r3, #1
 80048c6:	b2db      	uxtb	r3, r3
 80048c8:	73fb      	strb	r3, [r7, #15]
 80048ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	dce9      	bgt.n	80048a6 <prvUnlockQueue+0x16>
 80048d2:	e000      	b.n	80048d6 <prvUnlockQueue+0x46>
 80048d4:	bf00      	nop
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	22ff      	movs	r2, #255	; 0xff
 80048da:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80048de:	f001 fe29 	bl	8006534 <vPortExitCritical>
 80048e2:	f001 fdf7 	bl	80064d4 <vPortEnterCritical>
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80048ec:	73bb      	strb	r3, [r7, #14]
 80048ee:	e011      	b.n	8004914 <prvUnlockQueue+0x84>
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	691b      	ldr	r3, [r3, #16]
 80048f4:	2b00      	cmp	r3, #0
 80048f6:	d012      	beq.n	800491e <prvUnlockQueue+0x8e>
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	3310      	adds	r3, #16
 80048fc:	4618      	mov	r0, r3
 80048fe:	f000 fd33 	bl	8005368 <xTaskRemoveFromEventList>
 8004902:	4603      	mov	r3, r0
 8004904:	2b00      	cmp	r3, #0
 8004906:	d001      	beq.n	800490c <prvUnlockQueue+0x7c>
 8004908:	f000 fe6c 	bl	80055e4 <vTaskMissedYield>
 800490c:	7bbb      	ldrb	r3, [r7, #14]
 800490e:	3b01      	subs	r3, #1
 8004910:	b2db      	uxtb	r3, r3
 8004912:	73bb      	strb	r3, [r7, #14]
 8004914:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8004918:	2b00      	cmp	r3, #0
 800491a:	dce9      	bgt.n	80048f0 <prvUnlockQueue+0x60>
 800491c:	e000      	b.n	8004920 <prvUnlockQueue+0x90>
 800491e:	bf00      	nop
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	22ff      	movs	r2, #255	; 0xff
 8004924:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004928:	f001 fe04 	bl	8006534 <vPortExitCritical>
 800492c:	bf00      	nop
 800492e:	3710      	adds	r7, #16
 8004930:	46bd      	mov	sp, r7
 8004932:	bd80      	pop	{r7, pc}

08004934 <prvIsQueueEmpty>:
 8004934:	b580      	push	{r7, lr}
 8004936:	b084      	sub	sp, #16
 8004938:	af00      	add	r7, sp, #0
 800493a:	6078      	str	r0, [r7, #4]
 800493c:	f001 fdca 	bl	80064d4 <vPortEnterCritical>
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004944:	2b00      	cmp	r3, #0
 8004946:	d102      	bne.n	800494e <prvIsQueueEmpty+0x1a>
 8004948:	2301      	movs	r3, #1
 800494a:	60fb      	str	r3, [r7, #12]
 800494c:	e001      	b.n	8004952 <prvIsQueueEmpty+0x1e>
 800494e:	2300      	movs	r3, #0
 8004950:	60fb      	str	r3, [r7, #12]
 8004952:	f001 fdef 	bl	8006534 <vPortExitCritical>
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	4618      	mov	r0, r3
 800495a:	3710      	adds	r7, #16
 800495c:	46bd      	mov	sp, r7
 800495e:	bd80      	pop	{r7, pc}

08004960 <prvIsQueueFull>:
 8004960:	b580      	push	{r7, lr}
 8004962:	b084      	sub	sp, #16
 8004964:	af00      	add	r7, sp, #0
 8004966:	6078      	str	r0, [r7, #4]
 8004968:	f001 fdb4 	bl	80064d4 <vPortEnterCritical>
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004974:	429a      	cmp	r2, r3
 8004976:	d102      	bne.n	800497e <prvIsQueueFull+0x1e>
 8004978:	2301      	movs	r3, #1
 800497a:	60fb      	str	r3, [r7, #12]
 800497c:	e001      	b.n	8004982 <prvIsQueueFull+0x22>
 800497e:	2300      	movs	r3, #0
 8004980:	60fb      	str	r3, [r7, #12]
 8004982:	f001 fdd7 	bl	8006534 <vPortExitCritical>
 8004986:	68fb      	ldr	r3, [r7, #12]
 8004988:	4618      	mov	r0, r3
 800498a:	3710      	adds	r7, #16
 800498c:	46bd      	mov	sp, r7
 800498e:	bd80      	pop	{r7, pc}

08004990 <vQueueAddToRegistry>:
 8004990:	b480      	push	{r7}
 8004992:	b085      	sub	sp, #20
 8004994:	af00      	add	r7, sp, #0
 8004996:	6078      	str	r0, [r7, #4]
 8004998:	6039      	str	r1, [r7, #0]
 800499a:	2300      	movs	r3, #0
 800499c:	60fb      	str	r3, [r7, #12]
 800499e:	e014      	b.n	80049ca <vQueueAddToRegistry+0x3a>
 80049a0:	4a0f      	ldr	r2, [pc, #60]	; (80049e0 <vQueueAddToRegistry+0x50>)
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d10b      	bne.n	80049c4 <vQueueAddToRegistry+0x34>
 80049ac:	490c      	ldr	r1, [pc, #48]	; (80049e0 <vQueueAddToRegistry+0x50>)
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	683a      	ldr	r2, [r7, #0]
 80049b2:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 80049b6:	4a0a      	ldr	r2, [pc, #40]	; (80049e0 <vQueueAddToRegistry+0x50>)
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	00db      	lsls	r3, r3, #3
 80049bc:	4413      	add	r3, r2
 80049be:	687a      	ldr	r2, [r7, #4]
 80049c0:	605a      	str	r2, [r3, #4]
 80049c2:	e006      	b.n	80049d2 <vQueueAddToRegistry+0x42>
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	3301      	adds	r3, #1
 80049c8:	60fb      	str	r3, [r7, #12]
 80049ca:	68fb      	ldr	r3, [r7, #12]
 80049cc:	2b07      	cmp	r3, #7
 80049ce:	d9e7      	bls.n	80049a0 <vQueueAddToRegistry+0x10>
 80049d0:	bf00      	nop
 80049d2:	bf00      	nop
 80049d4:	3714      	adds	r7, #20
 80049d6:	46bd      	mov	sp, r7
 80049d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049dc:	4770      	bx	lr
 80049de:	bf00      	nop
 80049e0:	20000914 	.word	0x20000914

080049e4 <vQueueWaitForMessageRestricted>:
 80049e4:	b580      	push	{r7, lr}
 80049e6:	b086      	sub	sp, #24
 80049e8:	af00      	add	r7, sp, #0
 80049ea:	60f8      	str	r0, [r7, #12]
 80049ec:	60b9      	str	r1, [r7, #8]
 80049ee:	607a      	str	r2, [r7, #4]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	617b      	str	r3, [r7, #20]
 80049f4:	f001 fd6e 	bl	80064d4 <vPortEnterCritical>
 80049f8:	697b      	ldr	r3, [r7, #20]
 80049fa:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80049fe:	b25b      	sxtb	r3, r3
 8004a00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a04:	d103      	bne.n	8004a0e <vQueueWaitForMessageRestricted+0x2a>
 8004a06:	697b      	ldr	r3, [r7, #20]
 8004a08:	2200      	movs	r2, #0
 8004a0a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8004a0e:	697b      	ldr	r3, [r7, #20]
 8004a10:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8004a14:	b25b      	sxtb	r3, r3
 8004a16:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a1a:	d103      	bne.n	8004a24 <vQueueWaitForMessageRestricted+0x40>
 8004a1c:	697b      	ldr	r3, [r7, #20]
 8004a1e:	2200      	movs	r2, #0
 8004a20:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004a24:	f001 fd86 	bl	8006534 <vPortExitCritical>
 8004a28:	697b      	ldr	r3, [r7, #20]
 8004a2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a2c:	2b00      	cmp	r3, #0
 8004a2e:	d106      	bne.n	8004a3e <vQueueWaitForMessageRestricted+0x5a>
 8004a30:	697b      	ldr	r3, [r7, #20]
 8004a32:	3324      	adds	r3, #36	; 0x24
 8004a34:	687a      	ldr	r2, [r7, #4]
 8004a36:	68b9      	ldr	r1, [r7, #8]
 8004a38:	4618      	mov	r0, r3
 8004a3a:	f000 fc69 	bl	8005310 <vTaskPlaceOnEventListRestricted>
 8004a3e:	6978      	ldr	r0, [r7, #20]
 8004a40:	f7ff ff26 	bl	8004890 <prvUnlockQueue>
 8004a44:	bf00      	nop
 8004a46:	3718      	adds	r7, #24
 8004a48:	46bd      	mov	sp, r7
 8004a4a:	bd80      	pop	{r7, pc}

08004a4c <xTaskCreateStatic>:
 8004a4c:	b580      	push	{r7, lr}
 8004a4e:	b08e      	sub	sp, #56	; 0x38
 8004a50:	af04      	add	r7, sp, #16
 8004a52:	60f8      	str	r0, [r7, #12]
 8004a54:	60b9      	str	r1, [r7, #8]
 8004a56:	607a      	str	r2, [r7, #4]
 8004a58:	603b      	str	r3, [r7, #0]
 8004a5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d10a      	bne.n	8004a76 <xTaskCreateStatic+0x2a>
 8004a60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a64:	f383 8811 	msr	BASEPRI, r3
 8004a68:	f3bf 8f6f 	isb	sy
 8004a6c:	f3bf 8f4f 	dsb	sy
 8004a70:	623b      	str	r3, [r7, #32]
 8004a72:	bf00      	nop
 8004a74:	e7fe      	b.n	8004a74 <xTaskCreateStatic+0x28>
 8004a76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d10a      	bne.n	8004a92 <xTaskCreateStatic+0x46>
 8004a7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a80:	f383 8811 	msr	BASEPRI, r3
 8004a84:	f3bf 8f6f 	isb	sy
 8004a88:	f3bf 8f4f 	dsb	sy
 8004a8c:	61fb      	str	r3, [r7, #28]
 8004a8e:	bf00      	nop
 8004a90:	e7fe      	b.n	8004a90 <xTaskCreateStatic+0x44>
 8004a92:	23a8      	movs	r3, #168	; 0xa8
 8004a94:	613b      	str	r3, [r7, #16]
 8004a96:	693b      	ldr	r3, [r7, #16]
 8004a98:	2ba8      	cmp	r3, #168	; 0xa8
 8004a9a:	d00a      	beq.n	8004ab2 <xTaskCreateStatic+0x66>
 8004a9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004aa0:	f383 8811 	msr	BASEPRI, r3
 8004aa4:	f3bf 8f6f 	isb	sy
 8004aa8:	f3bf 8f4f 	dsb	sy
 8004aac:	61bb      	str	r3, [r7, #24]
 8004aae:	bf00      	nop
 8004ab0:	e7fe      	b.n	8004ab0 <xTaskCreateStatic+0x64>
 8004ab2:	693b      	ldr	r3, [r7, #16]
 8004ab4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d01e      	beq.n	8004af8 <xTaskCreateStatic+0xac>
 8004aba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004abc:	2b00      	cmp	r3, #0
 8004abe:	d01b      	beq.n	8004af8 <xTaskCreateStatic+0xac>
 8004ac0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004ac2:	627b      	str	r3, [r7, #36]	; 0x24
 8004ac4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ac6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004ac8:	631a      	str	r2, [r3, #48]	; 0x30
 8004aca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004acc:	2202      	movs	r2, #2
 8004ace:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 8004ad2:	2300      	movs	r3, #0
 8004ad4:	9303      	str	r3, [sp, #12]
 8004ad6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ad8:	9302      	str	r3, [sp, #8]
 8004ada:	f107 0314 	add.w	r3, r7, #20
 8004ade:	9301      	str	r3, [sp, #4]
 8004ae0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ae2:	9300      	str	r3, [sp, #0]
 8004ae4:	683b      	ldr	r3, [r7, #0]
 8004ae6:	687a      	ldr	r2, [r7, #4]
 8004ae8:	68b9      	ldr	r1, [r7, #8]
 8004aea:	68f8      	ldr	r0, [r7, #12]
 8004aec:	f000 f850 	bl	8004b90 <prvInitialiseNewTask>
 8004af0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004af2:	f000 f8f3 	bl	8004cdc <prvAddNewTaskToReadyList>
 8004af6:	e001      	b.n	8004afc <xTaskCreateStatic+0xb0>
 8004af8:	2300      	movs	r3, #0
 8004afa:	617b      	str	r3, [r7, #20]
 8004afc:	697b      	ldr	r3, [r7, #20]
 8004afe:	4618      	mov	r0, r3
 8004b00:	3728      	adds	r7, #40	; 0x28
 8004b02:	46bd      	mov	sp, r7
 8004b04:	bd80      	pop	{r7, pc}

08004b06 <xTaskCreate>:
 8004b06:	b580      	push	{r7, lr}
 8004b08:	b08c      	sub	sp, #48	; 0x30
 8004b0a:	af04      	add	r7, sp, #16
 8004b0c:	60f8      	str	r0, [r7, #12]
 8004b0e:	60b9      	str	r1, [r7, #8]
 8004b10:	603b      	str	r3, [r7, #0]
 8004b12:	4613      	mov	r3, r2
 8004b14:	80fb      	strh	r3, [r7, #6]
 8004b16:	88fb      	ldrh	r3, [r7, #6]
 8004b18:	009b      	lsls	r3, r3, #2
 8004b1a:	4618      	mov	r0, r3
 8004b1c:	f001 fdfc 	bl	8006718 <pvPortMalloc>
 8004b20:	6178      	str	r0, [r7, #20]
 8004b22:	697b      	ldr	r3, [r7, #20]
 8004b24:	2b00      	cmp	r3, #0
 8004b26:	d00e      	beq.n	8004b46 <xTaskCreate+0x40>
 8004b28:	20a8      	movs	r0, #168	; 0xa8
 8004b2a:	f001 fdf5 	bl	8006718 <pvPortMalloc>
 8004b2e:	61f8      	str	r0, [r7, #28]
 8004b30:	69fb      	ldr	r3, [r7, #28]
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d003      	beq.n	8004b3e <xTaskCreate+0x38>
 8004b36:	69fb      	ldr	r3, [r7, #28]
 8004b38:	697a      	ldr	r2, [r7, #20]
 8004b3a:	631a      	str	r2, [r3, #48]	; 0x30
 8004b3c:	e005      	b.n	8004b4a <xTaskCreate+0x44>
 8004b3e:	6978      	ldr	r0, [r7, #20]
 8004b40:	f001 feb6 	bl	80068b0 <vPortFree>
 8004b44:	e001      	b.n	8004b4a <xTaskCreate+0x44>
 8004b46:	2300      	movs	r3, #0
 8004b48:	61fb      	str	r3, [r7, #28]
 8004b4a:	69fb      	ldr	r3, [r7, #28]
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d017      	beq.n	8004b80 <xTaskCreate+0x7a>
 8004b50:	69fb      	ldr	r3, [r7, #28]
 8004b52:	2200      	movs	r2, #0
 8004b54:	f883 20a5 	strb.w	r2, [r3, #165]	; 0xa5
 8004b58:	88fa      	ldrh	r2, [r7, #6]
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	9303      	str	r3, [sp, #12]
 8004b5e:	69fb      	ldr	r3, [r7, #28]
 8004b60:	9302      	str	r3, [sp, #8]
 8004b62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004b64:	9301      	str	r3, [sp, #4]
 8004b66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b68:	9300      	str	r3, [sp, #0]
 8004b6a:	683b      	ldr	r3, [r7, #0]
 8004b6c:	68b9      	ldr	r1, [r7, #8]
 8004b6e:	68f8      	ldr	r0, [r7, #12]
 8004b70:	f000 f80e 	bl	8004b90 <prvInitialiseNewTask>
 8004b74:	69f8      	ldr	r0, [r7, #28]
 8004b76:	f000 f8b1 	bl	8004cdc <prvAddNewTaskToReadyList>
 8004b7a:	2301      	movs	r3, #1
 8004b7c:	61bb      	str	r3, [r7, #24]
 8004b7e:	e002      	b.n	8004b86 <xTaskCreate+0x80>
 8004b80:	f04f 33ff 	mov.w	r3, #4294967295
 8004b84:	61bb      	str	r3, [r7, #24]
 8004b86:	69bb      	ldr	r3, [r7, #24]
 8004b88:	4618      	mov	r0, r3
 8004b8a:	3720      	adds	r7, #32
 8004b8c:	46bd      	mov	sp, r7
 8004b8e:	bd80      	pop	{r7, pc}

08004b90 <prvInitialiseNewTask>:
 8004b90:	b580      	push	{r7, lr}
 8004b92:	b088      	sub	sp, #32
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	60f8      	str	r0, [r7, #12]
 8004b98:	60b9      	str	r1, [r7, #8]
 8004b9a:	607a      	str	r2, [r7, #4]
 8004b9c:	603b      	str	r3, [r7, #0]
 8004b9e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ba0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	009b      	lsls	r3, r3, #2
 8004ba6:	461a      	mov	r2, r3
 8004ba8:	21a5      	movs	r1, #165	; 0xa5
 8004baa:	f002 f9a7 	bl	8006efc <memset>
 8004bae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004bb8:	3b01      	subs	r3, #1
 8004bba:	009b      	lsls	r3, r3, #2
 8004bbc:	4413      	add	r3, r2
 8004bbe:	61bb      	str	r3, [r7, #24]
 8004bc0:	69bb      	ldr	r3, [r7, #24]
 8004bc2:	f023 0307 	bic.w	r3, r3, #7
 8004bc6:	61bb      	str	r3, [r7, #24]
 8004bc8:	69bb      	ldr	r3, [r7, #24]
 8004bca:	f003 0307 	and.w	r3, r3, #7
 8004bce:	2b00      	cmp	r3, #0
 8004bd0:	d00a      	beq.n	8004be8 <prvInitialiseNewTask+0x58>
 8004bd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004bd6:	f383 8811 	msr	BASEPRI, r3
 8004bda:	f3bf 8f6f 	isb	sy
 8004bde:	f3bf 8f4f 	dsb	sy
 8004be2:	617b      	str	r3, [r7, #20]
 8004be4:	bf00      	nop
 8004be6:	e7fe      	b.n	8004be6 <prvInitialiseNewTask+0x56>
 8004be8:	68bb      	ldr	r3, [r7, #8]
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d01f      	beq.n	8004c2e <prvInitialiseNewTask+0x9e>
 8004bee:	2300      	movs	r3, #0
 8004bf0:	61fb      	str	r3, [r7, #28]
 8004bf2:	e012      	b.n	8004c1a <prvInitialiseNewTask+0x8a>
 8004bf4:	68ba      	ldr	r2, [r7, #8]
 8004bf6:	69fb      	ldr	r3, [r7, #28]
 8004bf8:	4413      	add	r3, r2
 8004bfa:	7819      	ldrb	r1, [r3, #0]
 8004bfc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004bfe:	69fb      	ldr	r3, [r7, #28]
 8004c00:	4413      	add	r3, r2
 8004c02:	3334      	adds	r3, #52	; 0x34
 8004c04:	460a      	mov	r2, r1
 8004c06:	701a      	strb	r2, [r3, #0]
 8004c08:	68ba      	ldr	r2, [r7, #8]
 8004c0a:	69fb      	ldr	r3, [r7, #28]
 8004c0c:	4413      	add	r3, r2
 8004c0e:	781b      	ldrb	r3, [r3, #0]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d006      	beq.n	8004c22 <prvInitialiseNewTask+0x92>
 8004c14:	69fb      	ldr	r3, [r7, #28]
 8004c16:	3301      	adds	r3, #1
 8004c18:	61fb      	str	r3, [r7, #28]
 8004c1a:	69fb      	ldr	r3, [r7, #28]
 8004c1c:	2b0f      	cmp	r3, #15
 8004c1e:	d9e9      	bls.n	8004bf4 <prvInitialiseNewTask+0x64>
 8004c20:	e000      	b.n	8004c24 <prvInitialiseNewTask+0x94>
 8004c22:	bf00      	nop
 8004c24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c26:	2200      	movs	r2, #0
 8004c28:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004c2c:	e003      	b.n	8004c36 <prvInitialiseNewTask+0xa6>
 8004c2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c30:	2200      	movs	r2, #0
 8004c32:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004c36:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c38:	2b37      	cmp	r3, #55	; 0x37
 8004c3a:	d901      	bls.n	8004c40 <prvInitialiseNewTask+0xb0>
 8004c3c:	2337      	movs	r3, #55	; 0x37
 8004c3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c42:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004c44:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c46:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c48:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004c4a:	64da      	str	r2, [r3, #76]	; 0x4c
 8004c4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c4e:	2200      	movs	r2, #0
 8004c50:	651a      	str	r2, [r3, #80]	; 0x50
 8004c52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c54:	3304      	adds	r3, #4
 8004c56:	4618      	mov	r0, r3
 8004c58:	f7fe fe9c 	bl	8003994 <vListInitialiseItem>
 8004c5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c5e:	3318      	adds	r3, #24
 8004c60:	4618      	mov	r0, r3
 8004c62:	f7fe fe97 	bl	8003994 <vListInitialiseItem>
 8004c66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c68:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004c6a:	611a      	str	r2, [r3, #16]
 8004c6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004c6e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8004c72:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c74:	619a      	str	r2, [r3, #24]
 8004c76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c78:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004c7a:	625a      	str	r2, [r3, #36]	; 0x24
 8004c7c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c7e:	2200      	movs	r2, #0
 8004c80:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
 8004c84:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c86:	2200      	movs	r2, #0
 8004c88:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
 8004c8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c8e:	3354      	adds	r3, #84	; 0x54
 8004c90:	224c      	movs	r2, #76	; 0x4c
 8004c92:	2100      	movs	r1, #0
 8004c94:	4618      	mov	r0, r3
 8004c96:	f002 f931 	bl	8006efc <memset>
 8004c9a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004c9c:	4a0c      	ldr	r2, [pc, #48]	; (8004cd0 <prvInitialiseNewTask+0x140>)
 8004c9e:	659a      	str	r2, [r3, #88]	; 0x58
 8004ca0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ca2:	4a0c      	ldr	r2, [pc, #48]	; (8004cd4 <prvInitialiseNewTask+0x144>)
 8004ca4:	65da      	str	r2, [r3, #92]	; 0x5c
 8004ca6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004ca8:	4a0b      	ldr	r2, [pc, #44]	; (8004cd8 <prvInitialiseNewTask+0x148>)
 8004caa:	661a      	str	r2, [r3, #96]	; 0x60
 8004cac:	683a      	ldr	r2, [r7, #0]
 8004cae:	68f9      	ldr	r1, [r7, #12]
 8004cb0:	69b8      	ldr	r0, [r7, #24]
 8004cb2:	f001 fae1 	bl	8006278 <pxPortInitialiseStack>
 8004cb6:	4602      	mov	r2, r0
 8004cb8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004cba:	601a      	str	r2, [r3, #0]
 8004cbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d002      	beq.n	8004cc8 <prvInitialiseNewTask+0x138>
 8004cc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004cc4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004cc6:	601a      	str	r2, [r3, #0]
 8004cc8:	bf00      	nop
 8004cca:	3720      	adds	r7, #32
 8004ccc:	46bd      	mov	sp, r7
 8004cce:	bd80      	pop	{r7, pc}
 8004cd0:	20004ba8 	.word	0x20004ba8
 8004cd4:	20004c10 	.word	0x20004c10
 8004cd8:	20004c78 	.word	0x20004c78

08004cdc <prvAddNewTaskToReadyList>:
 8004cdc:	b580      	push	{r7, lr}
 8004cde:	b082      	sub	sp, #8
 8004ce0:	af00      	add	r7, sp, #0
 8004ce2:	6078      	str	r0, [r7, #4]
 8004ce4:	f001 fbf6 	bl	80064d4 <vPortEnterCritical>
 8004ce8:	4b2d      	ldr	r3, [pc, #180]	; (8004da0 <prvAddNewTaskToReadyList+0xc4>)
 8004cea:	681b      	ldr	r3, [r3, #0]
 8004cec:	3301      	adds	r3, #1
 8004cee:	4a2c      	ldr	r2, [pc, #176]	; (8004da0 <prvAddNewTaskToReadyList+0xc4>)
 8004cf0:	6013      	str	r3, [r2, #0]
 8004cf2:	4b2c      	ldr	r3, [pc, #176]	; (8004da4 <prvAddNewTaskToReadyList+0xc8>)
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	2b00      	cmp	r3, #0
 8004cf8:	d109      	bne.n	8004d0e <prvAddNewTaskToReadyList+0x32>
 8004cfa:	4a2a      	ldr	r2, [pc, #168]	; (8004da4 <prvAddNewTaskToReadyList+0xc8>)
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	6013      	str	r3, [r2, #0]
 8004d00:	4b27      	ldr	r3, [pc, #156]	; (8004da0 <prvAddNewTaskToReadyList+0xc4>)
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	2b01      	cmp	r3, #1
 8004d06:	d110      	bne.n	8004d2a <prvAddNewTaskToReadyList+0x4e>
 8004d08:	f000 fc90 	bl	800562c <prvInitialiseTaskLists>
 8004d0c:	e00d      	b.n	8004d2a <prvAddNewTaskToReadyList+0x4e>
 8004d0e:	4b26      	ldr	r3, [pc, #152]	; (8004da8 <prvAddNewTaskToReadyList+0xcc>)
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d109      	bne.n	8004d2a <prvAddNewTaskToReadyList+0x4e>
 8004d16:	4b23      	ldr	r3, [pc, #140]	; (8004da4 <prvAddNewTaskToReadyList+0xc8>)
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d20:	429a      	cmp	r2, r3
 8004d22:	d802      	bhi.n	8004d2a <prvAddNewTaskToReadyList+0x4e>
 8004d24:	4a1f      	ldr	r2, [pc, #124]	; (8004da4 <prvAddNewTaskToReadyList+0xc8>)
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	6013      	str	r3, [r2, #0]
 8004d2a:	4b20      	ldr	r3, [pc, #128]	; (8004dac <prvAddNewTaskToReadyList+0xd0>)
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	3301      	adds	r3, #1
 8004d30:	4a1e      	ldr	r2, [pc, #120]	; (8004dac <prvAddNewTaskToReadyList+0xd0>)
 8004d32:	6013      	str	r3, [r2, #0]
 8004d34:	4b1d      	ldr	r3, [pc, #116]	; (8004dac <prvAddNewTaskToReadyList+0xd0>)
 8004d36:	681a      	ldr	r2, [r3, #0]
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	645a      	str	r2, [r3, #68]	; 0x44
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d40:	4b1b      	ldr	r3, [pc, #108]	; (8004db0 <prvAddNewTaskToReadyList+0xd4>)
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	429a      	cmp	r2, r3
 8004d46:	d903      	bls.n	8004d50 <prvAddNewTaskToReadyList+0x74>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d4c:	4a18      	ldr	r2, [pc, #96]	; (8004db0 <prvAddNewTaskToReadyList+0xd4>)
 8004d4e:	6013      	str	r3, [r2, #0]
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d54:	4613      	mov	r3, r2
 8004d56:	009b      	lsls	r3, r3, #2
 8004d58:	4413      	add	r3, r2
 8004d5a:	009b      	lsls	r3, r3, #2
 8004d5c:	4a15      	ldr	r2, [pc, #84]	; (8004db4 <prvAddNewTaskToReadyList+0xd8>)
 8004d5e:	441a      	add	r2, r3
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	3304      	adds	r3, #4
 8004d64:	4619      	mov	r1, r3
 8004d66:	4610      	mov	r0, r2
 8004d68:	f7fe fe21 	bl	80039ae <vListInsertEnd>
 8004d6c:	f001 fbe2 	bl	8006534 <vPortExitCritical>
 8004d70:	4b0d      	ldr	r3, [pc, #52]	; (8004da8 <prvAddNewTaskToReadyList+0xcc>)
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d00e      	beq.n	8004d96 <prvAddNewTaskToReadyList+0xba>
 8004d78:	4b0a      	ldr	r3, [pc, #40]	; (8004da4 <prvAddNewTaskToReadyList+0xc8>)
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d82:	429a      	cmp	r2, r3
 8004d84:	d207      	bcs.n	8004d96 <prvAddNewTaskToReadyList+0xba>
 8004d86:	4b0c      	ldr	r3, [pc, #48]	; (8004db8 <prvAddNewTaskToReadyList+0xdc>)
 8004d88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004d8c:	601a      	str	r2, [r3, #0]
 8004d8e:	f3bf 8f4f 	dsb	sy
 8004d92:	f3bf 8f6f 	isb	sy
 8004d96:	bf00      	nop
 8004d98:	3708      	adds	r7, #8
 8004d9a:	46bd      	mov	sp, r7
 8004d9c:	bd80      	pop	{r7, pc}
 8004d9e:	bf00      	nop
 8004da0:	20000e28 	.word	0x20000e28
 8004da4:	20000954 	.word	0x20000954
 8004da8:	20000e34 	.word	0x20000e34
 8004dac:	20000e44 	.word	0x20000e44
 8004db0:	20000e30 	.word	0x20000e30
 8004db4:	20000958 	.word	0x20000958
 8004db8:	e000ed04 	.word	0xe000ed04

08004dbc <vTaskStartScheduler>:
 8004dbc:	b580      	push	{r7, lr}
 8004dbe:	b08a      	sub	sp, #40	; 0x28
 8004dc0:	af04      	add	r7, sp, #16
 8004dc2:	2300      	movs	r3, #0
 8004dc4:	60bb      	str	r3, [r7, #8]
 8004dc6:	2300      	movs	r3, #0
 8004dc8:	607b      	str	r3, [r7, #4]
 8004dca:	463a      	mov	r2, r7
 8004dcc:	1d39      	adds	r1, r7, #4
 8004dce:	f107 0308 	add.w	r3, r7, #8
 8004dd2:	4618      	mov	r0, r3
 8004dd4:	f7fe fb1e 	bl	8003414 <vApplicationGetIdleTaskMemory>
 8004dd8:	6839      	ldr	r1, [r7, #0]
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	68ba      	ldr	r2, [r7, #8]
 8004dde:	9202      	str	r2, [sp, #8]
 8004de0:	9301      	str	r3, [sp, #4]
 8004de2:	2300      	movs	r3, #0
 8004de4:	9300      	str	r3, [sp, #0]
 8004de6:	2300      	movs	r3, #0
 8004de8:	460a      	mov	r2, r1
 8004dea:	4924      	ldr	r1, [pc, #144]	; (8004e7c <vTaskStartScheduler+0xc0>)
 8004dec:	4824      	ldr	r0, [pc, #144]	; (8004e80 <vTaskStartScheduler+0xc4>)
 8004dee:	f7ff fe2d 	bl	8004a4c <xTaskCreateStatic>
 8004df2:	4603      	mov	r3, r0
 8004df4:	4a23      	ldr	r2, [pc, #140]	; (8004e84 <vTaskStartScheduler+0xc8>)
 8004df6:	6013      	str	r3, [r2, #0]
 8004df8:	4b22      	ldr	r3, [pc, #136]	; (8004e84 <vTaskStartScheduler+0xc8>)
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d002      	beq.n	8004e06 <vTaskStartScheduler+0x4a>
 8004e00:	2301      	movs	r3, #1
 8004e02:	617b      	str	r3, [r7, #20]
 8004e04:	e001      	b.n	8004e0a <vTaskStartScheduler+0x4e>
 8004e06:	2300      	movs	r3, #0
 8004e08:	617b      	str	r3, [r7, #20]
 8004e0a:	697b      	ldr	r3, [r7, #20]
 8004e0c:	2b01      	cmp	r3, #1
 8004e0e:	d102      	bne.n	8004e16 <vTaskStartScheduler+0x5a>
 8004e10:	f000 fec4 	bl	8005b9c <xTimerCreateTimerTask>
 8004e14:	6178      	str	r0, [r7, #20]
 8004e16:	697b      	ldr	r3, [r7, #20]
 8004e18:	2b01      	cmp	r3, #1
 8004e1a:	d11b      	bne.n	8004e54 <vTaskStartScheduler+0x98>
 8004e1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004e20:	f383 8811 	msr	BASEPRI, r3
 8004e24:	f3bf 8f6f 	isb	sy
 8004e28:	f3bf 8f4f 	dsb	sy
 8004e2c:	613b      	str	r3, [r7, #16]
 8004e2e:	bf00      	nop
 8004e30:	4b15      	ldr	r3, [pc, #84]	; (8004e88 <vTaskStartScheduler+0xcc>)
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	3354      	adds	r3, #84	; 0x54
 8004e36:	4a15      	ldr	r2, [pc, #84]	; (8004e8c <vTaskStartScheduler+0xd0>)
 8004e38:	6013      	str	r3, [r2, #0]
 8004e3a:	4b15      	ldr	r3, [pc, #84]	; (8004e90 <vTaskStartScheduler+0xd4>)
 8004e3c:	f04f 32ff 	mov.w	r2, #4294967295
 8004e40:	601a      	str	r2, [r3, #0]
 8004e42:	4b14      	ldr	r3, [pc, #80]	; (8004e94 <vTaskStartScheduler+0xd8>)
 8004e44:	2201      	movs	r2, #1
 8004e46:	601a      	str	r2, [r3, #0]
 8004e48:	4b13      	ldr	r3, [pc, #76]	; (8004e98 <vTaskStartScheduler+0xdc>)
 8004e4a:	2200      	movs	r2, #0
 8004e4c:	601a      	str	r2, [r3, #0]
 8004e4e:	f001 fa9f 	bl	8006390 <xPortStartScheduler>
 8004e52:	e00e      	b.n	8004e72 <vTaskStartScheduler+0xb6>
 8004e54:	697b      	ldr	r3, [r7, #20]
 8004e56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e5a:	d10a      	bne.n	8004e72 <vTaskStartScheduler+0xb6>
 8004e5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004e60:	f383 8811 	msr	BASEPRI, r3
 8004e64:	f3bf 8f6f 	isb	sy
 8004e68:	f3bf 8f4f 	dsb	sy
 8004e6c:	60fb      	str	r3, [r7, #12]
 8004e6e:	bf00      	nop
 8004e70:	e7fe      	b.n	8004e70 <vTaskStartScheduler+0xb4>
 8004e72:	bf00      	nop
 8004e74:	3718      	adds	r7, #24
 8004e76:	46bd      	mov	sp, r7
 8004e78:	bd80      	pop	{r7, pc}
 8004e7a:	bf00      	nop
 8004e7c:	08007c78 	.word	0x08007c78
 8004e80:	080055fd 	.word	0x080055fd
 8004e84:	20000e4c 	.word	0x20000e4c
 8004e88:	20000954 	.word	0x20000954
 8004e8c:	200000a8 	.word	0x200000a8
 8004e90:	20000e48 	.word	0x20000e48
 8004e94:	20000e34 	.word	0x20000e34
 8004e98:	20000e2c 	.word	0x20000e2c

08004e9c <vTaskSuspendAll>:
 8004e9c:	b480      	push	{r7}
 8004e9e:	af00      	add	r7, sp, #0
 8004ea0:	4b04      	ldr	r3, [pc, #16]	; (8004eb4 <vTaskSuspendAll+0x18>)
 8004ea2:	681b      	ldr	r3, [r3, #0]
 8004ea4:	3301      	adds	r3, #1
 8004ea6:	4a03      	ldr	r2, [pc, #12]	; (8004eb4 <vTaskSuspendAll+0x18>)
 8004ea8:	6013      	str	r3, [r2, #0]
 8004eaa:	bf00      	nop
 8004eac:	46bd      	mov	sp, r7
 8004eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eb2:	4770      	bx	lr
 8004eb4:	20000e50 	.word	0x20000e50

08004eb8 <xTaskResumeAll>:
 8004eb8:	b580      	push	{r7, lr}
 8004eba:	b084      	sub	sp, #16
 8004ebc:	af00      	add	r7, sp, #0
 8004ebe:	2300      	movs	r3, #0
 8004ec0:	60fb      	str	r3, [r7, #12]
 8004ec2:	2300      	movs	r3, #0
 8004ec4:	60bb      	str	r3, [r7, #8]
 8004ec6:	4b42      	ldr	r3, [pc, #264]	; (8004fd0 <xTaskResumeAll+0x118>)
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d10a      	bne.n	8004ee4 <xTaskResumeAll+0x2c>
 8004ece:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004ed2:	f383 8811 	msr	BASEPRI, r3
 8004ed6:	f3bf 8f6f 	isb	sy
 8004eda:	f3bf 8f4f 	dsb	sy
 8004ede:	603b      	str	r3, [r7, #0]
 8004ee0:	bf00      	nop
 8004ee2:	e7fe      	b.n	8004ee2 <xTaskResumeAll+0x2a>
 8004ee4:	f001 faf6 	bl	80064d4 <vPortEnterCritical>
 8004ee8:	4b39      	ldr	r3, [pc, #228]	; (8004fd0 <xTaskResumeAll+0x118>)
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	3b01      	subs	r3, #1
 8004eee:	4a38      	ldr	r2, [pc, #224]	; (8004fd0 <xTaskResumeAll+0x118>)
 8004ef0:	6013      	str	r3, [r2, #0]
 8004ef2:	4b37      	ldr	r3, [pc, #220]	; (8004fd0 <xTaskResumeAll+0x118>)
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d162      	bne.n	8004fc0 <xTaskResumeAll+0x108>
 8004efa:	4b36      	ldr	r3, [pc, #216]	; (8004fd4 <xTaskResumeAll+0x11c>)
 8004efc:	681b      	ldr	r3, [r3, #0]
 8004efe:	2b00      	cmp	r3, #0
 8004f00:	d05e      	beq.n	8004fc0 <xTaskResumeAll+0x108>
 8004f02:	e02f      	b.n	8004f64 <xTaskResumeAll+0xac>
 8004f04:	4b34      	ldr	r3, [pc, #208]	; (8004fd8 <xTaskResumeAll+0x120>)
 8004f06:	68db      	ldr	r3, [r3, #12]
 8004f08:	68db      	ldr	r3, [r3, #12]
 8004f0a:	60fb      	str	r3, [r7, #12]
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	3318      	adds	r3, #24
 8004f10:	4618      	mov	r0, r3
 8004f12:	f7fe fda9 	bl	8003a68 <uxListRemove>
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	3304      	adds	r3, #4
 8004f1a:	4618      	mov	r0, r3
 8004f1c:	f7fe fda4 	bl	8003a68 <uxListRemove>
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f24:	4b2d      	ldr	r3, [pc, #180]	; (8004fdc <xTaskResumeAll+0x124>)
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	429a      	cmp	r2, r3
 8004f2a:	d903      	bls.n	8004f34 <xTaskResumeAll+0x7c>
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f30:	4a2a      	ldr	r2, [pc, #168]	; (8004fdc <xTaskResumeAll+0x124>)
 8004f32:	6013      	str	r3, [r2, #0]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f38:	4613      	mov	r3, r2
 8004f3a:	009b      	lsls	r3, r3, #2
 8004f3c:	4413      	add	r3, r2
 8004f3e:	009b      	lsls	r3, r3, #2
 8004f40:	4a27      	ldr	r2, [pc, #156]	; (8004fe0 <xTaskResumeAll+0x128>)
 8004f42:	441a      	add	r2, r3
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	3304      	adds	r3, #4
 8004f48:	4619      	mov	r1, r3
 8004f4a:	4610      	mov	r0, r2
 8004f4c:	f7fe fd2f 	bl	80039ae <vListInsertEnd>
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004f54:	4b23      	ldr	r3, [pc, #140]	; (8004fe4 <xTaskResumeAll+0x12c>)
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f5a:	429a      	cmp	r2, r3
 8004f5c:	d302      	bcc.n	8004f64 <xTaskResumeAll+0xac>
 8004f5e:	4b22      	ldr	r3, [pc, #136]	; (8004fe8 <xTaskResumeAll+0x130>)
 8004f60:	2201      	movs	r2, #1
 8004f62:	601a      	str	r2, [r3, #0]
 8004f64:	4b1c      	ldr	r3, [pc, #112]	; (8004fd8 <xTaskResumeAll+0x120>)
 8004f66:	681b      	ldr	r3, [r3, #0]
 8004f68:	2b00      	cmp	r3, #0
 8004f6a:	d1cb      	bne.n	8004f04 <xTaskResumeAll+0x4c>
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d001      	beq.n	8004f76 <xTaskResumeAll+0xbe>
 8004f72:	f000 fbfd 	bl	8005770 <prvResetNextTaskUnblockTime>
 8004f76:	4b1d      	ldr	r3, [pc, #116]	; (8004fec <xTaskResumeAll+0x134>)
 8004f78:	681b      	ldr	r3, [r3, #0]
 8004f7a:	607b      	str	r3, [r7, #4]
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d010      	beq.n	8004fa4 <xTaskResumeAll+0xec>
 8004f82:	f000 f847 	bl	8005014 <xTaskIncrementTick>
 8004f86:	4603      	mov	r3, r0
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d002      	beq.n	8004f92 <xTaskResumeAll+0xda>
 8004f8c:	4b16      	ldr	r3, [pc, #88]	; (8004fe8 <xTaskResumeAll+0x130>)
 8004f8e:	2201      	movs	r2, #1
 8004f90:	601a      	str	r2, [r3, #0]
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	3b01      	subs	r3, #1
 8004f96:	607b      	str	r3, [r7, #4]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2b00      	cmp	r3, #0
 8004f9c:	d1f1      	bne.n	8004f82 <xTaskResumeAll+0xca>
 8004f9e:	4b13      	ldr	r3, [pc, #76]	; (8004fec <xTaskResumeAll+0x134>)
 8004fa0:	2200      	movs	r2, #0
 8004fa2:	601a      	str	r2, [r3, #0]
 8004fa4:	4b10      	ldr	r3, [pc, #64]	; (8004fe8 <xTaskResumeAll+0x130>)
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	d009      	beq.n	8004fc0 <xTaskResumeAll+0x108>
 8004fac:	2301      	movs	r3, #1
 8004fae:	60bb      	str	r3, [r7, #8]
 8004fb0:	4b0f      	ldr	r3, [pc, #60]	; (8004ff0 <xTaskResumeAll+0x138>)
 8004fb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004fb6:	601a      	str	r2, [r3, #0]
 8004fb8:	f3bf 8f4f 	dsb	sy
 8004fbc:	f3bf 8f6f 	isb	sy
 8004fc0:	f001 fab8 	bl	8006534 <vPortExitCritical>
 8004fc4:	68bb      	ldr	r3, [r7, #8]
 8004fc6:	4618      	mov	r0, r3
 8004fc8:	3710      	adds	r7, #16
 8004fca:	46bd      	mov	sp, r7
 8004fcc:	bd80      	pop	{r7, pc}
 8004fce:	bf00      	nop
 8004fd0:	20000e50 	.word	0x20000e50
 8004fd4:	20000e28 	.word	0x20000e28
 8004fd8:	20000de8 	.word	0x20000de8
 8004fdc:	20000e30 	.word	0x20000e30
 8004fe0:	20000958 	.word	0x20000958
 8004fe4:	20000954 	.word	0x20000954
 8004fe8:	20000e3c 	.word	0x20000e3c
 8004fec:	20000e38 	.word	0x20000e38
 8004ff0:	e000ed04 	.word	0xe000ed04

08004ff4 <xTaskGetTickCount>:
 8004ff4:	b480      	push	{r7}
 8004ff6:	b083      	sub	sp, #12
 8004ff8:	af00      	add	r7, sp, #0
 8004ffa:	4b05      	ldr	r3, [pc, #20]	; (8005010 <xTaskGetTickCount+0x1c>)
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	607b      	str	r3, [r7, #4]
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	4618      	mov	r0, r3
 8005004:	370c      	adds	r7, #12
 8005006:	46bd      	mov	sp, r7
 8005008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800500c:	4770      	bx	lr
 800500e:	bf00      	nop
 8005010:	20000e2c 	.word	0x20000e2c

08005014 <xTaskIncrementTick>:
 8005014:	b580      	push	{r7, lr}
 8005016:	b086      	sub	sp, #24
 8005018:	af00      	add	r7, sp, #0
 800501a:	2300      	movs	r3, #0
 800501c:	617b      	str	r3, [r7, #20]
 800501e:	4b4f      	ldr	r3, [pc, #316]	; (800515c <xTaskIncrementTick+0x148>)
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	2b00      	cmp	r3, #0
 8005024:	f040 808f 	bne.w	8005146 <xTaskIncrementTick+0x132>
 8005028:	4b4d      	ldr	r3, [pc, #308]	; (8005160 <xTaskIncrementTick+0x14c>)
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	3301      	adds	r3, #1
 800502e:	613b      	str	r3, [r7, #16]
 8005030:	4a4b      	ldr	r2, [pc, #300]	; (8005160 <xTaskIncrementTick+0x14c>)
 8005032:	693b      	ldr	r3, [r7, #16]
 8005034:	6013      	str	r3, [r2, #0]
 8005036:	693b      	ldr	r3, [r7, #16]
 8005038:	2b00      	cmp	r3, #0
 800503a:	d120      	bne.n	800507e <xTaskIncrementTick+0x6a>
 800503c:	4b49      	ldr	r3, [pc, #292]	; (8005164 <xTaskIncrementTick+0x150>)
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	2b00      	cmp	r3, #0
 8005044:	d00a      	beq.n	800505c <xTaskIncrementTick+0x48>
 8005046:	f04f 0350 	mov.w	r3, #80	; 0x50
 800504a:	f383 8811 	msr	BASEPRI, r3
 800504e:	f3bf 8f6f 	isb	sy
 8005052:	f3bf 8f4f 	dsb	sy
 8005056:	603b      	str	r3, [r7, #0]
 8005058:	bf00      	nop
 800505a:	e7fe      	b.n	800505a <xTaskIncrementTick+0x46>
 800505c:	4b41      	ldr	r3, [pc, #260]	; (8005164 <xTaskIncrementTick+0x150>)
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	60fb      	str	r3, [r7, #12]
 8005062:	4b41      	ldr	r3, [pc, #260]	; (8005168 <xTaskIncrementTick+0x154>)
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	4a3f      	ldr	r2, [pc, #252]	; (8005164 <xTaskIncrementTick+0x150>)
 8005068:	6013      	str	r3, [r2, #0]
 800506a:	4a3f      	ldr	r2, [pc, #252]	; (8005168 <xTaskIncrementTick+0x154>)
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	6013      	str	r3, [r2, #0]
 8005070:	4b3e      	ldr	r3, [pc, #248]	; (800516c <xTaskIncrementTick+0x158>)
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	3301      	adds	r3, #1
 8005076:	4a3d      	ldr	r2, [pc, #244]	; (800516c <xTaskIncrementTick+0x158>)
 8005078:	6013      	str	r3, [r2, #0]
 800507a:	f000 fb79 	bl	8005770 <prvResetNextTaskUnblockTime>
 800507e:	4b3c      	ldr	r3, [pc, #240]	; (8005170 <xTaskIncrementTick+0x15c>)
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	693a      	ldr	r2, [r7, #16]
 8005084:	429a      	cmp	r2, r3
 8005086:	d349      	bcc.n	800511c <xTaskIncrementTick+0x108>
 8005088:	4b36      	ldr	r3, [pc, #216]	; (8005164 <xTaskIncrementTick+0x150>)
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	681b      	ldr	r3, [r3, #0]
 800508e:	2b00      	cmp	r3, #0
 8005090:	d104      	bne.n	800509c <xTaskIncrementTick+0x88>
 8005092:	4b37      	ldr	r3, [pc, #220]	; (8005170 <xTaskIncrementTick+0x15c>)
 8005094:	f04f 32ff 	mov.w	r2, #4294967295
 8005098:	601a      	str	r2, [r3, #0]
 800509a:	e03f      	b.n	800511c <xTaskIncrementTick+0x108>
 800509c:	4b31      	ldr	r3, [pc, #196]	; (8005164 <xTaskIncrementTick+0x150>)
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	68db      	ldr	r3, [r3, #12]
 80050a2:	68db      	ldr	r3, [r3, #12]
 80050a4:	60bb      	str	r3, [r7, #8]
 80050a6:	68bb      	ldr	r3, [r7, #8]
 80050a8:	685b      	ldr	r3, [r3, #4]
 80050aa:	607b      	str	r3, [r7, #4]
 80050ac:	693a      	ldr	r2, [r7, #16]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	429a      	cmp	r2, r3
 80050b2:	d203      	bcs.n	80050bc <xTaskIncrementTick+0xa8>
 80050b4:	4a2e      	ldr	r2, [pc, #184]	; (8005170 <xTaskIncrementTick+0x15c>)
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	6013      	str	r3, [r2, #0]
 80050ba:	e02f      	b.n	800511c <xTaskIncrementTick+0x108>
 80050bc:	68bb      	ldr	r3, [r7, #8]
 80050be:	3304      	adds	r3, #4
 80050c0:	4618      	mov	r0, r3
 80050c2:	f7fe fcd1 	bl	8003a68 <uxListRemove>
 80050c6:	68bb      	ldr	r3, [r7, #8]
 80050c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	d004      	beq.n	80050d8 <xTaskIncrementTick+0xc4>
 80050ce:	68bb      	ldr	r3, [r7, #8]
 80050d0:	3318      	adds	r3, #24
 80050d2:	4618      	mov	r0, r3
 80050d4:	f7fe fcc8 	bl	8003a68 <uxListRemove>
 80050d8:	68bb      	ldr	r3, [r7, #8]
 80050da:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80050dc:	4b25      	ldr	r3, [pc, #148]	; (8005174 <xTaskIncrementTick+0x160>)
 80050de:	681b      	ldr	r3, [r3, #0]
 80050e0:	429a      	cmp	r2, r3
 80050e2:	d903      	bls.n	80050ec <xTaskIncrementTick+0xd8>
 80050e4:	68bb      	ldr	r3, [r7, #8]
 80050e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80050e8:	4a22      	ldr	r2, [pc, #136]	; (8005174 <xTaskIncrementTick+0x160>)
 80050ea:	6013      	str	r3, [r2, #0]
 80050ec:	68bb      	ldr	r3, [r7, #8]
 80050ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80050f0:	4613      	mov	r3, r2
 80050f2:	009b      	lsls	r3, r3, #2
 80050f4:	4413      	add	r3, r2
 80050f6:	009b      	lsls	r3, r3, #2
 80050f8:	4a1f      	ldr	r2, [pc, #124]	; (8005178 <xTaskIncrementTick+0x164>)
 80050fa:	441a      	add	r2, r3
 80050fc:	68bb      	ldr	r3, [r7, #8]
 80050fe:	3304      	adds	r3, #4
 8005100:	4619      	mov	r1, r3
 8005102:	4610      	mov	r0, r2
 8005104:	f7fe fc53 	bl	80039ae <vListInsertEnd>
 8005108:	68bb      	ldr	r3, [r7, #8]
 800510a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800510c:	4b1b      	ldr	r3, [pc, #108]	; (800517c <xTaskIncrementTick+0x168>)
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005112:	429a      	cmp	r2, r3
 8005114:	d3b8      	bcc.n	8005088 <xTaskIncrementTick+0x74>
 8005116:	2301      	movs	r3, #1
 8005118:	617b      	str	r3, [r7, #20]
 800511a:	e7b5      	b.n	8005088 <xTaskIncrementTick+0x74>
 800511c:	4b17      	ldr	r3, [pc, #92]	; (800517c <xTaskIncrementTick+0x168>)
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005122:	4915      	ldr	r1, [pc, #84]	; (8005178 <xTaskIncrementTick+0x164>)
 8005124:	4613      	mov	r3, r2
 8005126:	009b      	lsls	r3, r3, #2
 8005128:	4413      	add	r3, r2
 800512a:	009b      	lsls	r3, r3, #2
 800512c:	440b      	add	r3, r1
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	2b01      	cmp	r3, #1
 8005132:	d901      	bls.n	8005138 <xTaskIncrementTick+0x124>
 8005134:	2301      	movs	r3, #1
 8005136:	617b      	str	r3, [r7, #20]
 8005138:	4b11      	ldr	r3, [pc, #68]	; (8005180 <xTaskIncrementTick+0x16c>)
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	2b00      	cmp	r3, #0
 800513e:	d007      	beq.n	8005150 <xTaskIncrementTick+0x13c>
 8005140:	2301      	movs	r3, #1
 8005142:	617b      	str	r3, [r7, #20]
 8005144:	e004      	b.n	8005150 <xTaskIncrementTick+0x13c>
 8005146:	4b0f      	ldr	r3, [pc, #60]	; (8005184 <xTaskIncrementTick+0x170>)
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	3301      	adds	r3, #1
 800514c:	4a0d      	ldr	r2, [pc, #52]	; (8005184 <xTaskIncrementTick+0x170>)
 800514e:	6013      	str	r3, [r2, #0]
 8005150:	697b      	ldr	r3, [r7, #20]
 8005152:	4618      	mov	r0, r3
 8005154:	3718      	adds	r7, #24
 8005156:	46bd      	mov	sp, r7
 8005158:	bd80      	pop	{r7, pc}
 800515a:	bf00      	nop
 800515c:	20000e50 	.word	0x20000e50
 8005160:	20000e2c 	.word	0x20000e2c
 8005164:	20000de0 	.word	0x20000de0
 8005168:	20000de4 	.word	0x20000de4
 800516c:	20000e40 	.word	0x20000e40
 8005170:	20000e48 	.word	0x20000e48
 8005174:	20000e30 	.word	0x20000e30
 8005178:	20000958 	.word	0x20000958
 800517c:	20000954 	.word	0x20000954
 8005180:	20000e3c 	.word	0x20000e3c
 8005184:	20000e38 	.word	0x20000e38

08005188 <vTaskSwitchContext>:
 8005188:	b480      	push	{r7}
 800518a:	b085      	sub	sp, #20
 800518c:	af00      	add	r7, sp, #0
 800518e:	4b2a      	ldr	r3, [pc, #168]	; (8005238 <vTaskSwitchContext+0xb0>)
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	2b00      	cmp	r3, #0
 8005194:	d003      	beq.n	800519e <vTaskSwitchContext+0x16>
 8005196:	4b29      	ldr	r3, [pc, #164]	; (800523c <vTaskSwitchContext+0xb4>)
 8005198:	2201      	movs	r2, #1
 800519a:	601a      	str	r2, [r3, #0]
 800519c:	e046      	b.n	800522c <vTaskSwitchContext+0xa4>
 800519e:	4b27      	ldr	r3, [pc, #156]	; (800523c <vTaskSwitchContext+0xb4>)
 80051a0:	2200      	movs	r2, #0
 80051a2:	601a      	str	r2, [r3, #0]
 80051a4:	4b26      	ldr	r3, [pc, #152]	; (8005240 <vTaskSwitchContext+0xb8>)
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	60fb      	str	r3, [r7, #12]
 80051aa:	e010      	b.n	80051ce <vTaskSwitchContext+0x46>
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	2b00      	cmp	r3, #0
 80051b0:	d10a      	bne.n	80051c8 <vTaskSwitchContext+0x40>
 80051b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80051b6:	f383 8811 	msr	BASEPRI, r3
 80051ba:	f3bf 8f6f 	isb	sy
 80051be:	f3bf 8f4f 	dsb	sy
 80051c2:	607b      	str	r3, [r7, #4]
 80051c4:	bf00      	nop
 80051c6:	e7fe      	b.n	80051c6 <vTaskSwitchContext+0x3e>
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	3b01      	subs	r3, #1
 80051cc:	60fb      	str	r3, [r7, #12]
 80051ce:	491d      	ldr	r1, [pc, #116]	; (8005244 <vTaskSwitchContext+0xbc>)
 80051d0:	68fa      	ldr	r2, [r7, #12]
 80051d2:	4613      	mov	r3, r2
 80051d4:	009b      	lsls	r3, r3, #2
 80051d6:	4413      	add	r3, r2
 80051d8:	009b      	lsls	r3, r3, #2
 80051da:	440b      	add	r3, r1
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	2b00      	cmp	r3, #0
 80051e0:	d0e4      	beq.n	80051ac <vTaskSwitchContext+0x24>
 80051e2:	68fa      	ldr	r2, [r7, #12]
 80051e4:	4613      	mov	r3, r2
 80051e6:	009b      	lsls	r3, r3, #2
 80051e8:	4413      	add	r3, r2
 80051ea:	009b      	lsls	r3, r3, #2
 80051ec:	4a15      	ldr	r2, [pc, #84]	; (8005244 <vTaskSwitchContext+0xbc>)
 80051ee:	4413      	add	r3, r2
 80051f0:	60bb      	str	r3, [r7, #8]
 80051f2:	68bb      	ldr	r3, [r7, #8]
 80051f4:	685b      	ldr	r3, [r3, #4]
 80051f6:	685a      	ldr	r2, [r3, #4]
 80051f8:	68bb      	ldr	r3, [r7, #8]
 80051fa:	605a      	str	r2, [r3, #4]
 80051fc:	68bb      	ldr	r3, [r7, #8]
 80051fe:	685a      	ldr	r2, [r3, #4]
 8005200:	68bb      	ldr	r3, [r7, #8]
 8005202:	3308      	adds	r3, #8
 8005204:	429a      	cmp	r2, r3
 8005206:	d104      	bne.n	8005212 <vTaskSwitchContext+0x8a>
 8005208:	68bb      	ldr	r3, [r7, #8]
 800520a:	685b      	ldr	r3, [r3, #4]
 800520c:	685a      	ldr	r2, [r3, #4]
 800520e:	68bb      	ldr	r3, [r7, #8]
 8005210:	605a      	str	r2, [r3, #4]
 8005212:	68bb      	ldr	r3, [r7, #8]
 8005214:	685b      	ldr	r3, [r3, #4]
 8005216:	68db      	ldr	r3, [r3, #12]
 8005218:	4a0b      	ldr	r2, [pc, #44]	; (8005248 <vTaskSwitchContext+0xc0>)
 800521a:	6013      	str	r3, [r2, #0]
 800521c:	4a08      	ldr	r2, [pc, #32]	; (8005240 <vTaskSwitchContext+0xb8>)
 800521e:	68fb      	ldr	r3, [r7, #12]
 8005220:	6013      	str	r3, [r2, #0]
 8005222:	4b09      	ldr	r3, [pc, #36]	; (8005248 <vTaskSwitchContext+0xc0>)
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	3354      	adds	r3, #84	; 0x54
 8005228:	4a08      	ldr	r2, [pc, #32]	; (800524c <vTaskSwitchContext+0xc4>)
 800522a:	6013      	str	r3, [r2, #0]
 800522c:	bf00      	nop
 800522e:	3714      	adds	r7, #20
 8005230:	46bd      	mov	sp, r7
 8005232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005236:	4770      	bx	lr
 8005238:	20000e50 	.word	0x20000e50
 800523c:	20000e3c 	.word	0x20000e3c
 8005240:	20000e30 	.word	0x20000e30
 8005244:	20000958 	.word	0x20000958
 8005248:	20000954 	.word	0x20000954
 800524c:	200000a8 	.word	0x200000a8

08005250 <vTaskPlaceOnEventList>:
 8005250:	b580      	push	{r7, lr}
 8005252:	b084      	sub	sp, #16
 8005254:	af00      	add	r7, sp, #0
 8005256:	6078      	str	r0, [r7, #4]
 8005258:	6039      	str	r1, [r7, #0]
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	2b00      	cmp	r3, #0
 800525e:	d10a      	bne.n	8005276 <vTaskPlaceOnEventList+0x26>
 8005260:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005264:	f383 8811 	msr	BASEPRI, r3
 8005268:	f3bf 8f6f 	isb	sy
 800526c:	f3bf 8f4f 	dsb	sy
 8005270:	60fb      	str	r3, [r7, #12]
 8005272:	bf00      	nop
 8005274:	e7fe      	b.n	8005274 <vTaskPlaceOnEventList+0x24>
 8005276:	4b07      	ldr	r3, [pc, #28]	; (8005294 <vTaskPlaceOnEventList+0x44>)
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	3318      	adds	r3, #24
 800527c:	4619      	mov	r1, r3
 800527e:	6878      	ldr	r0, [r7, #4]
 8005280:	f7fe fbb9 	bl	80039f6 <vListInsert>
 8005284:	2101      	movs	r1, #1
 8005286:	6838      	ldr	r0, [r7, #0]
 8005288:	f000 fc34 	bl	8005af4 <prvAddCurrentTaskToDelayedList>
 800528c:	bf00      	nop
 800528e:	3710      	adds	r7, #16
 8005290:	46bd      	mov	sp, r7
 8005292:	bd80      	pop	{r7, pc}
 8005294:	20000954 	.word	0x20000954

08005298 <vTaskPlaceOnUnorderedEventList>:
 8005298:	b580      	push	{r7, lr}
 800529a:	b086      	sub	sp, #24
 800529c:	af00      	add	r7, sp, #0
 800529e:	60f8      	str	r0, [r7, #12]
 80052a0:	60b9      	str	r1, [r7, #8]
 80052a2:	607a      	str	r2, [r7, #4]
 80052a4:	68fb      	ldr	r3, [r7, #12]
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	d10a      	bne.n	80052c0 <vTaskPlaceOnUnorderedEventList+0x28>
 80052aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80052ae:	f383 8811 	msr	BASEPRI, r3
 80052b2:	f3bf 8f6f 	isb	sy
 80052b6:	f3bf 8f4f 	dsb	sy
 80052ba:	617b      	str	r3, [r7, #20]
 80052bc:	bf00      	nop
 80052be:	e7fe      	b.n	80052be <vTaskPlaceOnUnorderedEventList+0x26>
 80052c0:	4b11      	ldr	r3, [pc, #68]	; (8005308 <vTaskPlaceOnUnorderedEventList+0x70>)
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	2b00      	cmp	r3, #0
 80052c6:	d10a      	bne.n	80052de <vTaskPlaceOnUnorderedEventList+0x46>
 80052c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80052cc:	f383 8811 	msr	BASEPRI, r3
 80052d0:	f3bf 8f6f 	isb	sy
 80052d4:	f3bf 8f4f 	dsb	sy
 80052d8:	613b      	str	r3, [r7, #16]
 80052da:	bf00      	nop
 80052dc:	e7fe      	b.n	80052dc <vTaskPlaceOnUnorderedEventList+0x44>
 80052de:	4b0b      	ldr	r3, [pc, #44]	; (800530c <vTaskPlaceOnUnorderedEventList+0x74>)
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	68ba      	ldr	r2, [r7, #8]
 80052e4:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80052e8:	619a      	str	r2, [r3, #24]
 80052ea:	4b08      	ldr	r3, [pc, #32]	; (800530c <vTaskPlaceOnUnorderedEventList+0x74>)
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	3318      	adds	r3, #24
 80052f0:	4619      	mov	r1, r3
 80052f2:	68f8      	ldr	r0, [r7, #12]
 80052f4:	f7fe fb5b 	bl	80039ae <vListInsertEnd>
 80052f8:	2101      	movs	r1, #1
 80052fa:	6878      	ldr	r0, [r7, #4]
 80052fc:	f000 fbfa 	bl	8005af4 <prvAddCurrentTaskToDelayedList>
 8005300:	bf00      	nop
 8005302:	3718      	adds	r7, #24
 8005304:	46bd      	mov	sp, r7
 8005306:	bd80      	pop	{r7, pc}
 8005308:	20000e50 	.word	0x20000e50
 800530c:	20000954 	.word	0x20000954

08005310 <vTaskPlaceOnEventListRestricted>:
 8005310:	b580      	push	{r7, lr}
 8005312:	b086      	sub	sp, #24
 8005314:	af00      	add	r7, sp, #0
 8005316:	60f8      	str	r0, [r7, #12]
 8005318:	60b9      	str	r1, [r7, #8]
 800531a:	607a      	str	r2, [r7, #4]
 800531c:	68fb      	ldr	r3, [r7, #12]
 800531e:	2b00      	cmp	r3, #0
 8005320:	d10a      	bne.n	8005338 <vTaskPlaceOnEventListRestricted+0x28>
 8005322:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005326:	f383 8811 	msr	BASEPRI, r3
 800532a:	f3bf 8f6f 	isb	sy
 800532e:	f3bf 8f4f 	dsb	sy
 8005332:	617b      	str	r3, [r7, #20]
 8005334:	bf00      	nop
 8005336:	e7fe      	b.n	8005336 <vTaskPlaceOnEventListRestricted+0x26>
 8005338:	4b0a      	ldr	r3, [pc, #40]	; (8005364 <vTaskPlaceOnEventListRestricted+0x54>)
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	3318      	adds	r3, #24
 800533e:	4619      	mov	r1, r3
 8005340:	68f8      	ldr	r0, [r7, #12]
 8005342:	f7fe fb34 	bl	80039ae <vListInsertEnd>
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	2b00      	cmp	r3, #0
 800534a:	d002      	beq.n	8005352 <vTaskPlaceOnEventListRestricted+0x42>
 800534c:	f04f 33ff 	mov.w	r3, #4294967295
 8005350:	60bb      	str	r3, [r7, #8]
 8005352:	6879      	ldr	r1, [r7, #4]
 8005354:	68b8      	ldr	r0, [r7, #8]
 8005356:	f000 fbcd 	bl	8005af4 <prvAddCurrentTaskToDelayedList>
 800535a:	bf00      	nop
 800535c:	3718      	adds	r7, #24
 800535e:	46bd      	mov	sp, r7
 8005360:	bd80      	pop	{r7, pc}
 8005362:	bf00      	nop
 8005364:	20000954 	.word	0x20000954

08005368 <xTaskRemoveFromEventList>:
 8005368:	b580      	push	{r7, lr}
 800536a:	b086      	sub	sp, #24
 800536c:	af00      	add	r7, sp, #0
 800536e:	6078      	str	r0, [r7, #4]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	68db      	ldr	r3, [r3, #12]
 8005374:	68db      	ldr	r3, [r3, #12]
 8005376:	613b      	str	r3, [r7, #16]
 8005378:	693b      	ldr	r3, [r7, #16]
 800537a:	2b00      	cmp	r3, #0
 800537c:	d10a      	bne.n	8005394 <xTaskRemoveFromEventList+0x2c>
 800537e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005382:	f383 8811 	msr	BASEPRI, r3
 8005386:	f3bf 8f6f 	isb	sy
 800538a:	f3bf 8f4f 	dsb	sy
 800538e:	60fb      	str	r3, [r7, #12]
 8005390:	bf00      	nop
 8005392:	e7fe      	b.n	8005392 <xTaskRemoveFromEventList+0x2a>
 8005394:	693b      	ldr	r3, [r7, #16]
 8005396:	3318      	adds	r3, #24
 8005398:	4618      	mov	r0, r3
 800539a:	f7fe fb65 	bl	8003a68 <uxListRemove>
 800539e:	4b1e      	ldr	r3, [pc, #120]	; (8005418 <xTaskRemoveFromEventList+0xb0>)
 80053a0:	681b      	ldr	r3, [r3, #0]
 80053a2:	2b00      	cmp	r3, #0
 80053a4:	d11d      	bne.n	80053e2 <xTaskRemoveFromEventList+0x7a>
 80053a6:	693b      	ldr	r3, [r7, #16]
 80053a8:	3304      	adds	r3, #4
 80053aa:	4618      	mov	r0, r3
 80053ac:	f7fe fb5c 	bl	8003a68 <uxListRemove>
 80053b0:	693b      	ldr	r3, [r7, #16]
 80053b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053b4:	4b19      	ldr	r3, [pc, #100]	; (800541c <xTaskRemoveFromEventList+0xb4>)
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	429a      	cmp	r2, r3
 80053ba:	d903      	bls.n	80053c4 <xTaskRemoveFromEventList+0x5c>
 80053bc:	693b      	ldr	r3, [r7, #16]
 80053be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053c0:	4a16      	ldr	r2, [pc, #88]	; (800541c <xTaskRemoveFromEventList+0xb4>)
 80053c2:	6013      	str	r3, [r2, #0]
 80053c4:	693b      	ldr	r3, [r7, #16]
 80053c6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053c8:	4613      	mov	r3, r2
 80053ca:	009b      	lsls	r3, r3, #2
 80053cc:	4413      	add	r3, r2
 80053ce:	009b      	lsls	r3, r3, #2
 80053d0:	4a13      	ldr	r2, [pc, #76]	; (8005420 <xTaskRemoveFromEventList+0xb8>)
 80053d2:	441a      	add	r2, r3
 80053d4:	693b      	ldr	r3, [r7, #16]
 80053d6:	3304      	adds	r3, #4
 80053d8:	4619      	mov	r1, r3
 80053da:	4610      	mov	r0, r2
 80053dc:	f7fe fae7 	bl	80039ae <vListInsertEnd>
 80053e0:	e005      	b.n	80053ee <xTaskRemoveFromEventList+0x86>
 80053e2:	693b      	ldr	r3, [r7, #16]
 80053e4:	3318      	adds	r3, #24
 80053e6:	4619      	mov	r1, r3
 80053e8:	480e      	ldr	r0, [pc, #56]	; (8005424 <xTaskRemoveFromEventList+0xbc>)
 80053ea:	f7fe fae0 	bl	80039ae <vListInsertEnd>
 80053ee:	693b      	ldr	r3, [r7, #16]
 80053f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80053f2:	4b0d      	ldr	r3, [pc, #52]	; (8005428 <xTaskRemoveFromEventList+0xc0>)
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053f8:	429a      	cmp	r2, r3
 80053fa:	d905      	bls.n	8005408 <xTaskRemoveFromEventList+0xa0>
 80053fc:	2301      	movs	r3, #1
 80053fe:	617b      	str	r3, [r7, #20]
 8005400:	4b0a      	ldr	r3, [pc, #40]	; (800542c <xTaskRemoveFromEventList+0xc4>)
 8005402:	2201      	movs	r2, #1
 8005404:	601a      	str	r2, [r3, #0]
 8005406:	e001      	b.n	800540c <xTaskRemoveFromEventList+0xa4>
 8005408:	2300      	movs	r3, #0
 800540a:	617b      	str	r3, [r7, #20]
 800540c:	697b      	ldr	r3, [r7, #20]
 800540e:	4618      	mov	r0, r3
 8005410:	3718      	adds	r7, #24
 8005412:	46bd      	mov	sp, r7
 8005414:	bd80      	pop	{r7, pc}
 8005416:	bf00      	nop
 8005418:	20000e50 	.word	0x20000e50
 800541c:	20000e30 	.word	0x20000e30
 8005420:	20000958 	.word	0x20000958
 8005424:	20000de8 	.word	0x20000de8
 8005428:	20000954 	.word	0x20000954
 800542c:	20000e3c 	.word	0x20000e3c

08005430 <vTaskRemoveFromUnorderedEventList>:
 8005430:	b580      	push	{r7, lr}
 8005432:	b086      	sub	sp, #24
 8005434:	af00      	add	r7, sp, #0
 8005436:	6078      	str	r0, [r7, #4]
 8005438:	6039      	str	r1, [r7, #0]
 800543a:	4b29      	ldr	r3, [pc, #164]	; (80054e0 <vTaskRemoveFromUnorderedEventList+0xb0>)
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	2b00      	cmp	r3, #0
 8005440:	d10a      	bne.n	8005458 <vTaskRemoveFromUnorderedEventList+0x28>
 8005442:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005446:	f383 8811 	msr	BASEPRI, r3
 800544a:	f3bf 8f6f 	isb	sy
 800544e:	f3bf 8f4f 	dsb	sy
 8005452:	613b      	str	r3, [r7, #16]
 8005454:	bf00      	nop
 8005456:	e7fe      	b.n	8005456 <vTaskRemoveFromUnorderedEventList+0x26>
 8005458:	683b      	ldr	r3, [r7, #0]
 800545a:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	601a      	str	r2, [r3, #0]
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	68db      	ldr	r3, [r3, #12]
 8005466:	617b      	str	r3, [r7, #20]
 8005468:	697b      	ldr	r3, [r7, #20]
 800546a:	2b00      	cmp	r3, #0
 800546c:	d10a      	bne.n	8005484 <vTaskRemoveFromUnorderedEventList+0x54>
 800546e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005472:	f383 8811 	msr	BASEPRI, r3
 8005476:	f3bf 8f6f 	isb	sy
 800547a:	f3bf 8f4f 	dsb	sy
 800547e:	60fb      	str	r3, [r7, #12]
 8005480:	bf00      	nop
 8005482:	e7fe      	b.n	8005482 <vTaskRemoveFromUnorderedEventList+0x52>
 8005484:	6878      	ldr	r0, [r7, #4]
 8005486:	f7fe faef 	bl	8003a68 <uxListRemove>
 800548a:	697b      	ldr	r3, [r7, #20]
 800548c:	3304      	adds	r3, #4
 800548e:	4618      	mov	r0, r3
 8005490:	f7fe faea 	bl	8003a68 <uxListRemove>
 8005494:	697b      	ldr	r3, [r7, #20]
 8005496:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005498:	4b12      	ldr	r3, [pc, #72]	; (80054e4 <vTaskRemoveFromUnorderedEventList+0xb4>)
 800549a:	681b      	ldr	r3, [r3, #0]
 800549c:	429a      	cmp	r2, r3
 800549e:	d903      	bls.n	80054a8 <vTaskRemoveFromUnorderedEventList+0x78>
 80054a0:	697b      	ldr	r3, [r7, #20]
 80054a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054a4:	4a0f      	ldr	r2, [pc, #60]	; (80054e4 <vTaskRemoveFromUnorderedEventList+0xb4>)
 80054a6:	6013      	str	r3, [r2, #0]
 80054a8:	697b      	ldr	r3, [r7, #20]
 80054aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80054ac:	4613      	mov	r3, r2
 80054ae:	009b      	lsls	r3, r3, #2
 80054b0:	4413      	add	r3, r2
 80054b2:	009b      	lsls	r3, r3, #2
 80054b4:	4a0c      	ldr	r2, [pc, #48]	; (80054e8 <vTaskRemoveFromUnorderedEventList+0xb8>)
 80054b6:	441a      	add	r2, r3
 80054b8:	697b      	ldr	r3, [r7, #20]
 80054ba:	3304      	adds	r3, #4
 80054bc:	4619      	mov	r1, r3
 80054be:	4610      	mov	r0, r2
 80054c0:	f7fe fa75 	bl	80039ae <vListInsertEnd>
 80054c4:	697b      	ldr	r3, [r7, #20]
 80054c6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80054c8:	4b08      	ldr	r3, [pc, #32]	; (80054ec <vTaskRemoveFromUnorderedEventList+0xbc>)
 80054ca:	681b      	ldr	r3, [r3, #0]
 80054cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054ce:	429a      	cmp	r2, r3
 80054d0:	d902      	bls.n	80054d8 <vTaskRemoveFromUnorderedEventList+0xa8>
 80054d2:	4b07      	ldr	r3, [pc, #28]	; (80054f0 <vTaskRemoveFromUnorderedEventList+0xc0>)
 80054d4:	2201      	movs	r2, #1
 80054d6:	601a      	str	r2, [r3, #0]
 80054d8:	bf00      	nop
 80054da:	3718      	adds	r7, #24
 80054dc:	46bd      	mov	sp, r7
 80054de:	bd80      	pop	{r7, pc}
 80054e0:	20000e50 	.word	0x20000e50
 80054e4:	20000e30 	.word	0x20000e30
 80054e8:	20000958 	.word	0x20000958
 80054ec:	20000954 	.word	0x20000954
 80054f0:	20000e3c 	.word	0x20000e3c

080054f4 <vTaskInternalSetTimeOutState>:
 80054f4:	b480      	push	{r7}
 80054f6:	b083      	sub	sp, #12
 80054f8:	af00      	add	r7, sp, #0
 80054fa:	6078      	str	r0, [r7, #4]
 80054fc:	4b06      	ldr	r3, [pc, #24]	; (8005518 <vTaskInternalSetTimeOutState+0x24>)
 80054fe:	681a      	ldr	r2, [r3, #0]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	601a      	str	r2, [r3, #0]
 8005504:	4b05      	ldr	r3, [pc, #20]	; (800551c <vTaskInternalSetTimeOutState+0x28>)
 8005506:	681a      	ldr	r2, [r3, #0]
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	605a      	str	r2, [r3, #4]
 800550c:	bf00      	nop
 800550e:	370c      	adds	r7, #12
 8005510:	46bd      	mov	sp, r7
 8005512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005516:	4770      	bx	lr
 8005518:	20000e40 	.word	0x20000e40
 800551c:	20000e2c 	.word	0x20000e2c

08005520 <xTaskCheckForTimeOut>:
 8005520:	b580      	push	{r7, lr}
 8005522:	b088      	sub	sp, #32
 8005524:	af00      	add	r7, sp, #0
 8005526:	6078      	str	r0, [r7, #4]
 8005528:	6039      	str	r1, [r7, #0]
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	2b00      	cmp	r3, #0
 800552e:	d10a      	bne.n	8005546 <xTaskCheckForTimeOut+0x26>
 8005530:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005534:	f383 8811 	msr	BASEPRI, r3
 8005538:	f3bf 8f6f 	isb	sy
 800553c:	f3bf 8f4f 	dsb	sy
 8005540:	613b      	str	r3, [r7, #16]
 8005542:	bf00      	nop
 8005544:	e7fe      	b.n	8005544 <xTaskCheckForTimeOut+0x24>
 8005546:	683b      	ldr	r3, [r7, #0]
 8005548:	2b00      	cmp	r3, #0
 800554a:	d10a      	bne.n	8005562 <xTaskCheckForTimeOut+0x42>
 800554c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005550:	f383 8811 	msr	BASEPRI, r3
 8005554:	f3bf 8f6f 	isb	sy
 8005558:	f3bf 8f4f 	dsb	sy
 800555c:	60fb      	str	r3, [r7, #12]
 800555e:	bf00      	nop
 8005560:	e7fe      	b.n	8005560 <xTaskCheckForTimeOut+0x40>
 8005562:	f000 ffb7 	bl	80064d4 <vPortEnterCritical>
 8005566:	4b1d      	ldr	r3, [pc, #116]	; (80055dc <xTaskCheckForTimeOut+0xbc>)
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	61bb      	str	r3, [r7, #24]
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	685b      	ldr	r3, [r3, #4]
 8005570:	69ba      	ldr	r2, [r7, #24]
 8005572:	1ad3      	subs	r3, r2, r3
 8005574:	617b      	str	r3, [r7, #20]
 8005576:	683b      	ldr	r3, [r7, #0]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800557e:	d102      	bne.n	8005586 <xTaskCheckForTimeOut+0x66>
 8005580:	2300      	movs	r3, #0
 8005582:	61fb      	str	r3, [r7, #28]
 8005584:	e023      	b.n	80055ce <xTaskCheckForTimeOut+0xae>
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	681a      	ldr	r2, [r3, #0]
 800558a:	4b15      	ldr	r3, [pc, #84]	; (80055e0 <xTaskCheckForTimeOut+0xc0>)
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	429a      	cmp	r2, r3
 8005590:	d007      	beq.n	80055a2 <xTaskCheckForTimeOut+0x82>
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	685b      	ldr	r3, [r3, #4]
 8005596:	69ba      	ldr	r2, [r7, #24]
 8005598:	429a      	cmp	r2, r3
 800559a:	d302      	bcc.n	80055a2 <xTaskCheckForTimeOut+0x82>
 800559c:	2301      	movs	r3, #1
 800559e:	61fb      	str	r3, [r7, #28]
 80055a0:	e015      	b.n	80055ce <xTaskCheckForTimeOut+0xae>
 80055a2:	683b      	ldr	r3, [r7, #0]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	697a      	ldr	r2, [r7, #20]
 80055a8:	429a      	cmp	r2, r3
 80055aa:	d20b      	bcs.n	80055c4 <xTaskCheckForTimeOut+0xa4>
 80055ac:	683b      	ldr	r3, [r7, #0]
 80055ae:	681a      	ldr	r2, [r3, #0]
 80055b0:	697b      	ldr	r3, [r7, #20]
 80055b2:	1ad2      	subs	r2, r2, r3
 80055b4:	683b      	ldr	r3, [r7, #0]
 80055b6:	601a      	str	r2, [r3, #0]
 80055b8:	6878      	ldr	r0, [r7, #4]
 80055ba:	f7ff ff9b 	bl	80054f4 <vTaskInternalSetTimeOutState>
 80055be:	2300      	movs	r3, #0
 80055c0:	61fb      	str	r3, [r7, #28]
 80055c2:	e004      	b.n	80055ce <xTaskCheckForTimeOut+0xae>
 80055c4:	683b      	ldr	r3, [r7, #0]
 80055c6:	2200      	movs	r2, #0
 80055c8:	601a      	str	r2, [r3, #0]
 80055ca:	2301      	movs	r3, #1
 80055cc:	61fb      	str	r3, [r7, #28]
 80055ce:	f000 ffb1 	bl	8006534 <vPortExitCritical>
 80055d2:	69fb      	ldr	r3, [r7, #28]
 80055d4:	4618      	mov	r0, r3
 80055d6:	3720      	adds	r7, #32
 80055d8:	46bd      	mov	sp, r7
 80055da:	bd80      	pop	{r7, pc}
 80055dc:	20000e2c 	.word	0x20000e2c
 80055e0:	20000e40 	.word	0x20000e40

080055e4 <vTaskMissedYield>:
 80055e4:	b480      	push	{r7}
 80055e6:	af00      	add	r7, sp, #0
 80055e8:	4b03      	ldr	r3, [pc, #12]	; (80055f8 <vTaskMissedYield+0x14>)
 80055ea:	2201      	movs	r2, #1
 80055ec:	601a      	str	r2, [r3, #0]
 80055ee:	bf00      	nop
 80055f0:	46bd      	mov	sp, r7
 80055f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055f6:	4770      	bx	lr
 80055f8:	20000e3c 	.word	0x20000e3c

080055fc <prvIdleTask>:
 80055fc:	b580      	push	{r7, lr}
 80055fe:	b082      	sub	sp, #8
 8005600:	af00      	add	r7, sp, #0
 8005602:	6078      	str	r0, [r7, #4]
 8005604:	f000 f852 	bl	80056ac <prvCheckTasksWaitingTermination>
 8005608:	4b06      	ldr	r3, [pc, #24]	; (8005624 <prvIdleTask+0x28>)
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	2b01      	cmp	r3, #1
 800560e:	d9f9      	bls.n	8005604 <prvIdleTask+0x8>
 8005610:	4b05      	ldr	r3, [pc, #20]	; (8005628 <prvIdleTask+0x2c>)
 8005612:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005616:	601a      	str	r2, [r3, #0]
 8005618:	f3bf 8f4f 	dsb	sy
 800561c:	f3bf 8f6f 	isb	sy
 8005620:	e7f0      	b.n	8005604 <prvIdleTask+0x8>
 8005622:	bf00      	nop
 8005624:	20000958 	.word	0x20000958
 8005628:	e000ed04 	.word	0xe000ed04

0800562c <prvInitialiseTaskLists>:
 800562c:	b580      	push	{r7, lr}
 800562e:	b082      	sub	sp, #8
 8005630:	af00      	add	r7, sp, #0
 8005632:	2300      	movs	r3, #0
 8005634:	607b      	str	r3, [r7, #4]
 8005636:	e00c      	b.n	8005652 <prvInitialiseTaskLists+0x26>
 8005638:	687a      	ldr	r2, [r7, #4]
 800563a:	4613      	mov	r3, r2
 800563c:	009b      	lsls	r3, r3, #2
 800563e:	4413      	add	r3, r2
 8005640:	009b      	lsls	r3, r3, #2
 8005642:	4a12      	ldr	r2, [pc, #72]	; (800568c <prvInitialiseTaskLists+0x60>)
 8005644:	4413      	add	r3, r2
 8005646:	4618      	mov	r0, r3
 8005648:	f7fe f984 	bl	8003954 <vListInitialise>
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	3301      	adds	r3, #1
 8005650:	607b      	str	r3, [r7, #4]
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	2b37      	cmp	r3, #55	; 0x37
 8005656:	d9ef      	bls.n	8005638 <prvInitialiseTaskLists+0xc>
 8005658:	480d      	ldr	r0, [pc, #52]	; (8005690 <prvInitialiseTaskLists+0x64>)
 800565a:	f7fe f97b 	bl	8003954 <vListInitialise>
 800565e:	480d      	ldr	r0, [pc, #52]	; (8005694 <prvInitialiseTaskLists+0x68>)
 8005660:	f7fe f978 	bl	8003954 <vListInitialise>
 8005664:	480c      	ldr	r0, [pc, #48]	; (8005698 <prvInitialiseTaskLists+0x6c>)
 8005666:	f7fe f975 	bl	8003954 <vListInitialise>
 800566a:	480c      	ldr	r0, [pc, #48]	; (800569c <prvInitialiseTaskLists+0x70>)
 800566c:	f7fe f972 	bl	8003954 <vListInitialise>
 8005670:	480b      	ldr	r0, [pc, #44]	; (80056a0 <prvInitialiseTaskLists+0x74>)
 8005672:	f7fe f96f 	bl	8003954 <vListInitialise>
 8005676:	4b0b      	ldr	r3, [pc, #44]	; (80056a4 <prvInitialiseTaskLists+0x78>)
 8005678:	4a05      	ldr	r2, [pc, #20]	; (8005690 <prvInitialiseTaskLists+0x64>)
 800567a:	601a      	str	r2, [r3, #0]
 800567c:	4b0a      	ldr	r3, [pc, #40]	; (80056a8 <prvInitialiseTaskLists+0x7c>)
 800567e:	4a05      	ldr	r2, [pc, #20]	; (8005694 <prvInitialiseTaskLists+0x68>)
 8005680:	601a      	str	r2, [r3, #0]
 8005682:	bf00      	nop
 8005684:	3708      	adds	r7, #8
 8005686:	46bd      	mov	sp, r7
 8005688:	bd80      	pop	{r7, pc}
 800568a:	bf00      	nop
 800568c:	20000958 	.word	0x20000958
 8005690:	20000db8 	.word	0x20000db8
 8005694:	20000dcc 	.word	0x20000dcc
 8005698:	20000de8 	.word	0x20000de8
 800569c:	20000dfc 	.word	0x20000dfc
 80056a0:	20000e14 	.word	0x20000e14
 80056a4:	20000de0 	.word	0x20000de0
 80056a8:	20000de4 	.word	0x20000de4

080056ac <prvCheckTasksWaitingTermination>:
 80056ac:	b580      	push	{r7, lr}
 80056ae:	b082      	sub	sp, #8
 80056b0:	af00      	add	r7, sp, #0
 80056b2:	e019      	b.n	80056e8 <prvCheckTasksWaitingTermination+0x3c>
 80056b4:	f000 ff0e 	bl	80064d4 <vPortEnterCritical>
 80056b8:	4b10      	ldr	r3, [pc, #64]	; (80056fc <prvCheckTasksWaitingTermination+0x50>)
 80056ba:	68db      	ldr	r3, [r3, #12]
 80056bc:	68db      	ldr	r3, [r3, #12]
 80056be:	607b      	str	r3, [r7, #4]
 80056c0:	687b      	ldr	r3, [r7, #4]
 80056c2:	3304      	adds	r3, #4
 80056c4:	4618      	mov	r0, r3
 80056c6:	f7fe f9cf 	bl	8003a68 <uxListRemove>
 80056ca:	4b0d      	ldr	r3, [pc, #52]	; (8005700 <prvCheckTasksWaitingTermination+0x54>)
 80056cc:	681b      	ldr	r3, [r3, #0]
 80056ce:	3b01      	subs	r3, #1
 80056d0:	4a0b      	ldr	r2, [pc, #44]	; (8005700 <prvCheckTasksWaitingTermination+0x54>)
 80056d2:	6013      	str	r3, [r2, #0]
 80056d4:	4b0b      	ldr	r3, [pc, #44]	; (8005704 <prvCheckTasksWaitingTermination+0x58>)
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	3b01      	subs	r3, #1
 80056da:	4a0a      	ldr	r2, [pc, #40]	; (8005704 <prvCheckTasksWaitingTermination+0x58>)
 80056dc:	6013      	str	r3, [r2, #0]
 80056de:	f000 ff29 	bl	8006534 <vPortExitCritical>
 80056e2:	6878      	ldr	r0, [r7, #4]
 80056e4:	f000 f810 	bl	8005708 <prvDeleteTCB>
 80056e8:	4b06      	ldr	r3, [pc, #24]	; (8005704 <prvCheckTasksWaitingTermination+0x58>)
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	d1e1      	bne.n	80056b4 <prvCheckTasksWaitingTermination+0x8>
 80056f0:	bf00      	nop
 80056f2:	bf00      	nop
 80056f4:	3708      	adds	r7, #8
 80056f6:	46bd      	mov	sp, r7
 80056f8:	bd80      	pop	{r7, pc}
 80056fa:	bf00      	nop
 80056fc:	20000dfc 	.word	0x20000dfc
 8005700:	20000e28 	.word	0x20000e28
 8005704:	20000e10 	.word	0x20000e10

08005708 <prvDeleteTCB>:
 8005708:	b580      	push	{r7, lr}
 800570a:	b084      	sub	sp, #16
 800570c:	af00      	add	r7, sp, #0
 800570e:	6078      	str	r0, [r7, #4]
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	3354      	adds	r3, #84	; 0x54
 8005714:	4618      	mov	r0, r3
 8005716:	f001 fc09 	bl	8006f2c <_reclaim_reent>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 8005720:	2b00      	cmp	r3, #0
 8005722:	d108      	bne.n	8005736 <prvDeleteTCB+0x2e>
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005728:	4618      	mov	r0, r3
 800572a:	f001 f8c1 	bl	80068b0 <vPortFree>
 800572e:	6878      	ldr	r0, [r7, #4]
 8005730:	f001 f8be 	bl	80068b0 <vPortFree>
 8005734:	e018      	b.n	8005768 <prvDeleteTCB+0x60>
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 800573c:	2b01      	cmp	r3, #1
 800573e:	d103      	bne.n	8005748 <prvDeleteTCB+0x40>
 8005740:	6878      	ldr	r0, [r7, #4]
 8005742:	f001 f8b5 	bl	80068b0 <vPortFree>
 8005746:	e00f      	b.n	8005768 <prvDeleteTCB+0x60>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	f893 30a5 	ldrb.w	r3, [r3, #165]	; 0xa5
 800574e:	2b02      	cmp	r3, #2
 8005750:	d00a      	beq.n	8005768 <prvDeleteTCB+0x60>
 8005752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005756:	f383 8811 	msr	BASEPRI, r3
 800575a:	f3bf 8f6f 	isb	sy
 800575e:	f3bf 8f4f 	dsb	sy
 8005762:	60fb      	str	r3, [r7, #12]
 8005764:	bf00      	nop
 8005766:	e7fe      	b.n	8005766 <prvDeleteTCB+0x5e>
 8005768:	bf00      	nop
 800576a:	3710      	adds	r7, #16
 800576c:	46bd      	mov	sp, r7
 800576e:	bd80      	pop	{r7, pc}

08005770 <prvResetNextTaskUnblockTime>:
 8005770:	b480      	push	{r7}
 8005772:	b083      	sub	sp, #12
 8005774:	af00      	add	r7, sp, #0
 8005776:	4b0c      	ldr	r3, [pc, #48]	; (80057a8 <prvResetNextTaskUnblockTime+0x38>)
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	2b00      	cmp	r3, #0
 800577e:	d104      	bne.n	800578a <prvResetNextTaskUnblockTime+0x1a>
 8005780:	4b0a      	ldr	r3, [pc, #40]	; (80057ac <prvResetNextTaskUnblockTime+0x3c>)
 8005782:	f04f 32ff 	mov.w	r2, #4294967295
 8005786:	601a      	str	r2, [r3, #0]
 8005788:	e008      	b.n	800579c <prvResetNextTaskUnblockTime+0x2c>
 800578a:	4b07      	ldr	r3, [pc, #28]	; (80057a8 <prvResetNextTaskUnblockTime+0x38>)
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	68db      	ldr	r3, [r3, #12]
 8005790:	68db      	ldr	r3, [r3, #12]
 8005792:	607b      	str	r3, [r7, #4]
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	685b      	ldr	r3, [r3, #4]
 8005798:	4a04      	ldr	r2, [pc, #16]	; (80057ac <prvResetNextTaskUnblockTime+0x3c>)
 800579a:	6013      	str	r3, [r2, #0]
 800579c:	bf00      	nop
 800579e:	370c      	adds	r7, #12
 80057a0:	46bd      	mov	sp, r7
 80057a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057a6:	4770      	bx	lr
 80057a8:	20000de0 	.word	0x20000de0
 80057ac:	20000e48 	.word	0x20000e48

080057b0 <xTaskGetSchedulerState>:
 80057b0:	b480      	push	{r7}
 80057b2:	b083      	sub	sp, #12
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	4b0b      	ldr	r3, [pc, #44]	; (80057e4 <xTaskGetSchedulerState+0x34>)
 80057b8:	681b      	ldr	r3, [r3, #0]
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d102      	bne.n	80057c4 <xTaskGetSchedulerState+0x14>
 80057be:	2301      	movs	r3, #1
 80057c0:	607b      	str	r3, [r7, #4]
 80057c2:	e008      	b.n	80057d6 <xTaskGetSchedulerState+0x26>
 80057c4:	4b08      	ldr	r3, [pc, #32]	; (80057e8 <xTaskGetSchedulerState+0x38>)
 80057c6:	681b      	ldr	r3, [r3, #0]
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d102      	bne.n	80057d2 <xTaskGetSchedulerState+0x22>
 80057cc:	2302      	movs	r3, #2
 80057ce:	607b      	str	r3, [r7, #4]
 80057d0:	e001      	b.n	80057d6 <xTaskGetSchedulerState+0x26>
 80057d2:	2300      	movs	r3, #0
 80057d4:	607b      	str	r3, [r7, #4]
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	4618      	mov	r0, r3
 80057da:	370c      	adds	r7, #12
 80057dc:	46bd      	mov	sp, r7
 80057de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e2:	4770      	bx	lr
 80057e4:	20000e34 	.word	0x20000e34
 80057e8:	20000e50 	.word	0x20000e50

080057ec <xTaskPriorityInherit>:
 80057ec:	b580      	push	{r7, lr}
 80057ee:	b084      	sub	sp, #16
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	60bb      	str	r3, [r7, #8]
 80057f8:	2300      	movs	r3, #0
 80057fa:	60fb      	str	r3, [r7, #12]
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d051      	beq.n	80058a6 <xTaskPriorityInherit+0xba>
 8005802:	68bb      	ldr	r3, [r7, #8]
 8005804:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005806:	4b2a      	ldr	r3, [pc, #168]	; (80058b0 <xTaskPriorityInherit+0xc4>)
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800580c:	429a      	cmp	r2, r3
 800580e:	d241      	bcs.n	8005894 <xTaskPriorityInherit+0xa8>
 8005810:	68bb      	ldr	r3, [r7, #8]
 8005812:	699b      	ldr	r3, [r3, #24]
 8005814:	2b00      	cmp	r3, #0
 8005816:	db06      	blt.n	8005826 <xTaskPriorityInherit+0x3a>
 8005818:	4b25      	ldr	r3, [pc, #148]	; (80058b0 <xTaskPriorityInherit+0xc4>)
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800581e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005822:	68bb      	ldr	r3, [r7, #8]
 8005824:	619a      	str	r2, [r3, #24]
 8005826:	68bb      	ldr	r3, [r7, #8]
 8005828:	6959      	ldr	r1, [r3, #20]
 800582a:	68bb      	ldr	r3, [r7, #8]
 800582c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800582e:	4613      	mov	r3, r2
 8005830:	009b      	lsls	r3, r3, #2
 8005832:	4413      	add	r3, r2
 8005834:	009b      	lsls	r3, r3, #2
 8005836:	4a1f      	ldr	r2, [pc, #124]	; (80058b4 <xTaskPriorityInherit+0xc8>)
 8005838:	4413      	add	r3, r2
 800583a:	4299      	cmp	r1, r3
 800583c:	d122      	bne.n	8005884 <xTaskPriorityInherit+0x98>
 800583e:	68bb      	ldr	r3, [r7, #8]
 8005840:	3304      	adds	r3, #4
 8005842:	4618      	mov	r0, r3
 8005844:	f7fe f910 	bl	8003a68 <uxListRemove>
 8005848:	4b19      	ldr	r3, [pc, #100]	; (80058b0 <xTaskPriorityInherit+0xc4>)
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800584e:	68bb      	ldr	r3, [r7, #8]
 8005850:	62da      	str	r2, [r3, #44]	; 0x2c
 8005852:	68bb      	ldr	r3, [r7, #8]
 8005854:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005856:	4b18      	ldr	r3, [pc, #96]	; (80058b8 <xTaskPriorityInherit+0xcc>)
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	429a      	cmp	r2, r3
 800585c:	d903      	bls.n	8005866 <xTaskPriorityInherit+0x7a>
 800585e:	68bb      	ldr	r3, [r7, #8]
 8005860:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005862:	4a15      	ldr	r2, [pc, #84]	; (80058b8 <xTaskPriorityInherit+0xcc>)
 8005864:	6013      	str	r3, [r2, #0]
 8005866:	68bb      	ldr	r3, [r7, #8]
 8005868:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800586a:	4613      	mov	r3, r2
 800586c:	009b      	lsls	r3, r3, #2
 800586e:	4413      	add	r3, r2
 8005870:	009b      	lsls	r3, r3, #2
 8005872:	4a10      	ldr	r2, [pc, #64]	; (80058b4 <xTaskPriorityInherit+0xc8>)
 8005874:	441a      	add	r2, r3
 8005876:	68bb      	ldr	r3, [r7, #8]
 8005878:	3304      	adds	r3, #4
 800587a:	4619      	mov	r1, r3
 800587c:	4610      	mov	r0, r2
 800587e:	f7fe f896 	bl	80039ae <vListInsertEnd>
 8005882:	e004      	b.n	800588e <xTaskPriorityInherit+0xa2>
 8005884:	4b0a      	ldr	r3, [pc, #40]	; (80058b0 <xTaskPriorityInherit+0xc4>)
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800588a:	68bb      	ldr	r3, [r7, #8]
 800588c:	62da      	str	r2, [r3, #44]	; 0x2c
 800588e:	2301      	movs	r3, #1
 8005890:	60fb      	str	r3, [r7, #12]
 8005892:	e008      	b.n	80058a6 <xTaskPriorityInherit+0xba>
 8005894:	68bb      	ldr	r3, [r7, #8]
 8005896:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005898:	4b05      	ldr	r3, [pc, #20]	; (80058b0 <xTaskPriorityInherit+0xc4>)
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800589e:	429a      	cmp	r2, r3
 80058a0:	d201      	bcs.n	80058a6 <xTaskPriorityInherit+0xba>
 80058a2:	2301      	movs	r3, #1
 80058a4:	60fb      	str	r3, [r7, #12]
 80058a6:	68fb      	ldr	r3, [r7, #12]
 80058a8:	4618      	mov	r0, r3
 80058aa:	3710      	adds	r7, #16
 80058ac:	46bd      	mov	sp, r7
 80058ae:	bd80      	pop	{r7, pc}
 80058b0:	20000954 	.word	0x20000954
 80058b4:	20000958 	.word	0x20000958
 80058b8:	20000e30 	.word	0x20000e30

080058bc <xTaskPriorityDisinherit>:
 80058bc:	b580      	push	{r7, lr}
 80058be:	b086      	sub	sp, #24
 80058c0:	af00      	add	r7, sp, #0
 80058c2:	6078      	str	r0, [r7, #4]
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	613b      	str	r3, [r7, #16]
 80058c8:	2300      	movs	r3, #0
 80058ca:	617b      	str	r3, [r7, #20]
 80058cc:	687b      	ldr	r3, [r7, #4]
 80058ce:	2b00      	cmp	r3, #0
 80058d0:	d056      	beq.n	8005980 <xTaskPriorityDisinherit+0xc4>
 80058d2:	4b2e      	ldr	r3, [pc, #184]	; (800598c <xTaskPriorityDisinherit+0xd0>)
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	693a      	ldr	r2, [r7, #16]
 80058d8:	429a      	cmp	r2, r3
 80058da:	d00a      	beq.n	80058f2 <xTaskPriorityDisinherit+0x36>
 80058dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058e0:	f383 8811 	msr	BASEPRI, r3
 80058e4:	f3bf 8f6f 	isb	sy
 80058e8:	f3bf 8f4f 	dsb	sy
 80058ec:	60fb      	str	r3, [r7, #12]
 80058ee:	bf00      	nop
 80058f0:	e7fe      	b.n	80058f0 <xTaskPriorityDisinherit+0x34>
 80058f2:	693b      	ldr	r3, [r7, #16]
 80058f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80058f6:	2b00      	cmp	r3, #0
 80058f8:	d10a      	bne.n	8005910 <xTaskPriorityDisinherit+0x54>
 80058fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80058fe:	f383 8811 	msr	BASEPRI, r3
 8005902:	f3bf 8f6f 	isb	sy
 8005906:	f3bf 8f4f 	dsb	sy
 800590a:	60bb      	str	r3, [r7, #8]
 800590c:	bf00      	nop
 800590e:	e7fe      	b.n	800590e <xTaskPriorityDisinherit+0x52>
 8005910:	693b      	ldr	r3, [r7, #16]
 8005912:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005914:	1e5a      	subs	r2, r3, #1
 8005916:	693b      	ldr	r3, [r7, #16]
 8005918:	651a      	str	r2, [r3, #80]	; 0x50
 800591a:	693b      	ldr	r3, [r7, #16]
 800591c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800591e:	693b      	ldr	r3, [r7, #16]
 8005920:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005922:	429a      	cmp	r2, r3
 8005924:	d02c      	beq.n	8005980 <xTaskPriorityDisinherit+0xc4>
 8005926:	693b      	ldr	r3, [r7, #16]
 8005928:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800592a:	2b00      	cmp	r3, #0
 800592c:	d128      	bne.n	8005980 <xTaskPriorityDisinherit+0xc4>
 800592e:	693b      	ldr	r3, [r7, #16]
 8005930:	3304      	adds	r3, #4
 8005932:	4618      	mov	r0, r3
 8005934:	f7fe f898 	bl	8003a68 <uxListRemove>
 8005938:	693b      	ldr	r3, [r7, #16]
 800593a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800593c:	693b      	ldr	r3, [r7, #16]
 800593e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005940:	693b      	ldr	r3, [r7, #16]
 8005942:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005944:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005948:	693b      	ldr	r3, [r7, #16]
 800594a:	619a      	str	r2, [r3, #24]
 800594c:	693b      	ldr	r3, [r7, #16]
 800594e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005950:	4b0f      	ldr	r3, [pc, #60]	; (8005990 <xTaskPriorityDisinherit+0xd4>)
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	429a      	cmp	r2, r3
 8005956:	d903      	bls.n	8005960 <xTaskPriorityDisinherit+0xa4>
 8005958:	693b      	ldr	r3, [r7, #16]
 800595a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800595c:	4a0c      	ldr	r2, [pc, #48]	; (8005990 <xTaskPriorityDisinherit+0xd4>)
 800595e:	6013      	str	r3, [r2, #0]
 8005960:	693b      	ldr	r3, [r7, #16]
 8005962:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005964:	4613      	mov	r3, r2
 8005966:	009b      	lsls	r3, r3, #2
 8005968:	4413      	add	r3, r2
 800596a:	009b      	lsls	r3, r3, #2
 800596c:	4a09      	ldr	r2, [pc, #36]	; (8005994 <xTaskPriorityDisinherit+0xd8>)
 800596e:	441a      	add	r2, r3
 8005970:	693b      	ldr	r3, [r7, #16]
 8005972:	3304      	adds	r3, #4
 8005974:	4619      	mov	r1, r3
 8005976:	4610      	mov	r0, r2
 8005978:	f7fe f819 	bl	80039ae <vListInsertEnd>
 800597c:	2301      	movs	r3, #1
 800597e:	617b      	str	r3, [r7, #20]
 8005980:	697b      	ldr	r3, [r7, #20]
 8005982:	4618      	mov	r0, r3
 8005984:	3718      	adds	r7, #24
 8005986:	46bd      	mov	sp, r7
 8005988:	bd80      	pop	{r7, pc}
 800598a:	bf00      	nop
 800598c:	20000954 	.word	0x20000954
 8005990:	20000e30 	.word	0x20000e30
 8005994:	20000958 	.word	0x20000958

08005998 <vTaskPriorityDisinheritAfterTimeout>:
 8005998:	b580      	push	{r7, lr}
 800599a:	b088      	sub	sp, #32
 800599c:	af00      	add	r7, sp, #0
 800599e:	6078      	str	r0, [r7, #4]
 80059a0:	6039      	str	r1, [r7, #0]
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	61bb      	str	r3, [r7, #24]
 80059a6:	2301      	movs	r3, #1
 80059a8:	617b      	str	r3, [r7, #20]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d06a      	beq.n	8005a86 <vTaskPriorityDisinheritAfterTimeout+0xee>
 80059b0:	69bb      	ldr	r3, [r7, #24]
 80059b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d10a      	bne.n	80059ce <vTaskPriorityDisinheritAfterTimeout+0x36>
 80059b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80059bc:	f383 8811 	msr	BASEPRI, r3
 80059c0:	f3bf 8f6f 	isb	sy
 80059c4:	f3bf 8f4f 	dsb	sy
 80059c8:	60fb      	str	r3, [r7, #12]
 80059ca:	bf00      	nop
 80059cc:	e7fe      	b.n	80059cc <vTaskPriorityDisinheritAfterTimeout+0x34>
 80059ce:	69bb      	ldr	r3, [r7, #24]
 80059d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80059d2:	683a      	ldr	r2, [r7, #0]
 80059d4:	429a      	cmp	r2, r3
 80059d6:	d902      	bls.n	80059de <vTaskPriorityDisinheritAfterTimeout+0x46>
 80059d8:	683b      	ldr	r3, [r7, #0]
 80059da:	61fb      	str	r3, [r7, #28]
 80059dc:	e002      	b.n	80059e4 <vTaskPriorityDisinheritAfterTimeout+0x4c>
 80059de:	69bb      	ldr	r3, [r7, #24]
 80059e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80059e2:	61fb      	str	r3, [r7, #28]
 80059e4:	69bb      	ldr	r3, [r7, #24]
 80059e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80059e8:	69fa      	ldr	r2, [r7, #28]
 80059ea:	429a      	cmp	r2, r3
 80059ec:	d04b      	beq.n	8005a86 <vTaskPriorityDisinheritAfterTimeout+0xee>
 80059ee:	69bb      	ldr	r3, [r7, #24]
 80059f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80059f2:	697a      	ldr	r2, [r7, #20]
 80059f4:	429a      	cmp	r2, r3
 80059f6:	d146      	bne.n	8005a86 <vTaskPriorityDisinheritAfterTimeout+0xee>
 80059f8:	4b25      	ldr	r3, [pc, #148]	; (8005a90 <vTaskPriorityDisinheritAfterTimeout+0xf8>)
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	69ba      	ldr	r2, [r7, #24]
 80059fe:	429a      	cmp	r2, r3
 8005a00:	d10a      	bne.n	8005a18 <vTaskPriorityDisinheritAfterTimeout+0x80>
 8005a02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005a06:	f383 8811 	msr	BASEPRI, r3
 8005a0a:	f3bf 8f6f 	isb	sy
 8005a0e:	f3bf 8f4f 	dsb	sy
 8005a12:	60bb      	str	r3, [r7, #8]
 8005a14:	bf00      	nop
 8005a16:	e7fe      	b.n	8005a16 <vTaskPriorityDisinheritAfterTimeout+0x7e>
 8005a18:	69bb      	ldr	r3, [r7, #24]
 8005a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a1c:	613b      	str	r3, [r7, #16]
 8005a1e:	69bb      	ldr	r3, [r7, #24]
 8005a20:	69fa      	ldr	r2, [r7, #28]
 8005a22:	62da      	str	r2, [r3, #44]	; 0x2c
 8005a24:	69bb      	ldr	r3, [r7, #24]
 8005a26:	699b      	ldr	r3, [r3, #24]
 8005a28:	2b00      	cmp	r3, #0
 8005a2a:	db04      	blt.n	8005a36 <vTaskPriorityDisinheritAfterTimeout+0x9e>
 8005a2c:	69fb      	ldr	r3, [r7, #28]
 8005a2e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8005a32:	69bb      	ldr	r3, [r7, #24]
 8005a34:	619a      	str	r2, [r3, #24]
 8005a36:	69bb      	ldr	r3, [r7, #24]
 8005a38:	6959      	ldr	r1, [r3, #20]
 8005a3a:	693a      	ldr	r2, [r7, #16]
 8005a3c:	4613      	mov	r3, r2
 8005a3e:	009b      	lsls	r3, r3, #2
 8005a40:	4413      	add	r3, r2
 8005a42:	009b      	lsls	r3, r3, #2
 8005a44:	4a13      	ldr	r2, [pc, #76]	; (8005a94 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8005a46:	4413      	add	r3, r2
 8005a48:	4299      	cmp	r1, r3
 8005a4a:	d11c      	bne.n	8005a86 <vTaskPriorityDisinheritAfterTimeout+0xee>
 8005a4c:	69bb      	ldr	r3, [r7, #24]
 8005a4e:	3304      	adds	r3, #4
 8005a50:	4618      	mov	r0, r3
 8005a52:	f7fe f809 	bl	8003a68 <uxListRemove>
 8005a56:	69bb      	ldr	r3, [r7, #24]
 8005a58:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a5a:	4b0f      	ldr	r3, [pc, #60]	; (8005a98 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	429a      	cmp	r2, r3
 8005a60:	d903      	bls.n	8005a6a <vTaskPriorityDisinheritAfterTimeout+0xd2>
 8005a62:	69bb      	ldr	r3, [r7, #24]
 8005a64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005a66:	4a0c      	ldr	r2, [pc, #48]	; (8005a98 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 8005a68:	6013      	str	r3, [r2, #0]
 8005a6a:	69bb      	ldr	r3, [r7, #24]
 8005a6c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005a6e:	4613      	mov	r3, r2
 8005a70:	009b      	lsls	r3, r3, #2
 8005a72:	4413      	add	r3, r2
 8005a74:	009b      	lsls	r3, r3, #2
 8005a76:	4a07      	ldr	r2, [pc, #28]	; (8005a94 <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 8005a78:	441a      	add	r2, r3
 8005a7a:	69bb      	ldr	r3, [r7, #24]
 8005a7c:	3304      	adds	r3, #4
 8005a7e:	4619      	mov	r1, r3
 8005a80:	4610      	mov	r0, r2
 8005a82:	f7fd ff94 	bl	80039ae <vListInsertEnd>
 8005a86:	bf00      	nop
 8005a88:	3720      	adds	r7, #32
 8005a8a:	46bd      	mov	sp, r7
 8005a8c:	bd80      	pop	{r7, pc}
 8005a8e:	bf00      	nop
 8005a90:	20000954 	.word	0x20000954
 8005a94:	20000958 	.word	0x20000958
 8005a98:	20000e30 	.word	0x20000e30

08005a9c <uxTaskResetEventItemValue>:
 8005a9c:	b480      	push	{r7}
 8005a9e:	b083      	sub	sp, #12
 8005aa0:	af00      	add	r7, sp, #0
 8005aa2:	4b09      	ldr	r3, [pc, #36]	; (8005ac8 <uxTaskResetEventItemValue+0x2c>)
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	699b      	ldr	r3, [r3, #24]
 8005aa8:	607b      	str	r3, [r7, #4]
 8005aaa:	4b07      	ldr	r3, [pc, #28]	; (8005ac8 <uxTaskResetEventItemValue+0x2c>)
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005ab0:	4b05      	ldr	r3, [pc, #20]	; (8005ac8 <uxTaskResetEventItemValue+0x2c>)
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8005ab8:	619a      	str	r2, [r3, #24]
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	4618      	mov	r0, r3
 8005abe:	370c      	adds	r7, #12
 8005ac0:	46bd      	mov	sp, r7
 8005ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ac6:	4770      	bx	lr
 8005ac8:	20000954 	.word	0x20000954

08005acc <pvTaskIncrementMutexHeldCount>:
 8005acc:	b480      	push	{r7}
 8005ace:	af00      	add	r7, sp, #0
 8005ad0:	4b07      	ldr	r3, [pc, #28]	; (8005af0 <pvTaskIncrementMutexHeldCount+0x24>)
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	d004      	beq.n	8005ae2 <pvTaskIncrementMutexHeldCount+0x16>
 8005ad8:	4b05      	ldr	r3, [pc, #20]	; (8005af0 <pvTaskIncrementMutexHeldCount+0x24>)
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005ade:	3201      	adds	r2, #1
 8005ae0:	651a      	str	r2, [r3, #80]	; 0x50
 8005ae2:	4b03      	ldr	r3, [pc, #12]	; (8005af0 <pvTaskIncrementMutexHeldCount+0x24>)
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4618      	mov	r0, r3
 8005ae8:	46bd      	mov	sp, r7
 8005aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aee:	4770      	bx	lr
 8005af0:	20000954 	.word	0x20000954

08005af4 <prvAddCurrentTaskToDelayedList>:
 8005af4:	b580      	push	{r7, lr}
 8005af6:	b084      	sub	sp, #16
 8005af8:	af00      	add	r7, sp, #0
 8005afa:	6078      	str	r0, [r7, #4]
 8005afc:	6039      	str	r1, [r7, #0]
 8005afe:	4b21      	ldr	r3, [pc, #132]	; (8005b84 <prvAddCurrentTaskToDelayedList+0x90>)
 8005b00:	681b      	ldr	r3, [r3, #0]
 8005b02:	60fb      	str	r3, [r7, #12]
 8005b04:	4b20      	ldr	r3, [pc, #128]	; (8005b88 <prvAddCurrentTaskToDelayedList+0x94>)
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	3304      	adds	r3, #4
 8005b0a:	4618      	mov	r0, r3
 8005b0c:	f7fd ffac 	bl	8003a68 <uxListRemove>
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005b16:	d10a      	bne.n	8005b2e <prvAddCurrentTaskToDelayedList+0x3a>
 8005b18:	683b      	ldr	r3, [r7, #0]
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d007      	beq.n	8005b2e <prvAddCurrentTaskToDelayedList+0x3a>
 8005b1e:	4b1a      	ldr	r3, [pc, #104]	; (8005b88 <prvAddCurrentTaskToDelayedList+0x94>)
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	3304      	adds	r3, #4
 8005b24:	4619      	mov	r1, r3
 8005b26:	4819      	ldr	r0, [pc, #100]	; (8005b8c <prvAddCurrentTaskToDelayedList+0x98>)
 8005b28:	f7fd ff41 	bl	80039ae <vListInsertEnd>
 8005b2c:	e026      	b.n	8005b7c <prvAddCurrentTaskToDelayedList+0x88>
 8005b2e:	68fa      	ldr	r2, [r7, #12]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	4413      	add	r3, r2
 8005b34:	60bb      	str	r3, [r7, #8]
 8005b36:	4b14      	ldr	r3, [pc, #80]	; (8005b88 <prvAddCurrentTaskToDelayedList+0x94>)
 8005b38:	681b      	ldr	r3, [r3, #0]
 8005b3a:	68ba      	ldr	r2, [r7, #8]
 8005b3c:	605a      	str	r2, [r3, #4]
 8005b3e:	68ba      	ldr	r2, [r7, #8]
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	429a      	cmp	r2, r3
 8005b44:	d209      	bcs.n	8005b5a <prvAddCurrentTaskToDelayedList+0x66>
 8005b46:	4b12      	ldr	r3, [pc, #72]	; (8005b90 <prvAddCurrentTaskToDelayedList+0x9c>)
 8005b48:	681a      	ldr	r2, [r3, #0]
 8005b4a:	4b0f      	ldr	r3, [pc, #60]	; (8005b88 <prvAddCurrentTaskToDelayedList+0x94>)
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	3304      	adds	r3, #4
 8005b50:	4619      	mov	r1, r3
 8005b52:	4610      	mov	r0, r2
 8005b54:	f7fd ff4f 	bl	80039f6 <vListInsert>
 8005b58:	e010      	b.n	8005b7c <prvAddCurrentTaskToDelayedList+0x88>
 8005b5a:	4b0e      	ldr	r3, [pc, #56]	; (8005b94 <prvAddCurrentTaskToDelayedList+0xa0>)
 8005b5c:	681a      	ldr	r2, [r3, #0]
 8005b5e:	4b0a      	ldr	r3, [pc, #40]	; (8005b88 <prvAddCurrentTaskToDelayedList+0x94>)
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	3304      	adds	r3, #4
 8005b64:	4619      	mov	r1, r3
 8005b66:	4610      	mov	r0, r2
 8005b68:	f7fd ff45 	bl	80039f6 <vListInsert>
 8005b6c:	4b0a      	ldr	r3, [pc, #40]	; (8005b98 <prvAddCurrentTaskToDelayedList+0xa4>)
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	68ba      	ldr	r2, [r7, #8]
 8005b72:	429a      	cmp	r2, r3
 8005b74:	d202      	bcs.n	8005b7c <prvAddCurrentTaskToDelayedList+0x88>
 8005b76:	4a08      	ldr	r2, [pc, #32]	; (8005b98 <prvAddCurrentTaskToDelayedList+0xa4>)
 8005b78:	68bb      	ldr	r3, [r7, #8]
 8005b7a:	6013      	str	r3, [r2, #0]
 8005b7c:	bf00      	nop
 8005b7e:	3710      	adds	r7, #16
 8005b80:	46bd      	mov	sp, r7
 8005b82:	bd80      	pop	{r7, pc}
 8005b84:	20000e2c 	.word	0x20000e2c
 8005b88:	20000954 	.word	0x20000954
 8005b8c:	20000e14 	.word	0x20000e14
 8005b90:	20000de4 	.word	0x20000de4
 8005b94:	20000de0 	.word	0x20000de0
 8005b98:	20000e48 	.word	0x20000e48

08005b9c <xTimerCreateTimerTask>:
 8005b9c:	b580      	push	{r7, lr}
 8005b9e:	b08a      	sub	sp, #40	; 0x28
 8005ba0:	af04      	add	r7, sp, #16
 8005ba2:	2300      	movs	r3, #0
 8005ba4:	617b      	str	r3, [r7, #20]
 8005ba6:	f000 fb07 	bl	80061b8 <prvCheckForValidListAndQueue>
 8005baa:	4b1c      	ldr	r3, [pc, #112]	; (8005c1c <xTimerCreateTimerTask+0x80>)
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	2b00      	cmp	r3, #0
 8005bb0:	d021      	beq.n	8005bf6 <xTimerCreateTimerTask+0x5a>
 8005bb2:	2300      	movs	r3, #0
 8005bb4:	60fb      	str	r3, [r7, #12]
 8005bb6:	2300      	movs	r3, #0
 8005bb8:	60bb      	str	r3, [r7, #8]
 8005bba:	1d3a      	adds	r2, r7, #4
 8005bbc:	f107 0108 	add.w	r1, r7, #8
 8005bc0:	f107 030c 	add.w	r3, r7, #12
 8005bc4:	4618      	mov	r0, r3
 8005bc6:	f7fd fc3f 	bl	8003448 <vApplicationGetTimerTaskMemory>
 8005bca:	6879      	ldr	r1, [r7, #4]
 8005bcc:	68bb      	ldr	r3, [r7, #8]
 8005bce:	68fa      	ldr	r2, [r7, #12]
 8005bd0:	9202      	str	r2, [sp, #8]
 8005bd2:	9301      	str	r3, [sp, #4]
 8005bd4:	2302      	movs	r3, #2
 8005bd6:	9300      	str	r3, [sp, #0]
 8005bd8:	2300      	movs	r3, #0
 8005bda:	460a      	mov	r2, r1
 8005bdc:	4910      	ldr	r1, [pc, #64]	; (8005c20 <xTimerCreateTimerTask+0x84>)
 8005bde:	4811      	ldr	r0, [pc, #68]	; (8005c24 <xTimerCreateTimerTask+0x88>)
 8005be0:	f7fe ff34 	bl	8004a4c <xTaskCreateStatic>
 8005be4:	4603      	mov	r3, r0
 8005be6:	4a10      	ldr	r2, [pc, #64]	; (8005c28 <xTimerCreateTimerTask+0x8c>)
 8005be8:	6013      	str	r3, [r2, #0]
 8005bea:	4b0f      	ldr	r3, [pc, #60]	; (8005c28 <xTimerCreateTimerTask+0x8c>)
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d001      	beq.n	8005bf6 <xTimerCreateTimerTask+0x5a>
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	617b      	str	r3, [r7, #20]
 8005bf6:	697b      	ldr	r3, [r7, #20]
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d10a      	bne.n	8005c12 <xTimerCreateTimerTask+0x76>
 8005bfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c00:	f383 8811 	msr	BASEPRI, r3
 8005c04:	f3bf 8f6f 	isb	sy
 8005c08:	f3bf 8f4f 	dsb	sy
 8005c0c:	613b      	str	r3, [r7, #16]
 8005c0e:	bf00      	nop
 8005c10:	e7fe      	b.n	8005c10 <xTimerCreateTimerTask+0x74>
 8005c12:	697b      	ldr	r3, [r7, #20]
 8005c14:	4618      	mov	r0, r3
 8005c16:	3718      	adds	r7, #24
 8005c18:	46bd      	mov	sp, r7
 8005c1a:	bd80      	pop	{r7, pc}
 8005c1c:	20000e84 	.word	0x20000e84
 8005c20:	08007c80 	.word	0x08007c80
 8005c24:	08005d61 	.word	0x08005d61
 8005c28:	20000e88 	.word	0x20000e88

08005c2c <xTimerGenericCommand>:
 8005c2c:	b580      	push	{r7, lr}
 8005c2e:	b08a      	sub	sp, #40	; 0x28
 8005c30:	af00      	add	r7, sp, #0
 8005c32:	60f8      	str	r0, [r7, #12]
 8005c34:	60b9      	str	r1, [r7, #8]
 8005c36:	607a      	str	r2, [r7, #4]
 8005c38:	603b      	str	r3, [r7, #0]
 8005c3a:	2300      	movs	r3, #0
 8005c3c:	627b      	str	r3, [r7, #36]	; 0x24
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	d10a      	bne.n	8005c5a <xTimerGenericCommand+0x2e>
 8005c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005c48:	f383 8811 	msr	BASEPRI, r3
 8005c4c:	f3bf 8f6f 	isb	sy
 8005c50:	f3bf 8f4f 	dsb	sy
 8005c54:	623b      	str	r3, [r7, #32]
 8005c56:	bf00      	nop
 8005c58:	e7fe      	b.n	8005c58 <xTimerGenericCommand+0x2c>
 8005c5a:	4b1a      	ldr	r3, [pc, #104]	; (8005cc4 <xTimerGenericCommand+0x98>)
 8005c5c:	681b      	ldr	r3, [r3, #0]
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d02a      	beq.n	8005cb8 <xTimerGenericCommand+0x8c>
 8005c62:	68bb      	ldr	r3, [r7, #8]
 8005c64:	613b      	str	r3, [r7, #16]
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	68fb      	ldr	r3, [r7, #12]
 8005c6c:	61bb      	str	r3, [r7, #24]
 8005c6e:	68bb      	ldr	r3, [r7, #8]
 8005c70:	2b05      	cmp	r3, #5
 8005c72:	dc18      	bgt.n	8005ca6 <xTimerGenericCommand+0x7a>
 8005c74:	f7ff fd9c 	bl	80057b0 <xTaskGetSchedulerState>
 8005c78:	4603      	mov	r3, r0
 8005c7a:	2b02      	cmp	r3, #2
 8005c7c:	d109      	bne.n	8005c92 <xTimerGenericCommand+0x66>
 8005c7e:	4b11      	ldr	r3, [pc, #68]	; (8005cc4 <xTimerGenericCommand+0x98>)
 8005c80:	6818      	ldr	r0, [r3, #0]
 8005c82:	f107 0110 	add.w	r1, r7, #16
 8005c86:	2300      	movs	r3, #0
 8005c88:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005c8a:	f7fe f88b 	bl	8003da4 <xQueueGenericSend>
 8005c8e:	6278      	str	r0, [r7, #36]	; 0x24
 8005c90:	e012      	b.n	8005cb8 <xTimerGenericCommand+0x8c>
 8005c92:	4b0c      	ldr	r3, [pc, #48]	; (8005cc4 <xTimerGenericCommand+0x98>)
 8005c94:	6818      	ldr	r0, [r3, #0]
 8005c96:	f107 0110 	add.w	r1, r7, #16
 8005c9a:	2300      	movs	r3, #0
 8005c9c:	2200      	movs	r2, #0
 8005c9e:	f7fe f881 	bl	8003da4 <xQueueGenericSend>
 8005ca2:	6278      	str	r0, [r7, #36]	; 0x24
 8005ca4:	e008      	b.n	8005cb8 <xTimerGenericCommand+0x8c>
 8005ca6:	4b07      	ldr	r3, [pc, #28]	; (8005cc4 <xTimerGenericCommand+0x98>)
 8005ca8:	6818      	ldr	r0, [r3, #0]
 8005caa:	f107 0110 	add.w	r1, r7, #16
 8005cae:	2300      	movs	r3, #0
 8005cb0:	683a      	ldr	r2, [r7, #0]
 8005cb2:	f7fe f975 	bl	8003fa0 <xQueueGenericSendFromISR>
 8005cb6:	6278      	str	r0, [r7, #36]	; 0x24
 8005cb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cba:	4618      	mov	r0, r3
 8005cbc:	3728      	adds	r7, #40	; 0x28
 8005cbe:	46bd      	mov	sp, r7
 8005cc0:	bd80      	pop	{r7, pc}
 8005cc2:	bf00      	nop
 8005cc4:	20000e84 	.word	0x20000e84

08005cc8 <prvProcessExpiredTimer>:
 8005cc8:	b580      	push	{r7, lr}
 8005cca:	b088      	sub	sp, #32
 8005ccc:	af02      	add	r7, sp, #8
 8005cce:	6078      	str	r0, [r7, #4]
 8005cd0:	6039      	str	r1, [r7, #0]
 8005cd2:	4b22      	ldr	r3, [pc, #136]	; (8005d5c <prvProcessExpiredTimer+0x94>)
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	68db      	ldr	r3, [r3, #12]
 8005cd8:	68db      	ldr	r3, [r3, #12]
 8005cda:	617b      	str	r3, [r7, #20]
 8005cdc:	697b      	ldr	r3, [r7, #20]
 8005cde:	3304      	adds	r3, #4
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	f7fd fec1 	bl	8003a68 <uxListRemove>
 8005ce6:	697b      	ldr	r3, [r7, #20]
 8005ce8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005cec:	f003 0304 	and.w	r3, r3, #4
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d022      	beq.n	8005d3a <prvProcessExpiredTimer+0x72>
 8005cf4:	697b      	ldr	r3, [r7, #20]
 8005cf6:	699a      	ldr	r2, [r3, #24]
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	18d1      	adds	r1, r2, r3
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	683a      	ldr	r2, [r7, #0]
 8005d00:	6978      	ldr	r0, [r7, #20]
 8005d02:	f000 f8d1 	bl	8005ea8 <prvInsertTimerInActiveList>
 8005d06:	4603      	mov	r3, r0
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d01f      	beq.n	8005d4c <prvProcessExpiredTimer+0x84>
 8005d0c:	2300      	movs	r3, #0
 8005d0e:	9300      	str	r3, [sp, #0]
 8005d10:	2300      	movs	r3, #0
 8005d12:	687a      	ldr	r2, [r7, #4]
 8005d14:	2100      	movs	r1, #0
 8005d16:	6978      	ldr	r0, [r7, #20]
 8005d18:	f7ff ff88 	bl	8005c2c <xTimerGenericCommand>
 8005d1c:	6138      	str	r0, [r7, #16]
 8005d1e:	693b      	ldr	r3, [r7, #16]
 8005d20:	2b00      	cmp	r3, #0
 8005d22:	d113      	bne.n	8005d4c <prvProcessExpiredTimer+0x84>
 8005d24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005d28:	f383 8811 	msr	BASEPRI, r3
 8005d2c:	f3bf 8f6f 	isb	sy
 8005d30:	f3bf 8f4f 	dsb	sy
 8005d34:	60fb      	str	r3, [r7, #12]
 8005d36:	bf00      	nop
 8005d38:	e7fe      	b.n	8005d38 <prvProcessExpiredTimer+0x70>
 8005d3a:	697b      	ldr	r3, [r7, #20]
 8005d3c:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005d40:	f023 0301 	bic.w	r3, r3, #1
 8005d44:	b2da      	uxtb	r2, r3
 8005d46:	697b      	ldr	r3, [r7, #20]
 8005d48:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005d4c:	697b      	ldr	r3, [r7, #20]
 8005d4e:	6a1b      	ldr	r3, [r3, #32]
 8005d50:	6978      	ldr	r0, [r7, #20]
 8005d52:	4798      	blx	r3
 8005d54:	bf00      	nop
 8005d56:	3718      	adds	r7, #24
 8005d58:	46bd      	mov	sp, r7
 8005d5a:	bd80      	pop	{r7, pc}
 8005d5c:	20000e7c 	.word	0x20000e7c

08005d60 <prvTimerTask>:
 8005d60:	b580      	push	{r7, lr}
 8005d62:	b084      	sub	sp, #16
 8005d64:	af00      	add	r7, sp, #0
 8005d66:	6078      	str	r0, [r7, #4]
 8005d68:	f107 0308 	add.w	r3, r7, #8
 8005d6c:	4618      	mov	r0, r3
 8005d6e:	f000 f857 	bl	8005e20 <prvGetNextExpireTime>
 8005d72:	60f8      	str	r0, [r7, #12]
 8005d74:	68bb      	ldr	r3, [r7, #8]
 8005d76:	4619      	mov	r1, r3
 8005d78:	68f8      	ldr	r0, [r7, #12]
 8005d7a:	f000 f803 	bl	8005d84 <prvProcessTimerOrBlockTask>
 8005d7e:	f000 f8d5 	bl	8005f2c <prvProcessReceivedCommands>
 8005d82:	e7f1      	b.n	8005d68 <prvTimerTask+0x8>

08005d84 <prvProcessTimerOrBlockTask>:
 8005d84:	b580      	push	{r7, lr}
 8005d86:	b084      	sub	sp, #16
 8005d88:	af00      	add	r7, sp, #0
 8005d8a:	6078      	str	r0, [r7, #4]
 8005d8c:	6039      	str	r1, [r7, #0]
 8005d8e:	f7ff f885 	bl	8004e9c <vTaskSuspendAll>
 8005d92:	f107 0308 	add.w	r3, r7, #8
 8005d96:	4618      	mov	r0, r3
 8005d98:	f000 f866 	bl	8005e68 <prvSampleTimeNow>
 8005d9c:	60f8      	str	r0, [r7, #12]
 8005d9e:	68bb      	ldr	r3, [r7, #8]
 8005da0:	2b00      	cmp	r3, #0
 8005da2:	d130      	bne.n	8005e06 <prvProcessTimerOrBlockTask+0x82>
 8005da4:	683b      	ldr	r3, [r7, #0]
 8005da6:	2b00      	cmp	r3, #0
 8005da8:	d10a      	bne.n	8005dc0 <prvProcessTimerOrBlockTask+0x3c>
 8005daa:	687a      	ldr	r2, [r7, #4]
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	429a      	cmp	r2, r3
 8005db0:	d806      	bhi.n	8005dc0 <prvProcessTimerOrBlockTask+0x3c>
 8005db2:	f7ff f881 	bl	8004eb8 <xTaskResumeAll>
 8005db6:	68f9      	ldr	r1, [r7, #12]
 8005db8:	6878      	ldr	r0, [r7, #4]
 8005dba:	f7ff ff85 	bl	8005cc8 <prvProcessExpiredTimer>
 8005dbe:	e024      	b.n	8005e0a <prvProcessTimerOrBlockTask+0x86>
 8005dc0:	683b      	ldr	r3, [r7, #0]
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d008      	beq.n	8005dd8 <prvProcessTimerOrBlockTask+0x54>
 8005dc6:	4b13      	ldr	r3, [pc, #76]	; (8005e14 <prvProcessTimerOrBlockTask+0x90>)
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d101      	bne.n	8005dd4 <prvProcessTimerOrBlockTask+0x50>
 8005dd0:	2301      	movs	r3, #1
 8005dd2:	e000      	b.n	8005dd6 <prvProcessTimerOrBlockTask+0x52>
 8005dd4:	2300      	movs	r3, #0
 8005dd6:	603b      	str	r3, [r7, #0]
 8005dd8:	4b0f      	ldr	r3, [pc, #60]	; (8005e18 <prvProcessTimerOrBlockTask+0x94>)
 8005dda:	6818      	ldr	r0, [r3, #0]
 8005ddc:	687a      	ldr	r2, [r7, #4]
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	1ad3      	subs	r3, r2, r3
 8005de2:	683a      	ldr	r2, [r7, #0]
 8005de4:	4619      	mov	r1, r3
 8005de6:	f7fe fdfd 	bl	80049e4 <vQueueWaitForMessageRestricted>
 8005dea:	f7ff f865 	bl	8004eb8 <xTaskResumeAll>
 8005dee:	4603      	mov	r3, r0
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d10a      	bne.n	8005e0a <prvProcessTimerOrBlockTask+0x86>
 8005df4:	4b09      	ldr	r3, [pc, #36]	; (8005e1c <prvProcessTimerOrBlockTask+0x98>)
 8005df6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8005dfa:	601a      	str	r2, [r3, #0]
 8005dfc:	f3bf 8f4f 	dsb	sy
 8005e00:	f3bf 8f6f 	isb	sy
 8005e04:	e001      	b.n	8005e0a <prvProcessTimerOrBlockTask+0x86>
 8005e06:	f7ff f857 	bl	8004eb8 <xTaskResumeAll>
 8005e0a:	bf00      	nop
 8005e0c:	3710      	adds	r7, #16
 8005e0e:	46bd      	mov	sp, r7
 8005e10:	bd80      	pop	{r7, pc}
 8005e12:	bf00      	nop
 8005e14:	20000e80 	.word	0x20000e80
 8005e18:	20000e84 	.word	0x20000e84
 8005e1c:	e000ed04 	.word	0xe000ed04

08005e20 <prvGetNextExpireTime>:
 8005e20:	b480      	push	{r7}
 8005e22:	b085      	sub	sp, #20
 8005e24:	af00      	add	r7, sp, #0
 8005e26:	6078      	str	r0, [r7, #4]
 8005e28:	4b0e      	ldr	r3, [pc, #56]	; (8005e64 <prvGetNextExpireTime+0x44>)
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	681b      	ldr	r3, [r3, #0]
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d101      	bne.n	8005e36 <prvGetNextExpireTime+0x16>
 8005e32:	2201      	movs	r2, #1
 8005e34:	e000      	b.n	8005e38 <prvGetNextExpireTime+0x18>
 8005e36:	2200      	movs	r2, #0
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	601a      	str	r2, [r3, #0]
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	2b00      	cmp	r3, #0
 8005e42:	d105      	bne.n	8005e50 <prvGetNextExpireTime+0x30>
 8005e44:	4b07      	ldr	r3, [pc, #28]	; (8005e64 <prvGetNextExpireTime+0x44>)
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	68db      	ldr	r3, [r3, #12]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	60fb      	str	r3, [r7, #12]
 8005e4e:	e001      	b.n	8005e54 <prvGetNextExpireTime+0x34>
 8005e50:	2300      	movs	r3, #0
 8005e52:	60fb      	str	r3, [r7, #12]
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	4618      	mov	r0, r3
 8005e58:	3714      	adds	r7, #20
 8005e5a:	46bd      	mov	sp, r7
 8005e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e60:	4770      	bx	lr
 8005e62:	bf00      	nop
 8005e64:	20000e7c 	.word	0x20000e7c

08005e68 <prvSampleTimeNow>:
 8005e68:	b580      	push	{r7, lr}
 8005e6a:	b084      	sub	sp, #16
 8005e6c:	af00      	add	r7, sp, #0
 8005e6e:	6078      	str	r0, [r7, #4]
 8005e70:	f7ff f8c0 	bl	8004ff4 <xTaskGetTickCount>
 8005e74:	60f8      	str	r0, [r7, #12]
 8005e76:	4b0b      	ldr	r3, [pc, #44]	; (8005ea4 <prvSampleTimeNow+0x3c>)
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	68fa      	ldr	r2, [r7, #12]
 8005e7c:	429a      	cmp	r2, r3
 8005e7e:	d205      	bcs.n	8005e8c <prvSampleTimeNow+0x24>
 8005e80:	f000 f936 	bl	80060f0 <prvSwitchTimerLists>
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	2201      	movs	r2, #1
 8005e88:	601a      	str	r2, [r3, #0]
 8005e8a:	e002      	b.n	8005e92 <prvSampleTimeNow+0x2a>
 8005e8c:	687b      	ldr	r3, [r7, #4]
 8005e8e:	2200      	movs	r2, #0
 8005e90:	601a      	str	r2, [r3, #0]
 8005e92:	4a04      	ldr	r2, [pc, #16]	; (8005ea4 <prvSampleTimeNow+0x3c>)
 8005e94:	68fb      	ldr	r3, [r7, #12]
 8005e96:	6013      	str	r3, [r2, #0]
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	4618      	mov	r0, r3
 8005e9c:	3710      	adds	r7, #16
 8005e9e:	46bd      	mov	sp, r7
 8005ea0:	bd80      	pop	{r7, pc}
 8005ea2:	bf00      	nop
 8005ea4:	20000e8c 	.word	0x20000e8c

08005ea8 <prvInsertTimerInActiveList>:
 8005ea8:	b580      	push	{r7, lr}
 8005eaa:	b086      	sub	sp, #24
 8005eac:	af00      	add	r7, sp, #0
 8005eae:	60f8      	str	r0, [r7, #12]
 8005eb0:	60b9      	str	r1, [r7, #8]
 8005eb2:	607a      	str	r2, [r7, #4]
 8005eb4:	603b      	str	r3, [r7, #0]
 8005eb6:	2300      	movs	r3, #0
 8005eb8:	617b      	str	r3, [r7, #20]
 8005eba:	68fb      	ldr	r3, [r7, #12]
 8005ebc:	68ba      	ldr	r2, [r7, #8]
 8005ebe:	605a      	str	r2, [r3, #4]
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	68fa      	ldr	r2, [r7, #12]
 8005ec4:	611a      	str	r2, [r3, #16]
 8005ec6:	68ba      	ldr	r2, [r7, #8]
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	429a      	cmp	r2, r3
 8005ecc:	d812      	bhi.n	8005ef4 <prvInsertTimerInActiveList+0x4c>
 8005ece:	687a      	ldr	r2, [r7, #4]
 8005ed0:	683b      	ldr	r3, [r7, #0]
 8005ed2:	1ad2      	subs	r2, r2, r3
 8005ed4:	68fb      	ldr	r3, [r7, #12]
 8005ed6:	699b      	ldr	r3, [r3, #24]
 8005ed8:	429a      	cmp	r2, r3
 8005eda:	d302      	bcc.n	8005ee2 <prvInsertTimerInActiveList+0x3a>
 8005edc:	2301      	movs	r3, #1
 8005ede:	617b      	str	r3, [r7, #20]
 8005ee0:	e01b      	b.n	8005f1a <prvInsertTimerInActiveList+0x72>
 8005ee2:	4b10      	ldr	r3, [pc, #64]	; (8005f24 <prvInsertTimerInActiveList+0x7c>)
 8005ee4:	681a      	ldr	r2, [r3, #0]
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	3304      	adds	r3, #4
 8005eea:	4619      	mov	r1, r3
 8005eec:	4610      	mov	r0, r2
 8005eee:	f7fd fd82 	bl	80039f6 <vListInsert>
 8005ef2:	e012      	b.n	8005f1a <prvInsertTimerInActiveList+0x72>
 8005ef4:	687a      	ldr	r2, [r7, #4]
 8005ef6:	683b      	ldr	r3, [r7, #0]
 8005ef8:	429a      	cmp	r2, r3
 8005efa:	d206      	bcs.n	8005f0a <prvInsertTimerInActiveList+0x62>
 8005efc:	68ba      	ldr	r2, [r7, #8]
 8005efe:	683b      	ldr	r3, [r7, #0]
 8005f00:	429a      	cmp	r2, r3
 8005f02:	d302      	bcc.n	8005f0a <prvInsertTimerInActiveList+0x62>
 8005f04:	2301      	movs	r3, #1
 8005f06:	617b      	str	r3, [r7, #20]
 8005f08:	e007      	b.n	8005f1a <prvInsertTimerInActiveList+0x72>
 8005f0a:	4b07      	ldr	r3, [pc, #28]	; (8005f28 <prvInsertTimerInActiveList+0x80>)
 8005f0c:	681a      	ldr	r2, [r3, #0]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	3304      	adds	r3, #4
 8005f12:	4619      	mov	r1, r3
 8005f14:	4610      	mov	r0, r2
 8005f16:	f7fd fd6e 	bl	80039f6 <vListInsert>
 8005f1a:	697b      	ldr	r3, [r7, #20]
 8005f1c:	4618      	mov	r0, r3
 8005f1e:	3718      	adds	r7, #24
 8005f20:	46bd      	mov	sp, r7
 8005f22:	bd80      	pop	{r7, pc}
 8005f24:	20000e80 	.word	0x20000e80
 8005f28:	20000e7c 	.word	0x20000e7c

08005f2c <prvProcessReceivedCommands>:
 8005f2c:	b580      	push	{r7, lr}
 8005f2e:	b08e      	sub	sp, #56	; 0x38
 8005f30:	af02      	add	r7, sp, #8
 8005f32:	e0ca      	b.n	80060ca <prvProcessReceivedCommands+0x19e>
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	2b00      	cmp	r3, #0
 8005f38:	da18      	bge.n	8005f6c <prvProcessReceivedCommands+0x40>
 8005f3a:	1d3b      	adds	r3, r7, #4
 8005f3c:	3304      	adds	r3, #4
 8005f3e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f40:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d10a      	bne.n	8005f5c <prvProcessReceivedCommands+0x30>
 8005f46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8005f4a:	f383 8811 	msr	BASEPRI, r3
 8005f4e:	f3bf 8f6f 	isb	sy
 8005f52:	f3bf 8f4f 	dsb	sy
 8005f56:	61fb      	str	r3, [r7, #28]
 8005f58:	bf00      	nop
 8005f5a:	e7fe      	b.n	8005f5a <prvProcessReceivedCommands+0x2e>
 8005f5c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005f62:	6850      	ldr	r0, [r2, #4]
 8005f64:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005f66:	6892      	ldr	r2, [r2, #8]
 8005f68:	4611      	mov	r1, r2
 8005f6a:	4798      	blx	r3
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	f2c0 80ab 	blt.w	80060ca <prvProcessReceivedCommands+0x19e>
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f78:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f7a:	695b      	ldr	r3, [r3, #20]
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	d004      	beq.n	8005f8a <prvProcessReceivedCommands+0x5e>
 8005f80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f82:	3304      	adds	r3, #4
 8005f84:	4618      	mov	r0, r3
 8005f86:	f7fd fd6f 	bl	8003a68 <uxListRemove>
 8005f8a:	463b      	mov	r3, r7
 8005f8c:	4618      	mov	r0, r3
 8005f8e:	f7ff ff6b 	bl	8005e68 <prvSampleTimeNow>
 8005f92:	6278      	str	r0, [r7, #36]	; 0x24
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	2b09      	cmp	r3, #9
 8005f98:	f200 8096 	bhi.w	80060c8 <prvProcessReceivedCommands+0x19c>
 8005f9c:	a201      	add	r2, pc, #4	; (adr r2, 8005fa4 <prvProcessReceivedCommands+0x78>)
 8005f9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005fa2:	bf00      	nop
 8005fa4:	08005fcd 	.word	0x08005fcd
 8005fa8:	08005fcd 	.word	0x08005fcd
 8005fac:	08005fcd 	.word	0x08005fcd
 8005fb0:	08006041 	.word	0x08006041
 8005fb4:	08006055 	.word	0x08006055
 8005fb8:	0800609f 	.word	0x0800609f
 8005fbc:	08005fcd 	.word	0x08005fcd
 8005fc0:	08005fcd 	.word	0x08005fcd
 8005fc4:	08006041 	.word	0x08006041
 8005fc8:	08006055 	.word	0x08006055
 8005fcc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005fce:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8005fd2:	f043 0301 	orr.w	r3, r3, #1
 8005fd6:	b2da      	uxtb	r2, r3
 8005fd8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005fda:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8005fde:	68ba      	ldr	r2, [r7, #8]
 8005fe0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005fe2:	699b      	ldr	r3, [r3, #24]
 8005fe4:	18d1      	adds	r1, r2, r3
 8005fe6:	68bb      	ldr	r3, [r7, #8]
 8005fe8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005fea:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005fec:	f7ff ff5c 	bl	8005ea8 <prvInsertTimerInActiveList>
 8005ff0:	4603      	mov	r3, r0
 8005ff2:	2b00      	cmp	r3, #0
 8005ff4:	d069      	beq.n	80060ca <prvProcessReceivedCommands+0x19e>
 8005ff6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005ff8:	6a1b      	ldr	r3, [r3, #32]
 8005ffa:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8005ffc:	4798      	blx	r3
 8005ffe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006000:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006004:	f003 0304 	and.w	r3, r3, #4
 8006008:	2b00      	cmp	r3, #0
 800600a:	d05e      	beq.n	80060ca <prvProcessReceivedCommands+0x19e>
 800600c:	68ba      	ldr	r2, [r7, #8]
 800600e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006010:	699b      	ldr	r3, [r3, #24]
 8006012:	441a      	add	r2, r3
 8006014:	2300      	movs	r3, #0
 8006016:	9300      	str	r3, [sp, #0]
 8006018:	2300      	movs	r3, #0
 800601a:	2100      	movs	r1, #0
 800601c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800601e:	f7ff fe05 	bl	8005c2c <xTimerGenericCommand>
 8006022:	6238      	str	r0, [r7, #32]
 8006024:	6a3b      	ldr	r3, [r7, #32]
 8006026:	2b00      	cmp	r3, #0
 8006028:	d14f      	bne.n	80060ca <prvProcessReceivedCommands+0x19e>
 800602a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800602e:	f383 8811 	msr	BASEPRI, r3
 8006032:	f3bf 8f6f 	isb	sy
 8006036:	f3bf 8f4f 	dsb	sy
 800603a:	61bb      	str	r3, [r7, #24]
 800603c:	bf00      	nop
 800603e:	e7fe      	b.n	800603e <prvProcessReceivedCommands+0x112>
 8006040:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006042:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006046:	f023 0301 	bic.w	r3, r3, #1
 800604a:	b2da      	uxtb	r2, r3
 800604c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800604e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006052:	e03a      	b.n	80060ca <prvProcessReceivedCommands+0x19e>
 8006054:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006056:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800605a:	f043 0301 	orr.w	r3, r3, #1
 800605e:	b2da      	uxtb	r2, r3
 8006060:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006062:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8006066:	68ba      	ldr	r2, [r7, #8]
 8006068:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800606a:	619a      	str	r2, [r3, #24]
 800606c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800606e:	699b      	ldr	r3, [r3, #24]
 8006070:	2b00      	cmp	r3, #0
 8006072:	d10a      	bne.n	800608a <prvProcessReceivedCommands+0x15e>
 8006074:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006078:	f383 8811 	msr	BASEPRI, r3
 800607c:	f3bf 8f6f 	isb	sy
 8006080:	f3bf 8f4f 	dsb	sy
 8006084:	617b      	str	r3, [r7, #20]
 8006086:	bf00      	nop
 8006088:	e7fe      	b.n	8006088 <prvProcessReceivedCommands+0x15c>
 800608a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800608c:	699a      	ldr	r2, [r3, #24]
 800608e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006090:	18d1      	adds	r1, r2, r3
 8006092:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006094:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006096:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8006098:	f7ff ff06 	bl	8005ea8 <prvInsertTimerInActiveList>
 800609c:	e015      	b.n	80060ca <prvProcessReceivedCommands+0x19e>
 800609e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80060a0:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80060a4:	f003 0302 	and.w	r3, r3, #2
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d103      	bne.n	80060b4 <prvProcessReceivedCommands+0x188>
 80060ac:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80060ae:	f000 fbff 	bl	80068b0 <vPortFree>
 80060b2:	e00a      	b.n	80060ca <prvProcessReceivedCommands+0x19e>
 80060b4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80060b6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80060ba:	f023 0301 	bic.w	r3, r3, #1
 80060be:	b2da      	uxtb	r2, r3
 80060c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80060c2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 80060c6:	e000      	b.n	80060ca <prvProcessReceivedCommands+0x19e>
 80060c8:	bf00      	nop
 80060ca:	4b08      	ldr	r3, [pc, #32]	; (80060ec <prvProcessReceivedCommands+0x1c0>)
 80060cc:	681b      	ldr	r3, [r3, #0]
 80060ce:	1d39      	adds	r1, r7, #4
 80060d0:	2200      	movs	r2, #0
 80060d2:	4618      	mov	r0, r3
 80060d4:	f7fe f88c 	bl	80041f0 <xQueueReceive>
 80060d8:	4603      	mov	r3, r0
 80060da:	2b00      	cmp	r3, #0
 80060dc:	f47f af2a 	bne.w	8005f34 <prvProcessReceivedCommands+0x8>
 80060e0:	bf00      	nop
 80060e2:	bf00      	nop
 80060e4:	3730      	adds	r7, #48	; 0x30
 80060e6:	46bd      	mov	sp, r7
 80060e8:	bd80      	pop	{r7, pc}
 80060ea:	bf00      	nop
 80060ec:	20000e84 	.word	0x20000e84

080060f0 <prvSwitchTimerLists>:
 80060f0:	b580      	push	{r7, lr}
 80060f2:	b088      	sub	sp, #32
 80060f4:	af02      	add	r7, sp, #8
 80060f6:	e048      	b.n	800618a <prvSwitchTimerLists+0x9a>
 80060f8:	4b2d      	ldr	r3, [pc, #180]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 80060fa:	681b      	ldr	r3, [r3, #0]
 80060fc:	68db      	ldr	r3, [r3, #12]
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	613b      	str	r3, [r7, #16]
 8006102:	4b2b      	ldr	r3, [pc, #172]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	68db      	ldr	r3, [r3, #12]
 8006108:	68db      	ldr	r3, [r3, #12]
 800610a:	60fb      	str	r3, [r7, #12]
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	3304      	adds	r3, #4
 8006110:	4618      	mov	r0, r3
 8006112:	f7fd fca9 	bl	8003a68 <uxListRemove>
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	6a1b      	ldr	r3, [r3, #32]
 800611a:	68f8      	ldr	r0, [r7, #12]
 800611c:	4798      	blx	r3
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 8006124:	f003 0304 	and.w	r3, r3, #4
 8006128:	2b00      	cmp	r3, #0
 800612a:	d02e      	beq.n	800618a <prvSwitchTimerLists+0x9a>
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	699b      	ldr	r3, [r3, #24]
 8006130:	693a      	ldr	r2, [r7, #16]
 8006132:	4413      	add	r3, r2
 8006134:	60bb      	str	r3, [r7, #8]
 8006136:	68ba      	ldr	r2, [r7, #8]
 8006138:	693b      	ldr	r3, [r7, #16]
 800613a:	429a      	cmp	r2, r3
 800613c:	d90e      	bls.n	800615c <prvSwitchTimerLists+0x6c>
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	68ba      	ldr	r2, [r7, #8]
 8006142:	605a      	str	r2, [r3, #4]
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	68fa      	ldr	r2, [r7, #12]
 8006148:	611a      	str	r2, [r3, #16]
 800614a:	4b19      	ldr	r3, [pc, #100]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 800614c:	681a      	ldr	r2, [r3, #0]
 800614e:	68fb      	ldr	r3, [r7, #12]
 8006150:	3304      	adds	r3, #4
 8006152:	4619      	mov	r1, r3
 8006154:	4610      	mov	r0, r2
 8006156:	f7fd fc4e 	bl	80039f6 <vListInsert>
 800615a:	e016      	b.n	800618a <prvSwitchTimerLists+0x9a>
 800615c:	2300      	movs	r3, #0
 800615e:	9300      	str	r3, [sp, #0]
 8006160:	2300      	movs	r3, #0
 8006162:	693a      	ldr	r2, [r7, #16]
 8006164:	2100      	movs	r1, #0
 8006166:	68f8      	ldr	r0, [r7, #12]
 8006168:	f7ff fd60 	bl	8005c2c <xTimerGenericCommand>
 800616c:	6078      	str	r0, [r7, #4]
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	2b00      	cmp	r3, #0
 8006172:	d10a      	bne.n	800618a <prvSwitchTimerLists+0x9a>
 8006174:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006178:	f383 8811 	msr	BASEPRI, r3
 800617c:	f3bf 8f6f 	isb	sy
 8006180:	f3bf 8f4f 	dsb	sy
 8006184:	603b      	str	r3, [r7, #0]
 8006186:	bf00      	nop
 8006188:	e7fe      	b.n	8006188 <prvSwitchTimerLists+0x98>
 800618a:	4b09      	ldr	r3, [pc, #36]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	2b00      	cmp	r3, #0
 8006192:	d1b1      	bne.n	80060f8 <prvSwitchTimerLists+0x8>
 8006194:	4b06      	ldr	r3, [pc, #24]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	617b      	str	r3, [r7, #20]
 800619a:	4b06      	ldr	r3, [pc, #24]	; (80061b4 <prvSwitchTimerLists+0xc4>)
 800619c:	681b      	ldr	r3, [r3, #0]
 800619e:	4a04      	ldr	r2, [pc, #16]	; (80061b0 <prvSwitchTimerLists+0xc0>)
 80061a0:	6013      	str	r3, [r2, #0]
 80061a2:	4a04      	ldr	r2, [pc, #16]	; (80061b4 <prvSwitchTimerLists+0xc4>)
 80061a4:	697b      	ldr	r3, [r7, #20]
 80061a6:	6013      	str	r3, [r2, #0]
 80061a8:	bf00      	nop
 80061aa:	3718      	adds	r7, #24
 80061ac:	46bd      	mov	sp, r7
 80061ae:	bd80      	pop	{r7, pc}
 80061b0:	20000e7c 	.word	0x20000e7c
 80061b4:	20000e80 	.word	0x20000e80

080061b8 <prvCheckForValidListAndQueue>:
 80061b8:	b580      	push	{r7, lr}
 80061ba:	b082      	sub	sp, #8
 80061bc:	af02      	add	r7, sp, #8
 80061be:	f000 f989 	bl	80064d4 <vPortEnterCritical>
 80061c2:	4b15      	ldr	r3, [pc, #84]	; (8006218 <prvCheckForValidListAndQueue+0x60>)
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	2b00      	cmp	r3, #0
 80061c8:	d120      	bne.n	800620c <prvCheckForValidListAndQueue+0x54>
 80061ca:	4814      	ldr	r0, [pc, #80]	; (800621c <prvCheckForValidListAndQueue+0x64>)
 80061cc:	f7fd fbc2 	bl	8003954 <vListInitialise>
 80061d0:	4813      	ldr	r0, [pc, #76]	; (8006220 <prvCheckForValidListAndQueue+0x68>)
 80061d2:	f7fd fbbf 	bl	8003954 <vListInitialise>
 80061d6:	4b13      	ldr	r3, [pc, #76]	; (8006224 <prvCheckForValidListAndQueue+0x6c>)
 80061d8:	4a10      	ldr	r2, [pc, #64]	; (800621c <prvCheckForValidListAndQueue+0x64>)
 80061da:	601a      	str	r2, [r3, #0]
 80061dc:	4b12      	ldr	r3, [pc, #72]	; (8006228 <prvCheckForValidListAndQueue+0x70>)
 80061de:	4a10      	ldr	r2, [pc, #64]	; (8006220 <prvCheckForValidListAndQueue+0x68>)
 80061e0:	601a      	str	r2, [r3, #0]
 80061e2:	2300      	movs	r3, #0
 80061e4:	9300      	str	r3, [sp, #0]
 80061e6:	4b11      	ldr	r3, [pc, #68]	; (800622c <prvCheckForValidListAndQueue+0x74>)
 80061e8:	4a11      	ldr	r2, [pc, #68]	; (8006230 <prvCheckForValidListAndQueue+0x78>)
 80061ea:	2110      	movs	r1, #16
 80061ec:	200a      	movs	r0, #10
 80061ee:	f7fd fccd 	bl	8003b8c <xQueueGenericCreateStatic>
 80061f2:	4603      	mov	r3, r0
 80061f4:	4a08      	ldr	r2, [pc, #32]	; (8006218 <prvCheckForValidListAndQueue+0x60>)
 80061f6:	6013      	str	r3, [r2, #0]
 80061f8:	4b07      	ldr	r3, [pc, #28]	; (8006218 <prvCheckForValidListAndQueue+0x60>)
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	2b00      	cmp	r3, #0
 80061fe:	d005      	beq.n	800620c <prvCheckForValidListAndQueue+0x54>
 8006200:	4b05      	ldr	r3, [pc, #20]	; (8006218 <prvCheckForValidListAndQueue+0x60>)
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	490b      	ldr	r1, [pc, #44]	; (8006234 <prvCheckForValidListAndQueue+0x7c>)
 8006206:	4618      	mov	r0, r3
 8006208:	f7fe fbc2 	bl	8004990 <vQueueAddToRegistry>
 800620c:	f000 f992 	bl	8006534 <vPortExitCritical>
 8006210:	bf00      	nop
 8006212:	46bd      	mov	sp, r7
 8006214:	bd80      	pop	{r7, pc}
 8006216:	bf00      	nop
 8006218:	20000e84 	.word	0x20000e84
 800621c:	20000e54 	.word	0x20000e54
 8006220:	20000e68 	.word	0x20000e68
 8006224:	20000e7c 	.word	0x20000e7c
 8006228:	20000e80 	.word	0x20000e80
 800622c:	20000f30 	.word	0x20000f30
 8006230:	20000e90 	.word	0x20000e90
 8006234:	08007c88 	.word	0x08007c88

08006238 <xTimerPendFunctionCallFromISR>:
 8006238:	b580      	push	{r7, lr}
 800623a:	b08a      	sub	sp, #40	; 0x28
 800623c:	af00      	add	r7, sp, #0
 800623e:	60f8      	str	r0, [r7, #12]
 8006240:	60b9      	str	r1, [r7, #8]
 8006242:	607a      	str	r2, [r7, #4]
 8006244:	603b      	str	r3, [r7, #0]
 8006246:	f06f 0301 	mvn.w	r3, #1
 800624a:	617b      	str	r3, [r7, #20]
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	61bb      	str	r3, [r7, #24]
 8006250:	68bb      	ldr	r3, [r7, #8]
 8006252:	61fb      	str	r3, [r7, #28]
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	623b      	str	r3, [r7, #32]
 8006258:	4b06      	ldr	r3, [pc, #24]	; (8006274 <xTimerPendFunctionCallFromISR+0x3c>)
 800625a:	6818      	ldr	r0, [r3, #0]
 800625c:	f107 0114 	add.w	r1, r7, #20
 8006260:	2300      	movs	r3, #0
 8006262:	683a      	ldr	r2, [r7, #0]
 8006264:	f7fd fe9c 	bl	8003fa0 <xQueueGenericSendFromISR>
 8006268:	6278      	str	r0, [r7, #36]	; 0x24
 800626a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800626c:	4618      	mov	r0, r3
 800626e:	3728      	adds	r7, #40	; 0x28
 8006270:	46bd      	mov	sp, r7
 8006272:	bd80      	pop	{r7, pc}
 8006274:	20000e84 	.word	0x20000e84

08006278 <pxPortInitialiseStack>:
 8006278:	b480      	push	{r7}
 800627a:	b085      	sub	sp, #20
 800627c:	af00      	add	r7, sp, #0
 800627e:	60f8      	str	r0, [r7, #12]
 8006280:	60b9      	str	r1, [r7, #8]
 8006282:	607a      	str	r2, [r7, #4]
 8006284:	68fb      	ldr	r3, [r7, #12]
 8006286:	3b04      	subs	r3, #4
 8006288:	60fb      	str	r3, [r7, #12]
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8006290:	601a      	str	r2, [r3, #0]
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	3b04      	subs	r3, #4
 8006296:	60fb      	str	r3, [r7, #12]
 8006298:	68bb      	ldr	r3, [r7, #8]
 800629a:	f023 0201 	bic.w	r2, r3, #1
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	601a      	str	r2, [r3, #0]
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	3b04      	subs	r3, #4
 80062a6:	60fb      	str	r3, [r7, #12]
 80062a8:	4a0c      	ldr	r2, [pc, #48]	; (80062dc <pxPortInitialiseStack+0x64>)
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	601a      	str	r2, [r3, #0]
 80062ae:	68fb      	ldr	r3, [r7, #12]
 80062b0:	3b14      	subs	r3, #20
 80062b2:	60fb      	str	r3, [r7, #12]
 80062b4:	687a      	ldr	r2, [r7, #4]
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	601a      	str	r2, [r3, #0]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	3b04      	subs	r3, #4
 80062be:	60fb      	str	r3, [r7, #12]
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	f06f 0202 	mvn.w	r2, #2
 80062c6:	601a      	str	r2, [r3, #0]
 80062c8:	68fb      	ldr	r3, [r7, #12]
 80062ca:	3b20      	subs	r3, #32
 80062cc:	60fb      	str	r3, [r7, #12]
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	4618      	mov	r0, r3
 80062d2:	3714      	adds	r7, #20
 80062d4:	46bd      	mov	sp, r7
 80062d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062da:	4770      	bx	lr
 80062dc:	080062e1 	.word	0x080062e1

080062e0 <prvTaskExitError>:
 80062e0:	b480      	push	{r7}
 80062e2:	b085      	sub	sp, #20
 80062e4:	af00      	add	r7, sp, #0
 80062e6:	2300      	movs	r3, #0
 80062e8:	607b      	str	r3, [r7, #4]
 80062ea:	4b12      	ldr	r3, [pc, #72]	; (8006334 <prvTaskExitError+0x54>)
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062f2:	d00a      	beq.n	800630a <prvTaskExitError+0x2a>
 80062f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80062f8:	f383 8811 	msr	BASEPRI, r3
 80062fc:	f3bf 8f6f 	isb	sy
 8006300:	f3bf 8f4f 	dsb	sy
 8006304:	60fb      	str	r3, [r7, #12]
 8006306:	bf00      	nop
 8006308:	e7fe      	b.n	8006308 <prvTaskExitError+0x28>
 800630a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800630e:	f383 8811 	msr	BASEPRI, r3
 8006312:	f3bf 8f6f 	isb	sy
 8006316:	f3bf 8f4f 	dsb	sy
 800631a:	60bb      	str	r3, [r7, #8]
 800631c:	bf00      	nop
 800631e:	bf00      	nop
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	2b00      	cmp	r3, #0
 8006324:	d0fc      	beq.n	8006320 <prvTaskExitError+0x40>
 8006326:	bf00      	nop
 8006328:	bf00      	nop
 800632a:	3714      	adds	r7, #20
 800632c:	46bd      	mov	sp, r7
 800632e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006332:	4770      	bx	lr
 8006334:	2000004c 	.word	0x2000004c
	...

08006340 <SVC_Handler>:
 8006340:	4b07      	ldr	r3, [pc, #28]	; (8006360 <pxCurrentTCBConst2>)
 8006342:	6819      	ldr	r1, [r3, #0]
 8006344:	6808      	ldr	r0, [r1, #0]
 8006346:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800634a:	f380 8809 	msr	PSP, r0
 800634e:	f3bf 8f6f 	isb	sy
 8006352:	f04f 0000 	mov.w	r0, #0
 8006356:	f380 8811 	msr	BASEPRI, r0
 800635a:	4770      	bx	lr
 800635c:	f3af 8000 	nop.w

08006360 <pxCurrentTCBConst2>:
 8006360:	20000954 	.word	0x20000954
 8006364:	bf00      	nop
 8006366:	bf00      	nop

08006368 <prvPortStartFirstTask>:
 8006368:	4808      	ldr	r0, [pc, #32]	; (800638c <prvPortStartFirstTask+0x24>)
 800636a:	6800      	ldr	r0, [r0, #0]
 800636c:	6800      	ldr	r0, [r0, #0]
 800636e:	f380 8808 	msr	MSP, r0
 8006372:	f04f 0000 	mov.w	r0, #0
 8006376:	f380 8814 	msr	CONTROL, r0
 800637a:	b662      	cpsie	i
 800637c:	b661      	cpsie	f
 800637e:	f3bf 8f4f 	dsb	sy
 8006382:	f3bf 8f6f 	isb	sy
 8006386:	df00      	svc	0
 8006388:	bf00      	nop
 800638a:	bf00      	nop
 800638c:	e000ed08 	.word	0xe000ed08

08006390 <xPortStartScheduler>:
 8006390:	b580      	push	{r7, lr}
 8006392:	b086      	sub	sp, #24
 8006394:	af00      	add	r7, sp, #0
 8006396:	4b46      	ldr	r3, [pc, #280]	; (80064b0 <xPortStartScheduler+0x120>)
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	4a46      	ldr	r2, [pc, #280]	; (80064b4 <xPortStartScheduler+0x124>)
 800639c:	4293      	cmp	r3, r2
 800639e:	d10a      	bne.n	80063b6 <xPortStartScheduler+0x26>
 80063a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80063a4:	f383 8811 	msr	BASEPRI, r3
 80063a8:	f3bf 8f6f 	isb	sy
 80063ac:	f3bf 8f4f 	dsb	sy
 80063b0:	613b      	str	r3, [r7, #16]
 80063b2:	bf00      	nop
 80063b4:	e7fe      	b.n	80063b4 <xPortStartScheduler+0x24>
 80063b6:	4b3e      	ldr	r3, [pc, #248]	; (80064b0 <xPortStartScheduler+0x120>)
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	4a3f      	ldr	r2, [pc, #252]	; (80064b8 <xPortStartScheduler+0x128>)
 80063bc:	4293      	cmp	r3, r2
 80063be:	d10a      	bne.n	80063d6 <xPortStartScheduler+0x46>
 80063c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80063c4:	f383 8811 	msr	BASEPRI, r3
 80063c8:	f3bf 8f6f 	isb	sy
 80063cc:	f3bf 8f4f 	dsb	sy
 80063d0:	60fb      	str	r3, [r7, #12]
 80063d2:	bf00      	nop
 80063d4:	e7fe      	b.n	80063d4 <xPortStartScheduler+0x44>
 80063d6:	4b39      	ldr	r3, [pc, #228]	; (80064bc <xPortStartScheduler+0x12c>)
 80063d8:	617b      	str	r3, [r7, #20]
 80063da:	697b      	ldr	r3, [r7, #20]
 80063dc:	781b      	ldrb	r3, [r3, #0]
 80063de:	b2db      	uxtb	r3, r3
 80063e0:	607b      	str	r3, [r7, #4]
 80063e2:	697b      	ldr	r3, [r7, #20]
 80063e4:	22ff      	movs	r2, #255	; 0xff
 80063e6:	701a      	strb	r2, [r3, #0]
 80063e8:	697b      	ldr	r3, [r7, #20]
 80063ea:	781b      	ldrb	r3, [r3, #0]
 80063ec:	b2db      	uxtb	r3, r3
 80063ee:	70fb      	strb	r3, [r7, #3]
 80063f0:	78fb      	ldrb	r3, [r7, #3]
 80063f2:	b2db      	uxtb	r3, r3
 80063f4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80063f8:	b2da      	uxtb	r2, r3
 80063fa:	4b31      	ldr	r3, [pc, #196]	; (80064c0 <xPortStartScheduler+0x130>)
 80063fc:	701a      	strb	r2, [r3, #0]
 80063fe:	4b31      	ldr	r3, [pc, #196]	; (80064c4 <xPortStartScheduler+0x134>)
 8006400:	2207      	movs	r2, #7
 8006402:	601a      	str	r2, [r3, #0]
 8006404:	e009      	b.n	800641a <xPortStartScheduler+0x8a>
 8006406:	4b2f      	ldr	r3, [pc, #188]	; (80064c4 <xPortStartScheduler+0x134>)
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	3b01      	subs	r3, #1
 800640c:	4a2d      	ldr	r2, [pc, #180]	; (80064c4 <xPortStartScheduler+0x134>)
 800640e:	6013      	str	r3, [r2, #0]
 8006410:	78fb      	ldrb	r3, [r7, #3]
 8006412:	b2db      	uxtb	r3, r3
 8006414:	005b      	lsls	r3, r3, #1
 8006416:	b2db      	uxtb	r3, r3
 8006418:	70fb      	strb	r3, [r7, #3]
 800641a:	78fb      	ldrb	r3, [r7, #3]
 800641c:	b2db      	uxtb	r3, r3
 800641e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006422:	2b80      	cmp	r3, #128	; 0x80
 8006424:	d0ef      	beq.n	8006406 <xPortStartScheduler+0x76>
 8006426:	4b27      	ldr	r3, [pc, #156]	; (80064c4 <xPortStartScheduler+0x134>)
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	f1c3 0307 	rsb	r3, r3, #7
 800642e:	2b04      	cmp	r3, #4
 8006430:	d00a      	beq.n	8006448 <xPortStartScheduler+0xb8>
 8006432:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006436:	f383 8811 	msr	BASEPRI, r3
 800643a:	f3bf 8f6f 	isb	sy
 800643e:	f3bf 8f4f 	dsb	sy
 8006442:	60bb      	str	r3, [r7, #8]
 8006444:	bf00      	nop
 8006446:	e7fe      	b.n	8006446 <xPortStartScheduler+0xb6>
 8006448:	4b1e      	ldr	r3, [pc, #120]	; (80064c4 <xPortStartScheduler+0x134>)
 800644a:	681b      	ldr	r3, [r3, #0]
 800644c:	021b      	lsls	r3, r3, #8
 800644e:	4a1d      	ldr	r2, [pc, #116]	; (80064c4 <xPortStartScheduler+0x134>)
 8006450:	6013      	str	r3, [r2, #0]
 8006452:	4b1c      	ldr	r3, [pc, #112]	; (80064c4 <xPortStartScheduler+0x134>)
 8006454:	681b      	ldr	r3, [r3, #0]
 8006456:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800645a:	4a1a      	ldr	r2, [pc, #104]	; (80064c4 <xPortStartScheduler+0x134>)
 800645c:	6013      	str	r3, [r2, #0]
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	b2da      	uxtb	r2, r3
 8006462:	697b      	ldr	r3, [r7, #20]
 8006464:	701a      	strb	r2, [r3, #0]
 8006466:	4b18      	ldr	r3, [pc, #96]	; (80064c8 <xPortStartScheduler+0x138>)
 8006468:	681b      	ldr	r3, [r3, #0]
 800646a:	4a17      	ldr	r2, [pc, #92]	; (80064c8 <xPortStartScheduler+0x138>)
 800646c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8006470:	6013      	str	r3, [r2, #0]
 8006472:	4b15      	ldr	r3, [pc, #84]	; (80064c8 <xPortStartScheduler+0x138>)
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	4a14      	ldr	r2, [pc, #80]	; (80064c8 <xPortStartScheduler+0x138>)
 8006478:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800647c:	6013      	str	r3, [r2, #0]
 800647e:	f000 f8dd 	bl	800663c <vPortSetupTimerInterrupt>
 8006482:	4b12      	ldr	r3, [pc, #72]	; (80064cc <xPortStartScheduler+0x13c>)
 8006484:	2200      	movs	r2, #0
 8006486:	601a      	str	r2, [r3, #0]
 8006488:	f000 f8fc 	bl	8006684 <vPortEnableVFP>
 800648c:	4b10      	ldr	r3, [pc, #64]	; (80064d0 <xPortStartScheduler+0x140>)
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	4a0f      	ldr	r2, [pc, #60]	; (80064d0 <xPortStartScheduler+0x140>)
 8006492:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8006496:	6013      	str	r3, [r2, #0]
 8006498:	f7ff ff66 	bl	8006368 <prvPortStartFirstTask>
 800649c:	f7fe fe74 	bl	8005188 <vTaskSwitchContext>
 80064a0:	f7ff ff1e 	bl	80062e0 <prvTaskExitError>
 80064a4:	2300      	movs	r3, #0
 80064a6:	4618      	mov	r0, r3
 80064a8:	3718      	adds	r7, #24
 80064aa:	46bd      	mov	sp, r7
 80064ac:	bd80      	pop	{r7, pc}
 80064ae:	bf00      	nop
 80064b0:	e000ed00 	.word	0xe000ed00
 80064b4:	410fc271 	.word	0x410fc271
 80064b8:	410fc270 	.word	0x410fc270
 80064bc:	e000e400 	.word	0xe000e400
 80064c0:	20000f80 	.word	0x20000f80
 80064c4:	20000f84 	.word	0x20000f84
 80064c8:	e000ed20 	.word	0xe000ed20
 80064cc:	2000004c 	.word	0x2000004c
 80064d0:	e000ef34 	.word	0xe000ef34

080064d4 <vPortEnterCritical>:
 80064d4:	b480      	push	{r7}
 80064d6:	b083      	sub	sp, #12
 80064d8:	af00      	add	r7, sp, #0
 80064da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80064de:	f383 8811 	msr	BASEPRI, r3
 80064e2:	f3bf 8f6f 	isb	sy
 80064e6:	f3bf 8f4f 	dsb	sy
 80064ea:	607b      	str	r3, [r7, #4]
 80064ec:	bf00      	nop
 80064ee:	4b0f      	ldr	r3, [pc, #60]	; (800652c <vPortEnterCritical+0x58>)
 80064f0:	681b      	ldr	r3, [r3, #0]
 80064f2:	3301      	adds	r3, #1
 80064f4:	4a0d      	ldr	r2, [pc, #52]	; (800652c <vPortEnterCritical+0x58>)
 80064f6:	6013      	str	r3, [r2, #0]
 80064f8:	4b0c      	ldr	r3, [pc, #48]	; (800652c <vPortEnterCritical+0x58>)
 80064fa:	681b      	ldr	r3, [r3, #0]
 80064fc:	2b01      	cmp	r3, #1
 80064fe:	d10f      	bne.n	8006520 <vPortEnterCritical+0x4c>
 8006500:	4b0b      	ldr	r3, [pc, #44]	; (8006530 <vPortEnterCritical+0x5c>)
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	b2db      	uxtb	r3, r3
 8006506:	2b00      	cmp	r3, #0
 8006508:	d00a      	beq.n	8006520 <vPortEnterCritical+0x4c>
 800650a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800650e:	f383 8811 	msr	BASEPRI, r3
 8006512:	f3bf 8f6f 	isb	sy
 8006516:	f3bf 8f4f 	dsb	sy
 800651a:	603b      	str	r3, [r7, #0]
 800651c:	bf00      	nop
 800651e:	e7fe      	b.n	800651e <vPortEnterCritical+0x4a>
 8006520:	bf00      	nop
 8006522:	370c      	adds	r7, #12
 8006524:	46bd      	mov	sp, r7
 8006526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800652a:	4770      	bx	lr
 800652c:	2000004c 	.word	0x2000004c
 8006530:	e000ed04 	.word	0xe000ed04

08006534 <vPortExitCritical>:
 8006534:	b480      	push	{r7}
 8006536:	b083      	sub	sp, #12
 8006538:	af00      	add	r7, sp, #0
 800653a:	4b12      	ldr	r3, [pc, #72]	; (8006584 <vPortExitCritical+0x50>)
 800653c:	681b      	ldr	r3, [r3, #0]
 800653e:	2b00      	cmp	r3, #0
 8006540:	d10a      	bne.n	8006558 <vPortExitCritical+0x24>
 8006542:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006546:	f383 8811 	msr	BASEPRI, r3
 800654a:	f3bf 8f6f 	isb	sy
 800654e:	f3bf 8f4f 	dsb	sy
 8006552:	607b      	str	r3, [r7, #4]
 8006554:	bf00      	nop
 8006556:	e7fe      	b.n	8006556 <vPortExitCritical+0x22>
 8006558:	4b0a      	ldr	r3, [pc, #40]	; (8006584 <vPortExitCritical+0x50>)
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	3b01      	subs	r3, #1
 800655e:	4a09      	ldr	r2, [pc, #36]	; (8006584 <vPortExitCritical+0x50>)
 8006560:	6013      	str	r3, [r2, #0]
 8006562:	4b08      	ldr	r3, [pc, #32]	; (8006584 <vPortExitCritical+0x50>)
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	2b00      	cmp	r3, #0
 8006568:	d105      	bne.n	8006576 <vPortExitCritical+0x42>
 800656a:	2300      	movs	r3, #0
 800656c:	603b      	str	r3, [r7, #0]
 800656e:	683b      	ldr	r3, [r7, #0]
 8006570:	f383 8811 	msr	BASEPRI, r3
 8006574:	bf00      	nop
 8006576:	bf00      	nop
 8006578:	370c      	adds	r7, #12
 800657a:	46bd      	mov	sp, r7
 800657c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006580:	4770      	bx	lr
 8006582:	bf00      	nop
 8006584:	2000004c 	.word	0x2000004c
	...

08006590 <PendSV_Handler>:
 8006590:	f3ef 8009 	mrs	r0, PSP
 8006594:	f3bf 8f6f 	isb	sy
 8006598:	4b15      	ldr	r3, [pc, #84]	; (80065f0 <pxCurrentTCBConst>)
 800659a:	681a      	ldr	r2, [r3, #0]
 800659c:	f01e 0f10 	tst.w	lr, #16
 80065a0:	bf08      	it	eq
 80065a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80065a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065aa:	6010      	str	r0, [r2, #0]
 80065ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80065b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80065b4:	f380 8811 	msr	BASEPRI, r0
 80065b8:	f3bf 8f4f 	dsb	sy
 80065bc:	f3bf 8f6f 	isb	sy
 80065c0:	f7fe fde2 	bl	8005188 <vTaskSwitchContext>
 80065c4:	f04f 0000 	mov.w	r0, #0
 80065c8:	f380 8811 	msr	BASEPRI, r0
 80065cc:	bc09      	pop	{r0, r3}
 80065ce:	6819      	ldr	r1, [r3, #0]
 80065d0:	6808      	ldr	r0, [r1, #0]
 80065d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065d6:	f01e 0f10 	tst.w	lr, #16
 80065da:	bf08      	it	eq
 80065dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80065e0:	f380 8809 	msr	PSP, r0
 80065e4:	f3bf 8f6f 	isb	sy
 80065e8:	4770      	bx	lr
 80065ea:	bf00      	nop
 80065ec:	f3af 8000 	nop.w

080065f0 <pxCurrentTCBConst>:
 80065f0:	20000954 	.word	0x20000954
 80065f4:	bf00      	nop
 80065f6:	bf00      	nop

080065f8 <xPortSysTickHandler>:
 80065f8:	b580      	push	{r7, lr}
 80065fa:	b082      	sub	sp, #8
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006602:	f383 8811 	msr	BASEPRI, r3
 8006606:	f3bf 8f6f 	isb	sy
 800660a:	f3bf 8f4f 	dsb	sy
 800660e:	607b      	str	r3, [r7, #4]
 8006610:	bf00      	nop
 8006612:	f7fe fcff 	bl	8005014 <xTaskIncrementTick>
 8006616:	4603      	mov	r3, r0
 8006618:	2b00      	cmp	r3, #0
 800661a:	d003      	beq.n	8006624 <xPortSysTickHandler+0x2c>
 800661c:	4b06      	ldr	r3, [pc, #24]	; (8006638 <xPortSysTickHandler+0x40>)
 800661e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006622:	601a      	str	r2, [r3, #0]
 8006624:	2300      	movs	r3, #0
 8006626:	603b      	str	r3, [r7, #0]
 8006628:	683b      	ldr	r3, [r7, #0]
 800662a:	f383 8811 	msr	BASEPRI, r3
 800662e:	bf00      	nop
 8006630:	bf00      	nop
 8006632:	3708      	adds	r7, #8
 8006634:	46bd      	mov	sp, r7
 8006636:	bd80      	pop	{r7, pc}
 8006638:	e000ed04 	.word	0xe000ed04

0800663c <vPortSetupTimerInterrupt>:
 800663c:	b480      	push	{r7}
 800663e:	af00      	add	r7, sp, #0
 8006640:	4b0b      	ldr	r3, [pc, #44]	; (8006670 <vPortSetupTimerInterrupt+0x34>)
 8006642:	2200      	movs	r2, #0
 8006644:	601a      	str	r2, [r3, #0]
 8006646:	4b0b      	ldr	r3, [pc, #44]	; (8006674 <vPortSetupTimerInterrupt+0x38>)
 8006648:	2200      	movs	r2, #0
 800664a:	601a      	str	r2, [r3, #0]
 800664c:	4b0a      	ldr	r3, [pc, #40]	; (8006678 <vPortSetupTimerInterrupt+0x3c>)
 800664e:	681b      	ldr	r3, [r3, #0]
 8006650:	4a0a      	ldr	r2, [pc, #40]	; (800667c <vPortSetupTimerInterrupt+0x40>)
 8006652:	fba2 2303 	umull	r2, r3, r2, r3
 8006656:	099b      	lsrs	r3, r3, #6
 8006658:	4a09      	ldr	r2, [pc, #36]	; (8006680 <vPortSetupTimerInterrupt+0x44>)
 800665a:	3b01      	subs	r3, #1
 800665c:	6013      	str	r3, [r2, #0]
 800665e:	4b04      	ldr	r3, [pc, #16]	; (8006670 <vPortSetupTimerInterrupt+0x34>)
 8006660:	2207      	movs	r2, #7
 8006662:	601a      	str	r2, [r3, #0]
 8006664:	bf00      	nop
 8006666:	46bd      	mov	sp, r7
 8006668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800666c:	4770      	bx	lr
 800666e:	bf00      	nop
 8006670:	e000e010 	.word	0xe000e010
 8006674:	e000e018 	.word	0xe000e018
 8006678:	20000040 	.word	0x20000040
 800667c:	10624dd3 	.word	0x10624dd3
 8006680:	e000e014 	.word	0xe000e014

08006684 <vPortEnableVFP>:
 8006684:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006694 <vPortEnableVFP+0x10>
 8006688:	6801      	ldr	r1, [r0, #0]
 800668a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800668e:	6001      	str	r1, [r0, #0]
 8006690:	4770      	bx	lr
 8006692:	bf00      	nop
 8006694:	e000ed88 	.word	0xe000ed88

08006698 <vPortValidateInterruptPriority>:
 8006698:	b480      	push	{r7}
 800669a:	b085      	sub	sp, #20
 800669c:	af00      	add	r7, sp, #0
 800669e:	f3ef 8305 	mrs	r3, IPSR
 80066a2:	60fb      	str	r3, [r7, #12]
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	2b0f      	cmp	r3, #15
 80066a8:	d914      	bls.n	80066d4 <vPortValidateInterruptPriority+0x3c>
 80066aa:	4a17      	ldr	r2, [pc, #92]	; (8006708 <vPortValidateInterruptPriority+0x70>)
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	4413      	add	r3, r2
 80066b0:	781b      	ldrb	r3, [r3, #0]
 80066b2:	72fb      	strb	r3, [r7, #11]
 80066b4:	4b15      	ldr	r3, [pc, #84]	; (800670c <vPortValidateInterruptPriority+0x74>)
 80066b6:	781b      	ldrb	r3, [r3, #0]
 80066b8:	7afa      	ldrb	r2, [r7, #11]
 80066ba:	429a      	cmp	r2, r3
 80066bc:	d20a      	bcs.n	80066d4 <vPortValidateInterruptPriority+0x3c>
 80066be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80066c2:	f383 8811 	msr	BASEPRI, r3
 80066c6:	f3bf 8f6f 	isb	sy
 80066ca:	f3bf 8f4f 	dsb	sy
 80066ce:	607b      	str	r3, [r7, #4]
 80066d0:	bf00      	nop
 80066d2:	e7fe      	b.n	80066d2 <vPortValidateInterruptPriority+0x3a>
 80066d4:	4b0e      	ldr	r3, [pc, #56]	; (8006710 <vPortValidateInterruptPriority+0x78>)
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80066dc:	4b0d      	ldr	r3, [pc, #52]	; (8006714 <vPortValidateInterruptPriority+0x7c>)
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	429a      	cmp	r2, r3
 80066e2:	d90a      	bls.n	80066fa <vPortValidateInterruptPriority+0x62>
 80066e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80066e8:	f383 8811 	msr	BASEPRI, r3
 80066ec:	f3bf 8f6f 	isb	sy
 80066f0:	f3bf 8f4f 	dsb	sy
 80066f4:	603b      	str	r3, [r7, #0]
 80066f6:	bf00      	nop
 80066f8:	e7fe      	b.n	80066f8 <vPortValidateInterruptPriority+0x60>
 80066fa:	bf00      	nop
 80066fc:	3714      	adds	r7, #20
 80066fe:	46bd      	mov	sp, r7
 8006700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006704:	4770      	bx	lr
 8006706:	bf00      	nop
 8006708:	e000e3f0 	.word	0xe000e3f0
 800670c:	20000f80 	.word	0x20000f80
 8006710:	e000ed0c 	.word	0xe000ed0c
 8006714:	20000f84 	.word	0x20000f84

08006718 <pvPortMalloc>:
 8006718:	b580      	push	{r7, lr}
 800671a:	b08a      	sub	sp, #40	; 0x28
 800671c:	af00      	add	r7, sp, #0
 800671e:	6078      	str	r0, [r7, #4]
 8006720:	2300      	movs	r3, #0
 8006722:	61fb      	str	r3, [r7, #28]
 8006724:	f7fe fbba 	bl	8004e9c <vTaskSuspendAll>
 8006728:	4b5b      	ldr	r3, [pc, #364]	; (8006898 <pvPortMalloc+0x180>)
 800672a:	681b      	ldr	r3, [r3, #0]
 800672c:	2b00      	cmp	r3, #0
 800672e:	d101      	bne.n	8006734 <pvPortMalloc+0x1c>
 8006730:	f000 f920 	bl	8006974 <prvHeapInit>
 8006734:	4b59      	ldr	r3, [pc, #356]	; (800689c <pvPortMalloc+0x184>)
 8006736:	681a      	ldr	r2, [r3, #0]
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	4013      	ands	r3, r2
 800673c:	2b00      	cmp	r3, #0
 800673e:	f040 8093 	bne.w	8006868 <pvPortMalloc+0x150>
 8006742:	687b      	ldr	r3, [r7, #4]
 8006744:	2b00      	cmp	r3, #0
 8006746:	d01d      	beq.n	8006784 <pvPortMalloc+0x6c>
 8006748:	2208      	movs	r2, #8
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	4413      	add	r3, r2
 800674e:	607b      	str	r3, [r7, #4]
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	f003 0307 	and.w	r3, r3, #7
 8006756:	2b00      	cmp	r3, #0
 8006758:	d014      	beq.n	8006784 <pvPortMalloc+0x6c>
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	f023 0307 	bic.w	r3, r3, #7
 8006760:	3308      	adds	r3, #8
 8006762:	607b      	str	r3, [r7, #4]
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	f003 0307 	and.w	r3, r3, #7
 800676a:	2b00      	cmp	r3, #0
 800676c:	d00a      	beq.n	8006784 <pvPortMalloc+0x6c>
 800676e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006772:	f383 8811 	msr	BASEPRI, r3
 8006776:	f3bf 8f6f 	isb	sy
 800677a:	f3bf 8f4f 	dsb	sy
 800677e:	617b      	str	r3, [r7, #20]
 8006780:	bf00      	nop
 8006782:	e7fe      	b.n	8006782 <pvPortMalloc+0x6a>
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	2b00      	cmp	r3, #0
 8006788:	d06e      	beq.n	8006868 <pvPortMalloc+0x150>
 800678a:	4b45      	ldr	r3, [pc, #276]	; (80068a0 <pvPortMalloc+0x188>)
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	687a      	ldr	r2, [r7, #4]
 8006790:	429a      	cmp	r2, r3
 8006792:	d869      	bhi.n	8006868 <pvPortMalloc+0x150>
 8006794:	4b43      	ldr	r3, [pc, #268]	; (80068a4 <pvPortMalloc+0x18c>)
 8006796:	623b      	str	r3, [r7, #32]
 8006798:	4b42      	ldr	r3, [pc, #264]	; (80068a4 <pvPortMalloc+0x18c>)
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	627b      	str	r3, [r7, #36]	; 0x24
 800679e:	e004      	b.n	80067aa <pvPortMalloc+0x92>
 80067a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067a2:	623b      	str	r3, [r7, #32]
 80067a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	627b      	str	r3, [r7, #36]	; 0x24
 80067aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067ac:	685b      	ldr	r3, [r3, #4]
 80067ae:	687a      	ldr	r2, [r7, #4]
 80067b0:	429a      	cmp	r2, r3
 80067b2:	d903      	bls.n	80067bc <pvPortMalloc+0xa4>
 80067b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067b6:	681b      	ldr	r3, [r3, #0]
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d1f1      	bne.n	80067a0 <pvPortMalloc+0x88>
 80067bc:	4b36      	ldr	r3, [pc, #216]	; (8006898 <pvPortMalloc+0x180>)
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80067c2:	429a      	cmp	r2, r3
 80067c4:	d050      	beq.n	8006868 <pvPortMalloc+0x150>
 80067c6:	6a3b      	ldr	r3, [r7, #32]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	2208      	movs	r2, #8
 80067cc:	4413      	add	r3, r2
 80067ce:	61fb      	str	r3, [r7, #28]
 80067d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067d2:	681a      	ldr	r2, [r3, #0]
 80067d4:	6a3b      	ldr	r3, [r7, #32]
 80067d6:	601a      	str	r2, [r3, #0]
 80067d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80067da:	685a      	ldr	r2, [r3, #4]
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	1ad2      	subs	r2, r2, r3
 80067e0:	2308      	movs	r3, #8
 80067e2:	005b      	lsls	r3, r3, #1
 80067e4:	429a      	cmp	r2, r3
 80067e6:	d91f      	bls.n	8006828 <pvPortMalloc+0x110>
 80067e8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	4413      	add	r3, r2
 80067ee:	61bb      	str	r3, [r7, #24]
 80067f0:	69bb      	ldr	r3, [r7, #24]
 80067f2:	f003 0307 	and.w	r3, r3, #7
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d00a      	beq.n	8006810 <pvPortMalloc+0xf8>
 80067fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80067fe:	f383 8811 	msr	BASEPRI, r3
 8006802:	f3bf 8f6f 	isb	sy
 8006806:	f3bf 8f4f 	dsb	sy
 800680a:	613b      	str	r3, [r7, #16]
 800680c:	bf00      	nop
 800680e:	e7fe      	b.n	800680e <pvPortMalloc+0xf6>
 8006810:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006812:	685a      	ldr	r2, [r3, #4]
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	1ad2      	subs	r2, r2, r3
 8006818:	69bb      	ldr	r3, [r7, #24]
 800681a:	605a      	str	r2, [r3, #4]
 800681c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800681e:	687a      	ldr	r2, [r7, #4]
 8006820:	605a      	str	r2, [r3, #4]
 8006822:	69b8      	ldr	r0, [r7, #24]
 8006824:	f000 f908 	bl	8006a38 <prvInsertBlockIntoFreeList>
 8006828:	4b1d      	ldr	r3, [pc, #116]	; (80068a0 <pvPortMalloc+0x188>)
 800682a:	681a      	ldr	r2, [r3, #0]
 800682c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800682e:	685b      	ldr	r3, [r3, #4]
 8006830:	1ad3      	subs	r3, r2, r3
 8006832:	4a1b      	ldr	r2, [pc, #108]	; (80068a0 <pvPortMalloc+0x188>)
 8006834:	6013      	str	r3, [r2, #0]
 8006836:	4b1a      	ldr	r3, [pc, #104]	; (80068a0 <pvPortMalloc+0x188>)
 8006838:	681a      	ldr	r2, [r3, #0]
 800683a:	4b1b      	ldr	r3, [pc, #108]	; (80068a8 <pvPortMalloc+0x190>)
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	429a      	cmp	r2, r3
 8006840:	d203      	bcs.n	800684a <pvPortMalloc+0x132>
 8006842:	4b17      	ldr	r3, [pc, #92]	; (80068a0 <pvPortMalloc+0x188>)
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	4a18      	ldr	r2, [pc, #96]	; (80068a8 <pvPortMalloc+0x190>)
 8006848:	6013      	str	r3, [r2, #0]
 800684a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800684c:	685a      	ldr	r2, [r3, #4]
 800684e:	4b13      	ldr	r3, [pc, #76]	; (800689c <pvPortMalloc+0x184>)
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	431a      	orrs	r2, r3
 8006854:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006856:	605a      	str	r2, [r3, #4]
 8006858:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800685a:	2200      	movs	r2, #0
 800685c:	601a      	str	r2, [r3, #0]
 800685e:	4b13      	ldr	r3, [pc, #76]	; (80068ac <pvPortMalloc+0x194>)
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	3301      	adds	r3, #1
 8006864:	4a11      	ldr	r2, [pc, #68]	; (80068ac <pvPortMalloc+0x194>)
 8006866:	6013      	str	r3, [r2, #0]
 8006868:	f7fe fb26 	bl	8004eb8 <xTaskResumeAll>
 800686c:	69fb      	ldr	r3, [r7, #28]
 800686e:	f003 0307 	and.w	r3, r3, #7
 8006872:	2b00      	cmp	r3, #0
 8006874:	d00a      	beq.n	800688c <pvPortMalloc+0x174>
 8006876:	f04f 0350 	mov.w	r3, #80	; 0x50
 800687a:	f383 8811 	msr	BASEPRI, r3
 800687e:	f3bf 8f6f 	isb	sy
 8006882:	f3bf 8f4f 	dsb	sy
 8006886:	60fb      	str	r3, [r7, #12]
 8006888:	bf00      	nop
 800688a:	e7fe      	b.n	800688a <pvPortMalloc+0x172>
 800688c:	69fb      	ldr	r3, [r7, #28]
 800688e:	4618      	mov	r0, r3
 8006890:	3728      	adds	r7, #40	; 0x28
 8006892:	46bd      	mov	sp, r7
 8006894:	bd80      	pop	{r7, pc}
 8006896:	bf00      	nop
 8006898:	20004b90 	.word	0x20004b90
 800689c:	20004ba4 	.word	0x20004ba4
 80068a0:	20004b94 	.word	0x20004b94
 80068a4:	20004b88 	.word	0x20004b88
 80068a8:	20004b98 	.word	0x20004b98
 80068ac:	20004b9c 	.word	0x20004b9c

080068b0 <vPortFree>:
 80068b0:	b580      	push	{r7, lr}
 80068b2:	b086      	sub	sp, #24
 80068b4:	af00      	add	r7, sp, #0
 80068b6:	6078      	str	r0, [r7, #4]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	617b      	str	r3, [r7, #20]
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d04d      	beq.n	800695e <vPortFree+0xae>
 80068c2:	2308      	movs	r3, #8
 80068c4:	425b      	negs	r3, r3
 80068c6:	697a      	ldr	r2, [r7, #20]
 80068c8:	4413      	add	r3, r2
 80068ca:	617b      	str	r3, [r7, #20]
 80068cc:	697b      	ldr	r3, [r7, #20]
 80068ce:	613b      	str	r3, [r7, #16]
 80068d0:	693b      	ldr	r3, [r7, #16]
 80068d2:	685a      	ldr	r2, [r3, #4]
 80068d4:	4b24      	ldr	r3, [pc, #144]	; (8006968 <vPortFree+0xb8>)
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	4013      	ands	r3, r2
 80068da:	2b00      	cmp	r3, #0
 80068dc:	d10a      	bne.n	80068f4 <vPortFree+0x44>
 80068de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80068e2:	f383 8811 	msr	BASEPRI, r3
 80068e6:	f3bf 8f6f 	isb	sy
 80068ea:	f3bf 8f4f 	dsb	sy
 80068ee:	60fb      	str	r3, [r7, #12]
 80068f0:	bf00      	nop
 80068f2:	e7fe      	b.n	80068f2 <vPortFree+0x42>
 80068f4:	693b      	ldr	r3, [r7, #16]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d00a      	beq.n	8006912 <vPortFree+0x62>
 80068fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006900:	f383 8811 	msr	BASEPRI, r3
 8006904:	f3bf 8f6f 	isb	sy
 8006908:	f3bf 8f4f 	dsb	sy
 800690c:	60bb      	str	r3, [r7, #8]
 800690e:	bf00      	nop
 8006910:	e7fe      	b.n	8006910 <vPortFree+0x60>
 8006912:	693b      	ldr	r3, [r7, #16]
 8006914:	685a      	ldr	r2, [r3, #4]
 8006916:	4b14      	ldr	r3, [pc, #80]	; (8006968 <vPortFree+0xb8>)
 8006918:	681b      	ldr	r3, [r3, #0]
 800691a:	4013      	ands	r3, r2
 800691c:	2b00      	cmp	r3, #0
 800691e:	d01e      	beq.n	800695e <vPortFree+0xae>
 8006920:	693b      	ldr	r3, [r7, #16]
 8006922:	681b      	ldr	r3, [r3, #0]
 8006924:	2b00      	cmp	r3, #0
 8006926:	d11a      	bne.n	800695e <vPortFree+0xae>
 8006928:	693b      	ldr	r3, [r7, #16]
 800692a:	685a      	ldr	r2, [r3, #4]
 800692c:	4b0e      	ldr	r3, [pc, #56]	; (8006968 <vPortFree+0xb8>)
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	43db      	mvns	r3, r3
 8006932:	401a      	ands	r2, r3
 8006934:	693b      	ldr	r3, [r7, #16]
 8006936:	605a      	str	r2, [r3, #4]
 8006938:	f7fe fab0 	bl	8004e9c <vTaskSuspendAll>
 800693c:	693b      	ldr	r3, [r7, #16]
 800693e:	685a      	ldr	r2, [r3, #4]
 8006940:	4b0a      	ldr	r3, [pc, #40]	; (800696c <vPortFree+0xbc>)
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	4413      	add	r3, r2
 8006946:	4a09      	ldr	r2, [pc, #36]	; (800696c <vPortFree+0xbc>)
 8006948:	6013      	str	r3, [r2, #0]
 800694a:	6938      	ldr	r0, [r7, #16]
 800694c:	f000 f874 	bl	8006a38 <prvInsertBlockIntoFreeList>
 8006950:	4b07      	ldr	r3, [pc, #28]	; (8006970 <vPortFree+0xc0>)
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	3301      	adds	r3, #1
 8006956:	4a06      	ldr	r2, [pc, #24]	; (8006970 <vPortFree+0xc0>)
 8006958:	6013      	str	r3, [r2, #0]
 800695a:	f7fe faad 	bl	8004eb8 <xTaskResumeAll>
 800695e:	bf00      	nop
 8006960:	3718      	adds	r7, #24
 8006962:	46bd      	mov	sp, r7
 8006964:	bd80      	pop	{r7, pc}
 8006966:	bf00      	nop
 8006968:	20004ba4 	.word	0x20004ba4
 800696c:	20004b94 	.word	0x20004b94
 8006970:	20004ba0 	.word	0x20004ba0

08006974 <prvHeapInit>:
 8006974:	b480      	push	{r7}
 8006976:	b085      	sub	sp, #20
 8006978:	af00      	add	r7, sp, #0
 800697a:	f44f 5370 	mov.w	r3, #15360	; 0x3c00
 800697e:	60bb      	str	r3, [r7, #8]
 8006980:	4b27      	ldr	r3, [pc, #156]	; (8006a20 <prvHeapInit+0xac>)
 8006982:	60fb      	str	r3, [r7, #12]
 8006984:	68fb      	ldr	r3, [r7, #12]
 8006986:	f003 0307 	and.w	r3, r3, #7
 800698a:	2b00      	cmp	r3, #0
 800698c:	d00c      	beq.n	80069a8 <prvHeapInit+0x34>
 800698e:	68fb      	ldr	r3, [r7, #12]
 8006990:	3307      	adds	r3, #7
 8006992:	60fb      	str	r3, [r7, #12]
 8006994:	68fb      	ldr	r3, [r7, #12]
 8006996:	f023 0307 	bic.w	r3, r3, #7
 800699a:	60fb      	str	r3, [r7, #12]
 800699c:	68ba      	ldr	r2, [r7, #8]
 800699e:	68fb      	ldr	r3, [r7, #12]
 80069a0:	1ad3      	subs	r3, r2, r3
 80069a2:	4a1f      	ldr	r2, [pc, #124]	; (8006a20 <prvHeapInit+0xac>)
 80069a4:	4413      	add	r3, r2
 80069a6:	60bb      	str	r3, [r7, #8]
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	607b      	str	r3, [r7, #4]
 80069ac:	4a1d      	ldr	r2, [pc, #116]	; (8006a24 <prvHeapInit+0xb0>)
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	6013      	str	r3, [r2, #0]
 80069b2:	4b1c      	ldr	r3, [pc, #112]	; (8006a24 <prvHeapInit+0xb0>)
 80069b4:	2200      	movs	r2, #0
 80069b6:	605a      	str	r2, [r3, #4]
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	68ba      	ldr	r2, [r7, #8]
 80069bc:	4413      	add	r3, r2
 80069be:	60fb      	str	r3, [r7, #12]
 80069c0:	2208      	movs	r2, #8
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	1a9b      	subs	r3, r3, r2
 80069c6:	60fb      	str	r3, [r7, #12]
 80069c8:	68fb      	ldr	r3, [r7, #12]
 80069ca:	f023 0307 	bic.w	r3, r3, #7
 80069ce:	60fb      	str	r3, [r7, #12]
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	4a15      	ldr	r2, [pc, #84]	; (8006a28 <prvHeapInit+0xb4>)
 80069d4:	6013      	str	r3, [r2, #0]
 80069d6:	4b14      	ldr	r3, [pc, #80]	; (8006a28 <prvHeapInit+0xb4>)
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	2200      	movs	r2, #0
 80069dc:	605a      	str	r2, [r3, #4]
 80069de:	4b12      	ldr	r3, [pc, #72]	; (8006a28 <prvHeapInit+0xb4>)
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	2200      	movs	r2, #0
 80069e4:	601a      	str	r2, [r3, #0]
 80069e6:	687b      	ldr	r3, [r7, #4]
 80069e8:	603b      	str	r3, [r7, #0]
 80069ea:	683b      	ldr	r3, [r7, #0]
 80069ec:	68fa      	ldr	r2, [r7, #12]
 80069ee:	1ad2      	subs	r2, r2, r3
 80069f0:	683b      	ldr	r3, [r7, #0]
 80069f2:	605a      	str	r2, [r3, #4]
 80069f4:	4b0c      	ldr	r3, [pc, #48]	; (8006a28 <prvHeapInit+0xb4>)
 80069f6:	681a      	ldr	r2, [r3, #0]
 80069f8:	683b      	ldr	r3, [r7, #0]
 80069fa:	601a      	str	r2, [r3, #0]
 80069fc:	683b      	ldr	r3, [r7, #0]
 80069fe:	685b      	ldr	r3, [r3, #4]
 8006a00:	4a0a      	ldr	r2, [pc, #40]	; (8006a2c <prvHeapInit+0xb8>)
 8006a02:	6013      	str	r3, [r2, #0]
 8006a04:	683b      	ldr	r3, [r7, #0]
 8006a06:	685b      	ldr	r3, [r3, #4]
 8006a08:	4a09      	ldr	r2, [pc, #36]	; (8006a30 <prvHeapInit+0xbc>)
 8006a0a:	6013      	str	r3, [r2, #0]
 8006a0c:	4b09      	ldr	r3, [pc, #36]	; (8006a34 <prvHeapInit+0xc0>)
 8006a0e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8006a12:	601a      	str	r2, [r3, #0]
 8006a14:	bf00      	nop
 8006a16:	3714      	adds	r7, #20
 8006a18:	46bd      	mov	sp, r7
 8006a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a1e:	4770      	bx	lr
 8006a20:	20000f88 	.word	0x20000f88
 8006a24:	20004b88 	.word	0x20004b88
 8006a28:	20004b90 	.word	0x20004b90
 8006a2c:	20004b98 	.word	0x20004b98
 8006a30:	20004b94 	.word	0x20004b94
 8006a34:	20004ba4 	.word	0x20004ba4

08006a38 <prvInsertBlockIntoFreeList>:
 8006a38:	b480      	push	{r7}
 8006a3a:	b085      	sub	sp, #20
 8006a3c:	af00      	add	r7, sp, #0
 8006a3e:	6078      	str	r0, [r7, #4]
 8006a40:	4b28      	ldr	r3, [pc, #160]	; (8006ae4 <prvInsertBlockIntoFreeList+0xac>)
 8006a42:	60fb      	str	r3, [r7, #12]
 8006a44:	e002      	b.n	8006a4c <prvInsertBlockIntoFreeList+0x14>
 8006a46:	68fb      	ldr	r3, [r7, #12]
 8006a48:	681b      	ldr	r3, [r3, #0]
 8006a4a:	60fb      	str	r3, [r7, #12]
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	681b      	ldr	r3, [r3, #0]
 8006a50:	687a      	ldr	r2, [r7, #4]
 8006a52:	429a      	cmp	r2, r3
 8006a54:	d8f7      	bhi.n	8006a46 <prvInsertBlockIntoFreeList+0xe>
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	60bb      	str	r3, [r7, #8]
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	685b      	ldr	r3, [r3, #4]
 8006a5e:	68ba      	ldr	r2, [r7, #8]
 8006a60:	4413      	add	r3, r2
 8006a62:	687a      	ldr	r2, [r7, #4]
 8006a64:	429a      	cmp	r2, r3
 8006a66:	d108      	bne.n	8006a7a <prvInsertBlockIntoFreeList+0x42>
 8006a68:	68fb      	ldr	r3, [r7, #12]
 8006a6a:	685a      	ldr	r2, [r3, #4]
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	685b      	ldr	r3, [r3, #4]
 8006a70:	441a      	add	r2, r3
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	605a      	str	r2, [r3, #4]
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	607b      	str	r3, [r7, #4]
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	60bb      	str	r3, [r7, #8]
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	685b      	ldr	r3, [r3, #4]
 8006a82:	68ba      	ldr	r2, [r7, #8]
 8006a84:	441a      	add	r2, r3
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	429a      	cmp	r2, r3
 8006a8c:	d118      	bne.n	8006ac0 <prvInsertBlockIntoFreeList+0x88>
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	681a      	ldr	r2, [r3, #0]
 8006a92:	4b15      	ldr	r3, [pc, #84]	; (8006ae8 <prvInsertBlockIntoFreeList+0xb0>)
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	429a      	cmp	r2, r3
 8006a98:	d00d      	beq.n	8006ab6 <prvInsertBlockIntoFreeList+0x7e>
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	685a      	ldr	r2, [r3, #4]
 8006a9e:	68fb      	ldr	r3, [r7, #12]
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	685b      	ldr	r3, [r3, #4]
 8006aa4:	441a      	add	r2, r3
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	605a      	str	r2, [r3, #4]
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	681a      	ldr	r2, [r3, #0]
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	601a      	str	r2, [r3, #0]
 8006ab4:	e008      	b.n	8006ac8 <prvInsertBlockIntoFreeList+0x90>
 8006ab6:	4b0c      	ldr	r3, [pc, #48]	; (8006ae8 <prvInsertBlockIntoFreeList+0xb0>)
 8006ab8:	681a      	ldr	r2, [r3, #0]
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	601a      	str	r2, [r3, #0]
 8006abe:	e003      	b.n	8006ac8 <prvInsertBlockIntoFreeList+0x90>
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	681a      	ldr	r2, [r3, #0]
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	601a      	str	r2, [r3, #0]
 8006ac8:	68fa      	ldr	r2, [r7, #12]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	429a      	cmp	r2, r3
 8006ace:	d002      	beq.n	8006ad6 <prvInsertBlockIntoFreeList+0x9e>
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	687a      	ldr	r2, [r7, #4]
 8006ad4:	601a      	str	r2, [r3, #0]
 8006ad6:	bf00      	nop
 8006ad8:	3714      	adds	r7, #20
 8006ada:	46bd      	mov	sp, r7
 8006adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ae0:	4770      	bx	lr
 8006ae2:	bf00      	nop
 8006ae4:	20004b88 	.word	0x20004b88
 8006ae8:	20004b90 	.word	0x20004b90

08006aec <std>:
 8006aec:	2300      	movs	r3, #0
 8006aee:	b510      	push	{r4, lr}
 8006af0:	4604      	mov	r4, r0
 8006af2:	e9c0 3300 	strd	r3, r3, [r0]
 8006af6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006afa:	6083      	str	r3, [r0, #8]
 8006afc:	8181      	strh	r1, [r0, #12]
 8006afe:	6643      	str	r3, [r0, #100]	; 0x64
 8006b00:	81c2      	strh	r2, [r0, #14]
 8006b02:	6183      	str	r3, [r0, #24]
 8006b04:	4619      	mov	r1, r3
 8006b06:	2208      	movs	r2, #8
 8006b08:	305c      	adds	r0, #92	; 0x5c
 8006b0a:	f000 f9f7 	bl	8006efc <memset>
 8006b0e:	4b0d      	ldr	r3, [pc, #52]	; (8006b44 <std+0x58>)
 8006b10:	6263      	str	r3, [r4, #36]	; 0x24
 8006b12:	4b0d      	ldr	r3, [pc, #52]	; (8006b48 <std+0x5c>)
 8006b14:	62a3      	str	r3, [r4, #40]	; 0x28
 8006b16:	4b0d      	ldr	r3, [pc, #52]	; (8006b4c <std+0x60>)
 8006b18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006b1a:	4b0d      	ldr	r3, [pc, #52]	; (8006b50 <std+0x64>)
 8006b1c:	6323      	str	r3, [r4, #48]	; 0x30
 8006b1e:	4b0d      	ldr	r3, [pc, #52]	; (8006b54 <std+0x68>)
 8006b20:	6224      	str	r4, [r4, #32]
 8006b22:	429c      	cmp	r4, r3
 8006b24:	d006      	beq.n	8006b34 <std+0x48>
 8006b26:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8006b2a:	4294      	cmp	r4, r2
 8006b2c:	d002      	beq.n	8006b34 <std+0x48>
 8006b2e:	33d0      	adds	r3, #208	; 0xd0
 8006b30:	429c      	cmp	r4, r3
 8006b32:	d105      	bne.n	8006b40 <std+0x54>
 8006b34:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006b38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006b3c:	f000 baac 	b.w	8007098 <__retarget_lock_init_recursive>
 8006b40:	bd10      	pop	{r4, pc}
 8006b42:	bf00      	nop
 8006b44:	08006d4d 	.word	0x08006d4d
 8006b48:	08006d6f 	.word	0x08006d6f
 8006b4c:	08006da7 	.word	0x08006da7
 8006b50:	08006dcb 	.word	0x08006dcb
 8006b54:	20004ba8 	.word	0x20004ba8

08006b58 <stdio_exit_handler>:
 8006b58:	4a02      	ldr	r2, [pc, #8]	; (8006b64 <stdio_exit_handler+0xc>)
 8006b5a:	4903      	ldr	r1, [pc, #12]	; (8006b68 <stdio_exit_handler+0x10>)
 8006b5c:	4803      	ldr	r0, [pc, #12]	; (8006b6c <stdio_exit_handler+0x14>)
 8006b5e:	f000 b869 	b.w	8006c34 <_fwalk_sglue>
 8006b62:	bf00      	nop
 8006b64:	20000050 	.word	0x20000050
 8006b68:	08007961 	.word	0x08007961
 8006b6c:	2000005c 	.word	0x2000005c

08006b70 <cleanup_stdio>:
 8006b70:	6841      	ldr	r1, [r0, #4]
 8006b72:	4b0c      	ldr	r3, [pc, #48]	; (8006ba4 <cleanup_stdio+0x34>)
 8006b74:	4299      	cmp	r1, r3
 8006b76:	b510      	push	{r4, lr}
 8006b78:	4604      	mov	r4, r0
 8006b7a:	d001      	beq.n	8006b80 <cleanup_stdio+0x10>
 8006b7c:	f000 fef0 	bl	8007960 <_fflush_r>
 8006b80:	68a1      	ldr	r1, [r4, #8]
 8006b82:	4b09      	ldr	r3, [pc, #36]	; (8006ba8 <cleanup_stdio+0x38>)
 8006b84:	4299      	cmp	r1, r3
 8006b86:	d002      	beq.n	8006b8e <cleanup_stdio+0x1e>
 8006b88:	4620      	mov	r0, r4
 8006b8a:	f000 fee9 	bl	8007960 <_fflush_r>
 8006b8e:	68e1      	ldr	r1, [r4, #12]
 8006b90:	4b06      	ldr	r3, [pc, #24]	; (8006bac <cleanup_stdio+0x3c>)
 8006b92:	4299      	cmp	r1, r3
 8006b94:	d004      	beq.n	8006ba0 <cleanup_stdio+0x30>
 8006b96:	4620      	mov	r0, r4
 8006b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006b9c:	f000 bee0 	b.w	8007960 <_fflush_r>
 8006ba0:	bd10      	pop	{r4, pc}
 8006ba2:	bf00      	nop
 8006ba4:	20004ba8 	.word	0x20004ba8
 8006ba8:	20004c10 	.word	0x20004c10
 8006bac:	20004c78 	.word	0x20004c78

08006bb0 <global_stdio_init.part.0>:
 8006bb0:	b510      	push	{r4, lr}
 8006bb2:	4b0b      	ldr	r3, [pc, #44]	; (8006be0 <global_stdio_init.part.0+0x30>)
 8006bb4:	4c0b      	ldr	r4, [pc, #44]	; (8006be4 <global_stdio_init.part.0+0x34>)
 8006bb6:	4a0c      	ldr	r2, [pc, #48]	; (8006be8 <global_stdio_init.part.0+0x38>)
 8006bb8:	601a      	str	r2, [r3, #0]
 8006bba:	4620      	mov	r0, r4
 8006bbc:	2200      	movs	r2, #0
 8006bbe:	2104      	movs	r1, #4
 8006bc0:	f7ff ff94 	bl	8006aec <std>
 8006bc4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8006bc8:	2201      	movs	r2, #1
 8006bca:	2109      	movs	r1, #9
 8006bcc:	f7ff ff8e 	bl	8006aec <std>
 8006bd0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8006bd4:	2202      	movs	r2, #2
 8006bd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006bda:	2112      	movs	r1, #18
 8006bdc:	f7ff bf86 	b.w	8006aec <std>
 8006be0:	20004ce0 	.word	0x20004ce0
 8006be4:	20004ba8 	.word	0x20004ba8
 8006be8:	08006b59 	.word	0x08006b59

08006bec <__sfp_lock_acquire>:
 8006bec:	4801      	ldr	r0, [pc, #4]	; (8006bf4 <__sfp_lock_acquire+0x8>)
 8006bee:	f000 ba54 	b.w	800709a <__retarget_lock_acquire_recursive>
 8006bf2:	bf00      	nop
 8006bf4:	20004ce9 	.word	0x20004ce9

08006bf8 <__sfp_lock_release>:
 8006bf8:	4801      	ldr	r0, [pc, #4]	; (8006c00 <__sfp_lock_release+0x8>)
 8006bfa:	f000 ba4f 	b.w	800709c <__retarget_lock_release_recursive>
 8006bfe:	bf00      	nop
 8006c00:	20004ce9 	.word	0x20004ce9

08006c04 <__sinit>:
 8006c04:	b510      	push	{r4, lr}
 8006c06:	4604      	mov	r4, r0
 8006c08:	f7ff fff0 	bl	8006bec <__sfp_lock_acquire>
 8006c0c:	6a23      	ldr	r3, [r4, #32]
 8006c0e:	b11b      	cbz	r3, 8006c18 <__sinit+0x14>
 8006c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006c14:	f7ff bff0 	b.w	8006bf8 <__sfp_lock_release>
 8006c18:	4b04      	ldr	r3, [pc, #16]	; (8006c2c <__sinit+0x28>)
 8006c1a:	6223      	str	r3, [r4, #32]
 8006c1c:	4b04      	ldr	r3, [pc, #16]	; (8006c30 <__sinit+0x2c>)
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	2b00      	cmp	r3, #0
 8006c22:	d1f5      	bne.n	8006c10 <__sinit+0xc>
 8006c24:	f7ff ffc4 	bl	8006bb0 <global_stdio_init.part.0>
 8006c28:	e7f2      	b.n	8006c10 <__sinit+0xc>
 8006c2a:	bf00      	nop
 8006c2c:	08006b71 	.word	0x08006b71
 8006c30:	20004ce0 	.word	0x20004ce0

08006c34 <_fwalk_sglue>:
 8006c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006c38:	4607      	mov	r7, r0
 8006c3a:	4688      	mov	r8, r1
 8006c3c:	4614      	mov	r4, r2
 8006c3e:	2600      	movs	r6, #0
 8006c40:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006c44:	f1b9 0901 	subs.w	r9, r9, #1
 8006c48:	d505      	bpl.n	8006c56 <_fwalk_sglue+0x22>
 8006c4a:	6824      	ldr	r4, [r4, #0]
 8006c4c:	2c00      	cmp	r4, #0
 8006c4e:	d1f7      	bne.n	8006c40 <_fwalk_sglue+0xc>
 8006c50:	4630      	mov	r0, r6
 8006c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006c56:	89ab      	ldrh	r3, [r5, #12]
 8006c58:	2b01      	cmp	r3, #1
 8006c5a:	d907      	bls.n	8006c6c <_fwalk_sglue+0x38>
 8006c5c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006c60:	3301      	adds	r3, #1
 8006c62:	d003      	beq.n	8006c6c <_fwalk_sglue+0x38>
 8006c64:	4629      	mov	r1, r5
 8006c66:	4638      	mov	r0, r7
 8006c68:	47c0      	blx	r8
 8006c6a:	4306      	orrs	r6, r0
 8006c6c:	3568      	adds	r5, #104	; 0x68
 8006c6e:	e7e9      	b.n	8006c44 <_fwalk_sglue+0x10>

08006c70 <iprintf>:
 8006c70:	b40f      	push	{r0, r1, r2, r3}
 8006c72:	b507      	push	{r0, r1, r2, lr}
 8006c74:	4906      	ldr	r1, [pc, #24]	; (8006c90 <iprintf+0x20>)
 8006c76:	ab04      	add	r3, sp, #16
 8006c78:	6808      	ldr	r0, [r1, #0]
 8006c7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8006c7e:	6881      	ldr	r1, [r0, #8]
 8006c80:	9301      	str	r3, [sp, #4]
 8006c82:	f000 fb3d 	bl	8007300 <_vfiprintf_r>
 8006c86:	b003      	add	sp, #12
 8006c88:	f85d eb04 	ldr.w	lr, [sp], #4
 8006c8c:	b004      	add	sp, #16
 8006c8e:	4770      	bx	lr
 8006c90:	200000a8 	.word	0x200000a8

08006c94 <_puts_r>:
 8006c94:	6a03      	ldr	r3, [r0, #32]
 8006c96:	b570      	push	{r4, r5, r6, lr}
 8006c98:	6884      	ldr	r4, [r0, #8]
 8006c9a:	4605      	mov	r5, r0
 8006c9c:	460e      	mov	r6, r1
 8006c9e:	b90b      	cbnz	r3, 8006ca4 <_puts_r+0x10>
 8006ca0:	f7ff ffb0 	bl	8006c04 <__sinit>
 8006ca4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006ca6:	07db      	lsls	r3, r3, #31
 8006ca8:	d405      	bmi.n	8006cb6 <_puts_r+0x22>
 8006caa:	89a3      	ldrh	r3, [r4, #12]
 8006cac:	0598      	lsls	r0, r3, #22
 8006cae:	d402      	bmi.n	8006cb6 <_puts_r+0x22>
 8006cb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006cb2:	f000 f9f2 	bl	800709a <__retarget_lock_acquire_recursive>
 8006cb6:	89a3      	ldrh	r3, [r4, #12]
 8006cb8:	0719      	lsls	r1, r3, #28
 8006cba:	d513      	bpl.n	8006ce4 <_puts_r+0x50>
 8006cbc:	6923      	ldr	r3, [r4, #16]
 8006cbe:	b18b      	cbz	r3, 8006ce4 <_puts_r+0x50>
 8006cc0:	3e01      	subs	r6, #1
 8006cc2:	68a3      	ldr	r3, [r4, #8]
 8006cc4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8006cc8:	3b01      	subs	r3, #1
 8006cca:	60a3      	str	r3, [r4, #8]
 8006ccc:	b9e9      	cbnz	r1, 8006d0a <_puts_r+0x76>
 8006cce:	2b00      	cmp	r3, #0
 8006cd0:	da2e      	bge.n	8006d30 <_puts_r+0x9c>
 8006cd2:	4622      	mov	r2, r4
 8006cd4:	210a      	movs	r1, #10
 8006cd6:	4628      	mov	r0, r5
 8006cd8:	f000 f87b 	bl	8006dd2 <__swbuf_r>
 8006cdc:	3001      	adds	r0, #1
 8006cde:	d007      	beq.n	8006cf0 <_puts_r+0x5c>
 8006ce0:	250a      	movs	r5, #10
 8006ce2:	e007      	b.n	8006cf4 <_puts_r+0x60>
 8006ce4:	4621      	mov	r1, r4
 8006ce6:	4628      	mov	r0, r5
 8006ce8:	f000 f8b0 	bl	8006e4c <__swsetup_r>
 8006cec:	2800      	cmp	r0, #0
 8006cee:	d0e7      	beq.n	8006cc0 <_puts_r+0x2c>
 8006cf0:	f04f 35ff 	mov.w	r5, #4294967295
 8006cf4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006cf6:	07da      	lsls	r2, r3, #31
 8006cf8:	d405      	bmi.n	8006d06 <_puts_r+0x72>
 8006cfa:	89a3      	ldrh	r3, [r4, #12]
 8006cfc:	059b      	lsls	r3, r3, #22
 8006cfe:	d402      	bmi.n	8006d06 <_puts_r+0x72>
 8006d00:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006d02:	f000 f9cb 	bl	800709c <__retarget_lock_release_recursive>
 8006d06:	4628      	mov	r0, r5
 8006d08:	bd70      	pop	{r4, r5, r6, pc}
 8006d0a:	2b00      	cmp	r3, #0
 8006d0c:	da04      	bge.n	8006d18 <_puts_r+0x84>
 8006d0e:	69a2      	ldr	r2, [r4, #24]
 8006d10:	429a      	cmp	r2, r3
 8006d12:	dc06      	bgt.n	8006d22 <_puts_r+0x8e>
 8006d14:	290a      	cmp	r1, #10
 8006d16:	d004      	beq.n	8006d22 <_puts_r+0x8e>
 8006d18:	6823      	ldr	r3, [r4, #0]
 8006d1a:	1c5a      	adds	r2, r3, #1
 8006d1c:	6022      	str	r2, [r4, #0]
 8006d1e:	7019      	strb	r1, [r3, #0]
 8006d20:	e7cf      	b.n	8006cc2 <_puts_r+0x2e>
 8006d22:	4622      	mov	r2, r4
 8006d24:	4628      	mov	r0, r5
 8006d26:	f000 f854 	bl	8006dd2 <__swbuf_r>
 8006d2a:	3001      	adds	r0, #1
 8006d2c:	d1c9      	bne.n	8006cc2 <_puts_r+0x2e>
 8006d2e:	e7df      	b.n	8006cf0 <_puts_r+0x5c>
 8006d30:	6823      	ldr	r3, [r4, #0]
 8006d32:	250a      	movs	r5, #10
 8006d34:	1c5a      	adds	r2, r3, #1
 8006d36:	6022      	str	r2, [r4, #0]
 8006d38:	701d      	strb	r5, [r3, #0]
 8006d3a:	e7db      	b.n	8006cf4 <_puts_r+0x60>

08006d3c <puts>:
 8006d3c:	4b02      	ldr	r3, [pc, #8]	; (8006d48 <puts+0xc>)
 8006d3e:	4601      	mov	r1, r0
 8006d40:	6818      	ldr	r0, [r3, #0]
 8006d42:	f7ff bfa7 	b.w	8006c94 <_puts_r>
 8006d46:	bf00      	nop
 8006d48:	200000a8 	.word	0x200000a8

08006d4c <__sread>:
 8006d4c:	b510      	push	{r4, lr}
 8006d4e:	460c      	mov	r4, r1
 8006d50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d54:	f000 f952 	bl	8006ffc <_read_r>
 8006d58:	2800      	cmp	r0, #0
 8006d5a:	bfab      	itete	ge
 8006d5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006d5e:	89a3      	ldrhlt	r3, [r4, #12]
 8006d60:	181b      	addge	r3, r3, r0
 8006d62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006d66:	bfac      	ite	ge
 8006d68:	6563      	strge	r3, [r4, #84]	; 0x54
 8006d6a:	81a3      	strhlt	r3, [r4, #12]
 8006d6c:	bd10      	pop	{r4, pc}

08006d6e <__swrite>:
 8006d6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d72:	461f      	mov	r7, r3
 8006d74:	898b      	ldrh	r3, [r1, #12]
 8006d76:	05db      	lsls	r3, r3, #23
 8006d78:	4605      	mov	r5, r0
 8006d7a:	460c      	mov	r4, r1
 8006d7c:	4616      	mov	r6, r2
 8006d7e:	d505      	bpl.n	8006d8c <__swrite+0x1e>
 8006d80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d84:	2302      	movs	r3, #2
 8006d86:	2200      	movs	r2, #0
 8006d88:	f000 f926 	bl	8006fd8 <_lseek_r>
 8006d8c:	89a3      	ldrh	r3, [r4, #12]
 8006d8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006d92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d96:	81a3      	strh	r3, [r4, #12]
 8006d98:	4632      	mov	r2, r6
 8006d9a:	463b      	mov	r3, r7
 8006d9c:	4628      	mov	r0, r5
 8006d9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006da2:	f000 b93d 	b.w	8007020 <_write_r>

08006da6 <__sseek>:
 8006da6:	b510      	push	{r4, lr}
 8006da8:	460c      	mov	r4, r1
 8006daa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006dae:	f000 f913 	bl	8006fd8 <_lseek_r>
 8006db2:	1c43      	adds	r3, r0, #1
 8006db4:	89a3      	ldrh	r3, [r4, #12]
 8006db6:	bf15      	itete	ne
 8006db8:	6560      	strne	r0, [r4, #84]	; 0x54
 8006dba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006dbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006dc2:	81a3      	strheq	r3, [r4, #12]
 8006dc4:	bf18      	it	ne
 8006dc6:	81a3      	strhne	r3, [r4, #12]
 8006dc8:	bd10      	pop	{r4, pc}

08006dca <__sclose>:
 8006dca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006dce:	f000 b89d 	b.w	8006f0c <_close_r>

08006dd2 <__swbuf_r>:
 8006dd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006dd4:	460e      	mov	r6, r1
 8006dd6:	4614      	mov	r4, r2
 8006dd8:	4605      	mov	r5, r0
 8006dda:	b118      	cbz	r0, 8006de4 <__swbuf_r+0x12>
 8006ddc:	6a03      	ldr	r3, [r0, #32]
 8006dde:	b90b      	cbnz	r3, 8006de4 <__swbuf_r+0x12>
 8006de0:	f7ff ff10 	bl	8006c04 <__sinit>
 8006de4:	69a3      	ldr	r3, [r4, #24]
 8006de6:	60a3      	str	r3, [r4, #8]
 8006de8:	89a3      	ldrh	r3, [r4, #12]
 8006dea:	071a      	lsls	r2, r3, #28
 8006dec:	d525      	bpl.n	8006e3a <__swbuf_r+0x68>
 8006dee:	6923      	ldr	r3, [r4, #16]
 8006df0:	b31b      	cbz	r3, 8006e3a <__swbuf_r+0x68>
 8006df2:	6823      	ldr	r3, [r4, #0]
 8006df4:	6922      	ldr	r2, [r4, #16]
 8006df6:	1a98      	subs	r0, r3, r2
 8006df8:	6963      	ldr	r3, [r4, #20]
 8006dfa:	b2f6      	uxtb	r6, r6
 8006dfc:	4283      	cmp	r3, r0
 8006dfe:	4637      	mov	r7, r6
 8006e00:	dc04      	bgt.n	8006e0c <__swbuf_r+0x3a>
 8006e02:	4621      	mov	r1, r4
 8006e04:	4628      	mov	r0, r5
 8006e06:	f000 fdab 	bl	8007960 <_fflush_r>
 8006e0a:	b9e0      	cbnz	r0, 8006e46 <__swbuf_r+0x74>
 8006e0c:	68a3      	ldr	r3, [r4, #8]
 8006e0e:	3b01      	subs	r3, #1
 8006e10:	60a3      	str	r3, [r4, #8]
 8006e12:	6823      	ldr	r3, [r4, #0]
 8006e14:	1c5a      	adds	r2, r3, #1
 8006e16:	6022      	str	r2, [r4, #0]
 8006e18:	701e      	strb	r6, [r3, #0]
 8006e1a:	6962      	ldr	r2, [r4, #20]
 8006e1c:	1c43      	adds	r3, r0, #1
 8006e1e:	429a      	cmp	r2, r3
 8006e20:	d004      	beq.n	8006e2c <__swbuf_r+0x5a>
 8006e22:	89a3      	ldrh	r3, [r4, #12]
 8006e24:	07db      	lsls	r3, r3, #31
 8006e26:	d506      	bpl.n	8006e36 <__swbuf_r+0x64>
 8006e28:	2e0a      	cmp	r6, #10
 8006e2a:	d104      	bne.n	8006e36 <__swbuf_r+0x64>
 8006e2c:	4621      	mov	r1, r4
 8006e2e:	4628      	mov	r0, r5
 8006e30:	f000 fd96 	bl	8007960 <_fflush_r>
 8006e34:	b938      	cbnz	r0, 8006e46 <__swbuf_r+0x74>
 8006e36:	4638      	mov	r0, r7
 8006e38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006e3a:	4621      	mov	r1, r4
 8006e3c:	4628      	mov	r0, r5
 8006e3e:	f000 f805 	bl	8006e4c <__swsetup_r>
 8006e42:	2800      	cmp	r0, #0
 8006e44:	d0d5      	beq.n	8006df2 <__swbuf_r+0x20>
 8006e46:	f04f 37ff 	mov.w	r7, #4294967295
 8006e4a:	e7f4      	b.n	8006e36 <__swbuf_r+0x64>

08006e4c <__swsetup_r>:
 8006e4c:	b538      	push	{r3, r4, r5, lr}
 8006e4e:	4b2a      	ldr	r3, [pc, #168]	; (8006ef8 <__swsetup_r+0xac>)
 8006e50:	4605      	mov	r5, r0
 8006e52:	6818      	ldr	r0, [r3, #0]
 8006e54:	460c      	mov	r4, r1
 8006e56:	b118      	cbz	r0, 8006e60 <__swsetup_r+0x14>
 8006e58:	6a03      	ldr	r3, [r0, #32]
 8006e5a:	b90b      	cbnz	r3, 8006e60 <__swsetup_r+0x14>
 8006e5c:	f7ff fed2 	bl	8006c04 <__sinit>
 8006e60:	89a3      	ldrh	r3, [r4, #12]
 8006e62:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006e66:	0718      	lsls	r0, r3, #28
 8006e68:	d422      	bmi.n	8006eb0 <__swsetup_r+0x64>
 8006e6a:	06d9      	lsls	r1, r3, #27
 8006e6c:	d407      	bmi.n	8006e7e <__swsetup_r+0x32>
 8006e6e:	2309      	movs	r3, #9
 8006e70:	602b      	str	r3, [r5, #0]
 8006e72:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006e76:	81a3      	strh	r3, [r4, #12]
 8006e78:	f04f 30ff 	mov.w	r0, #4294967295
 8006e7c:	e034      	b.n	8006ee8 <__swsetup_r+0x9c>
 8006e7e:	0758      	lsls	r0, r3, #29
 8006e80:	d512      	bpl.n	8006ea8 <__swsetup_r+0x5c>
 8006e82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006e84:	b141      	cbz	r1, 8006e98 <__swsetup_r+0x4c>
 8006e86:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006e8a:	4299      	cmp	r1, r3
 8006e8c:	d002      	beq.n	8006e94 <__swsetup_r+0x48>
 8006e8e:	4628      	mov	r0, r5
 8006e90:	f000 f914 	bl	80070bc <_free_r>
 8006e94:	2300      	movs	r3, #0
 8006e96:	6363      	str	r3, [r4, #52]	; 0x34
 8006e98:	89a3      	ldrh	r3, [r4, #12]
 8006e9a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006e9e:	81a3      	strh	r3, [r4, #12]
 8006ea0:	2300      	movs	r3, #0
 8006ea2:	6063      	str	r3, [r4, #4]
 8006ea4:	6923      	ldr	r3, [r4, #16]
 8006ea6:	6023      	str	r3, [r4, #0]
 8006ea8:	89a3      	ldrh	r3, [r4, #12]
 8006eaa:	f043 0308 	orr.w	r3, r3, #8
 8006eae:	81a3      	strh	r3, [r4, #12]
 8006eb0:	6923      	ldr	r3, [r4, #16]
 8006eb2:	b94b      	cbnz	r3, 8006ec8 <__swsetup_r+0x7c>
 8006eb4:	89a3      	ldrh	r3, [r4, #12]
 8006eb6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8006eba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006ebe:	d003      	beq.n	8006ec8 <__swsetup_r+0x7c>
 8006ec0:	4621      	mov	r1, r4
 8006ec2:	4628      	mov	r0, r5
 8006ec4:	f000 fd9a 	bl	80079fc <__smakebuf_r>
 8006ec8:	89a0      	ldrh	r0, [r4, #12]
 8006eca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006ece:	f010 0301 	ands.w	r3, r0, #1
 8006ed2:	d00a      	beq.n	8006eea <__swsetup_r+0x9e>
 8006ed4:	2300      	movs	r3, #0
 8006ed6:	60a3      	str	r3, [r4, #8]
 8006ed8:	6963      	ldr	r3, [r4, #20]
 8006eda:	425b      	negs	r3, r3
 8006edc:	61a3      	str	r3, [r4, #24]
 8006ede:	6923      	ldr	r3, [r4, #16]
 8006ee0:	b943      	cbnz	r3, 8006ef4 <__swsetup_r+0xa8>
 8006ee2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8006ee6:	d1c4      	bne.n	8006e72 <__swsetup_r+0x26>
 8006ee8:	bd38      	pop	{r3, r4, r5, pc}
 8006eea:	0781      	lsls	r1, r0, #30
 8006eec:	bf58      	it	pl
 8006eee:	6963      	ldrpl	r3, [r4, #20]
 8006ef0:	60a3      	str	r3, [r4, #8]
 8006ef2:	e7f4      	b.n	8006ede <__swsetup_r+0x92>
 8006ef4:	2000      	movs	r0, #0
 8006ef6:	e7f7      	b.n	8006ee8 <__swsetup_r+0x9c>
 8006ef8:	200000a8 	.word	0x200000a8

08006efc <memset>:
 8006efc:	4402      	add	r2, r0
 8006efe:	4603      	mov	r3, r0
 8006f00:	4293      	cmp	r3, r2
 8006f02:	d100      	bne.n	8006f06 <memset+0xa>
 8006f04:	4770      	bx	lr
 8006f06:	f803 1b01 	strb.w	r1, [r3], #1
 8006f0a:	e7f9      	b.n	8006f00 <memset+0x4>

08006f0c <_close_r>:
 8006f0c:	b538      	push	{r3, r4, r5, lr}
 8006f0e:	4d06      	ldr	r5, [pc, #24]	; (8006f28 <_close_r+0x1c>)
 8006f10:	2300      	movs	r3, #0
 8006f12:	4604      	mov	r4, r0
 8006f14:	4608      	mov	r0, r1
 8006f16:	602b      	str	r3, [r5, #0]
 8006f18:	f7f9 ffb5 	bl	8000e86 <_close>
 8006f1c:	1c43      	adds	r3, r0, #1
 8006f1e:	d102      	bne.n	8006f26 <_close_r+0x1a>
 8006f20:	682b      	ldr	r3, [r5, #0]
 8006f22:	b103      	cbz	r3, 8006f26 <_close_r+0x1a>
 8006f24:	6023      	str	r3, [r4, #0]
 8006f26:	bd38      	pop	{r3, r4, r5, pc}
 8006f28:	20004ce4 	.word	0x20004ce4

08006f2c <_reclaim_reent>:
 8006f2c:	4b29      	ldr	r3, [pc, #164]	; (8006fd4 <_reclaim_reent+0xa8>)
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	4283      	cmp	r3, r0
 8006f32:	b570      	push	{r4, r5, r6, lr}
 8006f34:	4604      	mov	r4, r0
 8006f36:	d04b      	beq.n	8006fd0 <_reclaim_reent+0xa4>
 8006f38:	69c3      	ldr	r3, [r0, #28]
 8006f3a:	b143      	cbz	r3, 8006f4e <_reclaim_reent+0x22>
 8006f3c:	68db      	ldr	r3, [r3, #12]
 8006f3e:	2b00      	cmp	r3, #0
 8006f40:	d144      	bne.n	8006fcc <_reclaim_reent+0xa0>
 8006f42:	69e3      	ldr	r3, [r4, #28]
 8006f44:	6819      	ldr	r1, [r3, #0]
 8006f46:	b111      	cbz	r1, 8006f4e <_reclaim_reent+0x22>
 8006f48:	4620      	mov	r0, r4
 8006f4a:	f000 f8b7 	bl	80070bc <_free_r>
 8006f4e:	6961      	ldr	r1, [r4, #20]
 8006f50:	b111      	cbz	r1, 8006f58 <_reclaim_reent+0x2c>
 8006f52:	4620      	mov	r0, r4
 8006f54:	f000 f8b2 	bl	80070bc <_free_r>
 8006f58:	69e1      	ldr	r1, [r4, #28]
 8006f5a:	b111      	cbz	r1, 8006f62 <_reclaim_reent+0x36>
 8006f5c:	4620      	mov	r0, r4
 8006f5e:	f000 f8ad 	bl	80070bc <_free_r>
 8006f62:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006f64:	b111      	cbz	r1, 8006f6c <_reclaim_reent+0x40>
 8006f66:	4620      	mov	r0, r4
 8006f68:	f000 f8a8 	bl	80070bc <_free_r>
 8006f6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006f6e:	b111      	cbz	r1, 8006f76 <_reclaim_reent+0x4a>
 8006f70:	4620      	mov	r0, r4
 8006f72:	f000 f8a3 	bl	80070bc <_free_r>
 8006f76:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8006f78:	b111      	cbz	r1, 8006f80 <_reclaim_reent+0x54>
 8006f7a:	4620      	mov	r0, r4
 8006f7c:	f000 f89e 	bl	80070bc <_free_r>
 8006f80:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8006f82:	b111      	cbz	r1, 8006f8a <_reclaim_reent+0x5e>
 8006f84:	4620      	mov	r0, r4
 8006f86:	f000 f899 	bl	80070bc <_free_r>
 8006f8a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8006f8c:	b111      	cbz	r1, 8006f94 <_reclaim_reent+0x68>
 8006f8e:	4620      	mov	r0, r4
 8006f90:	f000 f894 	bl	80070bc <_free_r>
 8006f94:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006f96:	b111      	cbz	r1, 8006f9e <_reclaim_reent+0x72>
 8006f98:	4620      	mov	r0, r4
 8006f9a:	f000 f88f 	bl	80070bc <_free_r>
 8006f9e:	6a23      	ldr	r3, [r4, #32]
 8006fa0:	b1b3      	cbz	r3, 8006fd0 <_reclaim_reent+0xa4>
 8006fa2:	4620      	mov	r0, r4
 8006fa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006fa8:	4718      	bx	r3
 8006faa:	5949      	ldr	r1, [r1, r5]
 8006fac:	b941      	cbnz	r1, 8006fc0 <_reclaim_reent+0x94>
 8006fae:	3504      	adds	r5, #4
 8006fb0:	69e3      	ldr	r3, [r4, #28]
 8006fb2:	2d80      	cmp	r5, #128	; 0x80
 8006fb4:	68d9      	ldr	r1, [r3, #12]
 8006fb6:	d1f8      	bne.n	8006faa <_reclaim_reent+0x7e>
 8006fb8:	4620      	mov	r0, r4
 8006fba:	f000 f87f 	bl	80070bc <_free_r>
 8006fbe:	e7c0      	b.n	8006f42 <_reclaim_reent+0x16>
 8006fc0:	680e      	ldr	r6, [r1, #0]
 8006fc2:	4620      	mov	r0, r4
 8006fc4:	f000 f87a 	bl	80070bc <_free_r>
 8006fc8:	4631      	mov	r1, r6
 8006fca:	e7ef      	b.n	8006fac <_reclaim_reent+0x80>
 8006fcc:	2500      	movs	r5, #0
 8006fce:	e7ef      	b.n	8006fb0 <_reclaim_reent+0x84>
 8006fd0:	bd70      	pop	{r4, r5, r6, pc}
 8006fd2:	bf00      	nop
 8006fd4:	200000a8 	.word	0x200000a8

08006fd8 <_lseek_r>:
 8006fd8:	b538      	push	{r3, r4, r5, lr}
 8006fda:	4d07      	ldr	r5, [pc, #28]	; (8006ff8 <_lseek_r+0x20>)
 8006fdc:	4604      	mov	r4, r0
 8006fde:	4608      	mov	r0, r1
 8006fe0:	4611      	mov	r1, r2
 8006fe2:	2200      	movs	r2, #0
 8006fe4:	602a      	str	r2, [r5, #0]
 8006fe6:	461a      	mov	r2, r3
 8006fe8:	f7f9 ff74 	bl	8000ed4 <_lseek>
 8006fec:	1c43      	adds	r3, r0, #1
 8006fee:	d102      	bne.n	8006ff6 <_lseek_r+0x1e>
 8006ff0:	682b      	ldr	r3, [r5, #0]
 8006ff2:	b103      	cbz	r3, 8006ff6 <_lseek_r+0x1e>
 8006ff4:	6023      	str	r3, [r4, #0]
 8006ff6:	bd38      	pop	{r3, r4, r5, pc}
 8006ff8:	20004ce4 	.word	0x20004ce4

08006ffc <_read_r>:
 8006ffc:	b538      	push	{r3, r4, r5, lr}
 8006ffe:	4d07      	ldr	r5, [pc, #28]	; (800701c <_read_r+0x20>)
 8007000:	4604      	mov	r4, r0
 8007002:	4608      	mov	r0, r1
 8007004:	4611      	mov	r1, r2
 8007006:	2200      	movs	r2, #0
 8007008:	602a      	str	r2, [r5, #0]
 800700a:	461a      	mov	r2, r3
 800700c:	f7f9 ff1e 	bl	8000e4c <_read>
 8007010:	1c43      	adds	r3, r0, #1
 8007012:	d102      	bne.n	800701a <_read_r+0x1e>
 8007014:	682b      	ldr	r3, [r5, #0]
 8007016:	b103      	cbz	r3, 800701a <_read_r+0x1e>
 8007018:	6023      	str	r3, [r4, #0]
 800701a:	bd38      	pop	{r3, r4, r5, pc}
 800701c:	20004ce4 	.word	0x20004ce4

08007020 <_write_r>:
 8007020:	b538      	push	{r3, r4, r5, lr}
 8007022:	4d07      	ldr	r5, [pc, #28]	; (8007040 <_write_r+0x20>)
 8007024:	4604      	mov	r4, r0
 8007026:	4608      	mov	r0, r1
 8007028:	4611      	mov	r1, r2
 800702a:	2200      	movs	r2, #0
 800702c:	602a      	str	r2, [r5, #0]
 800702e:	461a      	mov	r2, r3
 8007030:	f7f9 fad3 	bl	80005da <_write>
 8007034:	1c43      	adds	r3, r0, #1
 8007036:	d102      	bne.n	800703e <_write_r+0x1e>
 8007038:	682b      	ldr	r3, [r5, #0]
 800703a:	b103      	cbz	r3, 800703e <_write_r+0x1e>
 800703c:	6023      	str	r3, [r4, #0]
 800703e:	bd38      	pop	{r3, r4, r5, pc}
 8007040:	20004ce4 	.word	0x20004ce4

08007044 <__errno>:
 8007044:	4b01      	ldr	r3, [pc, #4]	; (800704c <__errno+0x8>)
 8007046:	6818      	ldr	r0, [r3, #0]
 8007048:	4770      	bx	lr
 800704a:	bf00      	nop
 800704c:	200000a8 	.word	0x200000a8

08007050 <__libc_init_array>:
 8007050:	b570      	push	{r4, r5, r6, lr}
 8007052:	4d0d      	ldr	r5, [pc, #52]	; (8007088 <__libc_init_array+0x38>)
 8007054:	4c0d      	ldr	r4, [pc, #52]	; (800708c <__libc_init_array+0x3c>)
 8007056:	1b64      	subs	r4, r4, r5
 8007058:	10a4      	asrs	r4, r4, #2
 800705a:	2600      	movs	r6, #0
 800705c:	42a6      	cmp	r6, r4
 800705e:	d109      	bne.n	8007074 <__libc_init_array+0x24>
 8007060:	4d0b      	ldr	r5, [pc, #44]	; (8007090 <__libc_init_array+0x40>)
 8007062:	4c0c      	ldr	r4, [pc, #48]	; (8007094 <__libc_init_array+0x44>)
 8007064:	f000 fd38 	bl	8007ad8 <_init>
 8007068:	1b64      	subs	r4, r4, r5
 800706a:	10a4      	asrs	r4, r4, #2
 800706c:	2600      	movs	r6, #0
 800706e:	42a6      	cmp	r6, r4
 8007070:	d105      	bne.n	800707e <__libc_init_array+0x2e>
 8007072:	bd70      	pop	{r4, r5, r6, pc}
 8007074:	f855 3b04 	ldr.w	r3, [r5], #4
 8007078:	4798      	blx	r3
 800707a:	3601      	adds	r6, #1
 800707c:	e7ee      	b.n	800705c <__libc_init_array+0xc>
 800707e:	f855 3b04 	ldr.w	r3, [r5], #4
 8007082:	4798      	blx	r3
 8007084:	3601      	adds	r6, #1
 8007086:	e7f2      	b.n	800706e <__libc_init_array+0x1e>
 8007088:	08007d50 	.word	0x08007d50
 800708c:	08007d50 	.word	0x08007d50
 8007090:	08007d50 	.word	0x08007d50
 8007094:	08007d54 	.word	0x08007d54

08007098 <__retarget_lock_init_recursive>:
 8007098:	4770      	bx	lr

0800709a <__retarget_lock_acquire_recursive>:
 800709a:	4770      	bx	lr

0800709c <__retarget_lock_release_recursive>:
 800709c:	4770      	bx	lr

0800709e <memcpy>:
 800709e:	440a      	add	r2, r1
 80070a0:	4291      	cmp	r1, r2
 80070a2:	f100 33ff 	add.w	r3, r0, #4294967295
 80070a6:	d100      	bne.n	80070aa <memcpy+0xc>
 80070a8:	4770      	bx	lr
 80070aa:	b510      	push	{r4, lr}
 80070ac:	f811 4b01 	ldrb.w	r4, [r1], #1
 80070b0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80070b4:	4291      	cmp	r1, r2
 80070b6:	d1f9      	bne.n	80070ac <memcpy+0xe>
 80070b8:	bd10      	pop	{r4, pc}
	...

080070bc <_free_r>:
 80070bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80070be:	2900      	cmp	r1, #0
 80070c0:	d044      	beq.n	800714c <_free_r+0x90>
 80070c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80070c6:	9001      	str	r0, [sp, #4]
 80070c8:	2b00      	cmp	r3, #0
 80070ca:	f1a1 0404 	sub.w	r4, r1, #4
 80070ce:	bfb8      	it	lt
 80070d0:	18e4      	addlt	r4, r4, r3
 80070d2:	f000 f8df 	bl	8007294 <__malloc_lock>
 80070d6:	4a1e      	ldr	r2, [pc, #120]	; (8007150 <_free_r+0x94>)
 80070d8:	9801      	ldr	r0, [sp, #4]
 80070da:	6813      	ldr	r3, [r2, #0]
 80070dc:	b933      	cbnz	r3, 80070ec <_free_r+0x30>
 80070de:	6063      	str	r3, [r4, #4]
 80070e0:	6014      	str	r4, [r2, #0]
 80070e2:	b003      	add	sp, #12
 80070e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80070e8:	f000 b8da 	b.w	80072a0 <__malloc_unlock>
 80070ec:	42a3      	cmp	r3, r4
 80070ee:	d908      	bls.n	8007102 <_free_r+0x46>
 80070f0:	6825      	ldr	r5, [r4, #0]
 80070f2:	1961      	adds	r1, r4, r5
 80070f4:	428b      	cmp	r3, r1
 80070f6:	bf01      	itttt	eq
 80070f8:	6819      	ldreq	r1, [r3, #0]
 80070fa:	685b      	ldreq	r3, [r3, #4]
 80070fc:	1949      	addeq	r1, r1, r5
 80070fe:	6021      	streq	r1, [r4, #0]
 8007100:	e7ed      	b.n	80070de <_free_r+0x22>
 8007102:	461a      	mov	r2, r3
 8007104:	685b      	ldr	r3, [r3, #4]
 8007106:	b10b      	cbz	r3, 800710c <_free_r+0x50>
 8007108:	42a3      	cmp	r3, r4
 800710a:	d9fa      	bls.n	8007102 <_free_r+0x46>
 800710c:	6811      	ldr	r1, [r2, #0]
 800710e:	1855      	adds	r5, r2, r1
 8007110:	42a5      	cmp	r5, r4
 8007112:	d10b      	bne.n	800712c <_free_r+0x70>
 8007114:	6824      	ldr	r4, [r4, #0]
 8007116:	4421      	add	r1, r4
 8007118:	1854      	adds	r4, r2, r1
 800711a:	42a3      	cmp	r3, r4
 800711c:	6011      	str	r1, [r2, #0]
 800711e:	d1e0      	bne.n	80070e2 <_free_r+0x26>
 8007120:	681c      	ldr	r4, [r3, #0]
 8007122:	685b      	ldr	r3, [r3, #4]
 8007124:	6053      	str	r3, [r2, #4]
 8007126:	440c      	add	r4, r1
 8007128:	6014      	str	r4, [r2, #0]
 800712a:	e7da      	b.n	80070e2 <_free_r+0x26>
 800712c:	d902      	bls.n	8007134 <_free_r+0x78>
 800712e:	230c      	movs	r3, #12
 8007130:	6003      	str	r3, [r0, #0]
 8007132:	e7d6      	b.n	80070e2 <_free_r+0x26>
 8007134:	6825      	ldr	r5, [r4, #0]
 8007136:	1961      	adds	r1, r4, r5
 8007138:	428b      	cmp	r3, r1
 800713a:	bf04      	itt	eq
 800713c:	6819      	ldreq	r1, [r3, #0]
 800713e:	685b      	ldreq	r3, [r3, #4]
 8007140:	6063      	str	r3, [r4, #4]
 8007142:	bf04      	itt	eq
 8007144:	1949      	addeq	r1, r1, r5
 8007146:	6021      	streq	r1, [r4, #0]
 8007148:	6054      	str	r4, [r2, #4]
 800714a:	e7ca      	b.n	80070e2 <_free_r+0x26>
 800714c:	b003      	add	sp, #12
 800714e:	bd30      	pop	{r4, r5, pc}
 8007150:	20004cec 	.word	0x20004cec

08007154 <sbrk_aligned>:
 8007154:	b570      	push	{r4, r5, r6, lr}
 8007156:	4e0e      	ldr	r6, [pc, #56]	; (8007190 <sbrk_aligned+0x3c>)
 8007158:	460c      	mov	r4, r1
 800715a:	6831      	ldr	r1, [r6, #0]
 800715c:	4605      	mov	r5, r0
 800715e:	b911      	cbnz	r1, 8007166 <sbrk_aligned+0x12>
 8007160:	f000 fcaa 	bl	8007ab8 <_sbrk_r>
 8007164:	6030      	str	r0, [r6, #0]
 8007166:	4621      	mov	r1, r4
 8007168:	4628      	mov	r0, r5
 800716a:	f000 fca5 	bl	8007ab8 <_sbrk_r>
 800716e:	1c43      	adds	r3, r0, #1
 8007170:	d00a      	beq.n	8007188 <sbrk_aligned+0x34>
 8007172:	1cc4      	adds	r4, r0, #3
 8007174:	f024 0403 	bic.w	r4, r4, #3
 8007178:	42a0      	cmp	r0, r4
 800717a:	d007      	beq.n	800718c <sbrk_aligned+0x38>
 800717c:	1a21      	subs	r1, r4, r0
 800717e:	4628      	mov	r0, r5
 8007180:	f000 fc9a 	bl	8007ab8 <_sbrk_r>
 8007184:	3001      	adds	r0, #1
 8007186:	d101      	bne.n	800718c <sbrk_aligned+0x38>
 8007188:	f04f 34ff 	mov.w	r4, #4294967295
 800718c:	4620      	mov	r0, r4
 800718e:	bd70      	pop	{r4, r5, r6, pc}
 8007190:	20004cf0 	.word	0x20004cf0

08007194 <_malloc_r>:
 8007194:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007198:	1ccd      	adds	r5, r1, #3
 800719a:	f025 0503 	bic.w	r5, r5, #3
 800719e:	3508      	adds	r5, #8
 80071a0:	2d0c      	cmp	r5, #12
 80071a2:	bf38      	it	cc
 80071a4:	250c      	movcc	r5, #12
 80071a6:	2d00      	cmp	r5, #0
 80071a8:	4607      	mov	r7, r0
 80071aa:	db01      	blt.n	80071b0 <_malloc_r+0x1c>
 80071ac:	42a9      	cmp	r1, r5
 80071ae:	d905      	bls.n	80071bc <_malloc_r+0x28>
 80071b0:	230c      	movs	r3, #12
 80071b2:	603b      	str	r3, [r7, #0]
 80071b4:	2600      	movs	r6, #0
 80071b6:	4630      	mov	r0, r6
 80071b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80071bc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007290 <_malloc_r+0xfc>
 80071c0:	f000 f868 	bl	8007294 <__malloc_lock>
 80071c4:	f8d8 3000 	ldr.w	r3, [r8]
 80071c8:	461c      	mov	r4, r3
 80071ca:	bb5c      	cbnz	r4, 8007224 <_malloc_r+0x90>
 80071cc:	4629      	mov	r1, r5
 80071ce:	4638      	mov	r0, r7
 80071d0:	f7ff ffc0 	bl	8007154 <sbrk_aligned>
 80071d4:	1c43      	adds	r3, r0, #1
 80071d6:	4604      	mov	r4, r0
 80071d8:	d155      	bne.n	8007286 <_malloc_r+0xf2>
 80071da:	f8d8 4000 	ldr.w	r4, [r8]
 80071de:	4626      	mov	r6, r4
 80071e0:	2e00      	cmp	r6, #0
 80071e2:	d145      	bne.n	8007270 <_malloc_r+0xdc>
 80071e4:	2c00      	cmp	r4, #0
 80071e6:	d048      	beq.n	800727a <_malloc_r+0xe6>
 80071e8:	6823      	ldr	r3, [r4, #0]
 80071ea:	4631      	mov	r1, r6
 80071ec:	4638      	mov	r0, r7
 80071ee:	eb04 0903 	add.w	r9, r4, r3
 80071f2:	f000 fc61 	bl	8007ab8 <_sbrk_r>
 80071f6:	4581      	cmp	r9, r0
 80071f8:	d13f      	bne.n	800727a <_malloc_r+0xe6>
 80071fa:	6821      	ldr	r1, [r4, #0]
 80071fc:	1a6d      	subs	r5, r5, r1
 80071fe:	4629      	mov	r1, r5
 8007200:	4638      	mov	r0, r7
 8007202:	f7ff ffa7 	bl	8007154 <sbrk_aligned>
 8007206:	3001      	adds	r0, #1
 8007208:	d037      	beq.n	800727a <_malloc_r+0xe6>
 800720a:	6823      	ldr	r3, [r4, #0]
 800720c:	442b      	add	r3, r5
 800720e:	6023      	str	r3, [r4, #0]
 8007210:	f8d8 3000 	ldr.w	r3, [r8]
 8007214:	2b00      	cmp	r3, #0
 8007216:	d038      	beq.n	800728a <_malloc_r+0xf6>
 8007218:	685a      	ldr	r2, [r3, #4]
 800721a:	42a2      	cmp	r2, r4
 800721c:	d12b      	bne.n	8007276 <_malloc_r+0xe2>
 800721e:	2200      	movs	r2, #0
 8007220:	605a      	str	r2, [r3, #4]
 8007222:	e00f      	b.n	8007244 <_malloc_r+0xb0>
 8007224:	6822      	ldr	r2, [r4, #0]
 8007226:	1b52      	subs	r2, r2, r5
 8007228:	d41f      	bmi.n	800726a <_malloc_r+0xd6>
 800722a:	2a0b      	cmp	r2, #11
 800722c:	d917      	bls.n	800725e <_malloc_r+0xca>
 800722e:	1961      	adds	r1, r4, r5
 8007230:	42a3      	cmp	r3, r4
 8007232:	6025      	str	r5, [r4, #0]
 8007234:	bf18      	it	ne
 8007236:	6059      	strne	r1, [r3, #4]
 8007238:	6863      	ldr	r3, [r4, #4]
 800723a:	bf08      	it	eq
 800723c:	f8c8 1000 	streq.w	r1, [r8]
 8007240:	5162      	str	r2, [r4, r5]
 8007242:	604b      	str	r3, [r1, #4]
 8007244:	4638      	mov	r0, r7
 8007246:	f104 060b 	add.w	r6, r4, #11
 800724a:	f000 f829 	bl	80072a0 <__malloc_unlock>
 800724e:	f026 0607 	bic.w	r6, r6, #7
 8007252:	1d23      	adds	r3, r4, #4
 8007254:	1af2      	subs	r2, r6, r3
 8007256:	d0ae      	beq.n	80071b6 <_malloc_r+0x22>
 8007258:	1b9b      	subs	r3, r3, r6
 800725a:	50a3      	str	r3, [r4, r2]
 800725c:	e7ab      	b.n	80071b6 <_malloc_r+0x22>
 800725e:	42a3      	cmp	r3, r4
 8007260:	6862      	ldr	r2, [r4, #4]
 8007262:	d1dd      	bne.n	8007220 <_malloc_r+0x8c>
 8007264:	f8c8 2000 	str.w	r2, [r8]
 8007268:	e7ec      	b.n	8007244 <_malloc_r+0xb0>
 800726a:	4623      	mov	r3, r4
 800726c:	6864      	ldr	r4, [r4, #4]
 800726e:	e7ac      	b.n	80071ca <_malloc_r+0x36>
 8007270:	4634      	mov	r4, r6
 8007272:	6876      	ldr	r6, [r6, #4]
 8007274:	e7b4      	b.n	80071e0 <_malloc_r+0x4c>
 8007276:	4613      	mov	r3, r2
 8007278:	e7cc      	b.n	8007214 <_malloc_r+0x80>
 800727a:	230c      	movs	r3, #12
 800727c:	603b      	str	r3, [r7, #0]
 800727e:	4638      	mov	r0, r7
 8007280:	f000 f80e 	bl	80072a0 <__malloc_unlock>
 8007284:	e797      	b.n	80071b6 <_malloc_r+0x22>
 8007286:	6025      	str	r5, [r4, #0]
 8007288:	e7dc      	b.n	8007244 <_malloc_r+0xb0>
 800728a:	605b      	str	r3, [r3, #4]
 800728c:	deff      	udf	#255	; 0xff
 800728e:	bf00      	nop
 8007290:	20004cec 	.word	0x20004cec

08007294 <__malloc_lock>:
 8007294:	4801      	ldr	r0, [pc, #4]	; (800729c <__malloc_lock+0x8>)
 8007296:	f7ff bf00 	b.w	800709a <__retarget_lock_acquire_recursive>
 800729a:	bf00      	nop
 800729c:	20004ce8 	.word	0x20004ce8

080072a0 <__malloc_unlock>:
 80072a0:	4801      	ldr	r0, [pc, #4]	; (80072a8 <__malloc_unlock+0x8>)
 80072a2:	f7ff befb 	b.w	800709c <__retarget_lock_release_recursive>
 80072a6:	bf00      	nop
 80072a8:	20004ce8 	.word	0x20004ce8

080072ac <__sfputc_r>:
 80072ac:	6893      	ldr	r3, [r2, #8]
 80072ae:	3b01      	subs	r3, #1
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	b410      	push	{r4}
 80072b4:	6093      	str	r3, [r2, #8]
 80072b6:	da08      	bge.n	80072ca <__sfputc_r+0x1e>
 80072b8:	6994      	ldr	r4, [r2, #24]
 80072ba:	42a3      	cmp	r3, r4
 80072bc:	db01      	blt.n	80072c2 <__sfputc_r+0x16>
 80072be:	290a      	cmp	r1, #10
 80072c0:	d103      	bne.n	80072ca <__sfputc_r+0x1e>
 80072c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80072c6:	f7ff bd84 	b.w	8006dd2 <__swbuf_r>
 80072ca:	6813      	ldr	r3, [r2, #0]
 80072cc:	1c58      	adds	r0, r3, #1
 80072ce:	6010      	str	r0, [r2, #0]
 80072d0:	7019      	strb	r1, [r3, #0]
 80072d2:	4608      	mov	r0, r1
 80072d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80072d8:	4770      	bx	lr

080072da <__sfputs_r>:
 80072da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072dc:	4606      	mov	r6, r0
 80072de:	460f      	mov	r7, r1
 80072e0:	4614      	mov	r4, r2
 80072e2:	18d5      	adds	r5, r2, r3
 80072e4:	42ac      	cmp	r4, r5
 80072e6:	d101      	bne.n	80072ec <__sfputs_r+0x12>
 80072e8:	2000      	movs	r0, #0
 80072ea:	e007      	b.n	80072fc <__sfputs_r+0x22>
 80072ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80072f0:	463a      	mov	r2, r7
 80072f2:	4630      	mov	r0, r6
 80072f4:	f7ff ffda 	bl	80072ac <__sfputc_r>
 80072f8:	1c43      	adds	r3, r0, #1
 80072fa:	d1f3      	bne.n	80072e4 <__sfputs_r+0xa>
 80072fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007300 <_vfiprintf_r>:
 8007300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007304:	460d      	mov	r5, r1
 8007306:	b09d      	sub	sp, #116	; 0x74
 8007308:	4614      	mov	r4, r2
 800730a:	4698      	mov	r8, r3
 800730c:	4606      	mov	r6, r0
 800730e:	b118      	cbz	r0, 8007318 <_vfiprintf_r+0x18>
 8007310:	6a03      	ldr	r3, [r0, #32]
 8007312:	b90b      	cbnz	r3, 8007318 <_vfiprintf_r+0x18>
 8007314:	f7ff fc76 	bl	8006c04 <__sinit>
 8007318:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800731a:	07d9      	lsls	r1, r3, #31
 800731c:	d405      	bmi.n	800732a <_vfiprintf_r+0x2a>
 800731e:	89ab      	ldrh	r3, [r5, #12]
 8007320:	059a      	lsls	r2, r3, #22
 8007322:	d402      	bmi.n	800732a <_vfiprintf_r+0x2a>
 8007324:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007326:	f7ff feb8 	bl	800709a <__retarget_lock_acquire_recursive>
 800732a:	89ab      	ldrh	r3, [r5, #12]
 800732c:	071b      	lsls	r3, r3, #28
 800732e:	d501      	bpl.n	8007334 <_vfiprintf_r+0x34>
 8007330:	692b      	ldr	r3, [r5, #16]
 8007332:	b99b      	cbnz	r3, 800735c <_vfiprintf_r+0x5c>
 8007334:	4629      	mov	r1, r5
 8007336:	4630      	mov	r0, r6
 8007338:	f7ff fd88 	bl	8006e4c <__swsetup_r>
 800733c:	b170      	cbz	r0, 800735c <_vfiprintf_r+0x5c>
 800733e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007340:	07dc      	lsls	r4, r3, #31
 8007342:	d504      	bpl.n	800734e <_vfiprintf_r+0x4e>
 8007344:	f04f 30ff 	mov.w	r0, #4294967295
 8007348:	b01d      	add	sp, #116	; 0x74
 800734a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800734e:	89ab      	ldrh	r3, [r5, #12]
 8007350:	0598      	lsls	r0, r3, #22
 8007352:	d4f7      	bmi.n	8007344 <_vfiprintf_r+0x44>
 8007354:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007356:	f7ff fea1 	bl	800709c <__retarget_lock_release_recursive>
 800735a:	e7f3      	b.n	8007344 <_vfiprintf_r+0x44>
 800735c:	2300      	movs	r3, #0
 800735e:	9309      	str	r3, [sp, #36]	; 0x24
 8007360:	2320      	movs	r3, #32
 8007362:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007366:	f8cd 800c 	str.w	r8, [sp, #12]
 800736a:	2330      	movs	r3, #48	; 0x30
 800736c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8007520 <_vfiprintf_r+0x220>
 8007370:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007374:	f04f 0901 	mov.w	r9, #1
 8007378:	4623      	mov	r3, r4
 800737a:	469a      	mov	sl, r3
 800737c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007380:	b10a      	cbz	r2, 8007386 <_vfiprintf_r+0x86>
 8007382:	2a25      	cmp	r2, #37	; 0x25
 8007384:	d1f9      	bne.n	800737a <_vfiprintf_r+0x7a>
 8007386:	ebba 0b04 	subs.w	fp, sl, r4
 800738a:	d00b      	beq.n	80073a4 <_vfiprintf_r+0xa4>
 800738c:	465b      	mov	r3, fp
 800738e:	4622      	mov	r2, r4
 8007390:	4629      	mov	r1, r5
 8007392:	4630      	mov	r0, r6
 8007394:	f7ff ffa1 	bl	80072da <__sfputs_r>
 8007398:	3001      	adds	r0, #1
 800739a:	f000 80a9 	beq.w	80074f0 <_vfiprintf_r+0x1f0>
 800739e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80073a0:	445a      	add	r2, fp
 80073a2:	9209      	str	r2, [sp, #36]	; 0x24
 80073a4:	f89a 3000 	ldrb.w	r3, [sl]
 80073a8:	2b00      	cmp	r3, #0
 80073aa:	f000 80a1 	beq.w	80074f0 <_vfiprintf_r+0x1f0>
 80073ae:	2300      	movs	r3, #0
 80073b0:	f04f 32ff 	mov.w	r2, #4294967295
 80073b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80073b8:	f10a 0a01 	add.w	sl, sl, #1
 80073bc:	9304      	str	r3, [sp, #16]
 80073be:	9307      	str	r3, [sp, #28]
 80073c0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80073c4:	931a      	str	r3, [sp, #104]	; 0x68
 80073c6:	4654      	mov	r4, sl
 80073c8:	2205      	movs	r2, #5
 80073ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80073ce:	4854      	ldr	r0, [pc, #336]	; (8007520 <_vfiprintf_r+0x220>)
 80073d0:	f7f8 ff0e 	bl	80001f0 <memchr>
 80073d4:	9a04      	ldr	r2, [sp, #16]
 80073d6:	b9d8      	cbnz	r0, 8007410 <_vfiprintf_r+0x110>
 80073d8:	06d1      	lsls	r1, r2, #27
 80073da:	bf44      	itt	mi
 80073dc:	2320      	movmi	r3, #32
 80073de:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80073e2:	0713      	lsls	r3, r2, #28
 80073e4:	bf44      	itt	mi
 80073e6:	232b      	movmi	r3, #43	; 0x2b
 80073e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80073ec:	f89a 3000 	ldrb.w	r3, [sl]
 80073f0:	2b2a      	cmp	r3, #42	; 0x2a
 80073f2:	d015      	beq.n	8007420 <_vfiprintf_r+0x120>
 80073f4:	9a07      	ldr	r2, [sp, #28]
 80073f6:	4654      	mov	r4, sl
 80073f8:	2000      	movs	r0, #0
 80073fa:	f04f 0c0a 	mov.w	ip, #10
 80073fe:	4621      	mov	r1, r4
 8007400:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007404:	3b30      	subs	r3, #48	; 0x30
 8007406:	2b09      	cmp	r3, #9
 8007408:	d94d      	bls.n	80074a6 <_vfiprintf_r+0x1a6>
 800740a:	b1b0      	cbz	r0, 800743a <_vfiprintf_r+0x13a>
 800740c:	9207      	str	r2, [sp, #28]
 800740e:	e014      	b.n	800743a <_vfiprintf_r+0x13a>
 8007410:	eba0 0308 	sub.w	r3, r0, r8
 8007414:	fa09 f303 	lsl.w	r3, r9, r3
 8007418:	4313      	orrs	r3, r2
 800741a:	9304      	str	r3, [sp, #16]
 800741c:	46a2      	mov	sl, r4
 800741e:	e7d2      	b.n	80073c6 <_vfiprintf_r+0xc6>
 8007420:	9b03      	ldr	r3, [sp, #12]
 8007422:	1d19      	adds	r1, r3, #4
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	9103      	str	r1, [sp, #12]
 8007428:	2b00      	cmp	r3, #0
 800742a:	bfbb      	ittet	lt
 800742c:	425b      	neglt	r3, r3
 800742e:	f042 0202 	orrlt.w	r2, r2, #2
 8007432:	9307      	strge	r3, [sp, #28]
 8007434:	9307      	strlt	r3, [sp, #28]
 8007436:	bfb8      	it	lt
 8007438:	9204      	strlt	r2, [sp, #16]
 800743a:	7823      	ldrb	r3, [r4, #0]
 800743c:	2b2e      	cmp	r3, #46	; 0x2e
 800743e:	d10c      	bne.n	800745a <_vfiprintf_r+0x15a>
 8007440:	7863      	ldrb	r3, [r4, #1]
 8007442:	2b2a      	cmp	r3, #42	; 0x2a
 8007444:	d134      	bne.n	80074b0 <_vfiprintf_r+0x1b0>
 8007446:	9b03      	ldr	r3, [sp, #12]
 8007448:	1d1a      	adds	r2, r3, #4
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	9203      	str	r2, [sp, #12]
 800744e:	2b00      	cmp	r3, #0
 8007450:	bfb8      	it	lt
 8007452:	f04f 33ff 	movlt.w	r3, #4294967295
 8007456:	3402      	adds	r4, #2
 8007458:	9305      	str	r3, [sp, #20]
 800745a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8007530 <_vfiprintf_r+0x230>
 800745e:	7821      	ldrb	r1, [r4, #0]
 8007460:	2203      	movs	r2, #3
 8007462:	4650      	mov	r0, sl
 8007464:	f7f8 fec4 	bl	80001f0 <memchr>
 8007468:	b138      	cbz	r0, 800747a <_vfiprintf_r+0x17a>
 800746a:	9b04      	ldr	r3, [sp, #16]
 800746c:	eba0 000a 	sub.w	r0, r0, sl
 8007470:	2240      	movs	r2, #64	; 0x40
 8007472:	4082      	lsls	r2, r0
 8007474:	4313      	orrs	r3, r2
 8007476:	3401      	adds	r4, #1
 8007478:	9304      	str	r3, [sp, #16]
 800747a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800747e:	4829      	ldr	r0, [pc, #164]	; (8007524 <_vfiprintf_r+0x224>)
 8007480:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007484:	2206      	movs	r2, #6
 8007486:	f7f8 feb3 	bl	80001f0 <memchr>
 800748a:	2800      	cmp	r0, #0
 800748c:	d03f      	beq.n	800750e <_vfiprintf_r+0x20e>
 800748e:	4b26      	ldr	r3, [pc, #152]	; (8007528 <_vfiprintf_r+0x228>)
 8007490:	bb1b      	cbnz	r3, 80074da <_vfiprintf_r+0x1da>
 8007492:	9b03      	ldr	r3, [sp, #12]
 8007494:	3307      	adds	r3, #7
 8007496:	f023 0307 	bic.w	r3, r3, #7
 800749a:	3308      	adds	r3, #8
 800749c:	9303      	str	r3, [sp, #12]
 800749e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80074a0:	443b      	add	r3, r7
 80074a2:	9309      	str	r3, [sp, #36]	; 0x24
 80074a4:	e768      	b.n	8007378 <_vfiprintf_r+0x78>
 80074a6:	fb0c 3202 	mla	r2, ip, r2, r3
 80074aa:	460c      	mov	r4, r1
 80074ac:	2001      	movs	r0, #1
 80074ae:	e7a6      	b.n	80073fe <_vfiprintf_r+0xfe>
 80074b0:	2300      	movs	r3, #0
 80074b2:	3401      	adds	r4, #1
 80074b4:	9305      	str	r3, [sp, #20]
 80074b6:	4619      	mov	r1, r3
 80074b8:	f04f 0c0a 	mov.w	ip, #10
 80074bc:	4620      	mov	r0, r4
 80074be:	f810 2b01 	ldrb.w	r2, [r0], #1
 80074c2:	3a30      	subs	r2, #48	; 0x30
 80074c4:	2a09      	cmp	r2, #9
 80074c6:	d903      	bls.n	80074d0 <_vfiprintf_r+0x1d0>
 80074c8:	2b00      	cmp	r3, #0
 80074ca:	d0c6      	beq.n	800745a <_vfiprintf_r+0x15a>
 80074cc:	9105      	str	r1, [sp, #20]
 80074ce:	e7c4      	b.n	800745a <_vfiprintf_r+0x15a>
 80074d0:	fb0c 2101 	mla	r1, ip, r1, r2
 80074d4:	4604      	mov	r4, r0
 80074d6:	2301      	movs	r3, #1
 80074d8:	e7f0      	b.n	80074bc <_vfiprintf_r+0x1bc>
 80074da:	ab03      	add	r3, sp, #12
 80074dc:	9300      	str	r3, [sp, #0]
 80074de:	462a      	mov	r2, r5
 80074e0:	4b12      	ldr	r3, [pc, #72]	; (800752c <_vfiprintf_r+0x22c>)
 80074e2:	a904      	add	r1, sp, #16
 80074e4:	4630      	mov	r0, r6
 80074e6:	f3af 8000 	nop.w
 80074ea:	4607      	mov	r7, r0
 80074ec:	1c78      	adds	r0, r7, #1
 80074ee:	d1d6      	bne.n	800749e <_vfiprintf_r+0x19e>
 80074f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80074f2:	07d9      	lsls	r1, r3, #31
 80074f4:	d405      	bmi.n	8007502 <_vfiprintf_r+0x202>
 80074f6:	89ab      	ldrh	r3, [r5, #12]
 80074f8:	059a      	lsls	r2, r3, #22
 80074fa:	d402      	bmi.n	8007502 <_vfiprintf_r+0x202>
 80074fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80074fe:	f7ff fdcd 	bl	800709c <__retarget_lock_release_recursive>
 8007502:	89ab      	ldrh	r3, [r5, #12]
 8007504:	065b      	lsls	r3, r3, #25
 8007506:	f53f af1d 	bmi.w	8007344 <_vfiprintf_r+0x44>
 800750a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800750c:	e71c      	b.n	8007348 <_vfiprintf_r+0x48>
 800750e:	ab03      	add	r3, sp, #12
 8007510:	9300      	str	r3, [sp, #0]
 8007512:	462a      	mov	r2, r5
 8007514:	4b05      	ldr	r3, [pc, #20]	; (800752c <_vfiprintf_r+0x22c>)
 8007516:	a904      	add	r1, sp, #16
 8007518:	4630      	mov	r0, r6
 800751a:	f000 f879 	bl	8007610 <_printf_i>
 800751e:	e7e4      	b.n	80074ea <_vfiprintf_r+0x1ea>
 8007520:	08007d14 	.word	0x08007d14
 8007524:	08007d1e 	.word	0x08007d1e
 8007528:	00000000 	.word	0x00000000
 800752c:	080072db 	.word	0x080072db
 8007530:	08007d1a 	.word	0x08007d1a

08007534 <_printf_common>:
 8007534:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007538:	4616      	mov	r6, r2
 800753a:	4699      	mov	r9, r3
 800753c:	688a      	ldr	r2, [r1, #8]
 800753e:	690b      	ldr	r3, [r1, #16]
 8007540:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8007544:	4293      	cmp	r3, r2
 8007546:	bfb8      	it	lt
 8007548:	4613      	movlt	r3, r2
 800754a:	6033      	str	r3, [r6, #0]
 800754c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8007550:	4607      	mov	r7, r0
 8007552:	460c      	mov	r4, r1
 8007554:	b10a      	cbz	r2, 800755a <_printf_common+0x26>
 8007556:	3301      	adds	r3, #1
 8007558:	6033      	str	r3, [r6, #0]
 800755a:	6823      	ldr	r3, [r4, #0]
 800755c:	0699      	lsls	r1, r3, #26
 800755e:	bf42      	ittt	mi
 8007560:	6833      	ldrmi	r3, [r6, #0]
 8007562:	3302      	addmi	r3, #2
 8007564:	6033      	strmi	r3, [r6, #0]
 8007566:	6825      	ldr	r5, [r4, #0]
 8007568:	f015 0506 	ands.w	r5, r5, #6
 800756c:	d106      	bne.n	800757c <_printf_common+0x48>
 800756e:	f104 0a19 	add.w	sl, r4, #25
 8007572:	68e3      	ldr	r3, [r4, #12]
 8007574:	6832      	ldr	r2, [r6, #0]
 8007576:	1a9b      	subs	r3, r3, r2
 8007578:	42ab      	cmp	r3, r5
 800757a:	dc26      	bgt.n	80075ca <_printf_common+0x96>
 800757c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8007580:	1e13      	subs	r3, r2, #0
 8007582:	6822      	ldr	r2, [r4, #0]
 8007584:	bf18      	it	ne
 8007586:	2301      	movne	r3, #1
 8007588:	0692      	lsls	r2, r2, #26
 800758a:	d42b      	bmi.n	80075e4 <_printf_common+0xb0>
 800758c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8007590:	4649      	mov	r1, r9
 8007592:	4638      	mov	r0, r7
 8007594:	47c0      	blx	r8
 8007596:	3001      	adds	r0, #1
 8007598:	d01e      	beq.n	80075d8 <_printf_common+0xa4>
 800759a:	6823      	ldr	r3, [r4, #0]
 800759c:	6922      	ldr	r2, [r4, #16]
 800759e:	f003 0306 	and.w	r3, r3, #6
 80075a2:	2b04      	cmp	r3, #4
 80075a4:	bf02      	ittt	eq
 80075a6:	68e5      	ldreq	r5, [r4, #12]
 80075a8:	6833      	ldreq	r3, [r6, #0]
 80075aa:	1aed      	subeq	r5, r5, r3
 80075ac:	68a3      	ldr	r3, [r4, #8]
 80075ae:	bf0c      	ite	eq
 80075b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80075b4:	2500      	movne	r5, #0
 80075b6:	4293      	cmp	r3, r2
 80075b8:	bfc4      	itt	gt
 80075ba:	1a9b      	subgt	r3, r3, r2
 80075bc:	18ed      	addgt	r5, r5, r3
 80075be:	2600      	movs	r6, #0
 80075c0:	341a      	adds	r4, #26
 80075c2:	42b5      	cmp	r5, r6
 80075c4:	d11a      	bne.n	80075fc <_printf_common+0xc8>
 80075c6:	2000      	movs	r0, #0
 80075c8:	e008      	b.n	80075dc <_printf_common+0xa8>
 80075ca:	2301      	movs	r3, #1
 80075cc:	4652      	mov	r2, sl
 80075ce:	4649      	mov	r1, r9
 80075d0:	4638      	mov	r0, r7
 80075d2:	47c0      	blx	r8
 80075d4:	3001      	adds	r0, #1
 80075d6:	d103      	bne.n	80075e0 <_printf_common+0xac>
 80075d8:	f04f 30ff 	mov.w	r0, #4294967295
 80075dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075e0:	3501      	adds	r5, #1
 80075e2:	e7c6      	b.n	8007572 <_printf_common+0x3e>
 80075e4:	18e1      	adds	r1, r4, r3
 80075e6:	1c5a      	adds	r2, r3, #1
 80075e8:	2030      	movs	r0, #48	; 0x30
 80075ea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80075ee:	4422      	add	r2, r4
 80075f0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80075f4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80075f8:	3302      	adds	r3, #2
 80075fa:	e7c7      	b.n	800758c <_printf_common+0x58>
 80075fc:	2301      	movs	r3, #1
 80075fe:	4622      	mov	r2, r4
 8007600:	4649      	mov	r1, r9
 8007602:	4638      	mov	r0, r7
 8007604:	47c0      	blx	r8
 8007606:	3001      	adds	r0, #1
 8007608:	d0e6      	beq.n	80075d8 <_printf_common+0xa4>
 800760a:	3601      	adds	r6, #1
 800760c:	e7d9      	b.n	80075c2 <_printf_common+0x8e>
	...

08007610 <_printf_i>:
 8007610:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007614:	7e0f      	ldrb	r7, [r1, #24]
 8007616:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8007618:	2f78      	cmp	r7, #120	; 0x78
 800761a:	4691      	mov	r9, r2
 800761c:	4680      	mov	r8, r0
 800761e:	460c      	mov	r4, r1
 8007620:	469a      	mov	sl, r3
 8007622:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8007626:	d807      	bhi.n	8007638 <_printf_i+0x28>
 8007628:	2f62      	cmp	r7, #98	; 0x62
 800762a:	d80a      	bhi.n	8007642 <_printf_i+0x32>
 800762c:	2f00      	cmp	r7, #0
 800762e:	f000 80d4 	beq.w	80077da <_printf_i+0x1ca>
 8007632:	2f58      	cmp	r7, #88	; 0x58
 8007634:	f000 80c0 	beq.w	80077b8 <_printf_i+0x1a8>
 8007638:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800763c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8007640:	e03a      	b.n	80076b8 <_printf_i+0xa8>
 8007642:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8007646:	2b15      	cmp	r3, #21
 8007648:	d8f6      	bhi.n	8007638 <_printf_i+0x28>
 800764a:	a101      	add	r1, pc, #4	; (adr r1, 8007650 <_printf_i+0x40>)
 800764c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8007650:	080076a9 	.word	0x080076a9
 8007654:	080076bd 	.word	0x080076bd
 8007658:	08007639 	.word	0x08007639
 800765c:	08007639 	.word	0x08007639
 8007660:	08007639 	.word	0x08007639
 8007664:	08007639 	.word	0x08007639
 8007668:	080076bd 	.word	0x080076bd
 800766c:	08007639 	.word	0x08007639
 8007670:	08007639 	.word	0x08007639
 8007674:	08007639 	.word	0x08007639
 8007678:	08007639 	.word	0x08007639
 800767c:	080077c1 	.word	0x080077c1
 8007680:	080076e9 	.word	0x080076e9
 8007684:	0800777b 	.word	0x0800777b
 8007688:	08007639 	.word	0x08007639
 800768c:	08007639 	.word	0x08007639
 8007690:	080077e3 	.word	0x080077e3
 8007694:	08007639 	.word	0x08007639
 8007698:	080076e9 	.word	0x080076e9
 800769c:	08007639 	.word	0x08007639
 80076a0:	08007639 	.word	0x08007639
 80076a4:	08007783 	.word	0x08007783
 80076a8:	682b      	ldr	r3, [r5, #0]
 80076aa:	1d1a      	adds	r2, r3, #4
 80076ac:	681b      	ldr	r3, [r3, #0]
 80076ae:	602a      	str	r2, [r5, #0]
 80076b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80076b4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80076b8:	2301      	movs	r3, #1
 80076ba:	e09f      	b.n	80077fc <_printf_i+0x1ec>
 80076bc:	6820      	ldr	r0, [r4, #0]
 80076be:	682b      	ldr	r3, [r5, #0]
 80076c0:	0607      	lsls	r7, r0, #24
 80076c2:	f103 0104 	add.w	r1, r3, #4
 80076c6:	6029      	str	r1, [r5, #0]
 80076c8:	d501      	bpl.n	80076ce <_printf_i+0xbe>
 80076ca:	681e      	ldr	r6, [r3, #0]
 80076cc:	e003      	b.n	80076d6 <_printf_i+0xc6>
 80076ce:	0646      	lsls	r6, r0, #25
 80076d0:	d5fb      	bpl.n	80076ca <_printf_i+0xba>
 80076d2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80076d6:	2e00      	cmp	r6, #0
 80076d8:	da03      	bge.n	80076e2 <_printf_i+0xd2>
 80076da:	232d      	movs	r3, #45	; 0x2d
 80076dc:	4276      	negs	r6, r6
 80076de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80076e2:	485a      	ldr	r0, [pc, #360]	; (800784c <_printf_i+0x23c>)
 80076e4:	230a      	movs	r3, #10
 80076e6:	e012      	b.n	800770e <_printf_i+0xfe>
 80076e8:	682b      	ldr	r3, [r5, #0]
 80076ea:	6820      	ldr	r0, [r4, #0]
 80076ec:	1d19      	adds	r1, r3, #4
 80076ee:	6029      	str	r1, [r5, #0]
 80076f0:	0605      	lsls	r5, r0, #24
 80076f2:	d501      	bpl.n	80076f8 <_printf_i+0xe8>
 80076f4:	681e      	ldr	r6, [r3, #0]
 80076f6:	e002      	b.n	80076fe <_printf_i+0xee>
 80076f8:	0641      	lsls	r1, r0, #25
 80076fa:	d5fb      	bpl.n	80076f4 <_printf_i+0xe4>
 80076fc:	881e      	ldrh	r6, [r3, #0]
 80076fe:	4853      	ldr	r0, [pc, #332]	; (800784c <_printf_i+0x23c>)
 8007700:	2f6f      	cmp	r7, #111	; 0x6f
 8007702:	bf0c      	ite	eq
 8007704:	2308      	moveq	r3, #8
 8007706:	230a      	movne	r3, #10
 8007708:	2100      	movs	r1, #0
 800770a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800770e:	6865      	ldr	r5, [r4, #4]
 8007710:	60a5      	str	r5, [r4, #8]
 8007712:	2d00      	cmp	r5, #0
 8007714:	bfa2      	ittt	ge
 8007716:	6821      	ldrge	r1, [r4, #0]
 8007718:	f021 0104 	bicge.w	r1, r1, #4
 800771c:	6021      	strge	r1, [r4, #0]
 800771e:	b90e      	cbnz	r6, 8007724 <_printf_i+0x114>
 8007720:	2d00      	cmp	r5, #0
 8007722:	d04b      	beq.n	80077bc <_printf_i+0x1ac>
 8007724:	4615      	mov	r5, r2
 8007726:	fbb6 f1f3 	udiv	r1, r6, r3
 800772a:	fb03 6711 	mls	r7, r3, r1, r6
 800772e:	5dc7      	ldrb	r7, [r0, r7]
 8007730:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8007734:	4637      	mov	r7, r6
 8007736:	42bb      	cmp	r3, r7
 8007738:	460e      	mov	r6, r1
 800773a:	d9f4      	bls.n	8007726 <_printf_i+0x116>
 800773c:	2b08      	cmp	r3, #8
 800773e:	d10b      	bne.n	8007758 <_printf_i+0x148>
 8007740:	6823      	ldr	r3, [r4, #0]
 8007742:	07de      	lsls	r6, r3, #31
 8007744:	d508      	bpl.n	8007758 <_printf_i+0x148>
 8007746:	6923      	ldr	r3, [r4, #16]
 8007748:	6861      	ldr	r1, [r4, #4]
 800774a:	4299      	cmp	r1, r3
 800774c:	bfde      	ittt	le
 800774e:	2330      	movle	r3, #48	; 0x30
 8007750:	f805 3c01 	strble.w	r3, [r5, #-1]
 8007754:	f105 35ff 	addle.w	r5, r5, #4294967295
 8007758:	1b52      	subs	r2, r2, r5
 800775a:	6122      	str	r2, [r4, #16]
 800775c:	f8cd a000 	str.w	sl, [sp]
 8007760:	464b      	mov	r3, r9
 8007762:	aa03      	add	r2, sp, #12
 8007764:	4621      	mov	r1, r4
 8007766:	4640      	mov	r0, r8
 8007768:	f7ff fee4 	bl	8007534 <_printf_common>
 800776c:	3001      	adds	r0, #1
 800776e:	d14a      	bne.n	8007806 <_printf_i+0x1f6>
 8007770:	f04f 30ff 	mov.w	r0, #4294967295
 8007774:	b004      	add	sp, #16
 8007776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800777a:	6823      	ldr	r3, [r4, #0]
 800777c:	f043 0320 	orr.w	r3, r3, #32
 8007780:	6023      	str	r3, [r4, #0]
 8007782:	4833      	ldr	r0, [pc, #204]	; (8007850 <_printf_i+0x240>)
 8007784:	2778      	movs	r7, #120	; 0x78
 8007786:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800778a:	6823      	ldr	r3, [r4, #0]
 800778c:	6829      	ldr	r1, [r5, #0]
 800778e:	061f      	lsls	r7, r3, #24
 8007790:	f851 6b04 	ldr.w	r6, [r1], #4
 8007794:	d402      	bmi.n	800779c <_printf_i+0x18c>
 8007796:	065f      	lsls	r7, r3, #25
 8007798:	bf48      	it	mi
 800779a:	b2b6      	uxthmi	r6, r6
 800779c:	07df      	lsls	r7, r3, #31
 800779e:	bf48      	it	mi
 80077a0:	f043 0320 	orrmi.w	r3, r3, #32
 80077a4:	6029      	str	r1, [r5, #0]
 80077a6:	bf48      	it	mi
 80077a8:	6023      	strmi	r3, [r4, #0]
 80077aa:	b91e      	cbnz	r6, 80077b4 <_printf_i+0x1a4>
 80077ac:	6823      	ldr	r3, [r4, #0]
 80077ae:	f023 0320 	bic.w	r3, r3, #32
 80077b2:	6023      	str	r3, [r4, #0]
 80077b4:	2310      	movs	r3, #16
 80077b6:	e7a7      	b.n	8007708 <_printf_i+0xf8>
 80077b8:	4824      	ldr	r0, [pc, #144]	; (800784c <_printf_i+0x23c>)
 80077ba:	e7e4      	b.n	8007786 <_printf_i+0x176>
 80077bc:	4615      	mov	r5, r2
 80077be:	e7bd      	b.n	800773c <_printf_i+0x12c>
 80077c0:	682b      	ldr	r3, [r5, #0]
 80077c2:	6826      	ldr	r6, [r4, #0]
 80077c4:	6961      	ldr	r1, [r4, #20]
 80077c6:	1d18      	adds	r0, r3, #4
 80077c8:	6028      	str	r0, [r5, #0]
 80077ca:	0635      	lsls	r5, r6, #24
 80077cc:	681b      	ldr	r3, [r3, #0]
 80077ce:	d501      	bpl.n	80077d4 <_printf_i+0x1c4>
 80077d0:	6019      	str	r1, [r3, #0]
 80077d2:	e002      	b.n	80077da <_printf_i+0x1ca>
 80077d4:	0670      	lsls	r0, r6, #25
 80077d6:	d5fb      	bpl.n	80077d0 <_printf_i+0x1c0>
 80077d8:	8019      	strh	r1, [r3, #0]
 80077da:	2300      	movs	r3, #0
 80077dc:	6123      	str	r3, [r4, #16]
 80077de:	4615      	mov	r5, r2
 80077e0:	e7bc      	b.n	800775c <_printf_i+0x14c>
 80077e2:	682b      	ldr	r3, [r5, #0]
 80077e4:	1d1a      	adds	r2, r3, #4
 80077e6:	602a      	str	r2, [r5, #0]
 80077e8:	681d      	ldr	r5, [r3, #0]
 80077ea:	6862      	ldr	r2, [r4, #4]
 80077ec:	2100      	movs	r1, #0
 80077ee:	4628      	mov	r0, r5
 80077f0:	f7f8 fcfe 	bl	80001f0 <memchr>
 80077f4:	b108      	cbz	r0, 80077fa <_printf_i+0x1ea>
 80077f6:	1b40      	subs	r0, r0, r5
 80077f8:	6060      	str	r0, [r4, #4]
 80077fa:	6863      	ldr	r3, [r4, #4]
 80077fc:	6123      	str	r3, [r4, #16]
 80077fe:	2300      	movs	r3, #0
 8007800:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007804:	e7aa      	b.n	800775c <_printf_i+0x14c>
 8007806:	6923      	ldr	r3, [r4, #16]
 8007808:	462a      	mov	r2, r5
 800780a:	4649      	mov	r1, r9
 800780c:	4640      	mov	r0, r8
 800780e:	47d0      	blx	sl
 8007810:	3001      	adds	r0, #1
 8007812:	d0ad      	beq.n	8007770 <_printf_i+0x160>
 8007814:	6823      	ldr	r3, [r4, #0]
 8007816:	079b      	lsls	r3, r3, #30
 8007818:	d413      	bmi.n	8007842 <_printf_i+0x232>
 800781a:	68e0      	ldr	r0, [r4, #12]
 800781c:	9b03      	ldr	r3, [sp, #12]
 800781e:	4298      	cmp	r0, r3
 8007820:	bfb8      	it	lt
 8007822:	4618      	movlt	r0, r3
 8007824:	e7a6      	b.n	8007774 <_printf_i+0x164>
 8007826:	2301      	movs	r3, #1
 8007828:	4632      	mov	r2, r6
 800782a:	4649      	mov	r1, r9
 800782c:	4640      	mov	r0, r8
 800782e:	47d0      	blx	sl
 8007830:	3001      	adds	r0, #1
 8007832:	d09d      	beq.n	8007770 <_printf_i+0x160>
 8007834:	3501      	adds	r5, #1
 8007836:	68e3      	ldr	r3, [r4, #12]
 8007838:	9903      	ldr	r1, [sp, #12]
 800783a:	1a5b      	subs	r3, r3, r1
 800783c:	42ab      	cmp	r3, r5
 800783e:	dcf2      	bgt.n	8007826 <_printf_i+0x216>
 8007840:	e7eb      	b.n	800781a <_printf_i+0x20a>
 8007842:	2500      	movs	r5, #0
 8007844:	f104 0619 	add.w	r6, r4, #25
 8007848:	e7f5      	b.n	8007836 <_printf_i+0x226>
 800784a:	bf00      	nop
 800784c:	08007d25 	.word	0x08007d25
 8007850:	08007d36 	.word	0x08007d36

08007854 <__sflush_r>:
 8007854:	898a      	ldrh	r2, [r1, #12]
 8007856:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800785a:	4605      	mov	r5, r0
 800785c:	0710      	lsls	r0, r2, #28
 800785e:	460c      	mov	r4, r1
 8007860:	d458      	bmi.n	8007914 <__sflush_r+0xc0>
 8007862:	684b      	ldr	r3, [r1, #4]
 8007864:	2b00      	cmp	r3, #0
 8007866:	dc05      	bgt.n	8007874 <__sflush_r+0x20>
 8007868:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800786a:	2b00      	cmp	r3, #0
 800786c:	dc02      	bgt.n	8007874 <__sflush_r+0x20>
 800786e:	2000      	movs	r0, #0
 8007870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007874:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007876:	2e00      	cmp	r6, #0
 8007878:	d0f9      	beq.n	800786e <__sflush_r+0x1a>
 800787a:	2300      	movs	r3, #0
 800787c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007880:	682f      	ldr	r7, [r5, #0]
 8007882:	6a21      	ldr	r1, [r4, #32]
 8007884:	602b      	str	r3, [r5, #0]
 8007886:	d032      	beq.n	80078ee <__sflush_r+0x9a>
 8007888:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800788a:	89a3      	ldrh	r3, [r4, #12]
 800788c:	075a      	lsls	r2, r3, #29
 800788e:	d505      	bpl.n	800789c <__sflush_r+0x48>
 8007890:	6863      	ldr	r3, [r4, #4]
 8007892:	1ac0      	subs	r0, r0, r3
 8007894:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007896:	b10b      	cbz	r3, 800789c <__sflush_r+0x48>
 8007898:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800789a:	1ac0      	subs	r0, r0, r3
 800789c:	2300      	movs	r3, #0
 800789e:	4602      	mov	r2, r0
 80078a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80078a2:	6a21      	ldr	r1, [r4, #32]
 80078a4:	4628      	mov	r0, r5
 80078a6:	47b0      	blx	r6
 80078a8:	1c43      	adds	r3, r0, #1
 80078aa:	89a3      	ldrh	r3, [r4, #12]
 80078ac:	d106      	bne.n	80078bc <__sflush_r+0x68>
 80078ae:	6829      	ldr	r1, [r5, #0]
 80078b0:	291d      	cmp	r1, #29
 80078b2:	d82b      	bhi.n	800790c <__sflush_r+0xb8>
 80078b4:	4a29      	ldr	r2, [pc, #164]	; (800795c <__sflush_r+0x108>)
 80078b6:	410a      	asrs	r2, r1
 80078b8:	07d6      	lsls	r6, r2, #31
 80078ba:	d427      	bmi.n	800790c <__sflush_r+0xb8>
 80078bc:	2200      	movs	r2, #0
 80078be:	6062      	str	r2, [r4, #4]
 80078c0:	04d9      	lsls	r1, r3, #19
 80078c2:	6922      	ldr	r2, [r4, #16]
 80078c4:	6022      	str	r2, [r4, #0]
 80078c6:	d504      	bpl.n	80078d2 <__sflush_r+0x7e>
 80078c8:	1c42      	adds	r2, r0, #1
 80078ca:	d101      	bne.n	80078d0 <__sflush_r+0x7c>
 80078cc:	682b      	ldr	r3, [r5, #0]
 80078ce:	b903      	cbnz	r3, 80078d2 <__sflush_r+0x7e>
 80078d0:	6560      	str	r0, [r4, #84]	; 0x54
 80078d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80078d4:	602f      	str	r7, [r5, #0]
 80078d6:	2900      	cmp	r1, #0
 80078d8:	d0c9      	beq.n	800786e <__sflush_r+0x1a>
 80078da:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80078de:	4299      	cmp	r1, r3
 80078e0:	d002      	beq.n	80078e8 <__sflush_r+0x94>
 80078e2:	4628      	mov	r0, r5
 80078e4:	f7ff fbea 	bl	80070bc <_free_r>
 80078e8:	2000      	movs	r0, #0
 80078ea:	6360      	str	r0, [r4, #52]	; 0x34
 80078ec:	e7c0      	b.n	8007870 <__sflush_r+0x1c>
 80078ee:	2301      	movs	r3, #1
 80078f0:	4628      	mov	r0, r5
 80078f2:	47b0      	blx	r6
 80078f4:	1c41      	adds	r1, r0, #1
 80078f6:	d1c8      	bne.n	800788a <__sflush_r+0x36>
 80078f8:	682b      	ldr	r3, [r5, #0]
 80078fa:	2b00      	cmp	r3, #0
 80078fc:	d0c5      	beq.n	800788a <__sflush_r+0x36>
 80078fe:	2b1d      	cmp	r3, #29
 8007900:	d001      	beq.n	8007906 <__sflush_r+0xb2>
 8007902:	2b16      	cmp	r3, #22
 8007904:	d101      	bne.n	800790a <__sflush_r+0xb6>
 8007906:	602f      	str	r7, [r5, #0]
 8007908:	e7b1      	b.n	800786e <__sflush_r+0x1a>
 800790a:	89a3      	ldrh	r3, [r4, #12]
 800790c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007910:	81a3      	strh	r3, [r4, #12]
 8007912:	e7ad      	b.n	8007870 <__sflush_r+0x1c>
 8007914:	690f      	ldr	r7, [r1, #16]
 8007916:	2f00      	cmp	r7, #0
 8007918:	d0a9      	beq.n	800786e <__sflush_r+0x1a>
 800791a:	0793      	lsls	r3, r2, #30
 800791c:	680e      	ldr	r6, [r1, #0]
 800791e:	bf08      	it	eq
 8007920:	694b      	ldreq	r3, [r1, #20]
 8007922:	600f      	str	r7, [r1, #0]
 8007924:	bf18      	it	ne
 8007926:	2300      	movne	r3, #0
 8007928:	eba6 0807 	sub.w	r8, r6, r7
 800792c:	608b      	str	r3, [r1, #8]
 800792e:	f1b8 0f00 	cmp.w	r8, #0
 8007932:	dd9c      	ble.n	800786e <__sflush_r+0x1a>
 8007934:	6a21      	ldr	r1, [r4, #32]
 8007936:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007938:	4643      	mov	r3, r8
 800793a:	463a      	mov	r2, r7
 800793c:	4628      	mov	r0, r5
 800793e:	47b0      	blx	r6
 8007940:	2800      	cmp	r0, #0
 8007942:	dc06      	bgt.n	8007952 <__sflush_r+0xfe>
 8007944:	89a3      	ldrh	r3, [r4, #12]
 8007946:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800794a:	81a3      	strh	r3, [r4, #12]
 800794c:	f04f 30ff 	mov.w	r0, #4294967295
 8007950:	e78e      	b.n	8007870 <__sflush_r+0x1c>
 8007952:	4407      	add	r7, r0
 8007954:	eba8 0800 	sub.w	r8, r8, r0
 8007958:	e7e9      	b.n	800792e <__sflush_r+0xda>
 800795a:	bf00      	nop
 800795c:	dfbffffe 	.word	0xdfbffffe

08007960 <_fflush_r>:
 8007960:	b538      	push	{r3, r4, r5, lr}
 8007962:	690b      	ldr	r3, [r1, #16]
 8007964:	4605      	mov	r5, r0
 8007966:	460c      	mov	r4, r1
 8007968:	b913      	cbnz	r3, 8007970 <_fflush_r+0x10>
 800796a:	2500      	movs	r5, #0
 800796c:	4628      	mov	r0, r5
 800796e:	bd38      	pop	{r3, r4, r5, pc}
 8007970:	b118      	cbz	r0, 800797a <_fflush_r+0x1a>
 8007972:	6a03      	ldr	r3, [r0, #32]
 8007974:	b90b      	cbnz	r3, 800797a <_fflush_r+0x1a>
 8007976:	f7ff f945 	bl	8006c04 <__sinit>
 800797a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800797e:	2b00      	cmp	r3, #0
 8007980:	d0f3      	beq.n	800796a <_fflush_r+0xa>
 8007982:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007984:	07d0      	lsls	r0, r2, #31
 8007986:	d404      	bmi.n	8007992 <_fflush_r+0x32>
 8007988:	0599      	lsls	r1, r3, #22
 800798a:	d402      	bmi.n	8007992 <_fflush_r+0x32>
 800798c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800798e:	f7ff fb84 	bl	800709a <__retarget_lock_acquire_recursive>
 8007992:	4628      	mov	r0, r5
 8007994:	4621      	mov	r1, r4
 8007996:	f7ff ff5d 	bl	8007854 <__sflush_r>
 800799a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800799c:	07da      	lsls	r2, r3, #31
 800799e:	4605      	mov	r5, r0
 80079a0:	d4e4      	bmi.n	800796c <_fflush_r+0xc>
 80079a2:	89a3      	ldrh	r3, [r4, #12]
 80079a4:	059b      	lsls	r3, r3, #22
 80079a6:	d4e1      	bmi.n	800796c <_fflush_r+0xc>
 80079a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80079aa:	f7ff fb77 	bl	800709c <__retarget_lock_release_recursive>
 80079ae:	e7dd      	b.n	800796c <_fflush_r+0xc>

080079b0 <__swhatbuf_r>:
 80079b0:	b570      	push	{r4, r5, r6, lr}
 80079b2:	460c      	mov	r4, r1
 80079b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80079b8:	2900      	cmp	r1, #0
 80079ba:	b096      	sub	sp, #88	; 0x58
 80079bc:	4615      	mov	r5, r2
 80079be:	461e      	mov	r6, r3
 80079c0:	da0d      	bge.n	80079de <__swhatbuf_r+0x2e>
 80079c2:	89a3      	ldrh	r3, [r4, #12]
 80079c4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80079c8:	f04f 0100 	mov.w	r1, #0
 80079cc:	bf0c      	ite	eq
 80079ce:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80079d2:	2340      	movne	r3, #64	; 0x40
 80079d4:	2000      	movs	r0, #0
 80079d6:	6031      	str	r1, [r6, #0]
 80079d8:	602b      	str	r3, [r5, #0]
 80079da:	b016      	add	sp, #88	; 0x58
 80079dc:	bd70      	pop	{r4, r5, r6, pc}
 80079de:	466a      	mov	r2, sp
 80079e0:	f000 f848 	bl	8007a74 <_fstat_r>
 80079e4:	2800      	cmp	r0, #0
 80079e6:	dbec      	blt.n	80079c2 <__swhatbuf_r+0x12>
 80079e8:	9901      	ldr	r1, [sp, #4]
 80079ea:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80079ee:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80079f2:	4259      	negs	r1, r3
 80079f4:	4159      	adcs	r1, r3
 80079f6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80079fa:	e7eb      	b.n	80079d4 <__swhatbuf_r+0x24>

080079fc <__smakebuf_r>:
 80079fc:	898b      	ldrh	r3, [r1, #12]
 80079fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007a00:	079d      	lsls	r5, r3, #30
 8007a02:	4606      	mov	r6, r0
 8007a04:	460c      	mov	r4, r1
 8007a06:	d507      	bpl.n	8007a18 <__smakebuf_r+0x1c>
 8007a08:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007a0c:	6023      	str	r3, [r4, #0]
 8007a0e:	6123      	str	r3, [r4, #16]
 8007a10:	2301      	movs	r3, #1
 8007a12:	6163      	str	r3, [r4, #20]
 8007a14:	b002      	add	sp, #8
 8007a16:	bd70      	pop	{r4, r5, r6, pc}
 8007a18:	ab01      	add	r3, sp, #4
 8007a1a:	466a      	mov	r2, sp
 8007a1c:	f7ff ffc8 	bl	80079b0 <__swhatbuf_r>
 8007a20:	9900      	ldr	r1, [sp, #0]
 8007a22:	4605      	mov	r5, r0
 8007a24:	4630      	mov	r0, r6
 8007a26:	f7ff fbb5 	bl	8007194 <_malloc_r>
 8007a2a:	b948      	cbnz	r0, 8007a40 <__smakebuf_r+0x44>
 8007a2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007a30:	059a      	lsls	r2, r3, #22
 8007a32:	d4ef      	bmi.n	8007a14 <__smakebuf_r+0x18>
 8007a34:	f023 0303 	bic.w	r3, r3, #3
 8007a38:	f043 0302 	orr.w	r3, r3, #2
 8007a3c:	81a3      	strh	r3, [r4, #12]
 8007a3e:	e7e3      	b.n	8007a08 <__smakebuf_r+0xc>
 8007a40:	89a3      	ldrh	r3, [r4, #12]
 8007a42:	6020      	str	r0, [r4, #0]
 8007a44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007a48:	81a3      	strh	r3, [r4, #12]
 8007a4a:	9b00      	ldr	r3, [sp, #0]
 8007a4c:	6163      	str	r3, [r4, #20]
 8007a4e:	9b01      	ldr	r3, [sp, #4]
 8007a50:	6120      	str	r0, [r4, #16]
 8007a52:	b15b      	cbz	r3, 8007a6c <__smakebuf_r+0x70>
 8007a54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007a58:	4630      	mov	r0, r6
 8007a5a:	f000 f81d 	bl	8007a98 <_isatty_r>
 8007a5e:	b128      	cbz	r0, 8007a6c <__smakebuf_r+0x70>
 8007a60:	89a3      	ldrh	r3, [r4, #12]
 8007a62:	f023 0303 	bic.w	r3, r3, #3
 8007a66:	f043 0301 	orr.w	r3, r3, #1
 8007a6a:	81a3      	strh	r3, [r4, #12]
 8007a6c:	89a3      	ldrh	r3, [r4, #12]
 8007a6e:	431d      	orrs	r5, r3
 8007a70:	81a5      	strh	r5, [r4, #12]
 8007a72:	e7cf      	b.n	8007a14 <__smakebuf_r+0x18>

08007a74 <_fstat_r>:
 8007a74:	b538      	push	{r3, r4, r5, lr}
 8007a76:	4d07      	ldr	r5, [pc, #28]	; (8007a94 <_fstat_r+0x20>)
 8007a78:	2300      	movs	r3, #0
 8007a7a:	4604      	mov	r4, r0
 8007a7c:	4608      	mov	r0, r1
 8007a7e:	4611      	mov	r1, r2
 8007a80:	602b      	str	r3, [r5, #0]
 8007a82:	f7f9 fa0c 	bl	8000e9e <_fstat>
 8007a86:	1c43      	adds	r3, r0, #1
 8007a88:	d102      	bne.n	8007a90 <_fstat_r+0x1c>
 8007a8a:	682b      	ldr	r3, [r5, #0]
 8007a8c:	b103      	cbz	r3, 8007a90 <_fstat_r+0x1c>
 8007a8e:	6023      	str	r3, [r4, #0]
 8007a90:	bd38      	pop	{r3, r4, r5, pc}
 8007a92:	bf00      	nop
 8007a94:	20004ce4 	.word	0x20004ce4

08007a98 <_isatty_r>:
 8007a98:	b538      	push	{r3, r4, r5, lr}
 8007a9a:	4d06      	ldr	r5, [pc, #24]	; (8007ab4 <_isatty_r+0x1c>)
 8007a9c:	2300      	movs	r3, #0
 8007a9e:	4604      	mov	r4, r0
 8007aa0:	4608      	mov	r0, r1
 8007aa2:	602b      	str	r3, [r5, #0]
 8007aa4:	f7f9 fa0b 	bl	8000ebe <_isatty>
 8007aa8:	1c43      	adds	r3, r0, #1
 8007aaa:	d102      	bne.n	8007ab2 <_isatty_r+0x1a>
 8007aac:	682b      	ldr	r3, [r5, #0]
 8007aae:	b103      	cbz	r3, 8007ab2 <_isatty_r+0x1a>
 8007ab0:	6023      	str	r3, [r4, #0]
 8007ab2:	bd38      	pop	{r3, r4, r5, pc}
 8007ab4:	20004ce4 	.word	0x20004ce4

08007ab8 <_sbrk_r>:
 8007ab8:	b538      	push	{r3, r4, r5, lr}
 8007aba:	4d06      	ldr	r5, [pc, #24]	; (8007ad4 <_sbrk_r+0x1c>)
 8007abc:	2300      	movs	r3, #0
 8007abe:	4604      	mov	r4, r0
 8007ac0:	4608      	mov	r0, r1
 8007ac2:	602b      	str	r3, [r5, #0]
 8007ac4:	f7f9 fa14 	bl	8000ef0 <_sbrk>
 8007ac8:	1c43      	adds	r3, r0, #1
 8007aca:	d102      	bne.n	8007ad2 <_sbrk_r+0x1a>
 8007acc:	682b      	ldr	r3, [r5, #0]
 8007ace:	b103      	cbz	r3, 8007ad2 <_sbrk_r+0x1a>
 8007ad0:	6023      	str	r3, [r4, #0]
 8007ad2:	bd38      	pop	{r3, r4, r5, pc}
 8007ad4:	20004ce4 	.word	0x20004ce4

08007ad8 <_init>:
 8007ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ada:	bf00      	nop
 8007adc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007ade:	bc08      	pop	{r3}
 8007ae0:	469e      	mov	lr, r3
 8007ae2:	4770      	bx	lr

08007ae4 <_fini>:
 8007ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ae6:	bf00      	nop
 8007ae8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007aea:	bc08      	pop	{r3}
 8007aec:	469e      	mov	lr, r3
 8007aee:	4770      	bx	lr
